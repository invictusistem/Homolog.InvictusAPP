{"version":3,"sources":["webpack:///src/app/Pedagogico/analise-docs/analisedocs.component.ts","webpack:///src/app/Pedagogico/analise-docs/analisedocs.component.html","webpack:///src/app/_shared/components/spinner.component.ts","webpack:///src/app/_shared/components/spinner.component.html","webpack:///src/app/Financeiro/unidadebalanco/unidadebalanco.component.ts","webpack:///src/app/Financeiro/unidadebalanco/unidadebalanco.component.html","webpack:///src/app/_shared/customMasks/maskTimeStan/form-field-customTime-control.ts","webpack:///src/app/_shared/customMasks/maskTimeStan/time-input.html","webpack:///src/app/Pedagogico/Pedag-Models/infodia.model.ts","webpack:///src/app/_shared/models/cepreturn.model.ts","webpack:///src/app/Adm/services/modal.config.ts","webpack:///src/app/Pedagogico/analise-docs/analiseDocsModal/analise-docmodal.component.ts","webpack:///src/app/Pedagogico/analise-docs/analiseDocsModal/analise-docmodal.component.html","webpack:///src/app/Pedagogico/reposicoes/reposicoes.component.ts","webpack:///src/app/Pedagogico/reposicoes/reposicoes.component.html","webpack:///src/app/Pedagogico/relatorios/pedagrelatorio.component.ts","webpack:///src/app/Pedagogico/relatorios/pedagrelatorio.component.html","webpack:///src/app/Adm/configuracoes/Cargos-edit/cargo-edit.component.ts","webpack:///src/app/Adm/configuracoes/Cargos-edit/cargo-edit.component.html","webpack:///src/app/NewMatricula/NovaMatricula/CreateMatricula/Confirm/confirmnova.component.ts","webpack:///src/app/NewMatricula/NovaMatricula/CreateMatricula/Confirm/confirmnova.component.html","webpack:///src/app/_shared/models/aluno.model.ts","webpack:///src/app/NewMatricula/NovaMatricula/novamatricula.component.html","webpack:///src/app/NewMatricula/NovaMatricula/novamatricula.component.ts","webpack:///src/app/Adm/professores/Materias/EditDisponibilidade/edit-dispo.component.ts","webpack:///src/app/Adm/professores/Materias/EditDisponibilidade/edit-dispo.component.html","webpack:///src/app/Adm/testes/teste.component.ts","webpack:///src/app/Adm/testes/teste.component.html","webpack:///src/app/_shared/components/ConfirmarAcao/confirm-acao.component.ts","webpack:///src/app/_shared/components/ConfirmarAcao/confirm-acao.component.html","webpack:///src/app/_shared/pipes/sanitizePipe.component.ts","webpack:///src/app/Adm/unidades/CreateModal/createunidade.component.ts","webpack:///src/app/Adm/unidades/CreateModal/createunidade.component.html","webpack:///src/app/Adm/unidades/unidades.component.ts","webpack:///src/app/Adm/unidades/unidades.component.html","webpack:///src/app/Adm/contratos/EditContrato/editcontrato.component.ts","webpack:///src/app/Adm/contratos/EditContrato/editcontrato.component.html","webpack:///src/app/_shared/animation/item.animation.ts","webpack:///src/app/_shared/directives/onlynumbers.directive.ts","webpack:///src/app/_shared/customMasks/maskTimeStan/myTime.model.ts","webpack:///src/app/Adm/turmas/confirm/confirmariniciar.component.ts","webpack:///src/app/Adm/turmas/confirm/confirmariniciar.component.html","webpack:///src/app/Adm/bolsascursos/edit/edit-bolsa.component.ts","webpack:///src/app/Adm/bolsascursos/edit/edit-bolsa.component.html","webpack:///src/app/Financeiro/caixa/fincaixa.component.ts","webpack:///src/app/Financeiro/caixa/fincaixa.component.html","webpack:///src/app/Financeiro/fornecedores/createfornecedor/createfornecedor.component.ts","webpack:///src/app/Financeiro/fornecedores/createfornecedor/createfornecedor.component.html","webpack:///src/app/_Auth/auth.guard.ts","webpack:///src/app/Financeiro/relatorio/fin-relatorio.component.ts","webpack:///src/app/Financeiro/FinanceiroModels/fornecedor.model.ts","webpack:///src/app/Financeiro/financeiro.component.ts","webpack:///src/app/Financeiro/financeiro.component.html","webpack:///src/app/Adm/usuarios/CreateModal/createuser.component.ts","webpack:///src/app/Adm/usuarios/CreateModal/createuser.component.html","webpack:///src/app/Adm/messagemodal/messagemodal.component.ts","webpack:///src/app/Adm/messagemodal/messagemodal.component.html","webpack:///src/app/Pedagogico/pedagogico.component.ts","webpack:///src/app/Pedagogico/pedagogico.component.html","webpack:///src/app/_shared/models/disponibilidade.model.ts","webpack:///src/app/_shared/directives/date-past.directive.ts","webpack:///src/app/Pedagogico/turmapedag/agendamento/agendamento.component.ts","webpack:///src/app/Pedagogico/turmapedag/agendamento/agendamento.component.html","webpack:///src/app/Pedagogico/Matricula/InfoCad/info-cadastrais.component.ts","webpack:///src/app/Pedagogico/Matricula/InfoCad/info-cadastrais.component.html","webpack:///src/app/_shared/models/utils.model.ts","webpack:///src/app/Adm/testes/testeexterno.ts","webpack:///src/app/_Auth/auth.service.ts","webpack:///src/app/Pedagogico/Matricula/confirmmatricula/confirmamat.component.ts","webpack:///src/app/Pedagogico/Matricula/confirmmatricula/confirmamat.component.html","webpack:///src/app/Adm/configuracoes/configuracoes.component.ts","webpack:///src/app/Adm/configuracoes/configuracoes.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/Adm/usuarios/usuario.component.ts","webpack:///src/app/Adm/usuarios/usuario.component.html","webpack:///src/app/Adm/professores/Materias/AddMateria/add-mat.component.ts","webpack:///src/app/Adm/professores/Materias/AddMateria/add-mat.component.html","webpack:///src/app/Pedagogico/turmasInfos/CalendarioDaTurma/CalendPresenca/cal-presenca.component.ts","webpack:///src/app/Pedagogico/turmasInfos/CalendarioDaTurma/CalendPresenca/cal-presenca.component.html","webpack:///src/app/Pedagogico/turmasInfos/CalendarioDaTurma/AulaDetalhe/obsturmamodal.component.ts","webpack:///src/app/Pedagogico/turmasInfos/CalendarioDaTurma/AulaDetalhe/obsturmamodal.component.html","webpack:///src/app/Pedagogico/Matricula/informacoes/Certificado/certificado.component.ts","webpack:///src/app/Pedagogico/Matricula/informacoes/Certificado/certificado.component.html","webpack:///src/app/_shared/pipes/safe.pipe.ts","webpack:///src/app/Financeiro/caixa/venda/vendacaixa.component.ts","webpack:///src/app/Financeiro/caixa/venda/vendacaixa.component.html","webpack:///src/app/Adm/turmas/CreateModal/createcurso.component.ts","webpack:///src/app/Adm/turmas/CreateModal/createcurso.component.html","webpack:///src/app/Adm/produtos/produto-create/produto-create.component.ts","webpack:///src/app/Adm/produtos/produto-create/produto-create.component.html","webpack:///src/app/Pedagogico/Matricula/matricula.component.ts","webpack:///src/app/Pedagogico/Matricula/matricula.component.html","webpack:///src/app/_shared/components/ConfirmModal/confirm-modal.component.ts","webpack:///src/app/_shared/components/ConfirmModal/confirm-modal.component.html","webpack:///src/app/Pedagogico/turmasInfos/CalendarioDaTurma/calendarioturma.component.ts","webpack:///src/app/Pedagogico/turmasInfos/CalendarioDaTurma/calendarioturma.component.html","webpack:///src/app/_shared/customMasks/maskDate/nyDate.model.ts","webpack:///src/app/Adm/colaboradores/editModal/editcolaboradores.component.ts","webpack:///src/app/Adm/colaboradores/editModal/editcolaboradores.component.html","webpack:///src/app/Aluno/aluno.component.html","webpack:///src/app/Aluno/aluno.component.ts","webpack:///src/app/Financeiro/alunos/Reparcelamento/reparcelamento.component.ts","webpack:///src/app/Financeiro/alunos/Reparcelamento/reparcelamento.component.html","webpack:///src/app/Financeiro/alunos/infoFinanc/EditFinanc/edit-financ.component.ts","webpack:///src/app/Financeiro/alunos/infoFinanc/EditFinanc/edit-financ.component.html","webpack:///src/app/Geral/geral.module.ts","webpack:///src/app/Adm/adm.module.ts","webpack:///src/app/_shared/components/helpers/helpers.component.ts","webpack:///src/app/_shared/directives/cpf-mask.directive.ts","webpack:///src/app/NewMatricula/services/newmatricula.service.ts","webpack:///src/app/Adm/turmas/ModalAddMateria/addmateria.component.ts","webpack:///src/app/Adm/turmas/ModalAddMateria/addmateria.component.html","webpack:///src/app/_shared/footer/footer.component.ts","webpack:///src/app/_shared/footer/footer.component.html","webpack:///src/app/Adm/colaboradores/colaboradores.component.ts","webpack:///src/app/Adm/colaboradores/colaboradores.component.html","webpack:///src/app/Adm/professores/professores.component.ts","webpack:///src/app/Adm/professores/professores.component.html","webpack:///src/app/NewMatricula/NovaMatricula/Relatoriomatricula/relatoriomatricula.component.ts","webpack:///src/app/NewMatricula/NovaMatricula/Relatoriomatricula/relatoriomatricula.component.html","webpack:///src/app/Adm/contratos/CreateContrato/create-contrato.component.ts","webpack:///src/app/Adm/contratos/CreateContrato/create-contrato.component.html","webpack:///src/app/Adm/testes/modalteste/testemodal.component.ts","webpack:///src/app/Adm/testes/modalteste/testemodal.component.html","webpack:///src/app/Adm/turmas/admturmas.component.ts","webpack:///src/app/Adm/turmas/admturmas.component.html","webpack:///src/app/_shared/pipes/cnpjPipe.ts","webpack:///src/app/Adm/unidades/CreateSalaModal/createsala.component.ts","webpack:///src/app/Adm/unidades/CreateSalaModal/createsala.component.html","webpack:///src/app/Pedagogico/turmapedag/presenca/presenca.component.ts","webpack:///src/app/Pedagogico/turmapedag/presenca/presenca.component.html","webpack:///src/app/Aluno/alunoestagios/inscestagio/inscricaoest.component.ts","webpack:///src/app/Aluno/alunoestagios/inscestagio/inscricaoest.component.html","webpack:///src/app/Financeiro/alunos/infoFinanc/Receber/receber.component.ts","webpack:///src/app/Financeiro/alunos/infoFinanc/Receber/receber.component.html","webpack:///src/app/Adm/modulos/VisualizarModulo/visualizar.component.ts","webpack:///src/app/Adm/modulos/VisualizarModulo/visualizar.component.html","webpack:///src/app/Adm/turmas/Calendario/calendario.component.ts","webpack:///src/app/Adm/turmas/Calendario/calendario.component.html","webpack:///src/app/Adm/professores/EditModal/editprofessor.component.ts","webpack:///src/app/Adm/professores/EditModal/editprofessor.component.html","webpack:///src/app/Financeiro/balanco/conferenca/conferencia.component.ts","webpack:///src/app/Financeiro/balanco/conferenca/conferencia.component.html","webpack:///src/app/_shared/models/perfil.model.ts","webpack:///src/app/Aluno/alunoestagios/alunoest.component.ts","webpack:///src/app/Aluno/alunoestagios/alunoest.component.html","webpack:///src/app/Adm/usuarios/EditAcesso/editacesso.component.ts","webpack:///src/app/Adm/usuarios/EditAcesso/editacesso.component.html","webpack:///src/app/Pedagogico/Matricula/infoFinancas/infofinanc.component.ts","webpack:///src/app/Pedagogico/Matricula/infoFinancas/infofinanc.component.html","webpack:///src/app/Adm/professores/CreateModal/createprofessor.component.ts","webpack:///src/app/Adm/professores/CreateModal/createprofessor.component.html","webpack:///src/app/_Auth/auth.interceptor.ts","webpack:///src/app/Adm/modulos/CreateModulo/modulo-create.component.ts","webpack:///src/app/Adm/modulos/CreateModulo/modulo-create.component.html","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/Pedagogico/Matricula/BoletimAluno/boletimaluno.component.ts","webpack:///src/app/Pedagogico/Matricula/BoletimAluno/boletimaluno.component.html","webpack:///src/app/Adm/bolsascursos/show/showsenha.component.ts","webpack:///src/app/Pedagogico/turmapedag/notas/notas.component.ts","webpack:///src/app/Pedagogico/turmapedag/notas/notas.component.html","webpack:///src/app/Pedagogico/Transferencia/TransfInterna/transfinterna.component.ts","webpack:///src/app/Pedagogico/Transferencia/TransfInterna/transfinterna.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/Adm/bolsascursos/bolsas.component.ts","webpack:///src/app/Adm/bolsascursos/bolsas.component.html","webpack:///src/app/_shared/models/modulo.model.ts","webpack:///src/app/Financeiro/caixa/vendaUnidade/vendaunidade.component.ts","webpack:///src/app/Financeiro/caixa/vendaUnidade/vendaunidade.component.html","webpack:///src/app/Adm/professores/Materias/prof-materias.component.ts","webpack:///src/app/Adm/professores/Materias/prof-materias.component.html","webpack:///src/app/NewMatricula/newmatricula.component.ts","webpack:///src/app/NewMatricula/newmatricula.component.html","webpack:///src/app/Pedagogico/turmasInfos/CalendarioDaTurma/AulaDetalheEdit/obsturmamodal-edit.component.ts","webpack:///src/app/Pedagogico/turmasInfos/CalendarioDaTurma/AulaDetalheEdit/obsturmamodal-edit.component.html","webpack:///src/app/_shared/models/colaborador.model.ts","webpack:///src/app/Pedagogico/service/modal.config.ts","webpack:///src/app/_Auth/user/login/selecionarUnidade/selectunidade.component.ts","webpack:///src/app/_Auth/user/login/selecionarUnidade/selectunidade.component.html","webpack:///src/app/Aluno/aluno.module.ts","webpack:///src/app/Financeiro/alunos/infoFinanc/infofinanc.component.ts","webpack:///src/app/Financeiro/alunos/infoFinanc/infofinanc.component.html","webpack:///src/app/Adm/PdfTeste/pdfteste.component.ts","webpack:///src/app/Adm/PdfTeste/pdfteste.component.html","webpack:///src/app/Pedagogico/Matricula/informacoes/infos.component.ts","webpack:///src/app/Pedagogico/Matricula/informacoes/infos.component.html","webpack:///src/app/Adm/adm.component.ts","webpack:///src/app/Adm/adm.component.html","webpack:///src/app/Adm/configuracoes/Config-Cargos/cargo-create.component.ts","webpack:///src/app/Adm/configuracoes/Config-Cargos/cargo-create.component.html","webpack:///src/app/Comercial/ExportarLead/exportar.component.ts","webpack:///src/app/Comercial/ExportarLead/exportar.component.html","webpack:///src/app/Adm/relatorios/relatorio.component.ts","webpack:///src/app/Adm/planos/CreatePlanoPgm/create-planopgm.component.ts","webpack:///src/app/Adm/planos/CreatePlanoPgm/create-planopgm.component.html","webpack:///src/app/Adm/modulos/modulo.component.ts","webpack:///src/app/Adm/modulos/modulo.component.html","webpack:///src/app/Adm/configuracoes/Doc-create/doctemplate.component.ts","webpack:///src/app/Adm/configuracoes/Doc-create/doctemplate.component.html","webpack:///src/app/Adm/professores/Relatorio/prof-relatorio.component.ts","webpack:///src/app/Adm/professores/Relatorio/prof-relatorio.component.html","webpack:///src/app/Financeiro/fornecedores/cadastrocompra/fornecedorcadcompra.component.ts","webpack:///src/app/Financeiro/fornecedores/cadastrocompra/fornecedorcadcompra.component.html","webpack:///src/app/_shared/customMasks/maskCurrency/form-fiels-customCurreny-control.ts","webpack:///src/app/_shared/customMasks/maskCurrency/currency-input.html","webpack:///src/app/Adm/colaboradores/createModal/createcolaboradores.component.ts","webpack:///src/app/Adm/colaboradores/createModal/createcolaboradores.component.html","webpack:///src/app/Adm/bolsascursos/create/createbolsa.component.ts","webpack:///src/app/Adm/bolsascursos/create/createbolsa.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/_Auth/user/login/login.component.ts","webpack:///src/app/_Auth/user/login/login.component.html","webpack:///src/app/Adm/testando/testando.component.ts","webpack:///src/app/_shared/models/token.model.ts","webpack:///src/app/Adm/produtos/produtos.component.ts","webpack:///src/app/Adm/produtos/produtos.component.html","webpack:///src/app/Pedagogico/estagios/estagiocadastro/estagiocadastro.component.ts","webpack:///src/app/Pedagogico/estagios/estagiocadastro/estagiocadastro.component.html","webpack:///src/app/Adm/unidades/EditarSala/sala-editar.component.ts","webpack:///src/app/Adm/unidades/EditarSala/sala-editar.component.html","webpack:///src/app/Pedagogico/turmasInfos/AlunosTurma/turmasinfoalunos.component.ts","webpack:///src/app/Pedagogico/turmasInfos/AlunosTurma/turmasinfoalunos.component.html","webpack:///src/app/Pedagogico/AlunosAcesso/Detalhes/detalhe.component.ts","webpack:///src/app/Pedagogico/AlunosAcesso/Detalhes/detalhe.component.html","webpack:///src/app/Geral/geral.component.ts","webpack:///src/app/Geral/geral.component.html","webpack:///src/app/_shared/customMasks/maskTelBr/mytel.model.ts","webpack:///src/app/_shared/models/Turma.model.ts","webpack:///src/app/_shared/services/base.service.ts","webpack:///src/app/Pedagogico/estagios/estagio-alunos/estagio-alunos.component.ts","webpack:///src/app/Pedagogico/estagios/estagio-alunos/estagio-alunos.component.html","webpack:///src/app/Pedagogico/Transferencia/transferencia.component.ts","webpack:///src/app/Pedagogico/Transferencia/transferencia.component.html","webpack:///src/app/Adm/modulos/DetalhePacote/pacote-detalhe.component.ts","webpack:///src/app/Adm/modulos/DetalhePacote/pacote-detalhe.component.html","webpack:///src/app/_shared/pipes/idadePipe.ts","webpack:///src/app/Pedagogico/turmasInfos/CalendarioDaTurma/AulaEditar/aulaeditar.component.ts","webpack:///src/app/Pedagogico/turmasInfos/CalendarioDaTurma/AulaEditar/aulaeditar.component.html","webpack:///src/app/Adm/unidades/EditModal/editunidade.component.ts","webpack:///src/app/Adm/unidades/EditModal/editunidade.component.html","webpack:///src/app/Adm/contratos/contrato.component.ts","webpack:///src/app/Adm/contratos/contrato.component.html","webpack:///src/app/Adm/planos/planopgm.component.ts","webpack:///src/app/Adm/planos/planopgm.component.html","webpack:///src/app/Financeiro/alunos/alunofinanc.component.ts","webpack:///src/app/Financeiro/alunos/alunofinanc.component.html","webpack:///src/app/_Auth/user/user.component.ts","webpack:///src/app/_Auth/user/user.component.html","webpack:///src/app/Financeiro/fornecedores/editfornecedor/editfornecedor.component.ts","webpack:///src/app/Financeiro/fornecedores/editfornecedor/editfornecedor.component.html","webpack:///src/app/_shared/pipes/cpfPipe.ts","webpack:///src/app/_shared/models/produto.model.ts","webpack:///src/app/Adm/produtos/produto-doacao/produto-doacao.component.ts","webpack:///src/app/Adm/produtos/produto-doacao/produto-doacao.component.html","webpack:///src/app/Financeiro/caixa/caixadiario/caixadiario.component.ts","webpack:///src/app/Financeiro/caixa/caixadiario/caixadiario.component.html","webpack:///src/app/Pedagogico/Matricula/CreateModal/creatematricula.component.html","webpack:///src/app/Pedagogico/Matricula/CreateModal/creatematricula.component.ts","webpack:///src/app/_shared/directives/phone-mask.directive.ts","webpack:///src/app/_shared/shared.module.ts","webpack:///src/app/Comercial/comercial.component.ts","webpack:///src/app/Comercial/comercial.component.html","webpack:///src/app/NewMatricula/NovaMatricula/CreateMatricula/createnovamatricula.component.ts","webpack:///src/app/NewMatricula/NovaMatricula/CreateMatricula/createnovamatricula.component.html","webpack:///src/app/Comercial/Leads/leads.component.ts","webpack:///src/app/Comercial/Leads/leads.component.html","webpack:///src/app/Aluno/alunodocs/alunodocs.component.ts","webpack:///src/app/Aluno/alunodocs/alunodocs.component.html","webpack:///src/app/Comercial/comercial.module.ts","webpack:///src/app/_shared/models/agenda.modal.ts","webpack:///src/app/_Auth/user/trocaSenha/troca-senha.component.ts","webpack:///src/app/_Auth/user/trocaSenha/troca-senha.component.html","webpack:///src/app/Financeiro/fornecedores/cadastrovenda/fornecedorcadvenda.component.ts","webpack:///src/app/Financeiro/fornecedores/cadastrovenda/fornecedorcadvenda.component.html","webpack:///src/app/Pedagogico/service/pedag.service.ts","webpack:///src/app/Pedagogico/turmasInfos/TurmasInfoNotas/turmasinfonotas.component.ts","webpack:///src/app/Pedagogico/turmasInfos/turmasinfopedag.component.ts","webpack:///src/app/Pedagogico/turmasInfos/turmasinfopedag.component.html","webpack:///src/app/_shared/home/home.component.ts","webpack:///src/app/Adm/turmas/ModalAddProf/addprof.component.ts","webpack:///src/app/Adm/turmas/ModalAddProf/addprof.component.html","webpack:///src/app/_shared/nav-bar/navbar.component.ts","webpack:///src/app/_shared/nav-bar/navbar.component.html","webpack:///src/app/_shared/services/signalr.component.ts","webpack:///src/app/Adm/adm-models/createturmaviewmodel.model.ts","webpack:///src/app/_shared/pipes/mycurrencypipe.ts","webpack:///src/app/Pedagogico/service/pedagogico.service.ts","webpack:///src/app/Pedagogico/Transferencia/TransExterna/transfexterna.component.ts","webpack:///src/app/Pedagogico/Transferencia/TransExterna/transfexterna.component.html","webpack:///src/app/_shared/material/material.module.ts","webpack:///src/app/_services/data.service.ts","webpack:///src/app/Adm/services/adm.services.ts","webpack:///src/app/Pedagogico/turmapedag/turmas.component.ts","webpack:///src/app/Pedagogico/turmapedag/turmas.component.html","webpack:///src/app/Comercial/AddLead/leadexport/lead-export.component.ts","webpack:///src/app/Comercial/AddLead/leadexport/lead-export.component.html","webpack:///src/app/Adm/professores/ProfCalendario/prof-calendario.component.ts","webpack:///src/app/Adm/professores/ProfCalendario/prof-calendario.component.html","webpack:///src/app/Pedagogico/estagios/estagio-edit/estagio-edit.component.ts","webpack:///src/app/Pedagogico/estagios/estagio-edit/estagio-edit.component.html","webpack:///src/app/Adm/configuracoes/Mat-create/mat-create.component.ts","webpack:///src/app/Adm/configuracoes/Mat-create/mat-create.component.html","webpack:///src/app/Financeiro/financeiro.module.ts","webpack:///src/app/_shared/customMasks/maskDate/form-field-customDate-control.ts","webpack:///src/app/_shared/customMasks/maskDate/date-input.html","webpack:///src/app/Pedagogico/estagios/estagio.component.ts","webpack:///src/app/Pedagogico/estagios/estagio.component.html","webpack:///src/app/Adm/turmas/EditModal/editcurso.component.ts","webpack:///src/app/Adm/turmas/EditModal/editcurso.component.html","webpack:///src/app/Pedagogico/Transferencia/TransTurma/transfturma.component.ts","webpack:///src/app/Pedagogico/Transferencia/TransTurma/transfturma.component.html","webpack:///src/app/_shared/customMasks/maskTelBr/form-field-custom-control-example.ts","webpack:///src/app/_shared/customMasks/maskTelBr/example-tel-input-example.html","webpack:///src/app/Adm/produtos/produto-edit/produto-edit.component.ts","webpack:///src/app/Adm/produtos/produto-edit/produto-edit.component.html","webpack:///src/app/NewMatricula/newmatricula.module.ts","webpack:///src/app/Financeiro/balanco/balanco.component.ts","webpack:///src/app/Financeiro/balanco/balanco.component.html","webpack:///src/app/Adm/usuarios/EditModal/edituser.component.ts","webpack:///src/app/Adm/usuarios/EditModal/edituser.component.html","webpack:///src/app/Pedagogico/pedag-alunos/pedag-alunos.component.ts","webpack:///src/app/Pedagogico/pedag-alunos/pedag-alunos.component.html","webpack:///src/app/Pedagogico/Matricula/informacoes/Anotacao/add-anotacao.component.ts","webpack:///src/app/Pedagogico/Matricula/informacoes/Anotacao/add-anotacao.component.html","webpack:///src/app/Pedagogico/Matricula/confirmDialog/confirm.component.ts","webpack:///src/app/Pedagogico/Matricula/confirmDialog/confirm.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/Financeiro/caixa/venda/venda-pesquisa.component.ts/venda-pesquisa.component.ts","webpack:///src/app/Financeiro/caixa/venda/venda-pesquisa.component.ts/venda-pesquisa.component.html","webpack:///src/app/NewMatricula/services/modal.config.ts","webpack:///src/app/Pedagogico/Matricula/matricula/alunomatricula.component.html","webpack:///src/app/Pedagogico/Matricula/matricula/alunomatricula.component.ts","webpack:///src/app/_shared/models/modal.config.ts","webpack:///src/app/Financeiro/alunos/Reparcelamento/Confirmar/reapconfirmar.component.ts","webpack:///src/app/Financeiro/alunos/Reparcelamento/Confirmar/reapconfirmar.component.html","webpack:///src/app/Adm/professores/Materias/AddDisponibilidade/add-dispo.component.ts","webpack:///src/app/Adm/professores/Materias/AddDisponibilidade/add-dispo.component.html","webpack:///src/app/Pedagogico/AlunosAcesso/aluno-acesso.component.ts","webpack:///src/app/Pedagogico/AlunosAcesso/aluno-acesso.component.html","webpack:///src/app/Pedagogico/pedagogico.module.ts","webpack:///src/app/Adm/planos/EditPlanoPgm/editplano.component.ts","webpack:///src/app/Adm/planos/EditPlanoPgm/editplano.component.html","webpack:///src/app/Financeiro/fornecedores/fornecedores.component.ts","webpack:///src/app/Financeiro/fornecedores/fornecedores.component.html","webpack:///src/app/Financeiro/models/financ.service.ts","webpack:///src/app/Pedagogico/estagiosdocs/estagiosdocs.component.ts","webpack:///src/app/Pedagogico/estagiosdocs/estagiosdocs.component.html","webpack:///src/app/_shared/models/InfoFinanceiras.model.ts","webpack:///src/main.ts","webpack:///src/app/Financeiro/models/financ-modal.config.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Pedagogico/turmasInfos/CalendarioDaTurma/CalendPresencaEdit/cal-presencaedit.component.ts","webpack:///src/app/Pedagogico/turmasInfos/CalendarioDaTurma/CalendPresencaEdit/cal-presencaedit.component.html"],"names":["AnaliseDocsComponent","_snackBar","CreateMatriculaModal","_fb","_http","baseUrl","showMessageNoAluno","length","mensagem","pageSize","qntPendencias","alunos","Array","params","listAlunos","pesquisarForm","group","nome","required","email","cpf","ativo","todasUnidades","valueChanges","subscribe","form","get","value","controls","setErrors","console","log","GetQntPendencias","response","err","aluno","dialogRef","open","height","width","autoFocus","maxHeight","data","hasBackdrop","disableClose","afterClosed","clicked","openSnackBar","actualPage","evento","pageEvt","event","formJson","JSON","stringify","valid","Object","assign","horizontalPosition","verticalPosition","panelClass","duration","id","onSubmit","InfoComponent","arg1","Error","SpinnerComponent","infoSpinner","marginleft","margintop","UnidadeBalancoComponent","_modal","showMessageNoColaborador","tokenInfo","jwtHelper","debitos","range","start","end","Date","toLocaleString","resp","totalVendas","error","cargo","unidade","item","pesquisarData","Parametros","MyTimeInput","formBuilder","_focusMonitor","_elementRef","_formField","ngControl","stateChanges","focused","controlType","nextId","onChange","_","onTouched","_required","_disabled","sliceItem","parts","hora","minLength","maxLength","minuto","monitor","origin","next","valueAccessor","empty","_placeholder","disable","enable","time","parseInt","hour","toString","setValue","split","invalid","dirty","control","nextElement","errors","focusVia","prevElement","complete","stopMonitoring","ids","controlElement","nativeElement","querySelector","setAttribute","join","minutoInput","horaInput","date","fn","isDisabled","disabled","autoFocusNext","provide","useExisting","_handleInput","autoFocusPrev","ListaPresencaDto","calendarioId","isPresent","isPresentToString","alunoId","InfoDia","diaAula","titulo","descricao","CepReturn","logradouro","bairro","localidade","uf","CreateBolsaModalConfig","usuario","EditBolsaModalConfig","bolsaId","ShowSenhaModalConfig","senha","EditColaboradorModalConfig","colaborador","CreateColaboradorModalConfig","EditCargoModalConfig","ModuloCreateComponentModal","ModuloEditComponentModal","moduloId","ModuloDetalheComponentModal","modulo","CreateProfessorModalConfig","ProfCalendarioModalConfig","prof","maxWidth","ProfRelatorioModalConfig","ProfEditModalConfig","OpenTurmaEditmodel","turma","EditAcessoModal","AnaliseDocModalComponent","_dialogRef","_baseUrl","listaPresencaDto","infoDia","observacoes","docsEnviados","docsPendentes","obsForm","GetDocsInfo","doc","file","download","type","Response","downloadedFile","Blob","body","a","document","createElement","appendChild","href","URL","createObjectURL","target","click","removeChild","docId","request","reportProgress","responseType","aprovar","put","ReposicoesComponent","http","pageIndexNumber","cursos","turmas","currentPage","showTurmas","showMessage","showSpinner","getCursos","statusDaTurma","previsao","turmaId","atualizar","itemsPerPage","headers","PedagRelatorioComponent","editedColaborador","originalColaborador","unidades","showMensagem","cepReturn","cargos","isEqual","turmasA","salas","profs","tur","sal","pro","showlivroDois","edit","relatorio","CEP","cidade","param","paramSelected","url","getTurmas","getParam","CargoEditComponent","_helpers","initProgressBar","showForm","progress","disabledSaveButton","cargoForm","comentario","parametrosKeyId","token","localStorage","getItem","decodeToken","GetCargo","patchValue","originalCargo","parse","openSnackBarErrorDefault","openSnackBarSucesso","close","ConfirmNovaMatriculaComponent","router","Aluno","nomeSocial","rg","nascimento","naturalidade","naturalidadeUF","telCelular","telReferencia","nomeContatoReferencia","telWhatsapp","telResidencial","cep","temRespFin","temRespMenor","complemento","ValidateFormsService","respFin","respMenor","dataTrans","DataTrans","timeDiff","Math","abs","now","getTime","age","floor","alunoDto","respAlunoDto","respMenorDto","isValid","NovaMatriculaComponent","_newMatService","spinnerSearch","podeDesable","one","Promise","resolve","reject","listaCpfs","index","totalItens","commands","role","RespMats","MatricularFinal","command","undefined","post","pageIndex","getAlunos","sucesso","processarSucesso","falha","processarFalha","paginator","firstPage","fail","submitPesquisa","openMatriculaModal","OpenRelatorioMatricula","EditDispoComponent","_admService","_helper","originalDispo","dispo","editDisponibilidade","saveEdit","vfs","pdfMake","Testando","compRes","FormData","TestesComponent","signalRService","servico","TesteModal","sobrenome","styles","calendarArray","semanas","teste","onUploadFinished","conteudo","resume","Resume","degrees","startHttpRequest","res","chartClicked","broadcastChartData","chartOptions","scaleShowVerticalLines","responsive","scales","yAxes","ticks","beginAtZero","chartLabels","chartType","chartLegend","colors","backgroundColor","fileName","dataPicker","filearray","datas","datas2","mData","formDatas","fileCPF","fileRG","testeBlob","BlobTeste","blobTeste","editorConfig","editable","spellcheck","minHeight","minWidth","translate","enableToolbar","showToolbar","placeholder","defaultParagraphSeparator","defaultFontName","defaultFontSize","fonts","name","customClasses","tag","filhoUm","filhoDois","endereco","parentForm","_filhosum","_filhodois","formDisabled","sessionStorage","experiences","push","Experience","educations","Education","skills","Skill","valor","files","formData","append","upload$","observe","UploadProgress","round","loaded","total","message","emit","dataForm","toLocaleDateString","year","month","day","myFileInput","fileToUpload","forEach","element","myFileInput2","decodedToken","result","objeto","documentos","dataFile","imagem","getData","imgData","pipe","readFile","blob","create","obs","reader","FileReader","onerror","onabort","onload","onloadend","readAsDataURL","download2","window","pegar","action","documentDefinition","getDocumentDefinition","createPdf","print","setItem","content","text","bold","fontSize","alignment","margin","columns","style","address","contactNo","socialProfile","link","color","getProfilePicObject","ul","filter","map","s","getExperienceObject","getEducationObject","otherDetails","qr","fit","info","title","author","subject","keywords","header","decoration","jobTitle","italics","sign","tableHeader","exs","experience","employer","jobDescription","table","widths","ed","degree","college","passingYear","percentage","profilePic","image","e","getBase64","onFileSelected","apendFile1","apendFile2","removerCPF","removerRG","verificar","uploadFile2","getTeste","downloadContrato","enviarComDesativado","onFocusOutDateEvent","setValueDisabled","setSobrenome","verformdisable","generatePdf","addSkill","addExperience","addEducation","resetForm","fileChanged","uploadFileEXCEL","BlobTeste2","analisado","validado","tipoArquivo","contentArquivo","dataCriacao","ConfirmAcaoModalComponent","confirmar","cancelar","SanitizeHtmlPipe","_sanitizer","v","bypassSecurityTrustHtml","MyPipe","val","toUpperCase","CreateUnidadeComponent","upperCasePipe","saveSpinner","unidadeForm","sigla","cnpj","numero","colaboradorForm","testepipe","msgErros","msg","consultaCEP","UnidadesComponent","unidadeCreateModal","unidadeEditModal","getUnidades","openUnidadeCreateModal","EditarContratoComponent","sanitizer","showSpinnerSearch","validadeEmailMsg","validadeCPFMsg","contratoForm","GetContrato","contratoId","contrato","originalContrato","HighlightTrigger","opacity","OnlynumberDirective","_el","initalValue","replace","stopPropagation","MyTime","ConfirmarIniciarTurmaModal","hidden","EditBolsaComponent","showContent","bolsaForm","percentualDesconto","min","max","typePacoteId","dataExpiracao","unidadeId","GetBolsa","GetBolsaSucesso","GetBolsaErro","resposta","originalBolsa","addPanelClass","EditBolsa","onSubmitSucesso","onSubmitErro","FinCaixaComponent","balancoProdutos","Hello","openCaixaModal","openVendaUnidades","submitSearch","CreateFornecedorComponent","_finService","enderecoContainer","fornecedorForm","razaoSocial","ie_rg","cnpj_cpf","telContato","whatsApp","nomeContato","UnidadeId","SaveFornecedor","onSubmitSucess","onSubmitFalha","AuthGuard","state","isTokenExpired","navigate","FinRelatorioComponent","Fornecedor","ROUTES","path","typeIcon","FinanceiroComponent","menu","Unidade","CreateUserComponent","fb","perfisArray","sabeSpinner","usuarioForm","perfil","perfilAtivo","openSnackBarError","SaveUser","consultaUsuario","JsonPatch","MessageModalComponent","PedagogicoComponent","removeItem","DisponibilidadeDto","horarioDisponivelView","diaSemana","diaSemanaView","diaData","horarios","HorariosViewDto","inicio","fim","DisponibilidadeDtoV2","availabilityDayOne","availabilityTwo","DisponibilidadeDayOneDtoV2","horaIni","horaFim","ranges","RangeDatas","item1","item2","DisponibilidadeDayTwoDtoV2","DatePastDirective","templateRef","viewContainer","hasView","dateNow","valueOf","createEmbeddedView","clear","AgendamentoComponent","BaseUrl","materias","avaliacao","Avaliacao","showListaDatas","agendaProvas","headerOne","headerTwo","avalAtual","getMaterias","mat","Av","mode","SetDataModal","materia","aval","avalString","dataArray","avaliacaoUm","dia","mes","ano","avaliacaoDois","avaliacaoTres","segundaChamadaAvaliacaoUm","segundaChamadaAvaliacaoDois","segundaChamadaAvaliacaoTres","salvar","alunoForm","InfoCadastraisComponent","nomePai","nomeMae","dataCadastro","setValidators","updateValueAndValidity","emitEvent","clearValidators","getAluno","alunoOriginalForm","$event","Tabs","Parentesco","CienciaCurso","Parcelas","DiaVencimento","Servico","palavra","AuthService","baseURL","model","user","accessToken","userToken","extractData","serviceError","customError","statusText","ConfirmMatriculaComponent","_pedagService","msgSpan","disabledButton","BaixarContrato","BaixarFicha","downloadFicha","Confirm","Config","ConfiguracoesComponent","materiasLength","materiasPageSize","materiasPageIndexNumber","materiasCurrentPage","configCargos","CARGOS","searchSpinner","showCargosTable","showDocumentosTable","showMateriasTable","htmlContent","showTableCargos","GetMaterias","GetMateriasSucesso","GetMateriasError","totalItemsInDatabase","MateriaPaginator","config","GetConfig","GetConfigSucess","GetConfigError","openCreateCargoModal","openCreateDocModal","openCreateMateriaModal","environment","production","UsuarioComponent","testeDonne","usuarios","showSpinnerFirst","getUsuarios","openCreateUserModal","AddMatComponent","materiasAtuais","typePacotes","mostrarDivPrincipal","showMateriaMsg","materiasForm","materiaId","GetTypePacotes","getTypePacotes","getMateriasByTypeId","setMaterias","procssMateriaFalha","find","pacoteMateriaId","saveProfessorMateria","CalendPresencaComponent","saveProgressBar","noAlunos","presente","getPresencaViewModel","aulaViewModel","listaPresenca","temNull","lista","presencaView","ObservacoesTurmaModal","GetAulaInfos","GetAulaViewModel","GetAulaInfosSucesso","GetAulaInfosFalha","aula","CertificadoComponent","GetCertificado","SafePipe","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","VendaCaixaComponent","meioPagamento","showParcelas","showMgs","produtosCesta","parcelas","produtos","productCommand","compraProdutoCommand","Codigo","novoColaborador","meioPag","erro","openPesquisaResult","product","indexOf","qntAtual","quantidadeComprada","sum","preco","valorTotal","sum2","toFixed","splice","produto","parcelasTotais","sendForm","fechar","pesquisaItem","ProfResponse","disciplina","checked","CreateCursoComponent","_datepipe","_currencyPipe","addProfModal","pacotes","tempoExemplo","diasSemanaView","profes","professores","showProflist","turnos","disabledSpinner","testando","termino1","termino2","termino3","showSelectTurno","showHorarioTurno","valorx","cursoPreco","createTurmaViewModel","listaprofessores","profResp","mensagemErro","showmensagemErro","showNoPacote","showCapacidadeDropDown","showOnMoreDay","showSecondDay","viewModel","primeiroDia","outrosDias","disponibilidades","diasSemanas","horarioValue","showGridDias","showGridFDS","transfer","amount","dobMaxDate","cursoForm","pacoteId","salaId","minVagas","prevInicio_1","prevTermino_1","prevInicio_2","prevTermino_2","prevInicio_3","prevTermino_3","diasSemana","array","precocurso","getCreateTurmaViewModel","matForm","horarioInicio","horarioFim","removeAt","profId","Professores","createItem","i","findIndex","c","dataIni","toISOString","dataEnd","addProfs","removeProf","turno","diasSemanaDisponiveis","primeiroDiaSemana","novaData","getFullYear","getMonth","getDate","setDate","transform","level","evt","theEvent","key","keyCode","which","String","fromCharCode","regex","test","returnValue","preventDefault","previIniOne","toJSON","previIniDois","previIniTres","previTerminoOne","previTerminoDois","previTerminoTres","PrimeiroDiaSemana","DiasDisponiveis","TurnosViewModel","ProdutoCreateComponent","produtoForm","precoCusto","quantidade","nivelMinimo","GetUnidades","parseFloat","precoFloat","MatriculaComponent","todosAlunos","testeForm","child","matriculaId","pesquisar","ConfirmModalComponent","CalendarioTurmaComponent","showSpin","ShowTableHeader","calendarios","initialPage","primeiraReq","firstConsult","fallha","caled","calend","obj","MyDate","EditColaboradoresComponent","saveBar","tentando","celular","cargoId","supervisorId","getColaborador","CepConsulta","AlunoComponent","ReparcelamentoComponent","tabs","showAluno","showRespFinanc","showRespMenor","respFinId","respMenorId","boletoUrl","valorEntrada","juros","desconto","acrescimo","totalValor","totalFinal","debitosIds","getInfoFinancAlunos","selected","vencimento","calcular","ReparcelamentoDebito","dataPagamento","valorPago","jurosFixo","multa","multaFixo","diasDesconto","statusBoleto","reparcelamentoId","centroCustoUnidadeId","informacaoDebitoId","id_unico","id_unico_original","status","nossonumero","linkBoleto","linkGrupo","linhaDigitavel","pedido_numero","banco_numero","token_facilitador","credencial","EditFinancComponent","debito","debitoId","maskConfig","validation","tokenGetter","GeralModule","useValue","useClass","forRoot","AdmModule","HelpersService","modal","CPFMaskDirective","onInputChange","backspace","newVal","substring","writeValue","NewMatriculaService","jsonParam","ObterHeaderJson","paramJson","AddPMateriaModalComponent","listProfId","getMateria","profsIds","FooterComponent","ColaboradoresComponent","currentPageTeste","colaboradores","getColaboradores","ProfessoresComponent","totalPages","formSubmitted","showTable","incluirInativos","ceil","RelatorioMatriculaComponent","_matService","msgNoRegistro","matriculas","pesquisaForm","opcao","GetTurmasDaUnidade","GetTodasTurmasDaUnidade","GetTurmasSucesso","GetTurmasFalha","GetMatriculaRelatorio","PesquisarSucesso","PesquisarFalha","CreateContratoComponent","GetTypes","TesteModalComponent","AdmTurmasComponent","statusAndamento","previsaoInfo","getCursosSucesso","getCursosFalha","openCreateCursoModal","CNPJPipe","CreateSalaComponent","spinnerSave","salaForm","capacidade","comentarios","PresencaComponent","ConcluirAulaModal","SavePresencaCommand","calendarId","InscricaoEstComponent","fileAP","fileAPName","fileAPViewName","fileCartaoVac","fileCartaoVacName","fileCartaoVacViewName","fileTipoSang","fileTipoSangName","fileTipoSangViewName","fileHCG","fileHCGName","fileHCGViewName","Bearer","apendFileAP","apendFileCartaoVac","apendFileTipoSang","apendFileHCG","uploadFile","ReceberComponent","mostrarModalPrincipal","hoje","vencido","recebimentoForm","boletoId","valorReceber","valorRecebido","formaRecebimento","transferencia","Modalidade","VisualizarModuloComponent","addMateriasForm","errorMsg","unidadesAutorizadas","materiasTemplate","documentosTemplate","titularDoc","addMateriaForm","pacote","addDocForm","documento","moduloForm","totalHoras","documentosExigidos","GetEditPacoteView","GetEditModuleViewModel","GetEditPacoteViewSucesso","GetEditPacoteViewErro","typePacote","MappingForm","addMateriaInitial","addDocumentacaoInitial","docsForm","titular","validadeDias","obrigatorioParaMatricula","documentosExig","modalidade","cargaHoraria","pacotId","reduce","horas","editPacote","Grids","estilo","CalendarioModalComponent","dialog","grids","styles2","cor","prototipoCalendario","visibility","totaldiasplot","dias","meses","previsaoTermino","achado","unshift","construir","grid","grid2","ProtoCalendar","totalDias","DiasMes","totaldias","professorForm","EditProfessorComponent","telefoneContato","dataEntrada","dataSaida","agencia","bancoNumero","conta","tipoConta","GetProfessor","ProfessorTeste","ConferenciaComponent","indexTab","PerfilEnum","Perfil","Perfis","viewValue","Cargos","MeioPagamento","Unidades","Cursos","Turnos","DiasSemana","TitularDoc","DiaSemana","AlunoEstagioComponent","_inscricaoModal","estagios","semVagasMessage","showMatriculaButton","showVagas","showTableVagas","getEstagios","responseMessage","estagio","filename","createFileName","apiDownloadUrl","EditAcessoComponent","disabledEnvio","acessoView","editedAcessoView","myrForm","getAcessos","GetUsuarioAcessos","getAcessosSucesso","getAcessosFalha","envioAcesso","enviarLoginSucesso","enviarLoginFalha","varJson","editAcessos","saveAcessoSucesso","saveAcessoError","InfoFinancPedagComponent","showNaoMatriculadoMsg","getInfoDebitos","getInfoFinancAlunosSucesso","getInfoFinancAlunosError","CreateProfessorComponent","showEndereco","AuthInterceptor","req","includes","cloneReq","clone","set","handle","succ","navigateByUrl","ModuloCreateComponent","UnidadesAutorizadas","GetViewModels","GetUnidadeBySigla","GetCreateModuleViewModel","GetViewModelsSucesso","GetViewModelsErro","docTemplates","buscarMateriasSucesso","buscarMateriasErro","savePacote","erros","webpackContext","webpackContextResolve","__webpack_require__","o","code","keys","webpackContextKeys","module","exports","BoletimAlunoComponent","notasBoletim","GetBoletim","ShowSenhaComponent","typesPacotes","NotasComponent","showMateriaEscolha","showNotas","messageNoMateria","notasDisciplinas","materiaFilter","atualModuloId","searchForm","atualMateria","notasDisciplinasOriginal","Atualizar","TransferenciaInternaComponent","temDebito","showSearch","turmaTransId","AppComponent","BolsasComponent","bolsas","showMessageNoBolsas","GetTypePacotesSucesso","GetTypePacotesErro","GetBolsas","GetBolsaSenha","showSenha","openCreateBolsaModal","Pesquisar","Modulo","duracaoMeses","VendaUnidadeComponent","GetOutrasUnidades","ProfMateriasComponent","hide","SpinnerParam","diameter","profMaterias","editAndSaveBar","showAddIcon","showDeleteSpinner","disabledDelete","disponibilidadeForm","materiaForm","GetInfos","typeId","GetProfessorMaterias","profMateriaId","slice","NewMatriculaComponent","_router","navigation","getCurrentNavigation","extras","ObservacoesTurmaEditModal","Colaborador","Professor","CreateEstagioModalConfig","EditEstagioModalConfig","InfoFinancComponentModal","OpenInfoComponentModal","ConfirmMatriculaModalConfig","DetalheAcessoModalConfig","ObsTurmaModalConfig","AulaEditModalConfig","OpenCertificadoComponentModal","matricula","OpenCalendarioPresencaomponentModal","calendario","OpenPresencaComponentModal","SelectUnidadeComponent","authService","disableDropDown","login","loginSucesso","loginError","navigationExtras","AlunoModule","InfoFinancComponent","initialSpinner","showcontent","GetInfoFinancAlunos","debs","PDFTesteComponent","respFinancForm","respMenorForm","InfosComponent","_service","downloadTabProgressBar","showtablePrinciple","documentoAluno","anotacoes","saveAlunoProgressBar","saveRespFinProgressBar","saveRespMenorProgressBar","ShowAnotSpinner","isMatriculado","documentoForm","anotacaoForm","tipo","parentesco","GetInformacoesMatricula","alunoOriginal","respFinOriginal","respMenorOriginal","saveAluno","saveAlunoSucesso","saveAlunoFalha","downloadListPendencia","GetAluno","getAlunobyId","getAlunoSucesso","getAlunoFalha","saveResponsavel","saveRespFinSucesso","saveRespFinFalha","GetResponsavel","respId","GetResponsavelById","GetResponsavelSucesso","GetResponsavelFalha","saveRespMenorSucesso","saveRespMenorFalha","GetResponsavelMenor","GetResponsavelMenorSucesso","GetResponsavelMenorlFalha","GetAnotacoes","submitAnotacao","salvando","remover","getInfoDocs","reset","originalAluno","originalRespFin","originalRespMenor","alunoUpdate","downloadCert","AdmComponent","getMessage","openMessageModal","CargoCreateComponent","ExportLeadComponent","exportLeadModal","exportExcel","AdmRelatorioComponent","PlanoPgmCreateComponent","disabledContrato","contratos","taxaMatricula","materialGratuito","valorMaterial","bonusPontualidade","ModuloComponent","showTeste","pesquisarPacote","pesquisarSucesso","pesquisarError","getTypePacotesSucesso","getTypePacotesError","createModulo","DocTemplateComponent","docForm","ProfRelatorioComponent","nenhumDadoLocalizado","rangeForm","rangeIni","rangeFinal","GetRelatorioProfessor","PesquisarError","FornecedorCompraComponent","fornecedor","dataVencimento","descricaoTransacao","MyCurrencyInput","currency","tel","CreateColaboradoresComponent","cpfValidation","emailValidation","getCargos","funcaoTestar","VerOCPF","CreateBolsaComponent","SaveBolsa","AppModule","LoginComponent","showErrorMsg","authForm","preLogin","preLoginSucess","preLoginError","openSelectUnidadeModal","SelectUnidadeModalConfig","Mensagens","TestandoComponent","TokenInfos","Nome","UnidadeBairro","Telas","ProdutosComponent","GetProdutos","openCreateProdutoModal","EstagioCadastroComponent","styleVisibilityEndereco","estagioForm","dataInicio","vagas","AddEstagio","SalvarSucesso","SalvarFalha","Salvar","SalaEditarComponent","buscaSalaSpinner","showEditSalaForm","GetSalas","originalSala","TurmasInfoAlunosPedagComponent","GetAlunosTurma","DetalheComponent","_pedagervice","originalAcesso","acessoSistema","informacoes","editAcesso","salvarEditSucesso","salvarEditFalha","GeralComponent","MyTel","area","exchange","subscriber","Turma","identificador","prevInicio","prevtermino","totalAlunos","iniciada","numAlunos","TurmaViewModel","podeIniciar","aulaIniciada","minimoAlunos","previsionStartOne","previsaoAtual","previsaoTerminoAtual","weekDayOne","initialHourOne","finalHourOne","previsoes","PrevisoesViewModel","PrevisoesId","previsionEndingOne","previsionStartTwo","previsionEndingTwo","previsionStartThree","previsionEndingThree","Materias","temProfessor","NotasViewModel","dataAv1","dataAv2","dataAv3","AlunosNotas","listaNotasId","av1","av2","av3","disabledv1","disabledv2","disabledv3","historicoId","BaseService","EstagioAlunosComponent","inscritos","TransferenciaComponent","openTransfInternalModal","openTransfTurmaModal","DetailPacoteComponent","IdadePipe","idadeAluno","AulaEditarModal","disabledProfForm","aulaForm","professorId","horaInicial","horaFinal","GetAulaEditViewModel","originalAula","GetProfsHabilitados","ChangeMateriaSucesso","ChangeMateriaError","professor","EditAula","SaveEditSucesso","SaveEditFalha","EditUnidadeComponent","GetUnidade","GetUnidadeById","GetUnidadeSucesso","GetUnidadeFalha","unidadeOriginal","EditUnidade","ContratoComponent","openCreateContratoModal","PlanoPgmComponent","modulos","planos","disabledForm","GetPlanos","plano","createPlano","AlunoFinancComponent","InfoFinancModal","UserComponent","EditFornecedorComponent","GetFornecedor","GetFornecedorById","GetFornecedorSucesso","GetFornecedorFalha","originalFornecedor","updateSize","EditFornecedor","CPFPipe","Produto","codigoProduto","CompraProdutoCommand","cpf_comprador","matriculaAluno","ProdutosCommand","ProdutoDoacaoComponent","qntProduto","showeMsgError","doacaoForm","produtoId","unidadeDonatariaId","qntDoada","GetProdutoDoacao","CaixaDiarioComponent","RespostaResFinanceiro","CheckedRespFinanc","sim","nao","CheckedRespMenor","CreateMatriculaComponent","_validateFomService","ConfirmModal","showSerch","showAlunoResponseList","showFormCadastro","showFormCadastroTab","showPerguntaRespFinanc","checkedRespFinanc","checkedRespMenor","diaVencimento","showFormRespFinanc","showTabMenorIdade","showMatricula","showSelectCursoSearch","hideCursoSearchAndMessage","showTableCursosAndamento","showFormFinal","idAlunoCadastradoRetorno","showEndercoField","alunoCriadoId","alunoSelecionadoDoCadastro","cienciaCurso","cursoPesquisa","haTurmas","dataTeste","cepReturn2","cepReturn3","respFinanceiro","alunoResponse","turmaAndamento","messageturmas","atualCPF","turmasParaMatricular","turmaSelecionada","horarioTurma","showRespFinanceiro","cursosDisponiveis","cursosType","selectedForm","selecionar","cpfForm","unidadeCadastrada","responsavelFinancForm","responsavelMenorForm","eRespFinanc","matriculaTurmaForm","primeiraParcPaga","idAlunoIndicacao","HasMessage","NaN","boleano","previAtual","previTerminoAtual","validar","ValidarForms","confirmModal","selectAfterAdding","ValidateFormasPagamento","submitForm","submitMatriculaForm","idAluno","idTurma","ciencia","primeiraParceJaPaga","confirmMatriculaModal","ConfirmComponent","PhoneMaskDirective","SharedModule","multi","ComercialComponent","fileService","totalLeadsHoje","totalLeads","location","reload","FileService","fileUrl","CreateNovaMatriculaComponent","searchCpfProgressBar","hintCpfInvalid","hintRgInvalid","hintEmailInvalid","asd","showDivPesquisa","showDivForm","showDivEndereco","messageConflit","alunoCPF","OnOfMatHintMsgInvalids","campo","LeadsComponent","getLeads","canvas","mychart","ctx","getContext","myChart","labels","datasets","label","borderColor","borderWidth","AlunoDocsComponent","getIdAlunosMats","ComercialModule","AgendaProvas","TrocaSenhaComponent","erroMesg","trocaSenhaForm","senhaNova","senhacomparacao","Email","Senha","SenhaConfirmacao","mensagens","FornecedorVendaComponent","valorComDesconto","REST_TAREFA_URL","PedagService","dataService","TurmasInfoNotasComponent","GetCalendarioTurma","TurmasPedagInfoComponent","HomeComponent","AddProfessorModalComponent","profRespOriginal","addProfIcon","getProfessores","saveProfs","listProfsIds","AddProfNaTurma","sucess","salvarProfsSucesso","salvarProfsError","salvarProfs","ROUTESTESTE","NavBarComponent","trocarSenha","logout","SignalRService","startConnection","hubConnection","withUrl","skipNegotiation","transport","WebSockets","build","then","getConnectionId","addTransferChartDataListener","on","invoke","connectionId","m","temp","addBroadcastChartDataListener","bradcastedData","CreateTurmaViewModel","Pacote","PlanoPagamento","parcelamento","bonusMensalidade","MyCurrencyPipe","currencySign","decimalLength","chunkDelimiter","decimalDelimiter","chunkLength","num","RegExp","PedagogicoService","estagioId","ObterHeaderDownload","extractDataDownload","acesso","TransferenciaExternaComponent","cpfAluno","temRespFinanc","dataNascimento","menorEhRespFinanc","eHRespFinan","Boolean","eHRespMenorEFinan","EhMenor","ehMenor","VerificarEhMenor","validaForm","EhMenoIdade","MaterialModule","DataService","options","setHeaders","handleError","doPost","sendRequest","doPut","verb","myHeaders","needId","ErrorEvent","AdmService","ini","setHours","toUTCString","senhaId","bolsa","userId","acessos","newPacote","editedPacote","addProfCommand","TurmasComponent","showPresencaIcon","ConfirmarIniciarAulaModal","openPresenca","iniciarAula","LeadExportComponent","ProfCalendarioComponent","infoNenhumDado","GetProfessorCalendario","EstagioEditComponent","GetEstagio","GetEstagioSucesso","GetEstagioFalha","originalEstagio","EditEstagio","MateriaTemplateComponent","FinanceiroModule","MyDateInput","anoInput","mesInput","diaInput","EstagioComponent","showMessageNoEstagior","GetEstagios","GetEstagiosSucesso","GetEstagiosFalha","cadastroEstagio","EditCursoComponent","view","Views","selectedPage","mensagemSemProfessores","disabledDeletProf","descricaoCompleta","GetInformacoesDaTurma","previ1","previ2","previ3","previQuadro1linethrough","previQuadro1Color","previQuadro1Proximo","previQuadro2linethrough","previQuadro2Color","previQuadro2Proximo","previQuadro3linethrough","previQuadro3Color","previQuadro3Proximo","profIds","SaveProfsCommand","TransferenciaTurmaComponent","idTurmaAntiga","MyTelInput","subscriberInput","exchangeInput","areaInput","ProdutoEditComponent","GetProduto","NewMatriculaModule","BalancoComponent","openConferencia","EditUserComponent","roles","getSystemRoles","getSystemRolesSuccess","getSystemRolesError","editUsuario","submitFormSucesso","submitFormErro","PedagAlunosComponent","AddAnotacaoComponent","comentForm","saveComent","routes","component","children","canActivate","redirectTo","pathMatch","AppRoutingModule","useHash","VendaPesquisaComponent","OpenRelatorioMatriculaComponentModal","planoPgmAluno","AlunoMatriculaComponent","qntParcelas","showAlunosIndicacao","msgNoCursos","showTurmaForm","showSearchAlunoIndicacao","alunosIndicacao","mensagemNoTrumas","showMessageNoTurmas","showSelectedTypes","showMessageNoTypes","mensagemNoType","searchBolsaIcon","showTurmasEncontradas","showMatriculaContainer","enderecoFin","enderecoMenor","planosPgm","verPlano","showPlano","todasparcelas","clearFormArray","formArray","temBolsa","spinnerBuscarPlano","disabldSaveButton","menorIdade","confirmacaoPagmMat","planoId","diaDefault","codigoDesconto","cienciaAlunoId","infoParcelas","CalcularParcelas","SetInitialValues","GetDefaultDay","ConsultarCursos","initialDate","setMonth","controlName","GetAlunosIndicacao","TrazerAlunos","newObj","BuscaBolsaSucesso","BuscaBolsaErro","valorPlanoOriginal","per","precofinal","valorParcela","parcela","respFinForm","parcelasFormArray","parcelaNo","setData","number","setMinutes","setSeconds","planoSelecionado","OpenModalSucesso","ConfirmAcaoModalConfig","ConfirmarParcelamento","reparcelaCommand","ReparcelaCommand","valorDasParcelas","getDay","AddDispoComponent","pessoaId","domingo","segunda","terca","quarta","quinta","sexta","sabado","AlunoAcessoComponent","getAlunosAcesso","MY_DATE_FORMATS","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","PedagogicoModule","useUtc","PlanoPgmEditComponent","GetPlano","originalPlano","FornecedoresComponent","fornecedores","showMessageNoData","chooseSearch","GetFornecedores","openCreateFornecedorModal","FinanceiroService","EstagiosDocsComponent","GetAlunosEstagio","ProcessarSucesso","ProcessarFalha","InfoFinanceiras","entrada","ValorEntrada","Debito","competencia","valorTitulo","bootstrapModule","InfoFinancModalConfig","ReceberComponentModal","CreateFornecedorModal","EditFornecedorModal","webpackEmptyAsyncContext","CalendPresencaEditComponent"],"mappings":"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EA;AAGA;;;;iBAEA,mBAAUxD,IAAV,EAAwBoE,KAAxB,EAAuCC,OAAvC,EAAwD;AAEpD,iBAAK4xD,eAAL,GAFoD,CAGpD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,W,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;iBAEA,2BAAe;AACX,gBAAM90D,SAAS,GAAG,KAAKoC,MAAL,CACbnC,IADa,CACR,sFADQ,EACc;AACxBC,oBAAM,EAAE,MADgB;AAExBC,mBAAK,EAAE,QAFiB;AAGxBC,uBAAS,EAAE,KAHa;AAIxBC,uBAAS,EAAE,MAJa;AAKxB8I,sBAAQ,EAAE,OALc;AAOxB7I,kBAAI,EAAE;AAAEukB,qBAAK,EAAE;AAAT,eAPkB;AAQxBtkB,yBAAW,EAAE,IARW;AASxBC,0BAAY,EAAE;AATU,aADd,CAAlB;;AAcAR,qBAAS,CAACS,WAAV,GAAwBrB,SAAxB,CAAkC,UAACkB,IAAD,EAAU;AACxC,kBAAIA,IAAI,CAACI,OAAL,KAAiB,IAArB,EAA2B;AACvB;AACAhB,uBAAO,CAACC,GAAR,CAAY,eAAZ,EAFuB,CAGvB;AACH,eAJD,MAIO,IAAIW,IAAI,CAACI,OAAL,KAAiB,QAArB,EAA+B,CAClC;AACA;AACH;AACJ,aATD;AAUH;;;iBAED,2BAAkByC,IAAlB,EAAmC,CAC/B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACH;;;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","file":"main-es5.js","sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Parametros } from \"src/app/Adm/colaboradores/colaboradores.component\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { AnaliseDocModalComponent } from \"./analiseDocsModal/analise-docmodal.component\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: \"analisedocs-app\",\r\n    templateUrl: './analisedocs.component.html',\r\n    styleUrls: ['./analisedocs.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class AnaliseDocsComponent implements OnInit {\r\n\r\n\r\n    // colaboradores: Colaborador[] = new Array<Colaborador>();\r\n    baseUrl = environment.baseUrl;\r\n    showMessageNoAluno = false\r\n    length: number = 0\r\n    mensagem: string = \"\";\r\n    // length: number;\r\n    pageSize: number = 5;\r\n    // pageEvent: PageEvent;\r\n    // pageIndexNumber: number = 0;\r\n    // formSubmitted: boolean = false;\r\n    // showTable: boolean = false;\r\n    // paginationInfo: IPager;\r\n    // showMessage: boolean = false;\r\n\r\n\r\n    public pesquisarForm: FormGroup\r\n\r\n    constructor(\r\n        private _snackBar: MatSnackBar,\r\n        private CreateMatriculaModal: MatDialog,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient\r\n    ) {\r\n        this.pesquisarForm = _fb.group({\r\n            nome: ['', [Validators.required]],\r\n            email: ['', [Validators.required]],\r\n            cpf: ['', [Validators.required]],\r\n            ativo: [false],\r\n            todasUnidades: [false],\r\n        });\r\n\r\n        this.pesquisarForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n                // console.log('form changed to:', form);\r\n                if (this.pesquisarForm.get('nome').value == '' &&\r\n                    this.pesquisarForm.get('email').value == '' &&\r\n                    this.pesquisarForm.get('cpf').value == '') {\r\n                    //  console.log('false valid')\r\n\r\n                    this.pesquisarForm.controls['nome'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['email'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['cpf'].setErrors({ required: true });\r\n                    // this.pesquisarForm.setErrors({required: true});\r\n                } else {\r\n                    //   console.log('true valid')\r\n                    this.pesquisarForm.controls['nome'].setErrors(null);\r\n\r\n                    this.pesquisarForm.controls['email'].setErrors(null)\r\n\r\n                    this.pesquisarForm.controls['cpf'].setErrors(null);\r\n\r\n                    //this.pesquisarForm.setErrors({required: false});\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n        );\r\n\r\n    }\r\n    ngOnInit() {\r\n        console.log('init matricula')\r\n        //this.getColaboradores(1, this.pageSize);\r\n        this.GetQntPendencias();\r\n    }\r\n\r\n    qntPendencias: number = 0;\r\n\r\n    private GetQntPendencias() {\r\n        this._http.get(`${this.baseUrl}/pedag/pendencias-docv2`)\r\n            .subscribe((response) => {\r\n                this.qntPendencias = response['qntDocs']\r\n            },\r\n                (err) => {\r\n                    console.log(err)\r\n                },\r\n                () => {\r\n\r\n                },\r\n            )\r\n    }\r\n    // pageIndex = 0\r\n    alunos: any[] = new Array<any>()\r\n    public buscarDocsPendentes() {\r\n        //pendencias-lista\r\n        this._http.get(`${this.baseUrl}/pedag/pendencias-lista`)\r\n            .subscribe(response => {\r\n                //this.qntPendencias = response['qntDocs']\r\n                this.alunos = response['alunos']\r\n            },\r\n                (err) => {\r\n                    console.log(err)\r\n                },\r\n                () => {\r\n\r\n                },\r\n            )\r\n\r\n    }\r\n\r\n    buscarDocsModal(aluno): void {\r\n        const dialogRef = this.CreateMatriculaModal\r\n            .open(AnaliseDocModalComponent, {\r\n                height: 'auto',\r\n                width: '1000px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n\r\n                data: { aluno: aluno },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"OK\") {\r\n                this.openSnackBar()\r\n                console.log('afte close ok')\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    getColaboradores(actualPage: number, pageSize: number) {\r\n\r\n    }\r\n\r\n    clicar(evento: any) {\r\n\r\n    }\r\n\r\n    paginationChange(pageEvt: PageEvent) {\r\n        console.log(pageEvt)\r\n\r\n    }\r\n\r\n\r\n    params: Parametros = new Parametros()\r\n    listAlunos: Aluno[] = new Array<Aluno>();\r\n    onSubmit(form?: any, event?: any) {\r\n\r\n        this.showMessageNoAluno = false\r\n        var formJson = JSON.stringify(this.pesquisarForm.value)\r\n\r\n        if (this.pesquisarForm.valid) {\r\n            this._http.get(`${this.baseUrl}/matricula/alunos/?itemsPerPage=` + this.pageSize + `&currentPage=1&paramsJson=${formJson}`)\r\n                .subscribe(\r\n                    (response) => {\r\n                        console.log(response)\r\n                        this.listAlunos = Object.assign([], response['data'])\r\n\r\n                        this.length = response['totalItemsInDatabase']\r\n\r\n                        if (this.listAlunos.length == 0) {\r\n                            // console.log(\"lengt zero\")\r\n                            this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n                            this.showMessageNoAluno = true\r\n                        }\r\n\r\n                    },\r\n                    (err) => {\r\n                        //this.showSpinnerFirst = false\r\n                        console.log(err)\r\n                        //this.openSnackBar(err)\r\n\r\n                    },\r\n                    () => {\r\n                        //this.showSpinnerFirst = false\r\n                        this.showMessageNoAluno = false\r\n                        console.log('ok get');\r\n                        //this.pageIndexNumber = (evento.pageIndex * this.pageSize)\r\n                    },\r\n                )\r\n        }\r\n\r\n    }\r\n\r\n    consulta(nome: string) {\r\n\r\n        if (nome == \"\") {\r\n            // TODO: sendo form alert: selecionar ao menos um\r\n            return;\r\n        }\r\n\r\n        this._http.get(`${this.baseUrl}/matricula/alunos/?email=&cpf=&nome=${nome}`)\r\n            .subscribe(response => {\r\n\r\n                console.log(response)\r\n                this.listAlunos = Object.assign([], response)\r\n\r\n            }, err => { console.log(err) },\r\n                () => {\r\n\r\n                });\r\n    }\r\n\r\n    extrairDocPendencias(aluno) {\r\n        //     const dialogRef = this.CreateMatriculaModal\r\n        //     .open(AlunoMatriculaComponent, {\r\n        //         height: 'auto',\r\n        //         width: '1000px',\r\n        //         autoFocus: false,\r\n        //         maxHeight: '90vh',\r\n\r\n        //         data: { alunoId: aluno.id },\r\n        //         hasBackdrop: true,\r\n        //         disableClose: true\r\n        //     });\r\n\r\n        // dialogRef.afterClosed().subscribe((data) => {\r\n        //     if (data.clicked === \"OK\") {\r\n        //         this.openSnackBar()\r\n        //         console.log('afte close ok')\r\n        //     } else if (data.clicked === \"Cancel\") {\r\n\r\n        //     }\r\n        // });\r\n\r\n    }\r\n\r\n    openMatriculaModal(): void {\r\n        // const dialogRef = this.CreateMatriculaModal\r\n        //     .open(CreateMatriculaComponent, {\r\n        //         height: 'auto',\r\n        //         width: '1000px',\r\n        //         autoFocus: false,\r\n        //         maxHeight: '90vh',\r\n\r\n        //         data: { Hello: \"Hello World\" },\r\n        //         hasBackdrop: true,\r\n        //         disableClose: true\r\n        //     });\r\n\r\n        // dialogRef.afterClosed().subscribe((data) => {\r\n        //     if (data.clicked === \"OK\") {\r\n        //         this.openSnackBar()\r\n        //         console.log('afte close ok')\r\n        //     } else if (data.clicked === \"Cancel\") {\r\n\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    openInfoModal(aluno: Aluno): void {\r\n        // const dialogRef = this.CreateMatriculaModal\r\n        //     .open(InfosComponent, {\r\n        //         height: '90vh',\r\n        //         width: '1000px',\r\n        //         autoFocus: false,\r\n\r\n\r\n        //         data: { aluno: aluno },\r\n        //         hasBackdrop: true,\r\n        //         disableClose: true\r\n        //     });\r\n\r\n        // dialogRef.afterClosed().subscribe((data) => {\r\n        //     if (data.clicked === \"OK\") {\r\n        //         this.openSnackBar()\r\n        //         console.log('afte close ok')\r\n        //     } else if (data.clicked === \"Cancel\") {\r\n\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    openInfoFinancModal(aluno: Aluno): void {\r\n        // const dialogRef = this.CreateMatriculaModal\r\n        //     .open(InfoFinancPedagComponent, {\r\n        //         height: '90vh',\r\n        //         width: '1000px',\r\n        //         autoFocus: false,\r\n\r\n\r\n        //         data: { aluno: aluno },\r\n        //         hasBackdrop: true,\r\n        //         disableClose: true\r\n        //     });\r\n\r\n        // dialogRef.afterClosed().subscribe((data) => {\r\n        //     if (data.clicked === \"OK\") {\r\n        //         this.openSnackBar()\r\n        //         console.log('afte close ok')\r\n        //     } else if (data.clicked === \"Cancel\") {\r\n\r\n        //     }\r\n        // });\r\n    }\r\n\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Aluno matriculado com sucesso', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n    deleteColaborador(id: number) {\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface IPager {\r\n    itemsPerPage?: number;\r\n    totalItemsInDatabase?: number;\r\n    currentPage?: number;\r\n    totalPages?: number;\r\n    items?: number;\r\n}\r\n\r\nfunction InfoComponent(InfoComponent: any, arg1: { height: string; width: string; autoFocus: false; maxHeight: string; data: { Hello: string; }; hasBackdrop: true; disableClose: true; }) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n","<div class=\"container\" style=\"width: 95%;padding-top: 20px;\">\r\n\r\n    <!-- <div>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"cadastrar/matricular\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button style=\"\" (click)=\"openMatriculaModal()\" mat-icon-button>\r\n                <mat-icon>person_add_alt</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div> -->\r\n    <!-- <button type=\"submit\" class=\"bg-success\" (click)=\"openMatriculaModal()\" mat-raised-button disabled=\"false\"\r\n        style=\"margin-top: 20px;\">\r\n        cadastrar/matricular aluno\r\n    </button> -->\r\n    <br>\r\n    <form [formGroup]=\"pesquisarForm\" (ngSubmit)=\"onSubmit()\" class=\"form-inline siteForm\"\r\n        style=\"margin-top: 5px;display: inline-block\">\r\n        <span style=\"margin-left: 10px;font-size: 0.9em;font-style: italic;\">Digite ao menos um dos campos para\r\n            pesquisar pelo aluno:</span>\r\n        <div class=\"form-row align-items-center divSiteForm\">\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"transform: scale(0.85);\">\r\n                <mat-label>Nome</mat-label>\r\n                <input selected formControlName=\"nome\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"margin-left: 2px;transform: scale(0.85);\">\r\n                <mat-label>E-mail</mat-label>\r\n                <input selected formControlName=\"email\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"margin-left: 2px;transform: scale(0.85);\">\r\n                <mat-label>CPF</mat-label>\r\n                <input selected mask=\"000.000.000-00\" formControlName=\"cpf\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button disabled type=\"submit\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n           \r\n\r\n        </div>\r\n\r\n    </form>\r\n    <br>\r\n\r\n    <span *ngIf=\"qntPendencias > 0\" style=\"color:red;font-size: 0.9em;font-style: italic;margin-left: 10px;\">\r\n        <ng-container *ngIf=\"qntPendencias > 1;else maisdeum\">\r\n\r\n            Obs: Existem documentos com analise pendente, favor analisar!\r\n        </ng-container>\r\n        <ng-template #maisdeum>\r\n\r\n            Obs: {{qntPendencias}} aluno está com a análise de seus documentos pendentes, favor analisar!\r\n        </ng-template>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"buscar pendência\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"buscarDocsPendentes()\" style=\"color: black;\" type=\"button\" mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n        </i>\r\n    </span>\r\n    <br>\r\n\r\n\r\n    <div *ngIf=\"alunos.length > 0\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n        margin-top: 10px;\r\n        box-shadow: 0 0 1em rgb(172, 170, 170);\r\n        background-color: rgb(227, 240, 227);\">\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Alunos</h4>\r\n            <p class=\"card-category\">{{listAlunos.length}} alunos localizados.</p>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n                <table @rowHighlight color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                text-align:left; \r\n                vertical-align: middle;\r\n                border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 28%;font-size:1.2em;\r\n                                vertical-align: middle;\r\n                                text-align:left;\r\n                border-top: 0px; font-weight: 400;\">Nome</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1.2em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">CPF</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1.2em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">Turma</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1.2em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">Docs. pendentes<br>de análise</th>\r\n\r\n                            <th style=\"width: 16%;\r\n                border-top: 0px;\"></th>\r\n\r\n                            <!-- <th style=\"width: 6%;\r\n                border-top: 0px;\">\r\n                            \r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"criar usuário\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button \r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>plus_one</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                        </th> -->\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let item of alunos;let i = index;\">\r\n                            <td style=\"text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.cpf}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\"></td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                {{item.unidadeCadastrada}}\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"informações\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openInfoFinancModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>request_quote</mat-icon>\r\n                                    </button>\r\n\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"informações\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openInfoModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>info</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"matricular aluno em uma turma\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"matricular(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>read_more</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n\r\n\r\n\r\n                            </td>\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                <i #tooltip=\"matTooltip\" matTooltip=\"extrair relatório de pendencias\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"extrairDocPendencias(item)\" style=\"color: black;\" type=\"button\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>description</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin-left: 30px;\" #tooltip=\"matTooltip\" matTooltip=\"buscar pendência\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"buscarDocsModal(item)\" style=\"color: black;\" type=\"button\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>search</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n                            </td>\r\n                            <!-- <td style=\"position: relative;\">\r\n\r\n                          \r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button (click)=\"openEditUserModal(item)\"\r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>settings</mat-icon>\r\n                                </button>\r\n                            </i>\r\n\r\n\r\n                        </td>\r\n                        <td style=\"position: relative;\">\r\n\r\n\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"deletar\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button (click)=\"deleteColaborador(item.id)\" style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>delete_outline</mat-icon>\r\n                                </button>\r\n                            </i>\r\n\r\n\r\n                        </td> -->\r\n                        </tr>\r\n\r\n\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n\r\n\r\n\r\n\r\n            </div>\r\n            <!-- <mat-paginator style=\" \r\n            background-color: rgb(227, 240, 227);\r\n            bottom: 0px;\r\n            right: 0px;\" \r\n            *ngIf=\"colaboradores.length > 0\" \r\n            [length]=\"length\" \r\n            [pageSize]=\"pageSize\" \r\n            hidePageSize=\"true\"\r\n            (page)=\"pageEvent = $event\" \r\n            (click)=\"clicar(pageEvent)\"\r\n            >\r\n          </mat-paginator> -->\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- <div class=\"container\" style=\"width: 95%;\">\r\n    <button type=\"submit\" class=\"bg-success\" (click)=\"openMatriculaModal()\" mat-raised-button disabled=\"false\"\r\n        style=\"margin-top: 20px;\">\r\n        cadastrar/matricular aluno\r\n    </button>\r\n\r\n    <form class=\"form-inline siteForm\" style=\"margin-top: 20px;\">\r\n\r\n        <div class=\"form-row align-items-center divSiteForm\">\r\n            <span style=\"font-size: 1.2em;\">Pesquise o aluno</span>\r\n            <br>\r\n            <hr>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"transform: scale(0.85);\">\r\n                <mat-label>Nome</mat-label>\r\n                <input #nome selected name=\"templateName\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n\r\n            <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                matTooltipHideDelay=\"100\">\r\n                <button (click)=\"consulta(nome.value)\" style=\"\" mat-icon-button>\r\n                    <mat-icon>search</mat-icon>\r\n                </button>\r\n            </i>\r\n          \r\n\r\n        </div>\r\n\r\n    </form> -->\r\n\r\n\r\n\r\n<!-- <form class=\"form-inline siteForm\" #form=\"ngForm\" (ngSubmit)=\"submitForm(param1, param2)\">\r\n\r\n    <div class=\"form-row align-items-center divSiteForm\">\r\n\r\n        <mat-form-field class=\"siteForm-select\">\r\n            <mat-label>Localidade</mat-label>\r\n            <mat-select #param1 name=\"site\"  ngModel required>\r\n                <mat-option></mat-option>\r\n                <mat-option  *ngFor=\"let site of sites\" [value]=\"site\">\r\n                    {{site.descricaoCompleta}}\r\n                </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"sitecontrol.hasError('required')\">Escolha a localidade</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"siteForm-selectRange\">\r\n            <mat-label>Range de horas</mat-label>\r\n            <mat-select #param2 name=\"range\" [(ngModel)]=\"defaultRange\" required>\r\n                <mat-option  [value]=\"item.value\" *ngFor=\"let item of range\">{{item.viewValue }}</mat-option>\r\n            </mat-select>\r\n            <mat-error>Range de horas</mat-error>\r\n        </mat-form-field>\r\n\r\n        <div class=\"siteForm-search\">\r\n            <button mat-icon-button color=\"accent\">\r\n                <mat-icon color=\"primary\">search</mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</form> -->\r\n\r\n\r\n\r\n<!-- <div class=\"row justify-content-center\">\r\n        <div class=\"col\"> -->","import { Component, Input, OnInit } from '@angular/core';\r\nimport { HttpEventType } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { SpinnerParams } from '../models/spinner.model';\r\nimport { HighlightTrigger } from '../animation/item.animation';\r\n\r\n@Component({\r\n    selector: 'spinner',\r\n    templateUrl: './spinner.component.html',\r\n    animations: [HighlightTrigger]\r\n    // styleUrls: ['./spinner.component.scss']\r\n})\r\n\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n\r\n    constructor() { }\r\n\r\n\r\n    @Input(\"SpinnerParam\")\r\n    infoSpinner: SpinnerParams;// = new InfoPageParam();\r\n\r\n    ngOnInit(): void {\r\n        // this.infoSpinner.diameter = 100\r\n        // this.infoSpinner.marginleft = 42.5\r\n        // this.infoSpinner.margintop = 10\r\n    }\r\n\r\n    getStyles() {\r\n\r\n        return {\r\n            \"margin-left\": `${this.infoSpinner.marginleft}%`,\r\n            \"margin-top\": `${this.infoSpinner.margintop}%`,\r\n            \"position\": `absolute`,\r\n        };\r\n    }\r\n    \r\n\r\n}\r\n\r\n","<mat-spinner @rowHighlight [diameter]=\"infoSpinner.diameter\" [ngStyle]=\"getStyles()\">\r\n</mat-spinner>\r\n<!-- \r\n<mat-spinner @rowHighlight [diameter]=\"100\" style=\"margin-left: 42.5%;\r\nmargin-top: 10%; \r\nposition: absolute;\">\r\n</mat-spinner> -->","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { Debito } from \"src/app/_shared/models/InfoFinanceiras.model\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: \"unidadebalanco-app\",\r\n    templateUrl: './unidadebalanco.component.html',\r\n    //styleUrls: ['./colaboradores.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class UnidadeBalancoComponent implements OnInit {\r\n\r\n\r\n    //colaboradores: Colaborador[] = new Array<Colaborador>();\r\n    baseUrl = environment.baseUrl;\r\n    // length: number = 0\r\n    // pageSize: number = 5;\r\n    // pageEvent: PageEvent;\r\n    // pageIndexNumber: number = 0;\r\n    // actualPage = 1\r\n    // paginationInfo: IPager;\r\n\r\n    // formSubmitted: boolean = false;\r\n    // showTable: boolean = false;\r\n    // showSpinner = false\r\n    // showSpinnerFirst = false\r\n\r\n    // showMessage: boolean = false;\r\n    // cargos = Cargos;\r\n    // unidades = Unidades\r\n    showMessageNoColaborador = false\r\n    mensagem: string = \"\";\r\n\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    private jwtHelper = new JwtHelperService();\r\n    public debitos: Debito[] = new Array<Debito>()\r\n    //pagination\r\n    range = new FormGroup({\r\n        start: new FormControl(),\r\n        end: new FormControl()\r\n    });\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog\r\n        //private EditColaboradoresModal: MatDialog\r\n    ) { }\r\n    ngOnInit() {\r\n        //console.log('init colaboradores 123')\r\n        //const token = localStorage.getItem('jwt')\r\n        // this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        // console.log(token);\r\n        // console.log(this.tokenInfo.Unidade);\r\n        // console.log(this.tokenInfo.Codigo);\r\n        // console.log(this.tokenInfo);\r\n        //this.getColaboradores(1, this.pageSize);\r\n    }\r\n\r\n    totalVendas: number\r\n    pesquisarData() {\r\n\r\n        console.log(this.range.value[\"end\"])\r\n\r\n        console.log(this.range.value[\"end\"])\r\n\r\n        this._http.get(`${this.baseUrl}/financeiro/cursos-buscar/?start=${new Date(this.range.value[\"start\"]).toLocaleString()}&end=${new Date(this.range.value[\"end\"]).toLocaleString()}`)\r\n            .subscribe(resp => {\r\n                console.log(resp)\r\n\r\n                this.totalVendas =resp['total']\r\n\r\n                this.debitos = Object.assign([], resp['vendas'])\r\n            },\r\n                (error) => { console.log(error) },\r\n                () => { \r\n\r\n                    if(this.debitos.length > 0){\r\n\r\n                    }else{\r\n                        this.showMessageNoColaborador = true\r\n                    }\r\n\r\n                })\r\n    }\r\n    // pageIndex = 0\r\n    // get page() {\r\n    //     return console.log('page')\r\n    // }\r\n\r\n\r\n    // getColaboradores(actualPage: number, pageSize: number) {\r\n\r\n    //     var itemsPerPage = pageSize;\r\n    //     var currentPage = actualPage;\r\n\r\n    //     this.http.get(`${this.baseUrl}/colaboradores/?itemsPerPage=` + itemsPerPage + `&currentPage=` + currentPage, {\r\n    //         //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n    //         // headers: new HttpHeaders({\r\n    //         //     \"Content-Type\": \"application/json\",\r\n    //         //     \"Authorization\": \"Bear \"\r\n    //         // })\r\n    //     }).subscribe(response => {\r\n\r\n    //         console.log(response)\r\n    //         this.colaboradores = Object.assign([], response['data'])\r\n    //         this.length = response['totalItemsInDatabase']\r\n    //         console.log(this.length)\r\n    //         console.log(this.colaboradores)\r\n    //         // this.dialogRef.close();\r\n    //     }, err => { console.log(err) },\r\n    //         () => { });\r\n\r\n    // }\r\n\r\n\r\n    // params: Parametros = new Parametros()\r\n\r\n    pesquisar(nome: string, cargo: string, unidade: string) {\r\n\r\n        //this.openConferencia();\r\n        // console.log(nome + \" \" + cargo + \" \" + unidade)\r\n        // if (nome == \"\" || nome == undefined) nome = \"\"\r\n        // if (cargo == \"\" || cargo == undefined) cargo = \"\"\r\n        // if (unidade == \"\" || unidade == undefined) unidade = \"\"\r\n\r\n        // if ((nome == \"\" || nome == undefined) &&\r\n        //     (cargo == \"\" || cargo == undefined) &&\r\n        //     (unidade == \"\" || unidade == undefined)) {\r\n        //     console.log(\"retorno\")\r\n        //     return;\r\n        // }\r\n        // this.showMessageNoColaborador = false\r\n        // this.mensagem = \"\"\r\n\r\n        // let query = { nome: nome, cargo: cargo, unidade: unidade }\r\n        // this.params.nome = nome\r\n        // this.params.email = cargo\r\n        // this.params.cpf = unidade\r\n        // //console.log(params)\r\n        // //var itemsPerPage = 5;\r\n        // //this.actualPage\r\n        // //var currentPage = 1;\r\n        // this.showSpinnerFirst = true\r\n        // this.colaboradores = new Array<Colaborador>();\r\n        // let paramsJson = JSON.stringify(this.params)\r\n        // console.log(query)\r\n\r\n        // this.http.post(`${this.baseUrl}/colaboradores/pesquisar/?itemsPerPage=` + this.pageSize + `&currentPage=1`, paramsJson, {\r\n        //     headers: new HttpHeaders({\r\n        //         \"Content-Type\": \"application/json\",\r\n        //         \"Authorization\": `Bearer ${localStorage.getItem('jwt')}`\r\n        //     })\r\n        // }).subscribe(\r\n        //     (response) => {\r\n        //         console.log(response)\r\n        //         this.colaboradores = Object.assign([], response['data']);\r\n        //         //  this.length = tasks['data'].length;\r\n        //         this.length = response['totalItemsInDatabase']\r\n        //         if (this.length == 0) {\r\n        //             this.showMessageNoColaborador = true\r\n        //             this.mensagem = \"Registro não localizado.\"\r\n        //         }\r\n        //         else if (this.colaboradores.length == 0) {\r\n        //             console.log(\"lengt zero\")\r\n        //             this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n        //             this.showMessageNoColaborador = true\r\n        //         }\r\n        //         // this.applyFiler()\r\n        //     },\r\n        //     (err) => {\r\n        //         this.showSpinnerFirst = false\r\n        //         console.log(err)\r\n        //         //this.openSnackBar(err)\r\n\r\n        //     },\r\n        //     () => {\r\n        //         this.showSpinnerFirst = false\r\n        //         console.log('ok get');\r\n        //         //this.pageIndexNumber = (evento.pageIndex * this.pageSize)\r\n        //     },\r\n        // )\r\n\r\n    }\r\n\r\n    // changePage(evento: any) {\r\n    //     console.log(evento)\r\n    //     console.log(this.actualPage)\r\n    //     //if(this.actualPage)\r\n    //     this.showSpinner = true\r\n    //     let paramsJson = JSON.stringify(this.params)\r\n    //     // this.getTasks(evento.pageIndex + 1, this.pageSize);\r\n    //     this.http.post(`${this.baseUrl}/colaboradores/pesquisar/?itemsPerPage=` + this.pageSize + `&currentPage=${evento.pageIndex + 1}`, paramsJson, {\r\n    //         headers: new HttpHeaders({\r\n    //             \"Content-Type\": \"application/json\",\r\n    //             \"Authorization\": \"Bearer \"\r\n    //         })\r\n    //     })\r\n    //         .subscribe(\r\n    //             (response) => {\r\n    //                 // console.log('generictasks get')\r\n    //                 this.colaboradores = response['data'];\r\n    //                 //  this.length = tasks['data'].length;\r\n    //                 this.length = response['totalItemsInDatabase']\r\n    //                 // this.applyFiler()\r\n    //             },\r\n    //             (err) => {\r\n    //                 console.log(err)\r\n    //                 this.showSpinner = false\r\n    //                 //this.openSnackBar(err)\r\n\r\n    //             },\r\n    //             () => {\r\n    //                 console.log('ok get');\r\n    //                 this.showSpinner = false\r\n    //                 this.pageIndexNumber = (evento.pageIndex * this.pageSize)\r\n    //             },\r\n    //         )\r\n    // }\r\n\r\n    // paginationChange(pageEvt: PageEvent) {\r\n    //     console.log(pageEvt)\r\n\r\n    // }\r\n\r\n    // openConferencia(): void {\r\n    //     const dialogRef = this._modal\r\n    //         .open(ConferenciaComponent, {\r\n    //             height: 'auto',\r\n    //             width: '1030px',\r\n    //             autoFocus: false,\r\n    //             maxHeight: '90vh',\r\n    //             maxWidth: '400vh',\r\n\r\n    //             data: { Hello: \"Hello World\" },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n\r\n\r\n    //     dialogRef.afterClosed().subscribe((data) => {\r\n    //         if (data.clicked === \"Ok\") {\r\n               \r\n    //             console.log('afte close ok')\r\n               \r\n    //         } else if (data.clicked === \"Cancel\") {\r\n               \r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    openEditUserModal(item: Colaborador): void {\r\n        // const dialogRef = this._modal\r\n        //     .open(EditColaboradoresComponent, {\r\n        //         height: '580px',\r\n        //         width: '800px',\r\n\r\n        //         data: { colaborador: item },\r\n        //         hasBackdrop: true,\r\n        //         disableClose: true\r\n        //     });\r\n\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n\r\n        // });\r\n    }\r\n\r\n    deleteColaborador(id: number) {\r\n\r\n        //     this._http.delete(`${this.baseUrl}/colaboradores/${id}`, {\r\n        //         //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n        //         headers: new HttpHeaders({\r\n        //             \"Content-Type\": \"application/json\",\r\n        //             \"Authorization\": \"Bear \"\r\n        //         })\r\n        //     }).subscribe(response => {\r\n\r\n        //         console.log(response)\r\n\r\n        //     }, err => { \r\n        //         console.log(err) \r\n        //     },\r\n        //         () => { });\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface IPager {\r\n    itemsPerPage?: number;\r\n    totalItemsInDatabase?: number;\r\n    currentPage?: number;\r\n    totalPages?: number;\r\n    items?: number;\r\n}\r\n\r\nexport class Parametros {\r\n    constructor(\r\n        public nome?: string,\r\n        public email?: string,\r\n        public cpf?: string) { }\r\n}","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <!-- <div>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"criar colaborador\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"infoPagamento()\" mat-icon-button>\r\n                <mat-icon>attach_money</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div> -->\r\n\r\n    <br>\r\n\r\n    <!--TODO? aqui mostrar todos os valores, sejam oriundos de turmas/cursos ou nao!-->\r\n    <form class=\"form-inline siteForm\" style=\"margin-top: 5px;display: inline-block\">\r\n\r\n        <span style=\"font-size: 0.9em;font-style: italic;\">\r\n            Selecione o período para pesquisar pelo balanço da unidade:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center divSiteForm\" style=\"padding: 0px;\" >\r\n           \r\n            <!-- <mat-form-field appearance=\"standard\" style=\"width: 110px; transform: scale(0.85);\">\r\n                <mat-label>Nº Lanç.</mat-label>\r\n                <input #nome selected name=\"templateName\" matInput placeholder=\"digite o número\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"width: 110px; margin-left: 2px;transform: scale(0.85);\">\r\n                <mat-label>Nº Doc.</mat-label>\r\n                <input #email selected name=\"templateName\" matInput placeholder=\"digite o número\">\r\n            </mat-form-field> -->\r\n\r\n            <mat-form-field style=\"transform: scale(0.85);margin-top: 10px;margin-left: -4%;\" \r\n            appearance=\"fill\" >\r\n                <mat-label>Selecione o período</mat-label>\r\n                <mat-date-range-input disabled [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n                    <input matStartDate formControlName=\"start\" placeholder=\"início\">\r\n                    <input matEndDate formControlName=\"end\" placeholder=\"fim\">\r\n                </mat-date-range-input>\r\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                <mat-date-range-picker #picker ></mat-date-range-picker>\r\n\r\n                <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n                <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n            </mat-form-field>\r\n\r\n            <span style=\"margin-left: 2px;margin-bottom: 30px;\">\r\n                <i style=\"margin-left: 2px;margin-bottom: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"pesquisarData()\" disabled type=\"submit\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n            <!-- <mat-form-field class=\"siteForm-select\" style=\"width: 110px; margin-left: 2px;transform: scale(0.85);\">\r\n                <mat-label>Data</mat-label>\r\n                <input #cpf selected name=\"templateName\" matInput placeholder=\"escolha a data\">\r\n            </mat-form-field>\r\n            até\r\n            <mat-form-field class=\"siteForm-select\" style=\"width: 110px; margin-left: 2px;transform: scale(0.85);\">\r\n                <mat-label>Data</mat-label>\r\n                <input #cpf selected name=\"templateName\" matInput placeholder=\"escolha a data\">\r\n            </mat-form-field> -->\r\n\r\n            <!-- <span>\r\n                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button style=\"\" (click)=\"pesquisar(nome.value, email.value,cpf.value)\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span> -->\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n\r\n    <div class=\"card-header \" style=\"background-color: rgb(227, 240, 227);margin-left: 10px;\r\n   width: 350px; font-size: 0.9em;box-shadow: 0 0 0.5em rgb(172, 170, 170);\" unselectable=\"on\"\r\n        *ngIf=\"showMessageNoColaborador\">{{mensagem}}</div>\r\n\r\n    <!-- <mat-spinner @rowHighlight *ngIf=\"showSpinnerFirst\" [diameter]=\"100\" style=\"margin-left: 36.5%;\r\n        top: 46.5%; \r\n        position: absolute;\">\r\n    </mat-spinner> -->\r\n\r\n    <div @rowHighlight *ngIf=\"debitos.length > 0\" class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n            position: relative;\r\n            margin-top: 50px;\r\n            box-shadow: 0 0 1em rgb(172, 170, 170);\r\n            background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Cursos</h4>\r\n            <p class=\"card-category\"> Balanço do período: </p>\r\n            <div>Total recebido: {{totalVendas  | currency:'BRL':true:'1.2-2' }}  | Total saída: xxxx</div>\r\n            <div>Saldo atual: R$ xxxx</div>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%;font-size: 0.8em; \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 35%;font-size:0.8em;\r\n                                    vertical-align: middle;\r\n                                    text-align:left;\r\n                    border-top: 0px; font-weight: 400;\">Origem</th>\r\n\r\n                            <th style=\"width: 15%;font-size:0.8em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">Data<br>pagamento</th>\r\n\r\n                            <th style=\"width: 15%;font-size:0.8em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Valor</th>\r\n\r\n                            <th style=\"width: 11%;font-size:0.8em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Meio<br>pagamento</th>\r\n\r\n                            <th style=\"width: 1%;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 21%;\r\n                    border-top: 0px;\">\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of debitos;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{i + 1}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">\r\n                                {{item.descricao }}\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                {{item.dataPagamento | date:'d/M/y'}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                            {{item.valorPago | currency:'BRL':true:'1.2-2'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                                {{ item.meioPagamento }}\r\n                                <!-- <div *ngIf=\"item.ativo == true;else inativo\">\r\n\r\n                                    <mat-icon style=\"margin: 0px; margin: 0px;\r\n                                        background-color: rgb(227, 240, 227);;color: green;\" style=\"color: green;\">\r\n                                        done_outline</mat-icon>\r\n                                    \r\n\r\n                                </div>\r\n                                <ng-template #inativo>\r\n\r\n                                    <mat-icon style=\"background-color: rgb(227, 240, 227);\r\n                                            margin: 0px; margin: 0px;color: red; \">close</mat-icon>\r\n\r\n\r\n                                </ng-template> -->\r\n\r\n                            </td>\r\n\r\n                            <td style=\"position: relative;\">\r\n\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"openEditUserModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n                            </td>\r\n                            <td style=\"position: relative;\">\r\n\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"deletar\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"deleteColaborador(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>delete_outline</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <mat-paginator *ngIf=\"length > 5\" style=\"\r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" [length]=\"length\" [pageSize]=\"5\" hidePageSize=\"true\" (page)=\"pageEvent = $event\"\r\n                (click)=\"changePage(pageEvent)\">\r\n            </mat-paginator>\r\n\r\n        </div>\r\n\r\n        <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n            top: 46.5%; \r\n            position: absolute;\">\r\n        </mat-spinner>\r\n    </div>\r\n</div>","import { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport {\r\n    Component,\r\n    ElementRef,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    Optional,\r\n    Self,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport {\r\n    AbstractControl,\r\n    ControlValueAccessor,\r\n    FormBuilder,\r\n    FormControl,\r\n    FormGroup,\r\n    NgControl,\r\n    Validators\r\n} from '@angular/forms';\r\nimport { MAT_FORM_FIELD, MatFormField, MatFormFieldControl } from '@angular/material/form-field';\r\nimport { Subject } from 'rxjs';\r\nimport { MyTime } from './myTime.model';\r\n\r\n\r\n\r\n\r\n/* \r\n\r\n@Component({\r\n  selector: 'form-field-custom-control-example',\r\n  templateUrl: 'form-field-custom-control-example.html',\r\n})\r\nexport class FormFieldCustomControlExample {\r\n  form: FormGroup = new FormGroup({\r\n    tel: new FormControl(new MyTel('', '', ''))\r\n  });\r\n}\r\n*/\r\n\r\n/** Custom `MatFormFieldControl` for telephone number input. */\r\n@Component({\r\n    selector: 'mytime-input',\r\n    templateUrl: 'time-input.html',\r\n    styleUrls: ['time-input.scss'],\r\n    providers: [{ provide: MatFormFieldControl, useExisting: MyTimeInput }],\r\n    host: {\r\n        '[class.example-floating]': 'shouldLabelFloat',\r\n        '[id]': 'id',\r\n    }\r\n})\r\n\r\n\r\nexport class MyTimeInput\r\n    implements ControlValueAccessor, MatFormFieldControl<MyTime>, OnDestroy {\r\n    static nextId = 0;\r\n    @ViewChild('hora') horaInput: HTMLInputElement;\r\n    @ViewChild('minuto') minutoInput: HTMLInputElement;\r\n    //@ViewChild('ano') anoInput: HTMLInputElement;\r\n\r\n    parts: FormGroup;\r\n    stateChanges = new Subject<void>();\r\n    focused = false;\r\n    controlType = 'example-time-input';\r\n    id = `example-time-input-${MyTimeInput.nextId++}`;\r\n    onChange = (_: any) => { };\r\n    onTouched = () => { };\r\n\r\n    get empty() {\r\n        const {\r\n            value: { hora, minuto }\r\n        } = this.parts;\r\n\r\n        return !hora && !minuto;\r\n    }\r\n\r\n    get shouldLabelFloat() {\r\n        return this.focused || !this.empty;\r\n    }\r\n\r\n    @Input('aria-describedby') userAriaDescribedBy: string;\r\n\r\n    @Input()\r\n    get placeholder(): string {\r\n        return this._placeholder;\r\n    }\r\n    set placeholder(value: string) {\r\n        this._placeholder = value;\r\n        this.stateChanges.next();\r\n    }\r\n    private _placeholder: string;\r\n\r\n    @Input()\r\n    get required(): boolean {\r\n        return this._required;\r\n    }\r\n    set required(value: boolean) {\r\n        this._required = coerceBooleanProperty(value);\r\n        this.stateChanges.next();\r\n    }\r\n    private _required = false;\r\n\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._disabled;\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n        this._disabled ? this.parts.disable() : this.parts.enable();\r\n        this.stateChanges.next();\r\n    }\r\n    private _disabled = false;\r\n\r\n    @Input()\r\n    get value(): any | null {\r\n        if (this.parts.valid) {\r\n            let {\r\n                value: { hora, minuto }\r\n            } = this.parts;\r\n            \r\n            \r\n            let time = new MyTime(hora, minuto)\r\n            if(parseInt(time.hora) > 23){\r\n                let hour = 23\r\n                time.hora = hour.toString()\r\n                this.parts.get('hora').setValue(time.hora)\r\n            }\r\n\r\n            if(parseInt(time.minuto) > 59){\r\n                let minuto = 59\r\n                time.minuto = minuto.toString()\r\n                this.parts.get('minuto').setValue(time.minuto)\r\n            }\r\n\r\n            //console.log(parseInt(time.hora))\r\n\r\n            //this.parts = time\r\n\r\n            return `${time.hora}:${time.minuto}`;// time;//new MyDate(dia, mes, ano);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    sliceItem: string[] = new Array<string>()\r\n    set value(time: any | null) {\r\n        //const {hora,minuto};\r\n        let hora;\r\n        let minuto;\r\n\r\n        try {\r\n\r\n            const { hora, minuto } = time || new MyTime('', '');\r\n            this.parts.setValue({ hora, minuto });\r\n        } catch {\r\n\r\n            this.sliceItem = time.split(':')\r\n           // console.log(this.sliceItem[0])\r\n            hora = this.sliceItem[0]\r\n            minuto = this.sliceItem[1]\r\n            // if(parseInt(time.hora) > 23){\r\n            //     let hour = 23\r\n            //     time.hora = hour.toString()\r\n            // }\r\n            console.log(time)\r\n            this.parts.setValue({ hora, minuto });\r\n        }\r\n\r\n        this.stateChanges.next();\r\n    }\r\n\r\n    get errorState(): boolean {\r\n        return this.parts.invalid && this.parts.dirty;\r\n    }\r\n\r\n    constructor(\r\n        formBuilder: FormBuilder,\r\n        private _focusMonitor: FocusMonitor,\r\n        private _elementRef: ElementRef<HTMLElement>,\r\n        @Optional() @Inject(MAT_FORM_FIELD) public _formField: MatFormField,\r\n        @Optional() @Self() public ngControl: NgControl) {\r\n\r\n        this.parts = formBuilder.group({\r\n            hora: [\r\n                null,\r\n                [Validators.required, Validators.minLength(2), Validators.maxLength(2)]\r\n            ],\r\n            minuto: [\r\n                null,\r\n                [Validators.required, Validators.minLength(2), Validators.maxLength(2)]\r\n            ]\r\n            // ano: [\r\n            //     null,\r\n            //     [Validators.required, Validators.minLength(4), Validators.maxLength(4)]\r\n            // ]\r\n        });\r\n\r\n        _focusMonitor.monitor(_elementRef, true).subscribe(origin => {\r\n            if (this.focused && !origin) {\r\n                this.onTouched();\r\n            }\r\n            this.focused = !!origin;\r\n            this.stateChanges.next();\r\n        });\r\n\r\n        if (this.ngControl != null) {\r\n            this.ngControl.valueAccessor = this;\r\n        }\r\n    }\r\n\r\n    autoFocusNext(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n        if (!control.errors && nextElement) {\r\n            this._focusMonitor.focusVia(nextElement, 'program');\r\n        }\r\n    }\r\n\r\n    autoFocusPrev(control: AbstractControl, prevElement: HTMLInputElement): void {\r\n        if (control.value.length < 1) {\r\n            this._focusMonitor.focusVia(prevElement, 'program');\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.stateChanges.complete();\r\n        this._focusMonitor.stopMonitoring(this._elementRef);\r\n    }\r\n\r\n    setDescribedByIds(ids: string[]) {\r\n        const controlElement = this._elementRef.nativeElement\r\n            .querySelector('.example-time-input-container')!;\r\n        controlElement.setAttribute('aria-describedby', ids.join(' '));\r\n    }\r\n\r\n    onContainerClick() {\r\n        if (this.parts.controls.minuto.valid) {\r\n            this._focusMonitor.focusVia(this.minutoInput, 'program');\r\n        } else if (this.parts.controls.hora.valid) {\r\n            this._focusMonitor.focusVia(this.minutoInput, 'program');\r\n        } else {\r\n            this._focusMonitor.focusVia(this.horaInput, 'program');\r\n        }\r\n    }\r\n\r\n    writeValue(date: MyTime | null): void {\r\n        this.value = date;\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    _handleInput(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n        this.autoFocusNext(control, nextElement);\r\n        this.onChange(this.value);\r\n    }\r\n\r\n    static ngAcceptInputType_disabled: BooleanInput;\r\n    static ngAcceptInputType_required: BooleanInput;\r\n}\r\n\r\n\r\n/**  Copyright 2021 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","<div role=\"group\" class=\"example-time-input-container\"\r\n     [formGroup]=\"parts\"\r\n     style=\"padding: 0px;\"\r\n     [attr.aria-labelledby]=\"_formField?.getLabelId()\">\r\n  <input style=\"\"\r\n         class=\"example-time-input-element\"\r\n         formControlName=\"hora\" size=\"2\"\r\n         maxLength=\"2\"\r\n         \r\n         aria-label=\"hora code\"\r\n         (input)=\"_handleInput(parts.controls.hora, minuto)\"\r\n         #hora>\r\n  <span class=\"example-time-input-spacer\">:</span>\r\n  <input style=\" \"\r\n         class=\"example-time-input-element\"\r\n         formControlName=\"minuto\"\r\n         maxLength=\"2\"\r\n         size=\"2\"\r\n         aria-label=\"minuto code\"\r\n         (input)=\"_handleInput(parts.controls.minuto)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.minuto, hora)\"\r\n         #minuto>\r\n  <!-- <span class=\"example-tel-input-spacer\">&ndash;</span>\r\n  <input class=\"example-tel-input-element\"\r\n         formControlName=\"subscriber\"\r\n         maxLength=\"4\"\r\n         size=\"4\"\r\n         aria-label=\"Subscriber number\"\r\n         (input)=\"_handleInput(parts.controls.subscriber)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.subscriber, exchange)\"\r\n         #subscriber> -->\r\n</div>","export class ListaPresencaDto {\r\n    constructor(\r\n        public nome?: string,\r\n        public id?: number,\r\n        public calendarioId?: number,\r\n        public isPresent?: boolean,\r\n        public isPresentToString?: string,\r\n        public alunoId?: number,\r\n    ) { }\r\n}\r\n\r\nexport class InfoDia {\r\n    constructor(\r\n        public id?: number,\r\n        public diaAula?: Date,\r\n        public titulo?: string,\r\n        public descricao?: string,\r\n        public nome?: string) {\r\n\r\n    }\r\n}","export class CepReturn {\r\n\r\n    constructor(\r\n        //public cep?: string,\r\n        public logradouro: string = null,\r\n        //public complemento?: string,\r\n        public bairro: string = null,\r\n        public localidade: string= null,\r\n        public uf: string= null\r\n        ) { }\r\n\r\n}","\r\n    //#region /Bolas\r\n\r\n\r\n    //#endregion\r\n\r\n\r\n    //#region /Calendario\r\n\r\n\r\n    //#endregion\r\n\r\n    //#region /Colaboradores\r\n\r\n\r\n    //#endregion\r\n\r\n\r\n    //#region /Configuracoes\r\n\r\n\r\n    //#endregion\r\n\r\n    //#region /Contratos\r\n\r\n\r\n    //#endregion\r\n\r\n    //#region /MessageModal\r\n\r\n\r\n    //#endregion\r\n\r\n    //#region /Modulos\r\n\r\n\r\n    //#endregion\r\n\r\n    //#region /PlanoPgm\r\n\r\n\r\n    //#endregion\r\n\r\n    //#region /Produtos\r\n\r\n\r\n    //#endregion\r\n\r\n    //#region /Professores\r\n\r\n\r\n    //#endregion\r\n\r\n    //#region /Turmas\r\n\r\n\r\n    //#endregion\r\n\r\n    //#region /Unidades\r\n\r\n\r\n    //#endregion\r\n\r\n\r\n    //#region /Usuarios\r\n\r\n\r\n    //#endregion\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Bolas\r\nexport function CreateBolsaModalConfig(usuario?: any) {\r\n    return {\r\n        width: '600px',\r\n        data: { usuario: usuario },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function EditBolsaModalConfig(bolsaId?: any) {\r\n    return {\r\n        width: '600px',\r\n        data: { bolsaId: bolsaId },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function ShowSenhaModalConfig(senha?: any) {\r\n    return {\r\n        height: '100px',\r\n        width: '130px',\r\n        data: { senha: senha },\r\n    }\r\n}\r\n\r\n// Calendario\r\n\r\n\r\n// Colaboradores\r\nexport function EditColaboradorModalConfig(data) {\r\n    return {\r\n        //minHeight: '420',\r\n        width: '710px',\r\n        data: { colaborador: data },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function CreateColaboradorModalConfig(data?: any) {\r\n    return {\r\n        //height:'570px',\r\n        width: '710px',\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\n// Configuracoes\r\n\r\nexport function EditCargoModalConfig(value) {\r\n    return {\r\n        //minHeight: '420',\r\n        width: '700px',\r\n        data: { value: value },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\n// Contratos\r\n\r\n\r\n// MessageModal\r\n\r\n\r\n// Modulos\r\n\r\nexport function ModuloCreateComponentModal(data?: any) {\r\n    return {\r\n        width: '850px',\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function ModuloEditComponentModal(data?: any) {\r\n    return {\r\n        width: '850px',\r\n        data: { moduloId: data },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function ModuloDetalheComponentModal(modulo?: any) {\r\n    return {\r\n        width: '850px',\r\n        data: { modulo: modulo },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\n// PlanoPgm\r\n\r\n\r\n// Produtos\r\n\r\n\r\n// Professores\r\n\r\nexport function CreateProfessorModalConfig() {\r\n    return {\r\n        height:'620px',\r\n        width: '680px',\r\n        //maxHeight: '90vh',\r\n        //maxWidth: '450vh',\r\n        //data: { prof: prof },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n\r\n    // const dialogRef = this._modal\r\n    //     .open(CreateProfessorComponent, {\r\n    //         minHeight: '420px',\r\n    //         width: '680px',\r\n\r\n    //         //data: { Hello: \"Hello World\" },\r\n    //         hasBackdrop: true,\r\n    //         disableClose: true\r\n    //     });\r\n\r\n\r\n    // dialogRef.afterClosed().subscribe((data) => {\r\n    //     if (data.clicked === \"Ok\") {\r\n    //         // Reset form here\r\n    //         console.log('afte close ok')\r\n    //         this.getColaboradores(1, this.pageSize);\r\n    //     } else if (data.clicked === \"Cancel\") {\r\n    //         // Do nothing. Cancel any events that navigate away from the\r\n    //         // component.\r\n    //     }\r\n    // });\r\n}\r\n\r\nexport function ProfCalendarioModalConfig(prof?: any) {\r\n    return {\r\n        height:'auto',\r\n        width: '1230px',\r\n        maxHeight: '90vh',\r\n        maxWidth: '450vh',\r\n        data: { prof: prof },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function ProfRelatorioModalConfig(prof?: any) {\r\n    return {\r\n        //height:'570px',\r\n        width: '710px',\r\n        data: { prof: prof},\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function ProfEditModalConfig(prof?: any) {\r\n    return {\r\n        //height: '520px',\r\n        width: '680px',\r\n        data: { prof: prof},\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\n\r\n\r\n// Relatorios\r\n\r\n// RelatoriosAdm\r\n\r\n//turmas\r\n\r\n\r\nexport function OpenTurmaEditmodel(turma?) {\r\n    return {\r\n        width: '1030px',\r\n        data: { turma: turma },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\n// Unidades\r\n\r\n//Usuarios\r\n\r\nexport function EditAcessoModal(usuario?: any) {\r\n    return {\r\n        width: '600px',\r\n        data: { usuario: usuario },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { HttpClient, HttpEvent, HttpEventType, HttpRequest } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { InfoDia, ListaPresencaDto } from \"../../Pedag-Models/infodia.model\";\r\n\r\n\r\n@Component({\r\n    selector: 'analisedocmodal-app',\r\n    templateUrl: './analise-docmodal.component.html',\r\n    styleUrls: ['./analise-docmodal.component.scss'],\r\n    animations: [HighlightTrigger]\r\n\r\n})\r\n\r\nexport class AnaliseDocModalComponent implements OnInit {\r\n\r\n    private _baseUrl = environment.baseUrl\r\n    public listaPresencaDto: ListaPresencaDto[] = new Array<ListaPresencaDto>();\r\n    public infoDia: InfoDia = new InfoDia();\r\n    // public saveCommand: SavePresencaCommand = new SavePresencaCommand();\r\n    public observacoes: string = \"\";\r\n    public obsForm: FormGroup;\r\n    public diaAulaString: any\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog,\r\n        public _dialogRef: MatDialogRef<AnaliseDocModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.obsForm = this._fb.group({\r\n            observacoes: ['', [Validators.required]]\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log(this.data['aluno'])\r\n        this.GetDocsInfo(this.data['aluno'].id)\r\n        //  this.getPresencaViewModel(this.data['turma'].id);\r\n    }\r\n\r\n    docsEnviados: any[] = new Array<any>()\r\n    docsPendentes: any[] = new Array<any>()\r\n    private GetDocsInfo(alunoId) {\r\n\r\n        this._http.get(`${this._baseUrl}/pedag/docs-relatorio/${alunoId}`)\r\n            .subscribe(response => {\r\n                this.docsEnviados = response['docsEnviados']\r\n                this.docsPendentes = response['docsPendentes']\r\n            }, (error) => { console.log(error) },\r\n                () => {\r\n\r\n                })\r\n    }\r\n\r\n    baixarArquivo(doc) {\r\n\r\n        var file = doc.nome//\"Modelo LEAD.xlsx\";// this.createFileName(\"EXCEL\");\r\n        // this.showSpinner = true;\r\n        // this.testehabilitar = false\r\n\r\n        this.download(doc.id).subscribe(data => {\r\n            //console.log(data)\r\n            switch (data.type) {\r\n                case HttpEventType.Response:\r\n                    // this.showSpinner = false;\r\n                    //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n                    const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n                    const a = document.createElement('a');\r\n                    a.setAttribute('style', 'display:none;');\r\n                    document.body.appendChild(a);\r\n                    a.download = file;\r\n                    a.href = URL.createObjectURL(downloadedFile);\r\n                    a.target = '_blank';\r\n                    a.click();\r\n                    document.body.removeChild(a);\r\n                    break;\r\n            }\r\n        },\r\n            (err) => {\r\n                //this.showSpinner = false;\r\n                //this.testehabilitar = true;\r\n            },\r\n            () => {\r\n                //this.showSpinner = false;\r\n                // this.testehabilitar = true;\r\n            }\r\n        );\r\n    }\r\n\r\n    public download(docId: number): Observable<HttpEvent<Blob>> {\r\n        return this._http.request(new HttpRequest(\r\n            'GET', `${this._baseUrl}/document/aluno-docs/?alunoid=0&docid=${docId}`, null, {\r\n            reportProgress: true,\r\n            responseType: 'blob'\r\n        }));\r\n    }\r\n\r\n    aprovar(doc, aprovar) {\r\n\r\n        this._http.put(`${this._baseUrl}/pedag/doc-analisar/${doc.id}/${aprovar}`, {})\r\n            .subscribe(resp => { },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                    this.GetDocsInfo(this.data['aluno'].id)\r\n                })\r\n    }\r\n\r\n    // reprovar(doc){\r\n    //     var param = { alunoId: aluno.id, docId: doc.docId, validado: false }\r\n    //     this._http.put(`${this.baseUrl}/estagios`, param, {\r\n\r\n    //     }).subscribe(resp => { },\r\n    //         (error) => { console.log(error) },\r\n    //         () => {\r\n\r\n    //             var index1 = this.docsViewModel.findIndex(a => a.id == aluno.id)\r\n    //             var index2 = this.docsViewModel[index1].documentos.findIndex(a => a.docId == doc.docId)\r\n    //             this.docsViewModel[index1].documentos[index2].analisado = true\r\n    //             this.docsViewModel[index1].documentos[index2].validado = false\r\n\r\n    //         })\r\n    // }\r\n\r\n}\r\n\r\n","<div style=\"font-size: 1.2em;\">Documentos\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n<!-- <div>{{this.data['turma'].descricao}} - Turma {{this.data['turma'].identificador}} | {{infoDia.titulo}}</div> -->\r\n<hr>\r\n<div style=\"position: relative;\">\r\n\r\n    <!-- <div>\r\n        CPF-aluno.jpeg 38K 22/09/2021\r\n    </div> -->\r\n\r\n\r\n    <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n        <table *ngIf=\"docsEnviados.length > 0\" color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n            <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n            <thead>\r\n                <!-- <tr>\r\n                <th style=\"width: 2%; \r\n            text-align:left; \r\n            vertical-align: middle;\r\n            border-top: 0px;\"></th>\r\n\r\n\r\n                <th style=\"width: 40%;font-size:1em;\r\n            vertical-align: middle; \r\n            text-align:left;\r\n             border-top: 0px; font-weight: 400;\">Nome</th>\r\n\r\n                <th style=\"width: 29%;font-size:1em;\r\n            vertical-align: middle;\r\n            text-align:center;\r\n            border-top: 0px; font-weight: 400;\">E-mail</th>\r\n\r\n                <th style=\"width: 29%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">CPF</th>\r\n\r\n               \r\n            </tr> -->\r\n            </thead>\r\n            <tbody>\r\n\r\n                <tr *ngFor=\"let doc of docsEnviados;let i = index;\" style=\"height: 30px;\">\r\n                    <td style=\"width: 2%; font-size:0.9em;text-align:center;vertical-align: middle;\">\r\n                        {{ i + 1}}\r\n                    </td>\r\n\r\n                    <td style=\"width: 30%;font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"baixar arquivo\"\r\n                            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                            <button type=\"button\" mat-icon-button (click)=\"baixarArquivo(doc)\">\r\n                                <mat-icon style=\"font-size: 1em;\">description</mat-icon>\r\n                            </button>\r\n                        </i>\r\n                        {{doc.nome}}\r\n                    </td>\r\n                    <td style=\"width: 23%;font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                        <span *ngIf=\"doc.analisado;else analisar\">\r\n\r\n                            <mat-icon [style.color]=\"doc.validado? 'green':'red'\" style=\"vertical-align: middle; \r\n                            margin: 0px;color: green; margin-bottom: 5px;\" \r\n                            #tooltip=\"matTooltip\" [matTooltip]=\"doc.validado? 'aprovado' : 'reprovado'\"\r\n                            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\"\r\n                            >\r\n                                {{doc.validado? 'done' : 'close'}}\r\n                            </mat-icon>\r\n\r\n\r\n                        </span>\r\n\r\n                        <ng-template #analisar>\r\n                            <button style=\"\" class=\"analisar\" mat-button [matMenuTriggerFor]=\"menu\">\r\n                                analisar\r\n                            </button>\r\n                            <mat-menu #menu=\"matMenu\">\r\n                                <button (click)=\"aprovar(doc,true)\" mat-menu-item>\r\n                                    <mat-icon style=\"vertical-align: middle; \r\n                            margin: 0px;color: green; margin-bottom: 5px;\">\r\n                                        done\r\n                                    </mat-icon>\r\n                                    aprovar\r\n                                </button>\r\n                                <button (click)=\"aprovar(doc,false)\" mat-menu-item>\r\n                                    <mat-icon style=\"vertical-align: middle; \r\n                            margin: 0px;color: red; margin-bottom: 5px;\">\r\n                                        close\r\n                                    </mat-icon>\r\n                                    reprovar\r\n                                </button>\r\n                            </mat-menu>\r\n                        </ng-template>\r\n                    </td>\r\n\r\n\r\n                    <td style=\"width: 8%;font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                        {{doc.tamanho}}K\r\n\r\n\r\n                    </td>\r\n\r\n                    <td style=\"width: 12%;font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                        {{ doc.dataCriacao | date:'dd/MM/yyyy' }}\r\n                    </td>\r\n\r\n                    <td style=\"width: 45%;font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                        {{ doc.comentario }}\r\n                    </td>\r\n\r\n\r\n                </tr>\r\n\r\n\r\n            </tbody>\r\n        </table>\r\n\r\n        <br>\r\n        <div *ngIf=\"docsPendentes.length > 0\">\r\n            <span style=\"margin-bottom: 20px; color:red;margin-left: 10px; font-size:0.9em;font-style: italic;\">Documentação ainda não enviada pelo aluno:</span>\r\n            <br>\r\n            <br>\r\n            <ul *ngFor=\"let doc of docsPendentes\">\r\n                <li style=\"font-size:0.9em;\">{{ doc.descricao }} - {{ doc.comentario }}</li>\r\n            </ul>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Turma, TurmaViewModel } from \"src/app/_shared/models/Turma.model\";\r\n\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: \"reposicoes-app\",\r\n    templateUrl: './reposicoes.component.html',\r\n    styleUrls: ['./reposicoes.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ReposicoesComponent implements OnInit {\r\n\r\n    pageSize: number = 5;\r\n    pageEvent: PageEvent;\r\n    pageIndexNumber: number = 0;\r\n    cursos: Turma[] = new Array<Turma>();\r\n    baseUrl = environment.baseUrl;\r\n    turmas: TurmaViewModel[] = new Array<TurmaViewModel>()\r\n    // colaboradores: Colaborador[] = new Array<Colaborador>();\r\n    currentPage = 1\r\n\r\n    showTurmas = false\r\n    showMessage = false\r\n    showSpinner = false\r\n    mensagem: string;\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private _modal: MatDialog\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        console.log('init colaboradores 123')\r\n        this.getCursos();\r\n    }\r\n\r\n    // iniciarTurma(turmaId): void {\r\n    //     //console.log(item)\r\n    //     const dialogRef = this._modal\r\n    //         .open(ConfirmarIniciarTurmaModal, {\r\n    //             height: 'auto',\r\n    //             width: '500px',\r\n    //             autoFocus: false,\r\n    //             //maxHeight: '90vh',\r\n    //             //maxWidth: '400vh',\r\n\r\n    //             data: { turma: turmaId },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n    //         if (result.clicked === \"Sim\") {\r\n\r\n    //             console.log(turmaId)\r\n    //             this.http.put(`${this.baseUrl}/turmas/turma/${turmaId}`, {\r\n\r\n    //             }).subscribe(result => {\r\n\r\n    //             },\r\n    //                 (error) => { console.log(error) },\r\n    //                 () => {\r\n    //                     this.atualizar();\r\n    //                 }\r\n    //             )\r\n\r\n    //         } else {\r\n    //             console.log('nao')\r\n    //         }\r\n\r\n    //     });\r\n    // }\r\n\r\n    PodeAdiar(turma: TurmaViewModel) {\r\n        if (turma.statusDaTurma == 'Aguardando início' &&\r\n            turma.previsao != '3ª previsão') {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    adiar(turmaId: number) {\r\n        console.log('adiar')\r\n\r\n        this.http.put(`${this.baseUrl}/turmas/turma/adiar/${turmaId}`, {}).subscribe(response => {\r\n\r\n        },\r\n            (error) => { console.log(error) },\r\n            () => {\r\n                this.atualizar();\r\n            }\r\n        )\r\n    }\r\n\r\n    atualizar() {\r\n        var itemsPerPage = 0;\r\n        var actualPage = 0;\r\n\r\n        this.http.get(`${this.baseUrl}/turmas/?itemsPerPage=` + itemsPerPage + `&currentPage=` + actualPage, {\r\n            //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bear \"\r\n            })\r\n        }).subscribe(response => {\r\n\r\n\r\n            console.log(response)\r\n            Object.assign(this.turmas, response['data'])\r\n            Object.assign(this.turmas, response)\r\n            console.log(this.turmas)\r\n\r\n        }, (err) => {\r\n            console.log(err)\r\n            this.mensagem = \"Ocorreu um erro! Contate o Administrador!\"\r\n\r\n        },\r\n            () => {\r\n\r\n\r\n            });\r\n    }\r\n\r\n    getCursos() {\r\n\r\n        var itemsPerPage = 0;\r\n        var actualPage = 0\r\n\r\n\r\n        this.showTurmas = false\r\n        this.showMessage = false\r\n        this.showSpinner = true\r\n        console.log('get cursos 1234')\r\n        //this.http.get(`${this.baseUrl}/turmas/?itemsPerPage=` + itemsPerPage + `&currentPage=` + actualPage, {\r\n        //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n        this.http.get(`${this.baseUrl}/turmas`)\r\n            .subscribe(response => {\r\n\r\n\r\n                console.log(response)\r\n                //Object.assign(this.turmas, response['data'])\r\n                Object.assign(this.turmas, response)\r\n                console.log(this.turmas)\r\n                // this.colaboradores = Object.assign([], response['data'])\r\n                //console.log(this.colaboradores)\r\n                // this.dialogRef.close();\r\n            }, (err) => {\r\n                console.log(err)\r\n                this.mensagem = \"Ocorreu um erro! Contate o Administrador!\"\r\n\r\n            },\r\n                () => {\r\n\r\n                    if (this.turmas.length == 0) {\r\n                        this.mensagem = \"Não há turmas cadastradas ou em andamento.\"\r\n                        this.showTurmas = false\r\n                        this.showMessage = true\r\n                        this.showSpinner = false\r\n                    } else {\r\n                        this.showTurmas = true\r\n                        this.showMessage = false\r\n                        this.showSpinner = false\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    createCurso() {\r\n\r\n    }\r\n\r\n    // openCreateCursoModal(): void {\r\n    //     const dialogRef = this._modal\r\n    //         .open(CreateCursoComponent, {\r\n    //             height: 'auto',\r\n    //             width: '920px',\r\n    //             autoFocus: false,\r\n    //             maxHeight: '90vh',\r\n    //             //maxWidth: '400vh',\r\n\r\n    //             data: { Hello: \"Hello World\" },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n    //     // dialogRef.afterClosed().subscribe(result => {\r\n    //     //     console.log('The dialog was closed');\r\n    //     //     // this.animal = result;\r\n    //     // });\r\n\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n    //         if (result.clicked === \"OK\") {\r\n    //             this.getCursos();\r\n    //             console.log('afte close ok')\r\n    //         }\r\n\r\n    //     });\r\n    // }\r\n\r\n    // openCalendarioModal(): void {\r\n    //     const dialogRef = this._modal\r\n    //         .open(CalendarioModalComponent, {\r\n    //             height: 'auto',\r\n    //             width: '1030px',\r\n    //             autoFocus: false,\r\n    //             maxHeight: '90vh',\r\n    //             maxWidth: '400vh',\r\n\r\n    //             data: { Hello: \"Hello World\" },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n    //     // dialogRef.afterClosed().subscribe(result => {\r\n    //     //     console.log('The dialog was closed');\r\n    //     //     // this.animal = result;\r\n    //     // });\r\n\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n    //         if (result.clicked === \"OK\") {\r\n    //             // this.getCursos(1, this.pageSize);\r\n    //             console.log('afte close ok')\r\n    //         }\r\n\r\n    //     });\r\n    // }\r\n\r\n    // openEditCursoModal(item: Turma): void {\r\n    //     //console.log(item)\r\n    //     const dialogRef = this._modal\r\n    //         .open(EditCursoComponent, {\r\n    //             height: 'auto',\r\n    //             width: '1030px',\r\n    //             autoFocus: false,\r\n    //             maxHeight: '90vh',\r\n    //             maxWidth: '400vh',\r\n\r\n    //             data: { turma: item },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n    //     // dialogRef.afterClosed().subscribe(result => {\r\n    //     //     console.log('The dialog was closed');\r\n    //     //     // this.animal = result;\r\n    //     // });\r\n\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n    //         //console.log('The dialog was closed');\r\n    //         // console.log(result);\r\n    //         // console.log(this.templateTasks);\r\n    //         //console.log(this.templateTasks);\r\n    //         //this.newtasks. = this.templateTasks\r\n    //         // this.templateTasks = result;\r\n    //     });\r\n    // }\r\n\r\n\r\n\r\n}\r\n","<div class=\"container\" style=\"width: 95%;\">\r\n   \r\n  \r\n\r\n    <span>\r\n        <i style=\"margin-left: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"criar turma\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\" >\r\n            <!-- <button style=\"\"  mat-icon-button> -->\r\n            <mat-icon type=\"button\" style=\"font-size: 2em;\">post_add</mat-icon>\r\n            <!-- </button> -->\r\n        </i>\r\n    </span>\r\n    <br>  \r\n\r\n    <!-- <div @rowHighlight *ngIf=\"showMessage\" class=\"card-header \" style=\"background-color: rgb(227, 240, 227);\r\n    margin-top: 50px;\r\n    margin-left: 10px;\r\n    width: 350px; \r\n    font-size: 0.9em;box-shadow: 0 0 0.5em rgb(172, 170, 170);\" unselectable=\"on\" onselectstart=\"return false;\">\r\n        {{mensagem}}\r\n    </div> -->\r\n\r\n\r\n    <div  @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n    margin-top: 10px;\r\n    box-shadow: 0 0 1em rgb(172, 170, 170);\r\n    background-color: rgb(227, 240, 227);\">\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.2em; font-weight: 400;\">\r\n                Turmas (TODO? Unidade Campo Grande)</h4>\r\n            <p class=\"card-category\"> </p>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: auto;position: relative;\">\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n                    <thead>\r\n                        <tr>\r\n                            <!-- <th style=\"width: 2%; \r\n                            text-align:left; \r\n                            vertical-align: middle;\r\n                            border-top: 0px;\"></th>\r\n\r\n\r\n                            <th style=\"width: 26%;font-size:1em;\r\n                            vertical-align: middle; \r\n                            text-align:left;\r\n                             border-top: 0px; font-weight: 400;\">Turma/Descrição</th>\r\n\r\n                            <th style=\"width: 12%;font-size:1em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">Início</th>\r\n\r\n                            <th style=\"width: 8%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">Vagas</th>\r\n\r\n                            <th style=\"width: 12%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">Matriculados</th>\r\n\r\n                            <th style=\"width: 13%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">Status</th>\r\n\r\n                            <th style=\"width: 27%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">\r\n\r\n                            </th> -->\r\n                           \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr>\r\n                            <!-- <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                                {{item.descricao}}<br>{{item.identificador}}</td>\r\n\r\n                            <td  @rowHighlight style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                                {{item.previsaoAtual | date:\"dd/MM/yy\"}}<br>\r\n                                <span @rowHighlight style=\"font-size: 0.8em;color: red;\">\r\n                                    {{item.previsao}}\r\n                                </span>\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">{{item.vagas}}</td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">{{item.totalAlunos}}\r\n                                \r\n                            </td>\r\n                            <td @rowHighlight style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">{{item.statusDaTurma}}</td>\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"calendário\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openCalendarioModal()\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>description</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                             \r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"adiar a tumra para a próxima previsão\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"PodeAdiar(item)\"\r\n                                        (click)=\"adiar(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon style=\"font-size: 1.5em;\" class=\"material-icons-outlined\">watch_later\r\n                                        </mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"iniciar as aulas\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"item.statusDaTurma != 'Aguardando início' ? true : false\"\r\n                                        (click)=\"iniciarTurma(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon style=\"font-size: 1.5em;font-weight: 200;\"\r\n                                            class=\"material-icons-outlined\">play_arrow</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"detalhes/editar\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openEditCursoModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n                            </td>                             -->\r\n                        </tr>                        \r\n                    </tbody>\r\n                </table>\r\n            </div>            \r\n\r\n        </div>\r\n    </div>\r\n\r\n    <!-- <mat-spinner *ngIf=\"showSpinner\" @rowHighlight [diameter]=\"100\" style=\"\r\n            left: 43.5%;\r\n            top: 40%; \r\n            position: absolute;\">\r\n    </mat-spinner> -->\r\n\r\n\r\n</div>","import { Component, Inject, OnChanges, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n//import { GenericTask } from 'src/app/shared/models/generictask.model';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n//import { AdmService } from '../../adm.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Turma } from \"src/app/_shared/models/Turma.model\";\r\nimport { Sala } from \"src/app/Adm/adm-models/sala.model\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'pedagrelatoriomodal',\r\n    templateUrl: './pedagrelatorio.component.html'\r\n    //styleUrls: ['./pedagrelatorio.component.scss']\r\n})\r\n\r\nexport class PedagRelatorioComponent implements OnInit {\r\n\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n\r\n\r\n\r\n    // pageEvent: PageEvent;\r\n    baseUrl = environment.baseUrl;\r\n\r\n    editedColaborador: Colaborador = new Colaborador();\r\n    originalColaborador: Colaborador = new Colaborador();\r\n    unidades = Unidades;\r\n    showMensagem = false\r\n    mensagem = ''\r\n    cpf = ''\r\n\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    cargos = Cargos;\r\n    ativo = true;\r\n    constructor(\r\n        private _snackBar: MatSnackBar,\r\n        private http: HttpClient,\r\n    ) { }\r\n\r\n\r\n    //@Output() newItemEvent = new EventEmitter<string>();\r\n\r\n\r\n    ngOnInit() {\r\n        this.ativo = true;\r\n        //console.log(this.data['colaborador'])\r\n        // Object.assign(this.editedColaborador, this.data['colaborador'])\r\n        // this.cpf =  this.onInputChange(this.editedColaborador.cpf)\r\n        // console.log(\"on init\")\r\n        //this.getTasks(1, this.pageSize);\r\n    }\r\n\r\n\r\n\r\n    submitForm(form: NgForm) {\r\n        console.log(form.value)\r\n        console.log(this.editedColaborador)\r\n        if (form.valid) {\r\n            console.log('form valid')\r\n            /// const novoColaborador = JSON.stringify(form.value);\r\n            this.edit(JSON.stringify(this.editedColaborador))\r\n            // this.model.saveProduct(this.product);\r\n            // //this.product = new Product();\r\n            // //form.reset();\r\n            // this.originalProduct = this.product;\r\n            // this.router.navigateByUrl(\"/\");\r\n        }\r\n    }\r\n\r\n    relatorioSelected(relatorio: any) {\r\n        this.http.get(`${this.baseUrl}document/relatorios-pedagogico`)\r\n            .subscribe(resp => {\r\n\r\n            }, (error) => { console.log(error) })\r\n    }\r\n\r\n    edit(form: any) {\r\n        //const novoColaborador = JSON.stringify(form.value);\r\n        console.log(form)\r\n\r\n        //this.redi([\"./adm/colaboradores\"]);\r\n        this.http.put(`${this.baseUrl}/colaboradores`, form, {\r\n            //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bear \"\r\n            })\r\n        }).subscribe(response => {\r\n\r\n            console.log(response)\r\n\r\n\r\n\r\n        }, err => { console.log(err) },\r\n            () => {\r\n                this.openSnackBar()\r\n                // this.dialogRef.close();\r\n\r\n            });\r\n    }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Colaborador editado com sucesso.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n    isEqual = true\r\n    get formIsValid() {\r\n\r\n        if (JSON.stringify(this.editedColaborador) === JSON.stringify(this.originalColaborador)) {\r\n            this.isEqual = true\r\n        } else {\r\n            this.isEqual = false\r\n        }\r\n        return this.isEqual\r\n    }\r\n\r\n\r\n    consultaCEP(CEP: string) {\r\n        //console.log(CEP);\r\n\r\n        this.http.get(`https://viacep.com.br/ws/${CEP}/json/`)\r\n            .subscribe(response => {\r\n\r\n                console.log(\"success\")\r\n                this.cepReturn = new CepReturn(\r\n                    response[\"logradouro\"],\r\n                    response[\"bairro\"],\r\n                    response[\"localidade\"],\r\n                    response[\"uf\"]);\r\n                console.log(this.cepReturn)\r\n\r\n                this.editedColaborador.logradouro = this.cepReturn.logradouro;\r\n                this.editedColaborador.bairro = this.cepReturn.bairro\r\n                this.editedColaborador.cidade = this.cepReturn.localidade\r\n                this.editedColaborador.uf = this.cepReturn.uf\r\n\r\n                // this.colaboradorForm.get('logradouro').setValue(response[\"logradouro\"]);\r\n                // this.colaboradorForm.get('bairro').setValue(response[\"bairro\"]);\r\n                // this.colaboradorForm.get('cidade').setValue(response[\"localidade\"]);\r\n                // this.colaboradorForm.get('uf').setValue(response[\"uf\"]);\r\n                //this.bairro = this.cepReturn.bairro\r\n                // const token = (<any>response).accessToken;\r\n                // console.log(response)\r\n                // localStorage.setItem(\"jwt\", token);\r\n                // this.invalidLogin = false;\r\n                // this.router.navigate([\"/main\"]);\r\n            }, err => { console.log(\"erros\") },\r\n                () => { console.log('finaly') });\r\n    }\r\n\r\n    //calendarios\r\n\r\n    //showlivroDois = false\r\n    turmasA: Turma[] = new Array<Turma>()\r\n    salas: Sala[] = new Array<Sala>();\r\n    profs: Colaborador[] = new Array<Colaborador>();\r\n    paramSelected: string;\r\n    tur = false\r\n    sal = false\r\n    pro = false\r\n    getParam(param: string) {\r\n        this.tur = false\r\n        this.sal = false\r\n        this.pro = false\r\n        this.paramSelected = param;\r\n        this.http.get(`${this.baseUrl}/relatorios/calendario-busca/?parametro=${param}`)\r\n            .subscribe(resp => {\r\n                if (param == \"turma\") {\r\n                    this.turmasA = Object.assign([], resp)\r\n                    this.tur = true\r\n                    this.sal = false\r\n                    this.pro = false\r\n                    console.log(resp)\r\n                }\r\n                if (param == \"sala\") {\r\n                    this.salas = Object.assign([], resp)\r\n                    this.tur = false\r\n                    this.sal = true\r\n                    this.pro = false\r\n                    console.log(resp)\r\n                }\r\n                if (param == \"prof\") {\r\n                    this.profs = Object.assign([], resp)\r\n                    this.tur = false\r\n                    this.sal = false\r\n                    this.pro = true\r\n                    console.log(resp)\r\n                }\r\n            }, (error) => { console.log(error) \r\n                this.tur = false\r\n                this.sal = false\r\n                this.pro = false\r\n            },\r\n                () => {\r\n                   // this.showlivroDois = true\r\n                })\r\n    }\r\n\r\n    getCalendario(id: number) {\r\n\r\n        var file = `Calendario.xlsx`;\r\n\r\n        let url = `${this.baseUrl}/relatorios/calendario-relatorio/?parametro=${this.paramSelected}&id=${id}`\r\n        \r\n        this.download(id, url).subscribe(data => {\r\n\r\n            switch (data.type) {\r\n                case HttpEventType.Response:\r\n                    // this.showSpinner = false;\r\n                    //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n                    const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n                    const a = document.createElement('a');\r\n                    a.setAttribute('style', 'display:none;');\r\n                    document.body.appendChild(a);\r\n                    a.download = file;\r\n                    a.href = URL.createObjectURL(downloadedFile);\r\n                    a.target = '_blank';\r\n                    a.click();\r\n                    document.body.removeChild(a);\r\n                    break;\r\n            }\r\n        },\r\n            (err) => {\r\n                //this.showSpinner = false;\r\n                //this.testehabilitar = true;\r\n            },\r\n            () => {\r\n                //this.showSpinner = false;\r\n                // this.testehabilitar = true;\r\n                this.showlivroDois = false\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    /// LIVRO MATRICULAS\r\n    showlivroDois = false\r\n    turmas: Turma[] = new Array<Turma>()\r\n    getTurmas() {\r\n\r\n        this.http.get(`${this.baseUrl}/relatorios/livro-mat-turma-busca`)\r\n            .subscribe(resp => {\r\n                this.turmas = Object.assign([], resp)\r\n            }, (error) => { console.log(error) },\r\n                () => {\r\n                    this.showlivroDois = true\r\n                })\r\n    }\r\n\r\n\r\n\r\n    exportarCert(turmaId: number) {\r\n\r\n\r\n        var file = `Matricula.xlsx`;\r\n\r\n        let url = `${this.baseUrl}/relatorios/livro-mat-turma/${turmaId}`\r\n        this.download(turmaId, url).subscribe(data => {\r\n\r\n            switch (data.type) {\r\n                case HttpEventType.Response:\r\n                    // this.showSpinner = false;\r\n                    //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n                    const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n                    const a = document.createElement('a');\r\n                    a.setAttribute('style', 'display:none;');\r\n                    document.body.appendChild(a);\r\n                    a.download = file;\r\n                    a.href = URL.createObjectURL(downloadedFile);\r\n                    a.target = '_blank';\r\n                    a.click();\r\n                    document.body.removeChild(a);\r\n                    break;\r\n            }\r\n        },\r\n            (err) => {\r\n                //this.showSpinner = false;\r\n                //this.testehabilitar = true;\r\n            },\r\n            () => {\r\n                //this.showSpinner = false;\r\n                // this.testehabilitar = true;\r\n                this.showlivroDois = false\r\n            }\r\n        );\r\n    }\r\n\r\n    public download(turmaId: any, url?: string): Observable<HttpEvent<Blob>> {\r\n        return this.http.request(new HttpRequest(\r\n            'GET',\r\n            `${url}`,\r\n            null,\r\n            {\r\n                reportProgress: true,\r\n                responseType: 'blob'\r\n            }));\r\n    }\r\n\r\n\r\n    buscarTurmas() {\r\n\r\n    }\r\n\r\n}","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n    <br>\r\n\r\n    <span style=\"margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n        Relatórios:\r\n    </span>\r\n    <div class=\"form-row align-items-center divSiteForm\">\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"transform: scale(0.85);width: 150px;\">\r\n            <mat-label>Livro Matricula</mat-label>\r\n            <mat-select placeholder=\"\">\r\n                <mat-option (click)=\"getTurmas()\">livro matricula</mat-option>\r\n                <!-- <mat-option [value]=\"false\">Não</mat-option> -->\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field *ngIf=\"showlivroDois\" appearance=\"standard\"\r\n            style=\"transform: scale(0.85);width: 150px;margin-left: 5px;\">\r\n            <mat-label>Relatório</mat-label>\r\n            <mat-select placeholder=\"\">\r\n                <mat-option style=\"font-size: 0.8em;\" (click)=\"exportarCert(0)\">Todas</mat-option>\r\n                <mat-option style=\"font-size: 0.8em;\" (click)=\"exportarCert(item.id)\" *ngFor=\"let item of turmas\" [value]=\"item.id\">\r\n                    Turma {{item.identificador}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"transform: scale(0.85);width: 150px;\">\r\n\r\n            <mat-label>Calendário</mat-label>\r\n            <mat-select placeholder=\"\">\r\n                <!-- <mat-option style=\"font-size: 0.8em;\" (click)=\"getParam()\">Unidade</mat-option> -->\r\n                <mat-option style=\"font-size: 0.8em;\"></mat-option>\r\n                <mat-option style=\"font-size: 0.8em;\" (click)=\"getParam('turma')\">Turma</mat-option>\r\n                <mat-option style=\"font-size: 0.8em;\" (click)=\"getParam('sala')\">Sala</mat-option>\r\n                <mat-option style=\"font-size: 0.8em;\" (click)=\"getParam('prof')\">Professor</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <ng-container *ngIf=\"showlivroDois\">\r\n\r\n            <ng-container *ngIf=\"tur\">\r\n                <mat-form-field appearance=\"standard\" style=\"transform: scale(0.85);width: 150px;margin-left: 5px;\">\r\n                    <mat-label>Turma</mat-label>\r\n                    <mat-select placeholder=\"\">\r\n                        <mat-option style=\"font-size: 0.8em;\" (click)=\"getCalendario(0)\">Todas</mat-option>\r\n                        <mat-option style=\"font-size: 0.8em;\" (click)=\"getCalendario(item.id)\"\r\n                            *ngFor=\"let item of turmasA\" [value]=\"item.id\">\r\n                            Turma {{item.identificador}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"sal\">\r\n                <mat-form-field appearance=\"standard\" style=\"transform: scale(0.85);width: 150px;margin-left: 5px;\">\r\n                    <mat-label>Sala</mat-label>\r\n                    <mat-select placeholder=\"\">\r\n                        <mat-option style=\"font-size: 0.8em;\" (click)=\"getCalendario(0)\">Todas</mat-option>\r\n                        <mat-option style=\"font-size: 0.8em;\" (click)=\"getCalendario(item.id)\"\r\n                            *ngFor=\"let item of salas\" [value]=\"item.id\">\r\n                            {{item.descricao}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </ng-container>\r\n\r\n            <ng-container *ngIf=\"pro\">\r\n                <mat-form-field appearance=\"standard\" style=\"transform: scale(0.85);width: 250px;margin-left: 5px;\">\r\n                    <mat-label>Professor</mat-label>\r\n                    <mat-select placeholder=\"\">\r\n                        <mat-option style=\"font-size: 0.8em;\" (click)=\"getCalendario(0)\">Todas</mat-option>\r\n                        <mat-option style=\"font-size: 0.8em;\" (click)=\"getCalendario(item.id)\"\r\n                            *ngFor=\"let item of profs\" [value]=\"item.id\">\r\n                            Turma {{item.nome}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </ng-container>\r\n\r\n        </ng-container>\r\n    </div>\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\n@Component({\r\n    selector: 'cargoeditmodal',\r\n    templateUrl: './cargo-edit.component.html',\r\n    styleUrls: ['./cargo-edit.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class CargoEditComponent implements OnInit {\r\n\r\n\r\n    baseUrl = environment.baseUrl;\r\n\r\n    public initProgressBar = 'visible'\r\n    public showForm = false\r\n    private originalCargo: any\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public cargoForm: FormGroup\r\n    public progress = false\r\n    constructor(\r\n        private _helpers: HelpersService,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<CargoEditComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.cargoForm = _fb.group({\r\n            id:[''],\r\n            value: ['', [Validators.required]],\r\n            descricao: [''],\r\n            comentario: ['', [Validators.required]],\r\n            parametrosKeyId: ['']\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        console.log(this.data['value'])\r\n        this.GetCargo()\r\n\r\n    }\r\n\r\n    private GetCargo(){\r\n     \r\n        this._http.get(`${this.baseUrl}/parametro/get-value/${this.data['value'].id}`, {}) // get-value/{valueId}\r\n            .subscribe(response => {\r\n                //this.cargos = Object.assign([], response['values'])\r\n                this.cargoForm.patchValue(response['value']);\r\n                this.originalCargo = JSON.parse(JSON.stringify(this.cargoForm.value))\r\n\r\n\r\n            }, (err) => {\r\n                //console.log(err)\r\n                this.disabledSaveButton = 'hidden'\r\n                this.progress = false\r\n                this._helpers.openSnackBarErrorDefault()\r\n            },\r\n                () => {\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showForm = true\r\n                  //  this._helpers.openSnackBarSucesso(\"Cargo salvo com sucesso.\");\r\n                   // this.progress = false\r\n                  //  this.dialogRef.close({ clicked: true });\r\n                });\r\n    }\r\n\r\n\r\n    onSubmit(form: FormGroup) {\r\n\r\n        if (this.cargoForm.valid) {\r\n            this.disabledSaveButton = 'visible'\r\n            this.progress = true\r\n            this._http.put(`${this.baseUrl}/parametro/value`, this.cargoForm.value, {})\r\n                .subscribe(response => {\r\n\r\n                }, (err) => {\r\n                    //console.log(err)\r\n                    this.disabledSaveButton = 'hidden'\r\n                    this.progress = false\r\n                    this._helpers.openSnackBarErrorDefault()\r\n                },\r\n                    () => {\r\n                        this._helpers.openSnackBarSucesso(\"Cargo editado com sucesso.\");\r\n                        this.progress = false\r\n                        this.dialogRef.close({ clicked: true });\r\n                    });\r\n        }\r\n    }\r\n\r\n    disabledSaveButton = 'hidden'\r\n\r\n    get disabledButton() {\r\n        if (this.cargoForm.valid) {\r\n            return this.disabledSaveButton != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Editar cargo\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<div *ngIf=\"showForm\">\r\n\r\n    <hr>\r\n\r\n    <form novalidate [formGroup]=\"cargoForm\" (ngSubmit)=\"onSubmit(cargoForm)\">\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n            <mat-label>Nome</mat-label>\r\n            <input selected oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"value\" required name=\"nome\"\r\n                matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n      \r\n        <br>\r\n\r\n        <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n            <mat-label>Descrição do cargo</mat-label>\r\n            <textarea formControlName=\"comentario\" name=\"descricao\" matInput></textarea>\r\n        </mat-form-field>        \r\n\r\n        <mat-progress-bar [style.visibility]=\"disabledSaveButton\" @rowHighlight mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <span style=\"float: right;margin-top: 15px;\">\r\n\r\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"disabledButton\"\r\n                style=\"position: relative; float:right;margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n        </span>\r\n\r\n    </form>\r\n\r\n</div>","import { Component, Inject, Input, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'confirmnovamat',\r\n    templateUrl: './confirmnova.component.html'\r\n   //; styleUrls: ['./confirm.component.scss']\r\n})\r\n\r\nexport class ConfirmNovaMatriculaComponent implements OnInit {\r\n\r\n      constructor(\r\n        //private service: AdmService,\r\n        private CreateMatriculaModal: MatDialog,\r\n        private router: Router,\r\n        \r\n        public dialogRef: MatDialogRef<ConfirmNovaMatriculaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n       \r\n    }\r\n\r\n  \r\n\r\n    ngOnInit() {\r\n        // console.log(\"on init\")\r\n        //this.getTasks(1, this.pageSize);\r\n        //this.colaboradorForm.get('logradouro').disable()\r\n        \r\n    }\r\n\r\n\r\n    \r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n}","<div class=\"container\">\r\n\r\n    <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n        <!-- <mat-card class=\"example-card\">\r\n        <mat-card-header> -->\r\n        <!-- <div mat-card-avatar class=\"example-header-image\"></div> -->\r\n        <div style=\"font-size: 1.2em;\">Matrícula realizada com sucesso!</div>\r\n        <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\r\n  \r\n        <div >\r\n            Deseja imprimir o contrato?\r\n        </div>\r\n  \r\n    </div>\r\n    <div class=\"row\">\r\n        <button style=\"width: 30px;\" [mat-dialog-close]=\"{clicked:'Sim'}\" mat-button>SIM</button>\r\n        <button style=\"width: 30px;\" [mat-dialog-close]=\"{clicked:'Cancel'}\" mat-button>NÃO</button>\r\n    </div>\r\n  </div>","import { Injectable } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { makeStateKey } from \"@angular/platform-browser\";\r\n\r\nexport class Aluno {\r\n\r\n    constructor(\r\n        public id?: string,\r\n        public nome: string = null,\r\n        public nomeSocial?: string,\r\n        public cpf?: string,\r\n        public rg?: string,\r\n        public nascimento?: Date,\r\n        public naturalidade?: string,\r\n        public naturalidadeUF?: string,\r\n        public email?: string,\r\n        public telCelular?: string,\r\n        public telReferencia?: string,\r\n        public nomeContatoReferencia?: string,\r\n        public telWhatsapp?: string,\r\n        public telResidencial?: string,\r\n        public cep?: string,\r\n        public temRespFin?: boolean,\r\n        public temRespMenor?: boolean,\r\n        public logradouro: string = null,\r\n        public complemento?: string,\r\n        public cidade: string = null,\r\n        public uf: string = null,\r\n        public bairro: string = null,\r\n        public observacoes?: string\r\n        \r\n    ) {\r\n        \r\n\r\n    }\r\n\r\n    Maskx() {\r\n\r\n        // let area = this.telCelular.substring(1,2)\r\n        // let exchange = ''\r\n        // let subscriber = ''\r\n        // console.log(area + exchange + subscriber)\r\n        // return { area: 21, exchange: 9999, subscriber: 5555 }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface IValidateForms {\r\n    ValidarForms(aluno: FormGroup, respFin: FormGroup, respMenor: FormGroup, idade: Date)\r\n}\r\n\r\n@Injectable()\r\nexport class ValidateFormsService implements IValidateForms {\r\n\r\n    ValidarForms(aluno: FormGroup, respFin: FormGroup, respMenor: FormGroup, nascimento: Date) {\r\n        let dataTrans: DataTrans = new DataTrans()\r\n        let data: Date = new Date(nascimento);\r\n        let timeDiff = Math.abs(Date.now() - data.getTime());\r\n        let age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\r\n        console.log(age)\r\n        if (age > 18) {\r\n            //maior\r\n            if (!aluno.get('temRespFin').value as boolean) {\r\n                dataTrans.alunoDto = aluno.value\r\n                dataTrans.respAlunoDto = null\r\n                dataTrans.respMenorDto = null\r\n\r\n                return { isValid: aluno.valid, data: dataTrans }\r\n            } else {\r\n                dataTrans.alunoDto = aluno.value\r\n                dataTrans.respAlunoDto = respFin.value\r\n                dataTrans.respMenorDto = null\r\n\r\n                return { isValid: aluno.valid && respFin.valid, data: dataTrans };\r\n            }\r\n\r\n        } else {\r\n            //menor\r\n            if (respMenor.get('eRespFinanc').value as boolean) {\r\n                dataTrans.alunoDto = aluno.value\r\n                dataTrans.respAlunoDto = null\r\n                dataTrans.respMenorDto = respMenor.value\r\n                console.log('eRespFinanc')\r\n                return { isValid: aluno.valid && respMenor.valid, data: dataTrans }\r\n            } else {\r\n                dataTrans.alunoDto = aluno.value\r\n                dataTrans.respAlunoDto = respFin.value\r\n                dataTrans.respMenorDto = respMenor.value\r\n\r\n                return { isValid: aluno.valid && respFin.valid && respMenor.valid, data: dataTrans };\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport class DataTrans {\r\n    constructor(\r\n        public alunoDto?: Aluno,\r\n        public respAlunoDto?: Aluno,\r\n        public respMenorDto?: Aluno\r\n    ) { }\r\n}\r\n/*\r\nnao é menor: resp fin ou nao\r\nmenor: respMenor e/ou respFin\r\n\r\n*/","<div class=\"container\" style=\"width: 95%;padding-top: 20px;\">\r\n\r\n    <div>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pré-cadastro\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openMatriculaModal()\" mat-icon-button>\r\n                <mat-icon>person_add_alt</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <i style=\"margin-left: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"relatório de matrículas\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"OpenRelatorioMatricula()\" mat-icon-button>\r\n                <mat-icon>summarize</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n\r\n        <i *ngIf=\"mostrarEmLote\" style=\"margin-left: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"salvar em lote\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"SalvarEmLote()\" [disabled]=\"podeDesable\" mat-icon-button>\r\n                <mat-icon>summarize</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <i *ngIf=\"mostrarEmLote\" style=\"margin-left: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"deletar em lote\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"DeletarRegistroDaPlanilha()\" [disabled]=\"podeDesable\" mat-icon-button>\r\n                <mat-icon>summarize</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <i *ngIf=\"mostrarEmLote\" style=\"margin-left: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"matricular em lote\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"MatricularRegistroDaPlanilha()\" [disabled]=\"podeDesable\" mat-icon-button>\r\n                <mat-icon>summarize</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n    \r\n    <br>\r\n\r\n    <form [formGroup]=\"pesquisarForm\" (ngSubmit)=\"submitPesquisa()\" class=\"form-inline siteForm\">\r\n\r\n        <span >Digite ao menos um dos\r\n            campos para\r\n            pesquisar pelo aluno:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center\">\r\n\r\n            <mat-form-field appearance=\"standard\">\r\n                <mat-label>Nome</mat-label>\r\n                <input formControlName=\"nome\" selected matInput placeholder=\"digite o nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-label>E-mail</mat-label>\r\n                <input formControlName=\"email\" selected matInput placeholder=\"digite o E-mail\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field >\r\n                <mat-label>CPF</mat-label>\r\n                <input mask=\"000.000.000-00\" formControlName=\"cpf\" selected matInput placeholder=\"digite o CPF\">\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button type=\"submit\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n            <span >\r\n                incluir inativos:\r\n            </span>\r\n\r\n            <mat-checkbox formControlName=\"ativo\" color=\"primary\"></mat-checkbox>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n    <div class=\"card-header card-msg-response\" unselectable=\"on\"\r\n    *ngIf=\"showMessageNoColaborador\">{{mensagem}}</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" *ngIf=\"spinnerSearch\" @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n\r\n     <div *ngIf=\"alunos.length > 0\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n        margin-top: 10px;\r\n        box-shadow: 0 0 1em rgb(172, 170, 170);\r\n        background-color: rgb(227, 240, 227);\">\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Alunos</h4>\r\n                <p class=\"card-category\">{{length}} alunos localizados.</p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive table-aluno\" >\r\n                <table @rowHighlight color=\"primary\" class=\"table\">\r\n                   \r\n                    <thead>\r\n                        <tr>\r\n                            <th ></th>\r\n\r\n                            <th >NOME</th>\r\n\r\n                            <th >Nº MAT.</th>                          \r\n\r\n                            <th >CPF</th>\r\n\r\n                            <th >UNIDADE</th>\r\n\r\n                            <th >ATIVO</th>\r\n\r\n                            <th ></th>\r\n\r\n                           \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let item of alunos;let i = index;\"  @rowHighlight >\r\n                            <td style=\"text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                            <td style=\"text-align:center;vertical-align: middle;\">{{item.numeroMatricula || 'não matriculado'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.cpf}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.sigla}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.ativo ? 'sim' : 'não'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                                <ng-container *ngIf=\"item.numeroMatricula != null;else semMat\">\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"informações financeiras\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openInfoFinancModal(item)\" \r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>request_quote</mat-icon>\r\n                                        </button>\r\n\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"informações\"\r\n                                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openInfoModal(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>info</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"matricular aluno em um curso\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"matricular(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>read_more</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"boletim escolar\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openBoletimodal(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>school</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                </ng-container>\r\n\r\n                                <ng-template #semMat>\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"informações cadastrais\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"viewInfoCadastrais(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>search</mat-icon>\r\n                                        </button>\r\n\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"matricular aluno em um curso\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"matricular(item)\" [disabled]=\"!item.ativo\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>read_more</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n                                </ng-template>\r\n\r\n\r\n\r\n                            </td>\r\n\r\n                          \r\n                        </tr>\r\n\r\n\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n\r\n            <mat-paginator *ngIf=\"length > 5\" style=\"\r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" \r\n                \r\n                [length]=\"length\"\r\n                 [pageSize]=\"pageSize\" hidePageSize=\"true\"\r\n                (page)=\"pageEvent = submitPesquisa($event)\">\r\n            </mat-paginator>\r\n           \r\n\r\n        </div>\r\n    </div> \r\n</div>\r\n\r\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { Parametros } from \"src/app/Adm/colaboradores/colaboradores.component\";\r\nimport { BoletimAlunoComponent } from \"src/app/Pedagogico/Matricula/BoletimAluno/boletimaluno.component\";\r\nimport { InfoCadastraisComponent } from \"src/app/Pedagogico/Matricula/InfoCad/info-cadastrais.component\";\r\nimport { InfoFinancPedagComponent } from \"src/app/Pedagogico/Matricula/infoFinancas/infofinanc.component\";\r\nimport { InfosComponent } from \"src/app/Pedagogico/Matricula/informacoes/infos.component\";\r\nimport { AlunoMatriculaComponent } from \"src/app/Pedagogico/Matricula/matricula/alunomatricula.component\";\r\nimport { InfoFinancComponentModal, OpenInfoComponentModal } from \"src/app/Pedagogico/service/modal.config\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { ConfirmAcaoModalComponent } from \"src/app/_shared/components/ConfirmarAcao/confirm-acao.component\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { ConfirmAcaoModalConfig } from \"src/app/_shared/models/modal.config\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { OpenRelatorioMatriculaComponentModal } from \"../services/modal.config\";\r\nimport { NewMatriculaService } from \"../services/newmatricula.service\";\r\nimport { CreateNovaMatriculaComponent } from \"./CreateMatricula/createnovamatricula.component\";\r\nimport { RelatorioMatriculaComponent } from \"./Relatoriomatricula/relatoriomatricula.component\";\r\n\r\n\r\n@Component({\r\n    selector: \"novamatricula-app\",\r\n    templateUrl: './novamatricula.component.html',\r\n    styleUrls: ['./novamatricula.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class NovaMatriculaComponent implements OnInit {\r\n\r\n    showMessageNoAluno = false\r\n    length: number = 0\r\n    //mensagem: string = \"\";\r\n    // length: number;\r\n    pageSize: number = 5;\r\n    pageEvent: PageEvent;\r\n    pageIndexNumber: number = 0;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    // formSubmitted: boolean = false;\r\n    // showTable: boolean = false;\r\n    // paginationInfo: IPager;\r\n    // showMessage: boolean = false;\r\n    spinnerSearch = false\r\n    showMessageNoColaborador = false\r\n    params: Parametros = new Parametros()\r\n    alunos: any[] = new Array<any>();\r\n    currentPage = 1\r\n\r\n    public pesquisarForm: FormGroup\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    constructor(\r\n        //private _snackBar: MatSnackBar,\r\n        private _newMatService: NewMatriculaService,\r\n        private _modal: MatDialog,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient\r\n    ) {\r\n        this.pesquisarForm = _fb.group({\r\n            nome: ['', [Validators.required]],\r\n            email: ['', [Validators.required]],\r\n            cpf: ['', [Validators.required]],\r\n            ativo: [false],\r\n            todasUnidades: [false],\r\n        });\r\n\r\n        this.pesquisarForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n                // console.log('form changed to:', form);\r\n                if (this.pesquisarForm.get('nome').value == '' &&\r\n                    this.pesquisarForm.get('email').value == '' &&\r\n                    this.pesquisarForm.get('cpf').value == '') {\r\n                    //  console.log('false valid')\r\n\r\n                    this.pesquisarForm.controls['nome'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['email'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['cpf'].setErrors({ required: true });\r\n                    // this.pesquisarForm.setErrors({required: true});\r\n                } else {\r\n                    //   console.log('true valid')\r\n                    this.pesquisarForm.controls['nome'].setErrors(null);\r\n\r\n                    this.pesquisarForm.controls['email'].setErrors(null)\r\n\r\n                    this.pesquisarForm.controls['cpf'].setErrors(null);\r\n\r\n                    //this.pesquisarForm.setErrors({required: false});\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n        );\r\n\r\n    }\r\n\r\n    podeDesable = false\r\n    get mostrarEmLote() {\r\n        return this.tokenInfo.role == 'SuperAdm'\r\n    }\r\n    public SalvarEmLote(): void {\r\n        const dialogRef = this._modal\r\n            .open(ConfirmAcaoModalComponent, ConfirmAcaoModalConfig());\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked == true) {\r\n                this.podeDesable = true\r\n                this._http.get(`https://localhost:5001/api/teste/readexcelalunos`)\r\n                    .subscribe(\r\n                        resp => { this.podeDesable = false },\r\n                        error => { this.podeDesable = false }\r\n                    )\r\n            }\r\n        });\r\n    }\r\n\r\n    public DeletarRegistroDaPlanilha(): void {\r\n        const dialogRef = this._modal\r\n            .open(ConfirmAcaoModalComponent, ConfirmAcaoModalConfig());\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked == true) {\r\n                this.podeDesable = true\r\n                this._http.get(`https://localhost:5001/api/teste/delete-registros`)\r\n                    .subscribe(\r\n                        resp => { this.podeDesable = false },\r\n                        error => { this.podeDesable = false }\r\n                    )\r\n            }\r\n        });\r\n    }\r\n\r\n    public MatricularRegistroDaPlanilha(): void {\r\n        const dialogRef = this._modal\r\n            .open(ConfirmAcaoModalComponent, ConfirmAcaoModalConfig());\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked == true) {\r\n                this.podeDesable = true\r\n                this._http.get(`https://localhost:5001/api/teste/matricular-registros`)\r\n                    .subscribe(\r\n                        resp => { this.RespMats(resp) },\r\n                        error => { this.podeDesable = false }\r\n                    )\r\n            }\r\n        });\r\n    }\r\n\r\n    one = new Promise<string>((resolve, reject) => { });\r\n    listaCpfs: any[] = new Array<any>()\r\n    RespMats(resp) {\r\n        let commands = resp['commands']\r\n\r\n        // this.one.then(value => {\r\n        //     console.log('resolved', value);\r\n        //   });\r\n\r\n        // cpf.forEach(async element => {    \r\n        //    this.MatricularFinal(element)\r\n\r\n        // });\r\n        this.MatricularFinal(commands)\r\n    }\r\n\r\n    // funcao(CPFs) {\r\n    //     let fit = Object.assign([], CPFs)\r\n    //     console.log(fit)\r\n    //     const jarOfPromises =[];\r\n    //     fit.forEach(Module => {\r\n    //     jarOfPromises.push(\r\n    //       this._http.get(`https://localhost:5001/api/teste/matricular-final-registros/${Module}`)\r\n    //       .toPromise())\r\n    //     });\r\n\r\n    //     Promise.all(jarOfPromises).then(results=>{\r\n    //         console.log(results)\r\n    //     /** your code **/\r\n    //     });\r\n    // }\r\n\r\n    index = 0\r\n    totalItens = 0\r\n    commands: any[] = new Array<any>()\r\n    public async MatricularFinal(command?, item?: any) { // matricular-registros\r\n        console.log(item)\r\n        console.log(command)\r\n        //console.log(this.ids)\r\n        if (item == undefined) { this.totalItens = command.length; this.commands = command }\r\n        // if(id != undefined)\r\n\r\n        this.podeDesable = true\r\n        //console.log('matricula final')\r\n        //if(id.length)\r\n        this._http.post(`https://localhost:5001/api/teste/matricular-final-registros/${this.commands[this.index].turmaId}/${this.commands[this.index].alunoId}`, this.commands[this.index])\r\n            .subscribe(\r\n                resp => {\r\n                    console.log('retorno matricula')\r\n                    this.index = this.index + 1\r\n                    console.log(this.index)\r\n                    this.MatricularFinal(undefined, this.commands[this.index])\r\n\r\n                },\r\n                error => { console.log('erro') }\r\n            )\r\n    }\r\n\r\n\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n    }\r\n\r\n\r\n    public OpenRelatorioMatricula(): void {\r\n        const dialogRef = this._modal\r\n            .open(RelatorioMatriculaComponent, OpenRelatorioMatriculaComponentModal());\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"OK\") {\r\n            } else if (data.clicked === \"Cancel\") {\r\n            }\r\n        });\r\n    }\r\n\r\n    submitPesquisa(event?: any) {\r\n\r\n        this.showMessageNoColaborador = false\r\n\r\n        if (this.pesquisarForm.valid) {\r\n            this.spinnerSearch = true\r\n\r\n            if (event != undefined) {\r\n                this.currentPage = event.pageIndex + 1\r\n            } else {\r\n                this.currentPage = 1\r\n                this.alunos = new Array<any>()\r\n            }\r\n\r\n\r\n            this._newMatService.getAlunos(this.pageSize, this.currentPage, this.pesquisarForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.processarSucesso(sucesso, event) },\r\n                    falha => { this.processarFalha(falha) }\r\n                );\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    processarSucesso(response: any, event?: any) {\r\n\r\n        this.alunos = Object.assign([], response['data']);\r\n\r\n        this.length = response['totalItemsInDatabase']\r\n\r\n        this.spinnerSearch = false\r\n        if (event != undefined) {\r\n            this.pageIndexNumber = (event.pageIndex * this.pageSize)\r\n        } else {\r\n            this.pageIndexNumber = 0\r\n\r\n            this.paginator.firstPage();\r\n        }\r\n\r\n    }\r\n\r\n    processarFalha(fail: any) {\r\n\r\n        // if (fail['status'] == 404) {\r\n        //     this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n        //     this.showMessageNoColaborador = true\r\n        //     this.colaboradores = new Array<any>();\r\n        // }\r\n        // if (fail['status'] != 404) {\r\n        //     this.mensagem = \"Ocorreu um erro desconhecido, por favor, procure o administrador do sistema\"\r\n        //     this.showMessageNoColaborador = true\r\n        //     this.colaboradores = new Array<any>();\r\n        // }\r\n\r\n        // this.spinnerSearch = false\r\n    }\r\n\r\n    openMatriculaModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(CreateNovaMatriculaComponent, {\r\n                height: 'auto',\r\n                width: '1000px',\r\n                autoFocus: false,\r\n                // maxHeight: '90vh',\r\n\r\n                //data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"OK\") {\r\n                // this.openSnackBar()\r\n                console.log('afte close ok')\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n    matricular(aluno) {\r\n        const dialogRef = this._modal\r\n            .open(AlunoMatriculaComponent, {\r\n                // minHeight: '610px',\r\n                width: '850px',\r\n                // autoFocus: false,\r\n                //maxHeight: '400vh',\r\n\r\n                data: { aluno: aluno },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                //clicked: \"Ok\"\r\n                //  this.openSnackBar()\r\n                this.submitPesquisa();\r\n                console.log('afte close ok')\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    viewInfoCadastrais(aluno): void {\r\n        const dialogRef = this._modal\r\n            .open(InfoCadastraisComponent, {\r\n                height: 'auto',\r\n                width: '1000px',\r\n                autoFocus: false,\r\n                maxHeight: '400vhvh',\r\n\r\n                data: { aluno: aluno },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"OK\") {\r\n                this.submitPesquisa();\r\n                console.log(JSON.stringify(this.pesquisarForm.value))\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    openInfoModal(aluno): void {\r\n        const dialogRef = this._modal\r\n            .open(InfosComponent, OpenInfoComponentModal(aluno));\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"OK\") {\r\n            } else if (data.clicked === \"Cancel\") {\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    openInfoFinancModal(aluno: Aluno): void {\r\n        const dialogRef = this._modal\r\n            .open(InfoFinancPedagComponent, InfoFinancComponentModal(aluno));\r\n        dialogRef.afterClosed().subscribe(\r\n            data => { });\r\n\r\n\r\n        // const dialogRef = this.CreateMatriculaModal\r\n        //     .open(InfoFinancPedagComponent, {\r\n        //         height: '90vh',\r\n        //         width: '1050px',\r\n        //         autoFocus: false,\r\n\r\n\r\n        //         data: { aluno: aluno },\r\n        //         hasBackdrop: true,\r\n        //         disableClose: true\r\n        //     });\r\n\r\n        // dialogRef.afterClosed().subscribe((data) => {\r\n        //     if (data.clicked === \"OK\") {\r\n        //         this.openSnackBar()\r\n        //         console.log('afte close ok')\r\n        //     } else if (data.clicked === \"Cancel\") {\r\n\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    openBoletimodal(aluno: Aluno): void {\r\n        const dialogRef = this._modal\r\n            .open(BoletimAlunoComponent, {\r\n                height: '90vh',\r\n                width: '1000px',\r\n                autoFocus: false,\r\n\r\n\r\n                data: { aluno: aluno },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"OK\") {\r\n                // this.openSnackBar()\r\n                console.log('afte close ok')\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n}","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { SpinnerParams } from \"src/app/_shared/models/spinner.model\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { AdmService } from \"src/app/Adm/services/adm.services\";\r\n\r\n@Component({\r\n    selector: 'edit-dispomodal',\r\n    templateUrl: './edit-dispo.component.html',\r\n    //styleUrls: ['./edit-dispo.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class EditDispoComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    originalDispo: any;// = new Any()\r\n    dispo:any\r\n    \r\n\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _admService: AdmService,\r\n        private _http: HttpClient,\r\n        private _helper: HelpersService,\r\n        public dialogRef: MatDialogRef<EditDispoComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        \r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n      \r\n        console.log(this.data['dispo'])\r\n        this.originalDispo = Object.assign({}, this.data['dispo'])\r\n        this.dispo = Object.assign({}, this.data['dispo'])\r\n      \r\n    }\r\n\r\n    \r\n\r\n    disabledSaveButton = false\r\n    get disabledButton() {\r\n        if(this.disabledSaveButton){\r\n            return true\r\n        }\r\n        if (JSON.stringify(this.dispo) === JSON.stringify(this.originalDispo)) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    saveEdit(form) {\r\n        this.disabledSaveButton = true\r\n        this._admService.editDisponibilidade(this.dispo)\r\n        .subscribe(\r\n            sucesso => {  this.dialogRef.close({ clicked: true }); },\r\n            falha => {  this.dialogRef.close({ clicked: false }); }\r\n        )\r\n    }\r\n\r\n\r\n    \r\n\r\n}","<div style=\"font-size: 1.2em;\">Disponibilidade\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n\r\n<hr>\r\n<div @rowHighlight>\r\n\r\n    <!-- <span>Unidade:</span> -->\r\n    <form #form=\"ngForm\" (ngSubmit)=\"saveEdit(form)\">\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n            <mat-label>Unidade</mat-label>\r\n            <input disabled [value]=\"dispo.descricao\" matInput>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <div style=\"font-size: 0.9;font-style: italic;\">Disponibilidade:</div>\r\n        <mat-checkbox [(ngModel)]=\"dispo.domingo\" name=\"domingo\" class=\"example-margin\">Domingo</mat-checkbox><br>\r\n        <mat-checkbox [(ngModel)]=\"dispo.segunda\" name=\"segunda\" class=\"example-margin\">Segunda-feira</mat-checkbox><br>\r\n        <mat-checkbox [(ngModel)]=\"dispo.terca\" name=\"terca\" class=\"example-margin\">Terça-feira</mat-checkbox><br>\r\n        <mat-checkbox [(ngModel)]=\"dispo.quarta\" name=\"quarta\" class=\"example-margin\">Quarta-feira</mat-checkbox><br>\r\n        <mat-checkbox [(ngModel)]=\"dispo.quinta\" name=\"quinta\" class=\"example-margin\">Quinta-feira</mat-checkbox><br>\r\n        <mat-checkbox [(ngModel)]=\"dispo.sexta\" name=\"sexta\" class=\"example-margin\">Sexta-feira</mat-checkbox><br>\r\n        <mat-checkbox [(ngModel)]=\"dispo.sabado\" name=\"sabado\" class=\"example-margin\">Sábado</mat-checkbox><br>\r\n        <br>\r\n        <mat-progress-bar *ngIf=\"disabledSaveButton\" @rowHighlight style=\"margin:0px\" mode=\"query\"></mat-progress-bar>\r\n        <div style=\"float: right;margin-top: 15px;\">\r\n\r\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"disabledButton\" style=\"width: 100px; position: relative; float:right;margin-bottom: 10px;\r\n                margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n\r\n\r\n        </div>\r\n    </form>\r\n\r\n</div>","import { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from '@angular/common/http';\r\nimport { Component, EventEmitter, Inject, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, NgForm } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TesteModalComponent } from './modalteste/testemodal.component';\r\nimport { IServico } from './testeexterno';\r\nimport pdfMake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\r\nimport { SignalRService } from 'src/app/_shared/services/signalr.component';\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\n\r\n\r\nexport class Testando {\r\n  constructor(\r\n    public cpf?: FormData,\r\n    public compRes?: FormData\r\n  ) {\r\n    this.cpf = new FormData();\r\n    this.compRes = new FormData();\r\n\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'teste-app',\r\n  templateUrl: './teste.component.html',\r\n  styleUrls: ['./teste.component.scss']\r\n})\r\nexport class TestesComponent implements OnInit {\r\n\r\n\r\n  public nome = \"Alvaro\"\r\n  public sobrenome = \"Carlos\"\r\n\r\n  styles: { [key: string]: string } = {\r\n    'border': '1px solid rgb(93, 93, 104)',\r\n    'display': 'flex',\r\n    'float': 'left',\r\n    'align-items': 'center',\r\n    'justify-content': 'center',\r\n    'height': '20px',\r\n    'width': '20px'\r\n  }\r\n\r\n  // styles: {[key: string]: string} = {\r\n  //     'border': '1px solid rgb(93, 93, 104)',\r\n  //     'font-size.pt': '10',\r\n  //     'color': 90 > 180 ? 'red': 'black',\r\n  //     'font-weight': 170 > 180 ? 'bold': 'normal',\r\n  //     'text-decoration': 90 > 180 ? 'underline': 'none'\r\n  //     }\r\n  baseUrl = environment.baseUrl;\r\n  calendarArray: number[] = new Array<number>(31)\r\n  semanas: string[] = new Array<string>('D', 'S', 'T', 'Q', 'Q', 'S', 'S')\r\n  public teste: Testando = new Testando();\r\n  public progress: number;\r\n  public message: string;\r\n  @Output() public onUploadFinished = new EventEmitter();\r\n  public parentForm: FormGroup;\r\n  public filhoUm: FormGroup;\r\n  public filhoDois: FormGroup;\r\n  public conteudo = \"asd asd asd asd asd asdadsadadaadasdasda\"\r\n  public formDisabled: FormGroup;\r\n\r\n  resume = new Resume();\r\n  degrees = ['B.E.', 'M.E.', 'B.Com', 'M.Com'];\r\n  constructor(\r\n    public signalRService: SignalRService, \r\n    @Inject('IServicoToken') public servico: IServico,\r\n    private TesteModal: MatDialog,\r\n    private http: HttpClient,\r\n    private _fb: FormBuilder) {\r\n    this.filhoUm = _fb.group({\r\n      nome: [''],\r\n      sobrenome: []\r\n    })\r\n\r\n    this.filhoDois = _fb.group({\r\n      endereco: [''],\r\n      bairro: ['']\r\n    })\r\n\r\n    this.parentForm = _fb.group({\r\n      _filhosum: this.filhoUm,\r\n      _filhodois: this.filhoDois\r\n    })\r\n\r\n    this.formDisabled = _fb.group({\r\n      nome: [''],\r\n      sobrenome: ['']\r\n    })\r\n\r\n    this.resume = JSON.parse(sessionStorage.getItem('resume')) || new Resume();\r\n    if (!this.resume.experiences || this.resume.experiences.length === 0) {\r\n      this.resume.experiences = [];\r\n      this.resume.experiences.push(new Experience());\r\n    }\r\n    if (!this.resume.educations || this.resume.educations.length === 0) {\r\n      this.resume.educations = [];\r\n      this.resume.educations.push(new Education());\r\n    }\r\n    if (!this.resume.skills || this.resume.skills.length === 0) {\r\n      this.resume.skills = [];\r\n      this.resume.skills.push(new Skill());\r\n    }\r\n\r\n  }\r\n\r\n  //   constructor(private _fb: FormBuilder) {\r\n  //     this.moduloForm = _fb.group({\r\n  //         descricao: ['', [Validators.required]],\r\n  //         duracaoMeses: ['', [Validators.required]],\r\n  //         preco: ['', [Validators.required]],\r\n  //         materias: this._fb.array([], Validators.required)\r\n\r\n  //     })\r\n  // }\r\n\r\n  // get materias() {\r\n  //     return this.moduloForm.controls[\"materias\"] as FormArray;\r\n  // }\r\n\r\n  // addMateria() {\r\n  //     const lessonForm = this._fb.group({\r\n  //         title: ['', Validators.required],\r\n  //         level: ['beginner', Validators.required]\r\n  //     });\r\n\r\n  //     this.materias.push(lessonForm);\r\n  // }\r\n\r\n  // deleteLesson(lessonIndex: number) {\r\n  //     this.materias.removeAt(lessonIndex);\r\n  // }\r\n\r\n\r\n  @ViewChild('file') myFileInput;\r\n  @ViewChild('file2') myFileInput2;\r\n  \r\n  ngOnInit() {\r\n    this.valor = '05/10/2021'\r\n\r\n    // this.signalRService.startConnection();\r\n    // this.signalRService.addTransferChartDataListener();   \r\n    // this.startHttpRequest();\r\n\r\n  }\r\n\r\n  private startHttpRequest = () => {\r\n    this.http.get('https://localhost:5001/api/teste/hubtest')\r\n      .subscribe(res => {\r\n        console.log(res);\r\n      })\r\n  }\r\n\r\n  public chartClicked = (event) => {\r\n    console.log(event);\r\n    this.signalRService.broadcastChartData();\r\n  }\r\n  // CHART\r\n\r\n  public chartOptions: any = {\r\n    scaleShowVerticalLines: true,\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [{\r\n        ticks: {\r\n          beginAtZero: true\r\n        }\r\n      }]\r\n    }\r\n  };\r\n  public chartLabels: string[] = ['Real time data for the chart'];\r\n  public chartType: string = 'bar';\r\n  public chartLegend: boolean = true;\r\n  public colors: any[] = [{ backgroundColor: '#5491DA' }, { backgroundColor: '#E74C3C' }, { backgroundColor: '#82E0AA' }, { backgroundColor: '#E5E7E9' }]\r\n\r\n\r\n\r\n\r\n  verformdisable() {\r\n    console.log(this.formDisabled.value)\r\n  }\r\n  setSobrenome() {\r\n    this.formDisabled.get('sobrenome').setValue('Camargo')\r\n  }\r\n\r\n  setValueDisabled() {\r\n    this.formDisabled.get('nome').setValue('Álvaro Carlos')\r\n  }\r\n\r\n  fileName = '';\r\n  onFileSelected(event) {\r\n\r\n    const file: File = event.target.files[0];\r\n\r\n    if (file) {\r\n\r\n      this.fileName = file.name;\r\n\r\n      const formData = new FormData();\r\n\r\n      formData.append(\"file\", file);\r\n\r\n      const upload$ = this.http.post(`${this.baseUrl}/testando/upload-arqaluno`, formData, {\r\n        reportProgress: true, observe: 'events',\r\n        headers: new HttpHeaders({\r\n\r\n          \"Authorization\": \"\"\r\n        })\r\n      })\r\n        .subscribe(event => {\r\n          if (event.type === HttpEventType.UploadProgress)\r\n            this.progress = Math.round(100 * event.loaded / event.total);\r\n          else if (event.type === HttpEventType.Response) {\r\n            this.message = 'Upload success.';\r\n            this.onUploadFinished.emit(event.body);\r\n          }\r\n        },\r\n          (error) => { console.log(error) },\r\n          () => {\r\n            console.log('finally')\r\n            // this.dialogRef.close({ clicked: \"Ok\" });\r\n            // this.refresh()\r\n            //this.onUploadFinished.unsubscribe;\r\n            //files = null\r\n          });\r\n\r\n    }\r\n  }\r\n\r\n\r\n  dataPicker = new Date(2023, 10, 5)\r\n  valor: any\r\n  dataTestando: Date;\r\n  onFocusOutDateEvent(event: any) {\r\n    var data;\r\n    // console.log(this.dataTestando)\r\n    //console.log(event.target.value);\r\n    //console.log(event.target.value.length)\r\n    if (event.target.value.length == 10) {\r\n      var data = event.target.value.split('/')\r\n      console.log(data)\r\n      var dataForm: Date = new Date(parseInt(data[2]), parseInt(data[1]) - 1,\r\n        parseInt(data[0]))\r\n      //var dataForm: Date = new Date(data[1] + \"/\" + data[0] + \"/\" + data[2])\r\n      //console.log(dataForm.toString())\r\n      //console.log(dataForm.toString() == \"Invalid Date\")\r\n      // let options = {\r\n      //     year: '2-digit',\r\n      //     month: '2-digit',\r\n      //     day: '2-digit'\r\n      // };\r\n      // console.log(dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' }))\r\n      // this.dataTestando == dataForm\r\n      // this.valor =  \"10/10/2050\"// this.dataTestando\r\n      this.valor = dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n      //this.valor = dataForm//.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n    }\r\n\r\n    // console.log(this.alunoForm.get('nascimento').value)\r\n    // var dataForm: Date = new Date(this.alunoForm.get('nascimento').value)\r\n    // //console.log(dataForm)\r\n    // // console.log(dataForm.dia)\r\n    // //var nascimento = new Date(parseInt(dataForm?.ano), parseInt(dataForm?.mes) - 1, parseInt(dataForm?.dia));\r\n    // //console.log(nascimento)\r\n    // let timeDiff = Math.abs(Date.now() - dataForm.getTime());\r\n    // let age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\r\n    // console.log(age)\r\n    // if (age < 18 && age != NaN) {\r\n    //     this.showTabMenorIdade = true\r\n    //     this.showPerguntaRespFinanc = false\r\n    //     this.showFormRespFinanc = false\r\n    //     this.alunoForm.get('temRespFin').setValue(true)\r\n    // } else if (age > 18 && age != NaN) {\r\n    //     this.showTabMenorIdade = false\r\n    //     this.showPerguntaRespFinanc = true\r\n    //     if (this.checkedRespFinanc.sim == true) {\r\n    //         this.showFormRespFinanc = false\r\n    //     } else {\r\n    //         this.showFormRespFinanc = true\r\n    //     }\r\n    // }\r\n  }\r\n\r\n  verificarForm() {\r\n\r\n    console.log(this.parentForm.value)\r\n  }\r\n\r\n  enviarComDesativado() {\r\n    //this.parentForm.get('_filhodois').disable()\r\n\r\n    this.http.post(`${this.baseUrl}/testando/salvarform`, this.parentForm.value, {\r\n\r\n    }).subscribe(resp => {\r\n\r\n    }, () => { },\r\n      () => { })\r\n  }\r\n\r\n  onFileChange(event) {\r\n    this.myFileInput.nativeElement.value = '';\r\n  }\r\n\r\n  /*                                ADD FILE                   */\r\n\r\n  filearray = new FormData();// = <File>files[0];\r\n  datas = new FormData();\r\n  datas2 = new FormData();\r\n  compRes = new FormData();\r\n  mData = JSON.stringify({ nome: \"hello World\" });\r\n  addFile(file) {\r\n\r\n    // let fileToUpload = <File>file[0];\r\n    // const data = new FormData();\r\n\r\n    // data.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    // this.filearray.push(data);\r\n    // let urlPath = 'api/SampleActionMethod/AddModelData';\r\n    //const \r\n    const formData = new FormData();\r\n    this.datas.append('data', this.mData);\r\n    //if (file) {\r\n    let fileToUpload = <File>file[0];\r\n    this.datas.append('file', fileToUpload, fileToUpload.name);\r\n    //}\r\n    //this.filearray.push(this.datas)\r\n    // 2\r\n    //let fileToUpload = <File>file[0];\r\n    //const formData = new FormData();\r\n    //this.cpf.append('cpf', fileToUpload, fileToUpload.name);\r\n    this.myFileInput.nativeElement.value = '';\r\n    //*/\r\n  }\r\n\r\n  addFile2(file) {\r\n\r\n\r\n    let fileToUpload = <File>file[0];\r\n    //const formData = new FormData();\r\n    this.datas2.append('cpf', fileToUpload, fileToUpload.name);\r\n    //let fileToUpload = <File>files[0];\r\n    this.filearray.forEach(element => {\r\n\r\n\r\n    });\r\n    console.log(this.filearray)///.push()\r\n    this.myFileInput2.nativeElement.value = '';\r\n  }\r\n\r\n  sendFiles() {\r\n\r\n    //const credentials = JSON.stringify({ cpf: this.cpf, compRes: this.compRes });\r\n\r\n    this.http.post(`${this.baseUrl}/comercial/teste`, this.filearray, {\r\n\r\n      reportProgress: true, observe: 'events',\r\n\r\n    })\r\n      .subscribe(event => {\r\n        // if (event.type === HttpEventType.UploadProgress)\r\n        //     this.progress = Math.round(100 * event.loaded / event.total);\r\n        // else if (event.type === HttpEventType.Response) {\r\n        //     this.message = 'Upload success.';\r\n        //     this.onUploadFinished.emit(event.body);\r\n        // }\r\n      },\r\n        (error) => { console.log(error) },\r\n        () => {\r\n          // console.log('finally')\r\n          //this.dialogRef.close({ clicked: \"Ok\" });\r\n          // this.refresh()\r\n          //this.onUploadFinished.unsubscribe;\r\n          //files = null\r\n          // envio.unsubscribe\r\n          // this.myFileInput.nativeElement.value = '';\r\n        });\r\n  }\r\n\r\n  /*                               TESTE UPLOAD FILE                        */\r\n  jwtHelper = new JwtHelperService();\r\n  decodedToken: any;\r\n\r\n  uploadFile(files) {\r\n\r\n    console.log(files)\r\n    if (files.length === 0) {\r\n\r\n      return;\r\n    }\r\n    this.decodedToken = this.jwtHelper.decodeToken(localStorage.getItem('jwt'));\r\n\r\n    //console.log(this.decodedToken)\r\n    //console.log(this.decodedToken['email'])\r\n    let fileToUpload = <File>files[0];\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n    console.log(formData)\r\n\r\n    this.http.post(`${this.baseUrl}/comercial/?userEmail=${this.decodedToken['email']}`, formData, {\r\n\r\n      reportProgress: true, observe: 'events',\r\n\r\n    })\r\n      .subscribe(event => {\r\n        if (event.type === HttpEventType.UploadProgress)\r\n          this.progress = Math.round(100 * event.loaded / event.total);\r\n        else if (event.type === HttpEventType.Response) {\r\n          this.message = 'Upload success.';\r\n          this.onUploadFinished.emit(event.body);\r\n        }\r\n      },\r\n        (error) => { console.log(error) },\r\n        () => {\r\n          console.log('finally')\r\n          //this.dialogRef.close({ clicked: \"Ok\" });\r\n          // this.refresh()\r\n          //this.onUploadFinished.unsubscribe;\r\n          //files = null\r\n          // envio.unsubscribe\r\n          this.myFileInput.nativeElement.value = '';\r\n        });\r\n  }\r\n\r\n  /*                               TESTE MODAL                        */\r\n\r\n  openExportModal(): void {\r\n    const dialogRef = this.TesteModal\r\n      .open(TesteModalComponent, {\r\n        height: 'auto',\r\n        width: '400px',\r\n\r\n        data: { colaborador: 'hello' },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n      });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n    });\r\n  }\r\n\r\n  /// save file\r\n\r\n\r\n\r\n\r\n  arquivos: any[];\r\n  formDatas = new FormData();\r\n  fileCPF: File[] = []\r\n  fileRG: File[] = []\r\n  apendFile1(file) {\r\n    this.fileCPF = new Array<File>()\r\n    let fileToUpload = <File>file[0];\r\n    console.log(file)\r\n    console.log(fileToUpload)\r\n    //this.arquivos.push(fil)\r\n    //const formData = new FormData();\r\n    this.fileCPF.push(fileToUpload)\r\n    //this.formDatas.append('file', fileToUpload, 'cpf');\r\n    console.log(this.formDatas)\r\n\r\n  }\r\n\r\n  apendFile2(file) {\r\n    this.fileRG = new Array<File>()\r\n    let fileToUpload = <File>file[0];\r\n    console.log(fileToUpload)\r\n    //this.arquivos.push(fil)\r\n    //const formData = new FormData();\r\n    this.fileRG.push(fileToUpload)\r\n    //this.formDatas.append('file', fileToUpload, 'rg');\r\n    console.log(this.formDatas)\r\n\r\n\r\n  }\r\n\r\n  removerCPF() {\r\n    this.fileCPF = new Array<File>()\r\n\r\n  }\r\n\r\n\r\n  removerRG() {\r\n    this.fileRG = new Array<File>()\r\n  }\r\n\r\n  verificar() {\r\n\r\n    console.log(this.fileCPF)\r\n    console.log(this.fileRG)\r\n\r\n    console.log(this.fileCPF.length)\r\n    console.log(this.fileRG.length)\r\n\r\n  }\r\n\r\n\r\n\r\n  uploadFile2() {\r\n\r\n    console.log(this.fileCPF)\r\n    console.log(this.fileRG)\r\n    this.formDatas.append('file', this.fileCPF[0], 'CPF');\r\n    this.formDatas.append('file', this.fileRG[0], 'rg');\r\n\r\n    var objeto = { nome: 'fulano de tal', cpf: '12345678912', email: 'fulano@gmail.com' }\r\n    // this.formDatas.append('file',objeto);\r\n\r\n\r\n    this.decodedToken = this.jwtHelper.decodeToken(localStorage.getItem('jwt'));\r\n\r\n\r\n    // let fileToUpload = <File>files[0];\r\n    // console.log(fileToUpload)\r\n    // const formData = new FormData();\r\n    // console.log(formData)\r\n    // formData.append('file', fileToUpload, fileToUpload.name);\r\n    // console.log(formData)\r\n    //this.http.post(`${this.baseUrl}/comercial/?userEmail=${this.decodedToken['email']}`, formData, {\r\n    this.http.post(`${this.baseUrl}/estagios/arquivos`, this.formDatas, {\r\n      reportProgress: true, observe: 'events',\r\n\r\n    })\r\n      .subscribe(event => {\r\n        if (event.type === HttpEventType.UploadProgress)\r\n          this.progress = Math.round(100 * event.loaded / event.total);\r\n        else if (event.type === HttpEventType.Response) {\r\n          this.message = 'Upload success.';\r\n          this.onUploadFinished.emit(event.body);\r\n        }\r\n      },\r\n        (error) => { console.log(error) },\r\n        () => {\r\n          console.log('finally')\r\n          //this.dialogRef.close({ clicked: \"Ok\" });\r\n          // this.refresh()\r\n          //this.onUploadFinished.unsubscribe;\r\n          //files = null\r\n        });\r\n  }\r\n\r\n  exportExcel() {\r\n\r\n    var file = \"Modelo LEAD.xlsx\";// this.createFileName(\"EXCEL\");\r\n    // this.showSpinner = true;\r\n    // this.testehabilitar = false\r\n\r\n    this.download().subscribe(data => {\r\n      //console.log(data)\r\n      switch (data.type) {\r\n        case HttpEventType.Response:\r\n          // this.showSpinner = false;\r\n          //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n          const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n          const a = document.createElement('a');\r\n          a.setAttribute('style', 'display:none;');\r\n          document.body.appendChild(a);\r\n          a.download = file;\r\n          a.href = URL.createObjectURL(downloadedFile);\r\n          a.target = '_blank';\r\n          a.click();\r\n          document.body.removeChild(a);\r\n          break;\r\n      }\r\n    },\r\n      (err) => {\r\n        //this.showSpinner = false;\r\n        //this.testehabilitar = true;\r\n      },\r\n      () => {\r\n        //this.showSpinner = false;\r\n        // this.testehabilitar = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  testeBlob: BlobTeste = new BlobTeste();\r\n  blobTeste: BlobTeste[] = new Array<BlobTeste>();\r\n  getTeste() {\r\n    //this.http.get(`${this.baseUrl}/estagios/file/?alunoid=1002&docid=27`,{\r\n    this.http.get(`${this.baseUrl}/estagios/documentos`, {\r\n      // responseType: 'blob'\r\n    })\r\n      .subscribe(\r\n        response => {\r\n          //this.testeBlob.Blob = response['Blob']\r\n\r\n          this.blobTeste = Object.assign([], response)\r\n          console.log(this.blobTeste)\r\n          let data = this.blobTeste[0].documentos[0].dataFile\r\n          //let data2 = data.documentos\r\n          this.imagem = new Blob([data], {\r\n            type: 'image/jpeg'\r\n          });\r\n        }, (error) => { console.log(error) },\r\n        () => { }\r\n      )\r\n  }\r\n\r\n  public download(): Observable<HttpEvent<Blob>> {\r\n    return this.http.request(new HttpRequest(\r\n      'GET', `${this.baseUrl}/download`, null, {\r\n      reportProgress: true,\r\n      responseType: 'blob'\r\n    }));\r\n  }\r\n\r\n  data: string;\r\n\r\n  imagem: any\r\n\r\n  getImage() {\r\n    this.getData(`${this.baseUrl}/estagios/file/?alunoid=1002&docid=27`)\r\n      .subscribe(\r\n        imgData => this.data = imgData,\r\n        err => console.log(err)\r\n      );\r\n  }\r\n\r\n  getData(url: string): Observable<string> {\r\n    return this.http.get(url, { responseType: 'blob' })\r\n      .pipe(\r\n        switchMap(response => this.readFile(response))\r\n      );\r\n  }\r\n\r\n  private readFile(blob: Blob): Observable<string> {\r\n    return Observable.create(obs => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onerror = err => obs.error(err);\r\n      reader.onabort = err => obs.error(err);\r\n      reader.onload = () => obs.next(reader.result);\r\n      reader.onloadend = () => obs.complete();\r\n      //this.imagem = reader.readAsDataURL(blob);\r\n      //console.log(this.imagem)\r\n      return reader.readAsDataURL(blob);\r\n    });\r\n  }\r\n\r\n  downloadContrato() {\r\n    var file = \"Contrato.pdf\";// this.createFileName(\"EXCEL\");\r\n    // this.showSpinner = true;\r\n    // this.testehabilitar = false\r\n\r\n    this.download2().subscribe(data => {\r\n      //console.log(data)\r\n      switch (data.type) {\r\n        case HttpEventType.Response:\r\n          // this.showSpinner = false;\r\n          //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n          const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n          const a = document.createElement('a');\r\n          a.setAttribute('style', 'display:none;');\r\n          document.body.appendChild(a);\r\n          a.download = file;\r\n          a.href = URL.createObjectURL(downloadedFile);\r\n          a.target = '_blank';\r\n          window.open(a.href, '_blank');\r\n          a.click();\r\n          document.body.removeChild(a);\r\n          break;\r\n      }\r\n    },\r\n      (err) => {\r\n        //this.showSpinner = false;\r\n        //this.testehabilitar = true;\r\n      },\r\n      () => {\r\n        //this.showSpinner = false;\r\n        // this.testehabilitar = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  download2(): Observable<HttpEvent<Blob>> {\r\n    return this.http.request(new HttpRequest(\r\n      'GET', `${this.baseUrl}/document/pdf`, null, {\r\n      reportProgress: true,\r\n      responseType: 'blob'\r\n    }));\r\n  }\r\n\r\n  get capturar() {\r\n    try {\r\n      return this.servico.pegar()\r\n    } catch {\r\n      return \"deu erro\"\r\n    }\r\n    //return this.servico.pegar()\r\n  }\r\n\r\n\r\n  addExperience() {\r\n    this.resume.experiences.push(new Experience());\r\n  }\r\n  addEducation() {\r\n    this.resume.educations.push(new Education());\r\n  }\r\n\r\n\r\n  generatePdf(action = 'open') {\r\n    const documentDefinition = this.getDocumentDefinition();\r\n    console.log(documentDefinition)\r\n    switch (action) {\r\n      case 'open': pdfMake.createPdf(documentDefinition).open(); break;\r\n      case 'print': pdfMake.createPdf(documentDefinition).print(); break;\r\n      case 'download': pdfMake.createPdf(documentDefinition).download(); break;\r\n      default: pdfMake.createPdf(documentDefinition).open(); break;\r\n    }\r\n  }\r\n  resetForm() {\r\n    this.resume = new Resume();\r\n  }\r\n  getDocumentDefinition() {\r\n    sessionStorage.setItem('resume', JSON.stringify(this.resume));\r\n    return {\r\n      content: [\r\n        {\r\n          text: 'RESUME',\r\n          bold: true,\r\n          fontSize: 20,\r\n          alignment: 'center',\r\n          margin: [0, 0, 0, 20]\r\n        },\r\n        {\r\n          columns: [\r\n            [{\r\n              text: this.resume.name,\r\n              style: 'name'\r\n            },\r\n            {\r\n              text: this.resume.address\r\n            },\r\n            {\r\n              text: 'Email : ' + this.resume.email,\r\n            },\r\n            {\r\n              text: 'Contant No : ' + this.resume.contactNo,\r\n            },\r\n            {\r\n              text: 'GitHub: ' + this.resume.socialProfile,\r\n              link: this.resume.socialProfile,\r\n              color: 'blue',\r\n            }\r\n            ],\r\n            [\r\n              this.getProfilePicObject()\r\n            ]\r\n          ]\r\n        },\r\n        {\r\n          text: 'Skills',\r\n          style: 'header'\r\n        },\r\n        {\r\n          columns: [\r\n            {\r\n              ul: [\r\n                ...this.resume.skills.filter((value, index) => index % 3 === 0).map(s => s.value)\r\n              ]\r\n            },\r\n            {\r\n              ul: [\r\n                ...this.resume.skills.filter((value, index) => index % 3 === 1).map(s => s.value)\r\n              ]\r\n            },\r\n            {\r\n              ul: [\r\n                ...this.resume.skills.filter((value, index) => index % 3 === 2).map(s => s.value)\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          text: 'Experience',\r\n          style: 'header'\r\n        },\r\n        this.getExperienceObject(this.resume.experiences),\r\n        {\r\n          text: 'Education',\r\n          style: 'header'\r\n        },\r\n        this.getEducationObject(this.resume.educations),\r\n        {\r\n          text: 'Other Details',\r\n          style: 'header'\r\n        },\r\n        {\r\n          text: this.resume.otherDetails\r\n        },\r\n        {\r\n          text: 'Signature',\r\n          style: 'sign'\r\n        },\r\n        {\r\n          columns: [\r\n            { qr: this.resume.name + ', Contact No : ' + this.resume.contactNo, fit: 100 },\r\n            {\r\n              text: `(${this.resume.name})`,\r\n              alignment: 'right',\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      info: {\r\n        title: this.resume.name + '_RESUME',\r\n        author: this.resume.name,\r\n        subject: 'RESUME',\r\n        keywords: 'RESUME, ONLINE RESUME',\r\n      },\r\n      styles: {\r\n        header: {\r\n          fontSize: 18,\r\n          bold: true,\r\n          margin: [0, 20, 0, 10],\r\n          decoration: 'underline'\r\n        },\r\n        name: {\r\n          fontSize: 16,\r\n          bold: true\r\n        },\r\n        jobTitle: {\r\n          fontSize: 14,\r\n          bold: true,\r\n          italics: true\r\n        },\r\n        sign: {\r\n          margin: [0, 50, 0, 10],\r\n          alignment: 'right',\r\n          italics: true\r\n        },\r\n        tableHeader: {\r\n          bold: true,\r\n        }\r\n      }\r\n    };\r\n  }\r\n  getExperienceObject(experiences: Experience[]) {\r\n    const exs = [];\r\n    experiences.forEach(experience => {\r\n      exs.push(\r\n        [{\r\n          columns: [\r\n            [{\r\n              text: experience.jobTitle,\r\n              style: 'jobTitle'\r\n            },\r\n            {\r\n              text: experience.employer,\r\n            },\r\n            {\r\n              text: experience.jobDescription,\r\n            }],\r\n            {\r\n              text: 'Experience : ' + experience.experience + ' Months',\r\n              alignment: 'right'\r\n            }\r\n          ]\r\n        }]\r\n      );\r\n    });\r\n    return {\r\n      table: {\r\n        widths: ['*'],\r\n        body: [\r\n          ...exs\r\n        ]\r\n      }\r\n    };\r\n  }\r\n  getEducationObject(educations: Education[]) {\r\n    return {\r\n      table: {\r\n        widths: ['*', '*', '*', '*'],\r\n        body: [\r\n          [{\r\n            text: 'Degree',\r\n            style: 'tableHeader'\r\n          },\r\n          {\r\n            text: 'College',\r\n            style: 'tableHeader'\r\n          },\r\n          {\r\n            text: 'Passing Year',\r\n            style: 'tableHeader'\r\n          },\r\n          {\r\n            text: 'Result',\r\n            style: 'tableHeader'\r\n          },\r\n          ],\r\n          ...educations.map(ed => {\r\n            return [ed.degree, ed.college, ed.passingYear, ed.percentage];\r\n          })\r\n        ]\r\n      }\r\n    };\r\n  }\r\n  getProfilePicObject() {\r\n    if (this.resume.profilePic) {\r\n      return {\r\n        image: this.resume.profilePic,\r\n        width: 75,\r\n        alignment: 'right'\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  fileChanged(e) {\r\n    const file = e.target.files[0];\r\n    this.getBase64(file);\r\n  }\r\n  getBase64(file) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      console.log(reader.result);\r\n      this.resume.profilePic = reader.result as string;\r\n    };\r\n    reader.onerror = (error) => {\r\n      console.log('Error: ', error);\r\n    };\r\n  }\r\n  addSkill() {\r\n    this.resume.skills.push(new Skill());\r\n  }\r\n\r\n\r\n\r\n\r\n  uploadFileEXCEL(files) {\r\n\r\n    console.log(files)\r\n    if (files.length === 0) {\r\n\r\n      return;\r\n    }\r\n    this.decodedToken = this.jwtHelper.decodeToken(localStorage.getItem('jwt'));\r\n\r\n    console.log(this.decodedToken)\r\n    console.log(this.decodedToken['email'])\r\n    let fileToUpload = <File>files[0];\r\n    const formData = new FormData();\r\n    formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    this.http.post(`${this.baseUrl}/testando/salvar-alunos`, formData, {\r\n\r\n      reportProgress: true, observe: 'events',\r\n\r\n    })\r\n      .subscribe(event => {\r\n        if (event.type === HttpEventType.UploadProgress)\r\n          this.progress = Math.round(100 * event.loaded / event.total);\r\n        else if (event.type === HttpEventType.Response) {\r\n          this.message = 'Upload success.';\r\n          this.onUploadFinished.emit(event.body);\r\n        }\r\n      },\r\n        (error) => { console.log(error) },\r\n        () => {\r\n          console.log('finally')\r\n          // this.dialogRef.close({ clicked: \"Ok\" });\r\n          // this.refresh()\r\n          //this.onUploadFinished.unsubscribe;\r\n          //files = null\r\n        });\r\n  }\r\n\r\n  editorConfig: AngularEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    height: 'auto',\r\n    minHeight: '0',\r\n    maxHeight: 'auto',\r\n    width: 'auto',\r\n    minWidth: '0',\r\n    translate: 'yes',\r\n    enableToolbar: true,\r\n    showToolbar: true,\r\n    placeholder: 'Enter text here...',\r\n    defaultParagraphSeparator: '',\r\n    defaultFontName: '',\r\n    defaultFontSize: '',\r\n    fonts: [\r\n      { class: 'arial', name: 'Arial' },\r\n      { class: 'times-new-roman', name: 'Times New Roman' },\r\n      { class: 'calibri', name: 'Calibri' },\r\n      { class: 'comic-sans-ms', name: 'Comic Sans MS' }\r\n    ],\r\n    customClasses: [\r\n      {\r\n        name: 'quote',\r\n        class: 'quote',\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n      {\r\n        name: 'titleText',\r\n        class: 'titleText',\r\n        tag: 'h1',\r\n      },\r\n    ],\r\n\r\n  };\r\n\r\n}\r\n\r\nexport class BlobTeste {\r\n  constructor(\r\n    public nome?: string,\r\n    public documentos?: BlobTeste2[]\r\n  ) { }\r\n}\r\n\r\nexport class BlobTeste2 {\r\n  constructor(\r\n    public docId?: number,\r\n    public alunoId?: number,\r\n    public descricao?: string,\r\n    public nome?: string,\r\n    public analisado?: boolean,\r\n    public validado?: boolean,\r\n    public tipoArquivo?: string,\r\n    public contentArquivo?: string,\r\n    public dataCriacao?: Date,\r\n    public dataFile?: Blob\r\n  ) {\r\n    this.dataFile = new Blob();\r\n  }\r\n\r\n  createBlob(data) {\r\n    var blob = new Blob([data], {\r\n      type: 'image/jpeg'\r\n    });\r\n\r\n    console.log('createblob')\r\n    return blob\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class Resume {\r\n  profilePic: string;\r\n  name: string;\r\n  address: string;\r\n  contactNo: number;\r\n  email: string;\r\n  socialProfile: string;\r\n  experiences: Experience[] = [];\r\n  educations: Education[] = [];\r\n  otherDetails: string;\r\n  skills: Skill[] = [];\r\n  constructor() {\r\n    this.experiences.push(new Experience());\r\n    this.educations.push(new Education());\r\n    this.skills.push(new Skill());\r\n  }\r\n}\r\nexport class Experience {\r\n  employer: string;\r\n  jobTitle: string;\r\n  jobDescription: string;\r\n  startDate: string;\r\n  experience: number;\r\n}\r\nexport class Education {\r\n  degree: string;\r\n  college: string;\r\n  passingYear: string;\r\n  percentage: number;\r\n}\r\nexport class Skill {\r\n  value: string;\r\n}\r\n","<!-- <div class=\"container\">\r\n\r\n    teste<br>\r\n\r\n   \r\n    <div class=\"card-header\">\r\n        <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n            LEADS</h4>\r\n        <p class=\"card-category\"> </p>\r\n    </div>\r\n    <div class=\"card-body\">\r\n\r\n        \r\n        <div class=\"row\" style=\"margin-bottom:15px;\">\r\n            <div class=\"\">\r\n                <input multiple type=\"file\" #file placeholder=\"Choose file\" onclick=\"this.file=null\"\r\n                    (change)=\"uploadFile(file.files)\" style=\"display:none;\">\r\n                <button multiple style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\"\r\n                    (click)=\"file.click()\">Exportar\r\n                    Lead</button>\r\n                <span style=\"font-size: 0.7em;\"><br>* formato aceito: excel (.xls)</span>\r\n            </div>\r\n            <div class=\"\">\r\n                <span class=\"upload\" *ngIf=\"progress > 0\">\r\n                    {{progress}}%\r\n                </span>\r\n                <span class=\"upload\" *ngIf=\"message\">\r\n                    {{message}}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"\">\r\n               \r\n            </div>\r\n        </div>\r\n\r\n        <button style=\"margin-left:30px;margin-top: 10px;\" mat-raised-button\r\n            [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button>\r\n\r\n        <br>\r\n\r\n        <button (click)=\"openExportModal()\">modal</button>\r\n\r\n        <br><br>\r\n       \r\n\r\n        <br>\r\n\r\n\r\n\r\n        <div class=\"\">\r\n            <input multiple type=\"file\" #file2 placeholder=\"Choose file\" onclick=\"this.file2=null\"\r\n                (change)=\"addFile(file2.files)\" style=\"display:none;\">\r\n            <button multiple style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\"\r\n                (click)=\"file2.click()\">Exportar\r\n                Lead</button>\r\n            <span style=\"font-size: 0.7em;\"><br>* formato aceito: excel (.xls)</span>\r\n        </div>\r\n\r\n        <div class=\"\">\r\n            <input multiple type=\"file\" #file3 placeholder=\"Choose file\" onclick=\"this.file3=null\"\r\n                (change)=\"addFile2(file3.files)\" style=\"display:none;\">\r\n            <button multiple style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\"\r\n                (click)=\"file3.click()\">Exportar\r\n                Lead</button>\r\n            <span style=\"font-size: 0.7em;\"><br>* formato aceito: excel (.xls)</span>\r\n        </div>\r\n\r\n        <div (click)=\"sendFiles()\">send</div>\r\n\r\n    </div>\r\n\r\n    <br>\r\n\r\n    <div >\r\n        <mat-form-field style=\"width: 100px;\" appearance=\"fill\">\r\n            <mat-label>Phone number</mat-label>\r\n            <mytime-input required></mytime-input>\r\n            \r\n            <mat-hint>Include area code</mat-hint>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n    <br>\r\n\r\n    <div >\r\n        <mat-form-field style=\"width: 100px;\" appearance=\"fill\">\r\n            <mat-label>Phone number</mat-label>\r\n            <currency-input required></currency-input>\r\n            \r\n            <mat-hint>Include area code</mat-hint>\r\n        </mat-form-field>\r\n    </div>\r\n\r\n\r\n    <div class=\"row\" style=\"padding: 5px; border: 1px solid red;height: 50px;\">\r\n        <div class=\"col-2\" style=\"border: 1px solid red;width: 100px;\">\r\n\r\n        </div>\r\n        <div class=\"col-2\" style=\"border: 1px solid red;width: 100px;\">\r\n\r\n        </div>\r\n    </div>\r\n</div> -->\r\n<!-- <input type=\"file\" class=\"file-upload\" onchange=\"console.log(event.target.files)\"> -->\r\n\r\n<!-- <li>\r\n  <button mat-button [matMenuTriggerFor]=\"afterMenu\">\r\n    <img src=\"../../../assets/img/nophoto.png\" alt=\"\" width=\"32\" height=\"32\" class=\"rounded-circle me-2\"></button>\r\n            <mat-menu #afterMenu=\"matMenu\" xPosition=\"after\">\r\n              \r\n              <button  style=\"height: 30px;\" (click)=\"logout()\" mat-menu-item>sair</button>\r\n            </mat-menu>\r\n</li> -->\r\n\r\n<div class=\"container\">\r\n\r\n<div style=\"display: block\" *ngIf=\"signalRService.data\">\r\n  <canvas baseChart\r\n          [datasets]=\"signalRService.data\"\r\n          [labels]=\"chartLabels\"\r\n          [options]=\"chartOptions\"\r\n          [legend]=\"chartLegend\"\r\n          [chartType]=\"chartType\"\r\n          [colors]=\"colors\"\r\n          (chartClick)=\"chartClicked($event)\"></canvas>\r\n</div>\r\n<br><br>\r\n<ul>\r\n  <li *ngFor='let data of signalRService.bradcastedData'>\r\n    <strong>Label: </strong> {{data.label}} - <strong>Value: </strong> {{data.data[0]}}\r\n  </li>\r\n</ul>\r\n\r\n<br>\r\n</div>\r\n<div style=\"border: 1px solid black;height: 100%;position: relative \">\r\n\r\n<div style=\"z-index: 1;border: 1px solid red;text-align: center;float: right; width:200px; height: 50px;\">\r\n<span>SISTEMA DE ENSINO INVICTUS</span><br>\r\n  FICHA DE MATRÍCULA\r\n</div>\r\n\r\n  <div style=\"margin-top: 50px;border: 1px solid red;width:100px;height: 50px;\"></div>\r\n\r\n  <div style=\"position: absolute;top:0;\r\n  position: absolute;\r\n   \r\n  border: 1px solid red;width:100px;height: 50px;\">\r\n  <img src=\"../../../assets/img/nophoto.png\" alt=\"\" width=\"32\" height=\"32\" class=\"rounded-circle me-2\"></div>\r\n\r\n\r\n</div>\r\n\r\n\r\n<input multiple type=\"file\" #fileAP placeholder=\"Choose file\" (change)=\"onFileSelected(fileAP.files)\"\r\n            style=\"display:none;\">\r\n        \r\n            <mat-icon type=\"button\" #tooltip=\"matTooltip\" matTooltip=\"anexar arquivo\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\" (click)=\"fileAP.click()\" style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">attachment</mat-icon>\r\n\r\n\r\n<input type=\"file\" class=\"file-input\"\r\n       (change)=\"onFileSelected($event)\" #fileUpload>\r\n\r\n<div class=\"file-upload\">\r\n\r\n   {{fileName || \"No file uploaded yet.\"}}\r\n\r\n    <button mat-mini-fab color=\"primary\" class=\"upload-btn\"\r\n      (click)=\"fileUpload.click()\">\r\n        <mat-icon>attach_file</mat-icon>\r\n    </button>\r\n</div>\r\n\r\n\r\n\r\n<br>\r\n<div style=\"display: inline-block;margin-right: 5px;\">\r\n    <mat-card class=\"example-card\"\r\n        style=\"visibility: visible; border: 1px solid rgb(93, 93, 104);padding: 0px;width: 144px;height: 180px;\">\r\n        <mat-card-header style=\"padding: 0px;justify-content: center;\">\r\n            <!-- <div mat-card-avatar class=\"example-header-image\" style=\"border: 1px solid red;\">x</div> -->\r\n            <mat-card-title style=\"margin-top: 5px;\">\r\n                Fev/02</mat-card-title>\r\n            <!-- <mat-card-subtitle style=\"border: 1px solid red;padding: 0px;margin: 0px;\">Fev/02</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <!-- <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\"> -->\r\n        <mat-card-content style=\"border: 1px solid rgb(93, 93, 104);\">\r\n            <span *ngFor=\"let item of semanas; let i = index;\" style=\"border: 1px solid rgb(93, 93, 104); \r\n            font-weight:800;\r\n            display: flex;float: left;\r\n            margin-bottom: 3px;\r\n            align-items: center;\r\n            justify-content: center;\r\n            height: 20px;\r\n            width: 20px;\">\r\n                {{item}}</span>\r\n\r\n            <span *ngFor=\"let item of calendarArray; let i = index;\" [ngStyle]=\"styles\">{{i+1}}</span>\r\n\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</div>\r\n<div style=\"display: inline-block;\">\r\n    <mat-card class=\"example-card\" style=\"border: 1px solid rgb(93, 93, 104);;padding: 0px;width: 144px;height: 180px;\">\r\n        <mat-card-header style=\"padding: 0px;justify-content: center;\">\r\n            <!-- <div mat-card-avatar class=\"example-header-image\" style=\"border: 1px solid red;\">x</div> -->\r\n            <mat-card-title style=\"margin-top: 5px;\">\r\n                Fev/02</mat-card-title>\r\n            <!-- <mat-card-subtitle style=\"border: 1px solid red;padding: 0px;margin: 0px;\">Fev/02</mat-card-subtitle> -->\r\n        </mat-card-header>\r\n        <!-- <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\"> -->\r\n        <mat-card-content style=\"border: 1px solid rgb(93, 93, 104);\">\r\n            <span *ngFor=\"let item of semanas; let i = index;\" style=\"border: 1px solid rgb(93, 93, 104); \r\n            font-weight:800;\r\n            display: flex;float: left;\r\n            margin-bottom: 3px;\r\n            align-items: center;\r\n            justify-content: center;\r\n            height: 20px;\r\n            width: 20px;\">{{item}}</span>\r\n\r\n            <span *ngFor=\"let item of calendarArray; let i = index;\" style=\"border: 1px solid rgb(93, 93, 104); display: flex;float: left;\r\n            align-items: center;\r\n            justify-content: center;\r\n            height: 20px;\r\n            width: 20px;\">{{i+1}}</span>\r\n\r\n        </mat-card-content>\r\n        <mat-card-actions>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</div>\r\n<br><br>\r\n<!-- <div class=\"parent\" style=\"height: 500px;\r\nwidth: 500px;border: 1px solid red;\r\nposition: relative;\">\r\n    <div class=\"container\" style=\"position: absolute;\r\n    top: 0;border: 1px solid red;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\">\r\n        <p>Hello</p>\r\n        <p>World</p>\r\n    </div>\r\n</div> -->\r\n<div class=\"container\">\r\n    <div class=\"col-6\">\r\n        <div id=\"main\" style=\"width: 600px;\r\nheight: 40px;\r\nborder: 1px solid black; \r\ndisplay: flex;\r\nalign-items: center;\r\n\">\r\n            <div style=\"height:30px;width: 40px;border-radius: 2px; flex: 1;background-color:coral;\"></div>\r\n            <div style=\"flex: 20;margin-left: 5px;\">Enfermagem nas Intercorrências Clínicas</div>\r\n            <!-- <div style=\"flex: 1;background-color:lightgreen;\">Green div with more content.</div> -->\r\n\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"col-6\">\r\n        <div id=\"main\" style=\"width: 600px;\r\n    height: 40px;\r\n    border: 1px solid black; \r\n    display: flex;\r\n    align-items: center;\r\n    \">\r\n            <div style=\"height:30px;width: 40px;border-radius: 2px; flex: 1;background-color:coral;\"></div>\r\n            <div style=\"flex: 20;margin-left: 5px;\">Enfermagem nas Intercorrências Clínicas</div>\r\n            <!-- <div style=\"flex: 1;background-color:lightgreen;\">Green div with more content.</div> -->\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<br>\r\n\r\n\r\n<mat-grid-list cols=\"2\">\r\n    <mat-grid-tile>\r\n\r\n        <div id=\"main\" style=\"width: 600px;\r\n        height: 40px;\r\n        border: 1px solid black; \r\n        display: flex;\r\n        align-items: center;\r\n        \">\r\n            <div style=\"height:30px;width: 40px;border-radius: 2px; flex: 1;background-color:coral;\"></div>\r\n            <div style=\"flex: 20;margin-left: 5px;\">Enfermagem nas Intercorrências Clínicas</div>\r\n            <!-- <div style=\"flex: 1;background-color:lightgreen;\">Green div with more content.</div> -->\r\n\r\n        </div>\r\n\r\n\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>\r\n        <div id=\"main\" style=\"width: 600px;\r\n        height: 40px;\r\n        border: 1px solid black; \r\n        display: flex;\r\n        align-items: center;\r\n        \">\r\n            <div style=\"height:30px;width: 40px;border-radius: 2px; flex: 1;background-color:coral;\"></div>\r\n            <div style=\"flex: 20;margin-left: 5px;\">Enfermagem nas Intercorrências Clínicas</div>\r\n            <!-- <div style=\"flex: 1;background-color:lightgreen;\">Green div with more content.</div> -->\r\n\r\n        </div>\r\n    </mat-grid-tile>\r\n    <mat-grid-tile>3</mat-grid-tile>\r\n    <mat-grid-tile>4</mat-grid-tile>\r\n</mat-grid-list>\r\n\r\n<br>\r\n\r\n<!-- <div *ngFor=\"let item of number[10]\">teste</div> -->\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"row justify-content-center\">\r\n        <div class=\"col\"> -->\r\n\r\n<div class=\"card-header\">\r\n    <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n        LEADS</h4>\r\n    <p class=\"card-category\"> </p>\r\n</div>\r\n\r\n<div class=\"container\">\r\n    <div style=\"margin-bottom:15px;\">\r\n        <div class=\"\">\r\n            <input multiple type=\"file\" #file placeholder=\"Choose file\" (change)=\"apendFile1(file.files)\"\r\n                style=\"display:none;\">\r\n            <button style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\" (click)=\"file.click()\">juntar CPF\r\n            </button>\r\n            <span style=\"font-size: 0.7em;\"><br>* formato aceito: excel (.xls)</span>\r\n        </div>\r\n        <div class=\"\">\r\n            <input multiple type=\"file\" #filex placeholder=\"Choose file\" (change)=\"apendFile2(filex.files)\"\r\n                style=\"display:none;\">\r\n            <button style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\" (click)=\"filex.click()\">juntar\r\n                RG</button>\r\n            <span style=\"font-size: 0.7em;\"><br>* formato aceito: excel (.xls)</span>\r\n        </div>\r\n        <div class=\"\">\r\n            <button style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\" (click)=\"removerCPF()\">remover\r\n                cpf</button>\r\n            <span style=\"font-size: 0.7em;\"><br>* formato aceito: excel (.xls)</span>\r\n        </div>\r\n        <div class=\"\">\r\n            <button style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\" (click)=\"removerRG()\">remover\r\n                rg</button>\r\n            <span style=\"font-size: 0.7em;\"><br>* formato aceito: excel (.xls)</span>\r\n        </div>\r\n        <div class=\"\">\r\n            <button style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\" (click)=\"verificar()\">ver</button>\r\n            <span style=\"font-size: 0.7em;\"><br>* formato aceito: excel (.xls)</span>\r\n        </div>\r\n\r\n        <div class=\"\">\r\n            <button style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\" (click)=\"uploadFile2()\">Exportar\r\n                Lead</button>\r\n            <span style=\"font-size: 0.7em;\"><br>* formato aceito: excel (.xls)</span>\r\n        </div>\r\n        <div class=\"\">\r\n            <span class=\"upload\" *ngIf=\"progress > 0\">\r\n                {{progress}}%\r\n            </span>\r\n            <span class=\"upload\" *ngIf=\"message\">\r\n                {{message}}\r\n            </span>\r\n        </div>\r\n    </div>\r\n\r\n    <hr>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n<br><br>\r\n<div class=\"container\">\r\n\r\n    <button (click)=\"getTeste()\">Get Image</button>\r\n    {{imagem}}\r\n    <img style=\"border: 1px solid red\" [src]=\"imagem\" alt=\"Your image\" style=\"display: block\" />\r\n    <div *ngIf=\"blobTeste.length > 0\">\r\n        teste blob\r\n        <div *ngFor=\"let item of blobTeste\">\r\n            <div *ngFor=\"let itemx of item.documentos\">\r\n                teste blobo\r\n                <img style=\"border: 1px solid red\" [src]=\"itemx.dataFile\" alt=\"Your image\" style=\"display: block\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<br>\r\n<br>\r\n\r\n<div (click)=\"downloadContrato()\">download PDF</div>\r\n\r\n<!-- <mat-form-field appearance=\"outline\" style=\"width: 13%; margin-left: 2%;\">\r\n    <mat-label>Dia</mat-label>\r\n    <input disabled name=\"templateName\" matInput [(value)]={nome ' ow'}>\r\n</mat-form-field> -->\r\n<br>\r\n\r\n<div>{{ capturar }}</div>\r\n\r\n<br>\r\n\r\n<form [formGroup]=\"parentForm\" novalidate>\r\n\r\n    <div formGroupName=\"_filhosum\">\r\n        <b>Name</b>\r\n        <br />\r\n        <label>First Name\r\n            <input type=\"text\" formControlName=\"nome\">\r\n            \r\n        </label>\r\n        <br />\r\n        <label>Last Name\r\n            <input type=\"text\" formControlName=\"sobrenome\">\r\n            \r\n        </label>\r\n    </div>\r\n    br/\r\n\r\n\r\n</form>\r\n\r\n\r\n<form [formGroup]=\"parentForm\" novalidate>\r\n\r\n    <div formGroupName=\"_filhodois\">\r\n        <b>Name</b>\r\n        <br />\r\n        <label>First Name\r\n            <input type=\"text\" formControlName=\"endereco\">\r\n            \r\n        </label>\r\n        <br />\r\n        <label>Last Name\r\n            <input type=\"text\" formControlName=\"bairro\">\r\n            \r\n        </label>\r\n    </div>\r\n    br/\r\n\r\n\r\n</form>\r\n\r\n<div (click)=\"enviarComDesativado()\"> ver form</div>\r\n\r\n<br>\r\n\r\ndate \r\n\r\n<form >\r\n    <mat-form-field appearance=\"standard\" style=\"width: 25%; \">\r\n        <mat-label>Date</mat-label>\r\n        <input  mask=\"00/00/0000\" required name=\"cpf\" matInput placeholder=\"cpf\" \r\n        [(ngModel)]=\"valor\"\r\n        (focusout)=\"onFocusOutDateEvent($event)\" \r\n            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n    </mat-form-field>\r\n    <button type=\"submit\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n        <mat-icon>search</mat-icon>\r\n    </button>\r\n</form>\r\n\r\n<mat-form-field appearance=\"fill\">\r\n                       \r\n    <input [(ngModel)]=\"dataPicker\" name=\"aval\"  matInput \r\n    [matDatepicker]=\"dp3\" >\r\n    <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n    <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n  </mat-form-field>\r\n\r\n<br>\r\n\r\n<div (click)=\"setValueDisabled()\">set value</div>\r\n\r\n<form [formGroup]=\"formDisabled\" novalidate>\r\n    <mat-form-field appearance=\"standard\" style=\"width: 25%; \">\r\n        <mat-label>nome</mat-label>\r\n        <input disabled [value]=\"formDisabled.get('nome').value\" required name=\"cpf\" matInput placeholder=\"cpf\" \r\n        \r\n            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 25%; \">\r\n        <mat-label>nome</mat-label>\r\n        <input disabled formControlName=\"sobrenome\"\r\n        [value]=\"formDisabled.get('sobrenome').value\" required name=\"cpf\" matInput placeholder=\"cpf\" \r\n        \r\n            >\r\n    </mat-form-field>\r\n\r\n    \r\n</form>\r\n\r\n<div (click)=\"setSobrenome()\">set sobrenome</div>\r\n<div (click)=\"verformdisable()\">ver form</div>\r\n<br>\r\nDate Input <br>\r\n<form [formGroup]=\"formDisabled\" novalidate>\r\n    <mat-form-field appearance=\"standard\" style=\"width: 25%; \">\r\n        <mat-label>nome</mat-label>\r\n        <input disabled [value]=\"formDisabled.get('nome').value\" required name=\"cpf\" matInput placeholder=\"cpf\" \r\n        \r\n            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n    </mat-form-field>\r\n\r\n    \r\n\r\n    \r\n</form>\r\n<br>\r\nPRINT PDF\r\n<br>\r\n<button (click)=\"generatePdf()\">Open PDF</button>\r\n\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<nav class=\"navbar navbar-expand navbar-light bg-primary d-flex justify-content-between\">\r\n    <div class=\"navbar-brand mb-0 h1 text-white\">ONLINE RESUME BUILDER</div>\r\n  </nav>\r\n  <div class=\"container-fluid\">\r\n    <form #resumeForm=\"ngForm\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-8\">\r\n          <div class=\"shadow-sm card\">\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title d-flex align-items-center\">\r\n                <i class=\"material-icons\">\r\n                  account_circle\r\n                </i>\r\n                Personal Details</h4>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.name\" name=\"name\" placeholder=\"Name\"\r\n                      #Name=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': Name.invalid && (Name.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <div class=\"form-group\">\r\n                      <textarea class=\"form-control\" [(ngModel)]=\"resume.address\" name=\"address\" rows=\"3\"\r\n                        placeholder=\"Address\" #Address=\"ngModel\" required\r\n                        [ngClass]=\"{'is-invalid': Address.invalid && (Address.touched || resumeForm.submitted) }\"></textarea>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.contactNo\" name=\"contactNo\"\r\n                      placeholder=\"Contact No.\" #ContactNo=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': ContactNo.invalid && (ContactNo.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.email\" name=\"emailId\"\r\n                      placeholder=\"Email ID\" #Email=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': Email.invalid && (Email.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.socialProfile\" name=\"socialProfile\"\r\n                      placeholder=\"Social Profile \">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Skills -->\r\n          <div class=\"shadow-sm card\">\r\n            <div class=\"card-body\">\r\n              <div class=\"d-flex justify-content-between card-title\">\r\n                <h4 class=\"d-flex align-items-center\">\r\n                  <i class=\"material-icons\">\r\n                    timeline\r\n                  </i>\r\n                  Skills</h4>\r\n                <button class=\"btn btn-primary\" (click)=\"addSkill()\">+</button>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-4\" *ngFor=\"let s of resume.skills; let i=index;\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" name=\"skill{{i}}\" [(ngModel)]=\"s.value\"\r\n                      placeholder=\"e.g. Java / Angular / .Net \" #Skill=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': Skill.invalid && (Skill.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n  \r\n          <!-- Experience -->\r\n          <div class=\"shadow-sm card\">\r\n            <div class=\"card-body\">\r\n              <div class=\"d-flex justify-content-between card-title\">\r\n                <h4 class=\"d-flex align-items-center\">\r\n                  <i class=\"material-icons\">\r\n                    timeline\r\n                  </i>\r\n                  Experience</h4>\r\n                <button class=\"btn btn-primary\" (click)=\"addExperience()\">+</button>\r\n              </div>\r\n              <div class=\"row\" *ngFor=\"let ex of resume.experiences; let i=index;\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" name=\"employer{{i}}\" [(ngModel)]=\"ex.employer\"\r\n                      placeholder=\"Employer\" #Employer=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': Employer.invalid && (Employer.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <div class=\"form-group\">\r\n                      <textarea class=\"form-control\" name=\"jobDescription{{i}}\" [(ngModel)]=\"ex.jobDescription\" rows=\"3\"\r\n                        placeholder=\"Job Description\"></textarea>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" name=\"jobTitle{{i}}\" [(ngModel)]=\"ex.jobTitle\"\r\n                      placeholder=\"Job Title\" #JobTitle=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': JobTitle.invalid && (JobTitle.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <input type=\"number\" class=\"form-control\" name=\"exInMonths{{i}}\" [(ngModel)]=\"ex.experience\"\r\n                      placeholder=\"Experience in months\" #Experience=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': Experience.invalid && (Experience.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n  \r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Education -->\r\n          <div class=\"shadow-sm card\">\r\n            <div class=\"card-body\">\r\n              <div class=\"d-flex justify-content-between card-title\">\r\n                <h4 class=\"d-flex align-items-center\">\r\n                  <i class=\"material-icons\">\r\n                    school\r\n                  </i>\r\n                  Education</h4>\r\n                <button class=\"btn btn-primary\" (click)=\"addEducation()\">+</button>\r\n              </div>\r\n              <div class=\"row\" *ngFor=\"let ed of resume.educations; let i=index;\">\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <select class=\"form-control\" placeholder=\"Degree\" name=\"degree{{i}}\" [(ngModel)]=\"ed.degree\"\r\n                      #Degree=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': Degree.invalid && (Degree.touched || resumeForm.submitted) }\">\r\n                      <option [value]=\"d\" *ngFor=\"let d of degrees\">{{d}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"text\" class=\"form-control\" name=\"college{{i}}\" [(ngModel)]=\"ed.college\"\r\n                      placeholder=\"School/College\" #College=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': College.invalid && (College.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"number\" class=\"form-control\" name=\"passingYear{{i}}\" [(ngModel)]=\"ed.passingYear\"\r\n                      placeholder=\"Passing Year\" #PassingYear=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': PassingYear.invalid && (PassingYear.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"form-group\">\r\n                    <input type=\"number\" class=\"form-control\" name=\"result{{i}}\" [(ngModel)]=\"ed.percentage\"\r\n                      placeholder=\"Percentage\" #Percentage=\"ngModel\" required\r\n                      [ngClass]=\"{'is-invalid': Percentage.invalid && (Percentage.touched || resumeForm.submitted) }\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Other Details -->\r\n  \r\n          <div class=\"shadow-sm card\">\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title d-flex align-items-center\">\r\n                <i class=\"material-icons\"> list </i>Other Details</h4>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                    <textarea type=\"text\" class=\"form-control\" [(ngModel)]=\"resume.otherDetails\" name=\"otherDetails\"\r\n                      rows=\"4\"></textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"col-md-4\">\r\n          <div class=\"shadow-sm card action-buttons\">\r\n            <button (click)=\"resumeForm.valid ? generatePdf('open') : ''\"\r\n              class=\"btn btn-primary d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons\">\r\n                picture_as_pdf\r\n              </i> <span>Open PDF</span></button>\r\n            <button (click)=\"resumeForm.valid ? generatePdf('download') : ''\"\r\n              class=\"btn btn-primary d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons\">\r\n                cloud_download\r\n              </i><span>Download PDF</span></button>\r\n            <button (click)=\"resumeForm.valid ? generatePdf('print') : ''\"\r\n              class=\"btn btn-primary d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons\">\r\n                print\r\n              </i><span>Print PDF</span></button>\r\n  \r\n            <button type='reset' (click)=\"resetForm()\"\r\n              class=\"btn btn-primary d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons\">\r\n                clear\r\n              </i><span>Reset</span></button>\r\n          </div>\r\n  \r\n          <div class=\"card p-4\">\r\n            <div class=\"form-group\">\r\n              <label class=\"h4 mb-3\" for=\"\">Show your picture in Resume</label>\r\n              <input type=\"file\" class=\"form-control-file\" (change)=\"fileChanged($event)\" aria-describedby=\"fileHelpId\">\r\n            </div>\r\n            <img *ngIf=\"resume.profilePic\" [src]=\"resume.profilePic\" class=\"img-thumbnail\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <br><br><br>\r\n\r\n  <div class=\"row\" style=\"margin-bottom:15px;\">\r\n    <div class=\"\">\r\n        <input multiple type=\"file\" #file placeholder=\"Choose file\" (change)=\"uploadFileEXCEL(file.files)\"\r\n            style=\"display:none;\">\r\n        <button style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\" (click)=\"file.click()\">Exportar\r\n            Lead</button>\r\n        <span style=\"font-size: 0.7em;\"><br>* formato aceito: excel (.xls)</span>\r\n    </div>\r\n    <div class=\"\">\r\n        <!-- <span class=\"upload\" *ngIf=\"progress > 0\">\r\n            {{progress}}%\r\n        </span>\r\n        <span class=\"upload\" *ngIf=\"message\">\r\n            {{message}}\r\n        </span> -->\r\n    </div>\r\n</div>\r\n\r\n<br><br><br>\r\nFORMARRAY\r\n<br>\r\n<!-- <ng-container formArrayName=\"materias\">\r\n\r\n  <ng-container *ngFor=\"let lessonForm of materias.controls; let i = index;\">\r\n\r\n      <div class=\"lesson-form-row\" [formGroup]=\"lessonForm\">\r\n          <mat-form-field appearance=\"fill\">\r\n              <input matInput\r\n                     formControlName=\"title\"\r\n                     placeholder=\"Lesson title\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field appearance=\"fill\" style=\"margin-left: 5%;\">\r\n              <mat-select formControlName=\"level\"\r\n                      placeholder=\"Lesson level\">\r\n                  <mat-option value=\"beginner\">Beginner</mat-option>\r\n                  <mat-option value=\"intermediate\">Intermediate</mat-option>\r\n                  <mat-option value=\"advanced\">Advanced</mat-option>\r\n              </mat-select>\r\n          </mat-form-field>\r\n          <mat-icon class=\"delete-btn\" (click)=\"deleteLesson(i)\">\r\n              delete_forever</mat-icon>\r\n      </div>\r\n  </ng-container>\r\n\r\n</ng-container> -->\r\n\r\n<br><br><br>\r\n\r\n<angular-editor color=\"primary\" disabled [placeholder]=\"'Enter text here...'\" [(ngModel)]=\"conteudo\"></angular-editor>\r\n\r\n<angular-editor  [config]=\"editorConfig\"></angular-editor>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\n\r\n@Component({\r\n    selector: 'confirm-acao-modal',\r\n    templateUrl: './confirm-acao.component.html',\r\n    styleUrls: ['./confirm-acao.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ConfirmAcaoModalComponent implements OnInit {\r\n    \r\n    constructor(\r\n        public dialogRef: MatDialogRef<ConfirmAcaoModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    confirmar() {\r\n\r\n        this.dialogRef.close({ clicked: true });\r\n\r\n    }\r\n\r\n    cancelar() {\r\n        this.dialogRef.close({ clicked: false });\r\n    }\r\n}","<div class=\"container\">\r\n\r\n    <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n\r\n        <div style=\"font-size: 1.2em;\"></div>\r\n\r\n        <div style=\"font-size: 1.1em;\">\r\n            Deseja confirmar a ação?\r\n        </div>\r\n\r\n    </div>\r\n   \r\n    <div>\r\n        <i style=\"margin-left: 5px;float: left;margin-left: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"confirmar\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n            <button (click)=\"confirmar()\" style=\"color: green;\" mat-icon-button>\r\n                <mat-icon>done</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <i style=\"margin-left: 5px;float: left;margin-left: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"cancelar\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n            <button (click)=\"cancelar()\" style=\"color: red;\" mat-icon-button>\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n    </div>\r\n\r\n</div>","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'sanitizeHtml'\r\n})\r\nexport class SanitizeHtmlPipe implements PipeTransform {\r\n\r\n  constructor(private _sanitizer:DomSanitizer) {\r\n  }\r\n\r\n  transform(v:string):SafeHtml {\r\n    return this._sanitizer.bypassSecurityTrustHtml(v);\r\n  }\r\n}","import { Component, Inject, OnInit, Pipe, PipeTransform } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n//import { GenericTask } from 'src/app/shared/models/generictask.model';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n//import { AdmService } from '../../adm.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nimport { Sala } from \"../../adm-models/sala.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { UpperCasePipe } from \"@angular/common\";\r\n//import { Cargo } from \"../../Adm-Models/cargos.model\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Pipe({ name: 'myPipe' })\r\nexport class MyPipe implements PipeTransform {\r\n    transform(val?: any) {\r\n        console.log(val)\r\n        return val?.toUpperCase()\r\n\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'createunidademodal',\r\n    templateUrl: './createunidade.component.html',\r\n    styleUrls: ['./createunidade.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class CreateUnidadeComponent implements OnInit {\r\n\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n    // pageEvent: PageEvent;\r\n    public saveSpinner = 'hidden'\r\n    public showMensagem = 'hidden'\r\npublic msgErros: any;\r\n    testepipe: any\r\n    private _baseUrl = environment.baseUrl\r\n    public unidadeForm: FormGroup;\r\n    public colaboradorForm: FormGroup;\r\n    //public salas: Sala[] \r\n    constructor(\r\n        //private service: AdmService,\r\n        private upperCasePipe: UpperCasePipe,\r\n        private _helper: HelpersService,\r\n        private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog,\r\n        public dialogRef: MatDialogRef<CreateUnidadeComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.unidadeForm = this._fb.group({\r\n            descricao: ['', [Validators.required]],\r\n            sigla: ['', [Validators.required, Validators.maxLength(3), Validators.minLength(3)]],\r\n            cnpj: ['', [Validators.required]],\r\n            cep: ['', [Validators.required, Validators.maxLength(8), Validators.minLength(8)]],\r\n            complemento: [''],\r\n            numero: ['', [Validators.required]],\r\n            logradouro: ['', [Validators.required]],\r\n            bairro: ['', [Validators.required]],\r\n            cidade: ['', [Validators.required]],\r\n            uf: ['', [Validators.required]],\r\n            ativo: [true],\r\n        })\r\n\r\n       \r\n    }\r\n\r\n    get habilitarBotao() {\r\n        // console.log(this.unidadeForm.valid)\r\n        // console.log(this.colaboradorForm.valid)\r\n        if (this.unidadeForm.valid && this.colaboradorForm.valid) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n\r\n    }\r\n    ngOnInit() {\r\n\r\n       // this.getCargos();\r\n    }\r\n\r\n    cargos: any[] = new Array<any>()\r\n    getCargos() {\r\n\r\n        this._http.get(`${this._baseUrl}/unidade/cargo`)\r\n            .subscribe(response => {\r\n                this.cargos = Object.assign([], response)\r\n            }, (err) => {\r\n                console.log(err)\r\n            },\r\n                () => { \r\n                    console.log(this.cargos)\r\n                    //this.showForm = true\r\n                });\r\n    }\r\n\r\n    log() {\r\n        console.log(this.unidadeForm.value)\r\n        console.log(this.colaboradorForm.value)\r\n        console.log(this.testepipe)\r\n\r\n        // if (form.valid) {\r\n        var command = { unidade: this.unidadeForm.value, colaborador: this.colaboradorForm.value}\r\n            this._http.post(`${this._baseUrl}/unidade`, command, {})\r\n                .subscribe(resp => { },\r\n                    (error) => { console.log(error) },\r\n                    () => { this.dialogRef.close({ clicked: \"OK\" }) })\r\n\r\n       // }\r\n    }\r\n\r\n    onSubmit(form: any) {\r\n        this.showMensagem = 'hidden'\r\n\r\n        if (form.valid) {\r\n            this.saveSpinner = 'visible'\r\n            this._http.post(`${this._baseUrl}/unidade`, this.unidadeForm.value, {})\r\n                .subscribe(resp => { },\r\n                    (error) => { \r\n                        this.saveSpinner = 'hidden'\r\n                        this.msgErros = error['error'].msg\r\n                        this.showMensagem = 'visible'\r\n                        this.saveSpinner = 'hidden'\r\n                     },\r\n                    () => { \r\n                        this._helper.openSnackBarSucesso('Unidade criada sucesso')\r\n                        this.dialogRef.close({ clicked: \"Ok\" }) })\r\n\r\n        }\r\n    }\r\n\r\n    consultaCEP(CEP: string, form) {\r\n        console.log(CEP);\r\n        console.log(form.controls['cep'].valid);\r\n        console.log(form.controls['cep'].value)\r\n        if (form.controls['cep'].value) {\r\n\r\n            this._http.get(`https://viacep.com.br/ws/${CEP}/json/`, {})\r\n                .subscribe(response => {\r\n\r\n                    // console.log(response)\r\n                    form.get('logradouro').setValue(response[\"logradouro\"]);\r\n                    form.get('bairro').setValue(response[\"bairro\"]);\r\n                    form.get('cidade').setValue(response[\"localidade\"]);\r\n                    form.get('uf').setValue(response[\"uf\"]);\r\n                }, err => { console.log(err) },\r\n                    () => {\r\n                        // console.log('finaly') \r\n                    });\r\n        }\r\n    }\r\n\r\n    get saveButton(){\r\n\r\n        if(this.unidadeForm.valid){\r\n            return this.saveSpinner != 'hidden'\r\n        }else{\r\n            return true\r\n        }\r\n    }    \r\n\r\n}","<div style=\"font-size: 1.2em;\">Cadastrar Unidade\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<hr>\r\n\r\n<div>\r\n\r\n\r\n    <form novalidate [formGroup]=\"unidadeForm\" (ngSubmit)=\"onSubmit(unidadeForm)\" >\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 45%;\">\r\n            <mat-label>Nome da unidade</mat-label>\r\n            <input formControlName=\"descricao\" name=\"templateName\" matInput\r\n                oninput=\"this.value = this.value.toUpperCase()\" placeholder=\"Invictus Bairro Tal...\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 5%;\">\r\n            <mat-label>Sigla</mat-label>\r\n            <input selected formControlName=\"sigla\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                minlength=\"3\" maxlength=\"3\" placeholder=\"ex: ALC\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 25%; margin-left: 5%;\">\r\n            <mat-label>CNPJ</mat-label>\r\n            <input selected mask=\"00.000.000/0000-00\" formControlName=\"cnpj\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" name=\"cnpj\" matInput\r\n                placeholder=\"00.000.000/0000-00\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 18%\">\r\n            <mat-label>CEP</mat-label>\r\n            <input mask=\"00.000-000\" onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                formControlName=\"cep\" minlength=\"8\" maxlength=\"10\" required matInput placeholder=\"apenas números\">\r\n        </mat-form-field>\r\n\r\n        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button type=\"button\" (click)=\"consultaCEP(unidadeForm.get('cep').value, unidadeForm)\"\r\n                style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 40%\">\r\n            <mat-label>Logradouro</mat-label>\r\n            <input formControlName=\"logradouro\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                placeholder=\"ex: rua tal...\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 10%;margin-left: 5%;\">\r\n            <mat-label>Nº</mat-label>\r\n            <input formControlName=\"numero\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                placeholder=\"ex: rua tal...\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 40%; margin-left: 5%;\">\r\n            <mat-label>Complemento</mat-label>\r\n            <input formControlName=\"complemento\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%\">\r\n            <mat-label>Cidade</mat-label>\r\n            <input disabled [value]=\"unidadeForm.get('cidade').value\" name=\"templateName\" matInput\r\n                placeholder=\"digite o bairro\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 6%; margin-left: 5%;\">\r\n            <mat-label>UF</mat-label>\r\n            <input disabled [value]=\"unidadeForm.get('uf').value\" name=\"templateName\" matInput\r\n                placeholder=\"digite o bairro\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%; margin-left: 5%\">\r\n            <mat-label>Bairro</mat-label>\r\n            <input formControlName=\"bairro\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                placeholder=\"digite o bairro\">\r\n        </mat-form-field>\r\n\r\n        <mat-progress-bar [style.visibility]=\"saveSpinner\" @rowHighlight \r\n        style=\"margin-top:10px\" mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <span [style.visibility]=\"showMensagem\"  \r\n            style=\"width: 480px; text-align: left; vertical-align: middle;\r\n            float:left;margin-top: 15px;\r\n                padding: 0px;\">\r\n                <div *ngFor=\"let erro of msgErros; \" style=\"font-size: 0.8em;color: red;\">\r\n                    * {{ erro }}\r\n                </div>\r\n            </span>\r\n\r\n        <span style=\"float: right;margin-top: 10px;\">\r\n            <button type=\"submit\" mat-raised-button color=\"primary\" \r\n            [disabled]=\"saveButton\"\r\n                style=\"\">\r\n                Salvar\r\n            </button>\r\n        </span>\r\n\r\n    </form>\r\n\r\n\r\n    <br>\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { environment } from \"src/environments/environment\";\r\n//import { Unidade } from \"../Adm-Models/unidade.model\";\r\nimport { CreateUnidadeComponent } from \"./CreateModal/createunidade.component\";\r\nimport { CreateSalaComponent } from \"./CreateSalaModal/createsala.component\";\r\nimport { SalaEditarComponent } from \"./EditarSala/sala-editar.component\";\r\nimport { EditUnidadeComponent } from \"./EditModal/editunidade.component\";\r\n\r\n@Component({\r\n    selector: \"unidades-app\",\r\n    templateUrl: './unidades.component.html',\r\n    styleUrls: ['./unidades.component.scss']\r\n})\r\n\r\nexport class UnidadesComponent implements OnInit {\r\n\r\n    private _baseUrl = environment.baseUrl;\r\n    //public salas: Sala[] = new Array<Sala>();\r\n    public unidades: any[] = new Array<any>()\r\n    public spinnerSearch = 'visible'\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private unidadeCreateModal: MatDialog,\r\n        private unidadeEditModal: MatDialog) { }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n        this.getUnidades();\r\n\r\n    }\r\n\r\n    getUnidades() {\r\n\r\n        this._http.get(`${this._baseUrl}/unidade`)\r\n            .subscribe(response => {\r\n\r\n                Object.assign(this.unidades, response['unidades'])\r\n            },\r\n                (error) => { \r\n                    this.spinnerSearch = 'hidden'\r\n                 },\r\n                () => {\r\n                    this.spinnerSearch = 'hidden'\r\n                })\r\n\r\n    }\r\n\r\n    \r\n    openUnidadeCreateModal(): void {\r\n        const dialogRef = this.unidadeCreateModal\r\n            .open(CreateUnidadeComponent, {\r\n                height: '450px',\r\n                width: '650px',\r\n                //data: {  },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                this.getUnidades();\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n    \r\n    openEditUnidade(unidade: any): void {\r\n        const dialogRef = this.unidadeEditModal\r\n            .open(EditUnidadeComponent, {\r\n                //height: '450px',\r\n                width: '670px',\r\n                data: { unidade: unidade },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"OK\") {\r\n                this.getUnidades();\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    addSala(unidade: any): void {\r\n        const dialogRef = this.unidadeEditModal\r\n            .open(CreateSalaComponent, {\r\n                height: 'auto',\r\n                width: '600px',\r\n                data: { unidade: unidade},\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                this.getUnidades();\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    editSala(unidade): void {\r\n        const dialogRef = this.unidadeEditModal\r\n            .open(SalaEditarComponent, {\r\n               // height: 'auto',\r\n                width: '600px',\r\n                data: { unidade: unidade},\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"OK\") {\r\n                this.getUnidades();\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n}","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <div>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"criar unidade\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openUnidadeCreateModal()\" mat-icon-button>\r\n                <mat-icon>home</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n\r\n    <br>\r\n    <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"spinnerSearch\"  @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n    </mat-progress-bar>\r\n    <!-- <div class=\"row justify-content-center\">\r\n        <div class=\"col\"> -->\r\n    <div *ngIf=\"unidades.length > 0\" class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n            position: relative;\r\n            margin-top: 20px;\r\n            box-shadow: 0 0 1em rgb(172, 170, 170);\r\n            background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Unidades</h4>\r\n            <p class=\"card-category\">\r\n                Unidades cadastradas no sistema:\r\n            </p>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 7%; \r\n                    text-align:center; font-size: 1em;\r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 25%;font-size:1em;\r\n                                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">UNIDADE</th>\r\n\r\n                            <th style=\"width: 25%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">BAIRRO</th>\r\n\r\n                            <!-- <th style=\"width: 20%;font-size:1.5em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Ativo</th> -->\r\n\r\n                            <th style=\"width: 25%;vertical-align: middle;\r\n                                    text-align:center;  font-size: 1em;font-weight: 400;\r\n                    border-top: 0px;\">SALAS<br>CADASTRADAS</th>\r\n\r\n                            <th style=\"width: 18%;\r\n                    border-top: 0px;\">\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"criar usuário\"\r\nmatTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n<button (click)=\"openCreateUserModal()\"\r\n    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n    mat-icon-button>\r\n    <mat-icon>plus_one</mat-icon>\r\n</button>\r\n</i> -->\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let uni of unidades; let i = index;\">\r\n                            <td style=\"text-align:center;vertical-align: middle;\">{{ i+1 }}</td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">\r\n                                {{uni.descricao}} - {{uni.sigla}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                {{uni.bairro}}\r\n                            </td>\r\n\r\n                            <!-- <td style=\"text-align: center;vertical-align: middle;\">\r\n                                        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"ativo\"\r\n                                            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                            <button style=\"margin: 0px; margin: 0px;color: green;\" mat-icon-button>\r\n                                                <mat-icon>done</mat-icon>\r\n                                            </button>\r\n                                        </i>\r\n                                    </td> -->\r\n\r\n                            <td style=\"position: relative;vertical-align: middle;\r\n                                    text-align:center;\">\r\n                                <!-- <ng-container style=\"vertical-align: middle;\r\n                                        text-align:center;\" *ngIf=\"uni.salas.length > 0\"> -->\r\n                                {{ uni.salas.length }}\r\n                                <!-- </ng-container> -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            </td>\r\n                            <td style=\"position: relative;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"editar/visualizar unidade\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openEditUnidade(uni)\" style=\"margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n                                |\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"criar sala\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"addSala(uni)\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                        <mat-icon>meeting_room</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"editar sala\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"editSala(uni)\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                        <mat-icon>build</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n//import { Contrato } from \"../contrato.component\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n\r\n\r\n\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'editcontratomodal',\r\n    templateUrl: './editcontrato.component.html',\r\n    styleUrls: ['./editcontrato.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class EditarContratoComponent implements OnInit {\r\n    public htmlContent: any;\r\n    showSpinnerSearch = true\r\n    baseUrl = environment.baseUrl;\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    public contratoForm: FormGroup;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public validadeEmailMsg = false\r\n    public validadeCPFMsg = false\r\n    cargos = Cargos;\r\n    mensagem = \"\";\r\n    showMensagem = false\r\n    public contrato: any;\r\n    public originalContrato: any;\r\n    public showForm = false\r\n\r\n    unidades = Unidades;\r\n    constructor(\r\n        private sanitizer: DomSanitizer,\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<EditarContratoComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.contratoForm = _fb.group({\r\n            titulo: ['', [Validators.required]],\r\n            conteudo: ['', [Validators.required]],\r\n\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.GetContrato(this.data['contrato'].id)\r\n    }\r\n\r\n    private GetContrato(contratoId: number) {\r\n\r\n        this._http.get(`${this.baseUrl}/contrato/${contratoId}`)\r\n            .subscribe(resp => {\r\n                this.contrato = Object.assign({}, resp['contrato'])\r\n                this.originalContrato = Object.assign({}, resp['contrato'])\r\n                console.log(this.contrato)\r\n            }, (error) => {\r\n                console.log(error)\r\n                this.showSpinnerSearch = false\r\n\r\n            },\r\n                () => {\r\n                    this.showForm = true\r\n                    this.showSpinnerSearch = false\r\n                })\r\n    }\r\n\r\n    onSubmit(form: any) {\r\n\r\n        console.log(form.valid)\r\n        console.log(form.value)\r\n        console.log(this.contrato)\r\n\r\n        if (form.valid) {\r\n            this._http.put(`${this.baseUrl}/contrato`, this.contrato, {})\r\n                .subscribe(resp => {\r\n\r\n                }, (error) => { console.log(error) },\r\n                    () => {\r\n                        this.dialogRef.close({ clicked: \"Ok\" });\r\n                    })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    disabledButton(form: any) {\r\n       // console.log(form.valid)\r\n       //angular.equals(obj1, obj2)\r\n\r\n       if (form.valid) {\r\n        \r\n            return false\r\n        } else {\r\n        \r\n            return true\r\n        }\r\n        // if ((JSON.stringify(this.contrato) !== JSON.stringify(this.originalContrato)) && \r\n        // form.valid) {\r\n        \r\n        //     return false\r\n        // } else {\r\n        \r\n        //     return true\r\n        // }\r\n    }\r\n\r\n    // safeHTML(unsafe: string) {\r\n    //     return this.sanitizer.bypassSecurityTrustHtml(unsafe);\r\n    // }\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Editar Contrato\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar @rowHighlight *ngIf=\"showSpinnerSearch\" style=\"margin:0px\" mode=\"query\"></mat-progress-bar>\r\n\r\n<ng-container *ngIf=\"showForm\">\r\n    <hr>\r\n    <form @rowHighlight novalidate #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 100px; \">\r\n            <mat-label>Código</mat-label>\r\n            <input selected [value]=\"contrato.codigoContrato\" disabled required matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 250px; \">\r\n            <mat-label>Título</mat-label>\r\n            <input selected [(ngModel)]=\"contrato.titulo\" required name=\"titulo\" matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-slide-toggle style=\"width: 70px; margin-left: 40px;\" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n            [(ngModel)]=\"contrato.ativo\" name=\"ativo\" required matTooltip=\"ativo/inativo\" [required]=\"false\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"250\" color=\"primary\">\r\n        </mat-slide-toggle>\r\n        <br>\r\n\r\n        <div>\r\n\r\n            <angular-editor color=\"primary\" [placeholder]=\"'Enter text here...'\" [(ngModel)]=\"contrato.conteudo\" required\r\n                name=\"conteudo\"></angular-editor>\r\n\r\n            <br>\r\n\r\n            <button type=\"submit\" color=\"primary\" mat-raised-button [disabled]=\"disabledButton(form)\"\r\n                style=\"float:right;margin-bottom: 0px;margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n\r\n            <br>\r\n\r\n        </div>\r\n\r\n\r\n\r\n    </form>\r\n</ng-container>","import { trigger, style, state, transition, animate } \r\nfrom \"@angular/animations\";\r\n\r\n\r\nexport const HighlightTrigger = trigger(\"rowHighlight\", [\r\n    state(\"void\", style({opacity: 0 })),  \r\n    transition(\"void => *\", animate(\"500ms\")),\r\n    state(\"closed\", style({opacity: 0 })),  \r\n    transition(\"void => *\", animate(\"500ms\"))\r\n]);","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[numbersOnly]'\r\n})\r\nexport class OnlynumberDirective {\r\n\r\n  constructor(private _el: ElementRef) { }\r\n\r\n  @HostListener('input', ['$event']) onInputChange(event) {\r\n    const initalValue = this._el.nativeElement.value;\r\n\r\n    this._el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\r\n    if ( initalValue !== this._el.nativeElement.value) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}","export class MyTime {\r\n    constructor(\r\n        public hora: string,\r\n        public minuto: string\r\n        \r\n    ) { }\r\n\r\n    customTime() {\r\n        var time: string = `${this.hora}:${this.minuto}`;\r\n        return time\r\n    }\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Component({\r\n    selector: 'confirmdialog',\r\n    templateUrl: 'confirmariniciar.component.html',\r\n    animations: [HighlightTrigger]\r\n})\r\nexport class ConfirmarIniciarTurmaModal {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    public msg: string = ''\r\n    public url: string = ''\r\n    public hidden = 'hidden'\r\n    public disabledSaveButton = false\r\n\r\n    constructor(\r\n        private _helper: HelpersService,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<ConfirmarIniciarTurmaModal>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n        confirmar() {\r\n            this.hidden = 'visible'\r\n            this.disabledSaveButton = true\r\n\r\n            this._http.put(`${this.baseUrl}/turma/iniciar/${this.data['turmaId']}`, {\r\n\r\n                }).subscribe(result => {\r\n\r\n                },\r\n                    (error) => { \r\n                        this._helper.openSnackBarErrorDefault()\r\n                        this.dialogRef.close({ clicked: false });\r\n                    },\r\n                    () => {\r\n                        this._helper.openSnackBarSucesso(\"Turma iniciada com sucesso.\")\r\n                        this.dialogRef.close({ clicked: true });\r\n                    }\r\n                )\r\n        }\r\n    \r\n        cancelar() {\r\n            \r\n            this.dialogRef.close({ clicked: false });\r\n        }\r\n}","<div class=\"container\">\r\n    <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n\r\n        <div style=\"font-size: 1.2em;\"></div>\r\n        <div style=\"font-size: 1.1em;\">\r\n            Tem certeza que deseja iniciar a turma?\r\n        </div>\r\n    </div>\r\n    \r\n\r\n    <mat-progress-bar [style.visibility]=\"hidden\" @rowHighlight mode=\"query\"></mat-progress-bar>\r\n\r\n    <div>\r\n        <i style=\"margin-left: 5px;float: left;margin-left: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"confirmar\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n            <button (click)=\"confirmar()\" [disabled]=\"disabledSaveButton\" style=\"color: green;\" mat-icon-button>\r\n                <mat-icon>done</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <i style=\"margin-left: 5px;float: left;margin-left: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"cancelar\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n            <button (click)=\"cancelar()\" [disabled]=\"disabledSaveButton\" style=\"color: red;\" mat-icon-button>\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\n\r\n@Component({\r\n    selector: 'edit-bolsamodal',\r\n    templateUrl: './edit-bolsa.component.html',\r\n    styleUrls: ['./edit-bolsa.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class EditBolsaComponent implements OnInit {\r\n\r\n    public initProgressBar = 'visible'\r\n    public showContent = false\r\n    // public typesPacotes: any;\r\n    public originalBolsa: any\r\n    public bolsaForm: FormGroup\r\n\r\n    constructor(\r\n        private _admService: AdmService,\r\n        private _fb: FormBuilder,\r\n        public dialogRef: MatDialogRef<EditBolsaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.bolsaForm = _fb.group({\r\n            id: [''],\r\n            nome: ['', [Validators.required]],\r\n            percentualDesconto: ['', [Validators.required, Validators.min(1), Validators.max(100)]],\r\n            typePacoteId: ['', [Validators.required]],\r\n            dataExpiracao: ['', [Validators.required]],\r\n            senha: [''],\r\n            colaborador: [''],\r\n            unidadeId: [''],\r\n            dataCriacao: ['']\r\n\r\n\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.GetBolsa();\r\n    }\r\n\r\n    GetBolsa() {\r\n        this.initProgressBar = 'visible'\r\n        this._admService.GetBolsa(this.data['bolsaId'])\r\n            .subscribe(\r\n                sucesso => { this.GetBolsaSucesso(sucesso) },\r\n                falha => { this.GetBolsaErro(falha) }\r\n            )\r\n\r\n    }\r\n\r\n    GetBolsaSucesso(resposta) {\r\n        this.bolsaForm.patchValue(resposta['bolsa']);\r\n        this.bolsaForm.patchValue(resposta['bolsa']);\r\n        this.originalBolsa = JSON.parse(JSON.stringify(this.bolsaForm.value))\r\n        this.initProgressBar = 'hidden'\r\n        this.dialogRef.addPanelClass('editbolsa-class')\r\n        this.showContent = true\r\n    }\r\n\r\n    GetBolsaErro(error) {\r\n        this.initProgressBar = 'hidden'\r\n    }\r\n\r\n    disabledSaveButton = 'hidden'\r\n    get disabledButton() {\r\n        if (this.bolsaForm.valid &&\r\n            JSON.stringify(this.originalBolsa) !=\r\n            JSON.stringify(this.bolsaForm.value)) {\r\n\r\n            return this.disabledSaveButton != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    onSubmit(form) {\r\n\r\n        if (this.bolsaForm.valid) {\r\n            this.disabledSaveButton = 'visible'\r\n            this._admService.EditBolsa(this.bolsaForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.onSubmitSucesso(sucesso) },\r\n                    falha => { this.onSubmitErro(falha) }\r\n                )\r\n        }\r\n    }\r\n\r\n    onSubmitSucesso(resp) {\r\n        this.disabledSaveButton = 'hidden'\r\n        //console.log(resp['senha'])\r\n        this.dialogRef.close({ clicked: true })\r\n    }\r\n\r\n    onSubmitErro(error) {\r\n        this.disabledSaveButton = 'hidden'\r\n        console.log(error)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","<div style=\"font-size: 1.1em;\">Editar Bolsa\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n<div @rowHighlight *ngIf=\"showContent\">\r\n    <hr>\r\n\r\n    <form novalidate [formGroup]=\"bolsaForm\" style=\"\"\r\n        (ngSubmit)=\"onSubmit(bolsaForm)\">\r\n\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n            <mat-label></mat-label>\r\n            <mat-select [disabled]=\"typesPacotes.length == 0\" formControlName=\"typePacoteId\">\r\n                <mat-option></mat-option>\r\n                <mat-option *ngFor=\"let pac of typesPacotes\" [value]=\"pac.id\">{{pac.nome}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n            <mat-label>Nome</mat-label>\r\n            <input selected formControlName=\"nome\" matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 100px; \">\r\n            <mat-label>Percentual desconto</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n            maxlength=\"3\"\r\n            selected formControlName=\"percentualDesconto\" matInput placeholder=\"Percentual\">\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 150px;margin-left: 10px;  \">\r\n            <mat-label>Data de expiração</mat-label>\r\n            <input selected formControlName=\"dataExpiracao\" matInput>\r\n        </mat-form-field> -->\r\n        <mat-form-field appearance=\"standard\" style=\"width: 160px;margin-left: 10px;  \">\r\n            <mat-label>Data de expiração</mat-label>\r\n            <input matInput formControlName=\"dataExpiracao\" [matDatepicker]=\"dp3\" disabled>\r\n            <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n          </mat-form-field>\r\n\r\n\r\n        <mat-progress-bar [style.visibility]=\"disabledSaveButton\" @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n        </mat-progress-bar>\r\n        <div style=\"float: right;margin-top: 15px;\">\r\n\r\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"disabledButton\" \r\n            style=\"width: 100px; position: relative; float:right;margin-bottom: 10px;\r\n            margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n        </div>\r\n\r\n    </form>\r\n\r\n</div>\r\n\r\n\r\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { Debito } from \"src/app/_shared/models/InfoFinanceiras.model\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { BalancoProdutos } from \"../FinanceiroModels/balancoproduto.model\";\r\nimport { CaixaDiarioComponent } from \"./caixadiario/caixadiario.component\";\r\nimport { VendaCaixaComponent } from \"./venda/vendacaixa.component\";\r\nimport { VendaUnidadeComponent } from \"./vendaUnidade/vendaunidade.component\";\r\n\r\n@Component({\r\n    selector: \"fincaixa-app\",\r\n    templateUrl: './fincaixa.component.html',\r\n    styleUrls: ['./fincaixa.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class FinCaixaComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    showMessageNoColaborador = false\r\n    mensagem: string = \"\";\r\n\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    private jwtHelper = new JwtHelperService();\r\n    //public debitos: Debito[] = new Array<Debito>()\r\n    public balancoProdutos: BalancoProdutos[] = new Array<BalancoProdutos>();\r\n    //pagination\r\n    range = new FormGroup({\r\n        start: new FormControl(),\r\n        end: new FormControl()\r\n    });\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog\r\n        //private EditColaboradoresModal: MatDialog\r\n    ) { }\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    totalVendas: number;\r\n    pesquisarData(){\r\n        \r\n        console.log(this.range.value[\"end\"])\r\n\r\n        console.log(this.range.value[\"end\"])\r\n\r\n        this._http.get(`${this.baseUrl}/financeiro/produtos-venda/?start=${new Date(this.range.value[\"start\"]).toLocaleString()}&end=${new Date(this.range.value[\"end\"]).toLocaleString()}`)\r\n            .subscribe(resp => {\r\n                console.log(resp['vendas'])\r\n                console.log(resp['total'])\r\n                this.totalVendas = resp['total']\r\n                this.balancoProdutos = Object.assign([], resp['vendas']);\r\n            },\r\n                (error) => { console.log(error) },\r\n                () => { })\r\n\r\n\r\n    }\r\n    submitSearch(form:any) {\r\n        console.log(this.range)\r\n    }\r\n\r\n    \r\n\r\n\r\n    openCaixaModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(VendaCaixaComponent, {\r\n                height: 'auto',\r\n                width: '900px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                maxWidth: '400vh',\r\n\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                // Reset form here\r\n                console.log('afte close ok')\r\n                //this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n    openVendaUnidades(): void {\r\n        const dialogRef = this._modal\r\n            .open(VendaUnidadeComponent, {\r\n                height: 'auto',\r\n                width: '900px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                maxWidth: '400vh',\r\n\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                // Reset form here\r\n                console.log('afte close ok')\r\n                //this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n    openCaixaDiario(): void {\r\n        const dialogRef = this._modal\r\n            .open(CaixaDiarioComponent, {\r\n                height: 'auto',\r\n                width: '900px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                maxWidth: '400vh',\r\n\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                // Reset form here\r\n                console.log('afte close ok')\r\n                //this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <div>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"vender produto\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openCaixaModal()\" disabled mat-icon-button>\r\n                <mat-icon>point_of_sale</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <!-- <i style=\"margin-left: 20px;\" #tooltip=\"matTooltip\" matTooltip=\"doacao entre unidades\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openDoacao()\" mat-icon-button>\r\n                <mat-icon>volunteer_activism</mat-icon>\r\n            </button>\r\n        </i> -->\r\n\r\n        <i style=\"margin-left: 20px;\" #tooltip=\"matTooltip\" matTooltip=\"venda entre unidades\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openVendaUnidades()\" disabled mat-icon-button>\r\n                <mat-icon>local_atm</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        \r\n    </div>\r\n\r\n    <br>\r\n\r\n\r\n    <form novalidate [formGroup]=\"range\" (ngSubmit)=\"submitSearch(range)\" class=\"form-inline siteForm\"\r\n        style=\"margin-top: 5px;display: inline-block\">\r\n\r\n        <span style=\"margin-left: 10px;margin-bottom: 20px; font-size: 0.9em;font-style: italic;\">Selecione o período\r\n            para pesquisar pelas\r\n            vendas efetuadas:\r\n        </span>\r\n\r\n        <br>\r\n\r\n        <div class=\"form-row align-items-center divSiteForm\" style=\"padding: 0px;\">\r\n\r\n            <mat-form-field style=\"transform: scale(0.85);\" appearance=\"fill\" style=\"margin: 0px;\">\r\n                <mat-label>Selecione o período</mat-label>\r\n                <mat-date-range-input disabled [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n                    <input matStartDate formControlName=\"start\" placeholder=\"início\">\r\n                    <input matEndDate formControlName=\"end\" placeholder=\"fim\">\r\n                </mat-date-range-input>\r\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n                <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n                <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n            </mat-form-field>\r\n\r\n            <span style=\"margin-left: 2px;margin-bottom: 30px;\">\r\n                <i style=\"margin-left: 2px;margin-bottom: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"pesquisarData()\" disabled type=\"submit\" disabled mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n    <!-- <div class=\"card-header \" style=\"background-color: rgb(227, 240, 227);margin-left: 10px;\r\n   width: 350px; font-size: 0.9em;box-shadow: 0 0 0.5em rgb(172, 170, 170);\" unselectable=\"on\"\r\n        onselectstart=\"return false;\" *ngIf=\"showMessageNoColaborador\">{{mensagem}}</div> -->\r\n\r\n    <div @rowHighlight class=\"card card-plain mat-elevation-z8\" \r\n    *ngIf=\"balancoProdutos.length > 0\"\r\n    style=\"width: 100%;\r\n            position: relative;\r\n            margin-top: 50px;\r\n            box-shadow: 0 0 1em rgb(172, 170, 170);\r\n            background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Produtos</h4>\r\n            <p class=\"card-category\">Produtos vendidos: </p>\r\n            <span>Total no período: {{totalVendas  | currency:'BRL':true:'1.2-2' }}  </span>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 27%;font-size:0.8em;\r\n                                    vertical-align: middle;\r\n                                    text-align:left;\r\n                    border-top: 0px; font-weight: 400;\">Descricao</th>\r\n\r\n                            <th style=\"width: 5%;font-size:0.8em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">Valor unit.</th>\r\n\r\n                            <th style=\"width: 5%;font-size:0.8em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Qnt</th>\r\n\r\n                            <th style=\"width: 12%;font-size:0.8em;font-weight: 400;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px;\">Meio<br>Parcelas\r\n                            </th>\r\n\r\n                            <th style=\"width: 15%;font-size:0.8em;font-weight: 400;\r\n                            text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\">Data</th>\r\n\r\n                            <th style=\"width: 20%;font-size:0.8em;font-weight: 400;\r\n                            text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\">Meio<br>pagamento\r\n                            </th>\r\n\r\n                            <th style=\"width: 14%;font-size:0.8em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">Total venda</th>\r\n\r\n                           \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of balancoProdutos;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">{{i + 1}}</td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.valorUnitario | currency:'BRL':true:'1.2-2'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.quantidade}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.parcelas}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.dataVenda | date:'d/M/y'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.meioPagamento}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.valorTotal | currency:'BRL':true:'1.2-2'}}</td>\r\n                            \r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <!-- <mat-paginator *ngIf=\"length > 5\" style=\"\r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" [length]=\"length\" [pageSize]=\"5\" hidePageSize=\"true\" (page)=\"pageEvent = $event\"\r\n                (click)=\"changePage(pageEvent)\">\r\n            </mat-paginator> -->\r\n\r\n        </div>\r\n\r\n        <!-- <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n            top: 46.5%; \r\n            position: absolute;\">\r\n        </mat-spinner> -->\r\n    </div>\r\n\r\n\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { FinanceiroService } from \"../../models/financ.service\";\r\n\r\n@Component({\r\n    selector: 'createfornecedormodal',\r\n    templateUrl: './createfornecedor.component.html',\r\n    styleUrls: ['./createfornecedor.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class CreateFornecedorComponent implements OnInit {\r\n  \r\n    baseUrl = environment.baseUrl;\r\n    public saveSpinner = 'hidden'\r\n    public enderecoContainer = 'hidden'\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    public fornecedorForm: FormGroup;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public validadeEmailMsg = false\r\n    public validadeCPFMsg = false\r\n    cargos = Cargos;\r\n    mensagem = \"\";\r\n    showMensagem = false\r\n    \r\n    unidades = Unidades;\r\n    constructor(\r\n        private _snackBar: MatSnackBar,\r\n        private _finService: FinanceiroService,\r\n        //private router: Router,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<CreateFornecedorComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.fornecedorForm = _fb.group({\r\n            razaoSocial: ['', [Validators.required]],\r\n            ie_rg: [''],\r\n            cnpj_cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            telContato: [''],\r\n            whatsApp: [''],\r\n            nomeContato: ['', [Validators.required]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: [''],\r\n            complemento: [''],\r\n            numero: ['', [Validators.required]],\r\n            cidade: ['', [Validators.required]],\r\n            uf: ['', [Validators.required, Validators.minLength(2),Validators.maxLength(2)]],//,\r\n            bairro: ['', [Validators.required]],//,\r\n            ativo:[true],\r\n            unidadeId:['']\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.fornecedorForm.get('unidadeId').setValue(this.tokenInfo.UnidadeId)\r\n        // console.log(this.tokenInfo.Unidade);\r\n        // console.log(this.tokenInfo.Codigo);\r\n        // console.log(this.tokenInfo);\r\n       // this.fornecedorForm.get('email').setErrors({ 'incorrect': true });\r\n        //this.fornecedorForm.get('cnpj_cpf').setErrors({ 'incorrect': true });\r\n        \r\n    }\r\n   \r\n\r\n    onSubmit(form) {\r\n\r\n       \r\n       // console.log(form.value)\r\n        if (this.fornecedorForm.valid) {\r\n\r\n            this.saveSpinner = 'visible'\r\n          \r\n            this._finService.SaveFornecedor(this.fornecedorForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.onSubmitSucess(sucesso) },\r\n                    falha => { this.onSubmitFalha(falha) }\r\n                )}\r\n    }\r\n\r\n    onSubmitSucess(resposta){\r\n        this.saveSpinner = 'hidden'\r\n        this.dialogRef.close({})\r\n    }\r\n\r\n    onSubmitFalha(error){\r\n        this.saveSpinner = 'hidden'\r\n    }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Colaborador salvo com sucesso.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n    get disabledButton(){\r\n\r\n        if(this.fornecedorForm.valid){\r\n            return this.saveSpinner != 'hidden'\r\n        }else{\r\n            return true\r\n        }\r\n    }\r\n\r\n    // buscarEmail(event: any) {\r\n    //     if (this.fornecedorForm.get('email').valid) {\r\n    //         this.validadeEmailMsg = false\r\n    //         this.http.get(`${this.baseUrl}/adm/aluno/email/${event.target.value}`, {\r\n    //         }).subscribe(response => {\r\n\r\n    //         }, (err) => {\r\n    //             if (err['status'] == 409) {\r\n    //                 this.validadeEmailMsg = true\r\n    //                 this.fornecedorForm.get('email').setErrors({ 'incorrect': true });\r\n    //             }\r\n    //         },\r\n    //             () => {\r\n    //                 this.fornecedorForm.get('email').setErrors(null);\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    // buscarCPF(event: any) {\r\n    //     // console.log(event.target.value)\r\n    //     console.log(this.fornecedorForm.get('cnpj_cpf').value)\r\n    //     console.log(this.fornecedorForm.get('cnpj_cpf').valid)\r\n    //     console.log(this.fornecedorForm.get('cnpj_cpf').value.length)\r\n    //     if (this.fornecedorForm.get('cnpj_cpf').valid) {\r\n    //         this.validadeCPFMsg = false\r\n    //         let cpf = this.fornecedorForm.get('cnpj_cpf').value\r\n    //         //this.http.get(`${this.baseUrl}/adm/aluno/cpf/${event.target.value}`, {\r\n    //         this.http.get(`${this.baseUrl}/adm/aluno/cpf/${cpf}`, {\r\n    //             headers: new HttpHeaders({\r\n    //                 \"Content-Type\": \"application/json\",\r\n    //                 \"Authorization\": \"Bear \"\r\n    //             })\r\n    //         }).subscribe(response => {\r\n\r\n    //         }, (err) => {\r\n    //             if (err['status'] == 409) {\r\n    //                 this.validadeCPFMsg = true\r\n    //                 this.fornecedorForm.get('cnpj_cpf').setErrors({ 'incorrect': true });\r\n    //             }\r\n    //         },\r\n    //             () => {\r\n    //                 this.fornecedorForm.get('cnpj_cpf').setErrors(null);\r\n    //             });\r\n    //     }\r\n    // }\r\n   \r\n\r\n    consultaCEP(CEP: string) {\r\n      //  console.log(CEP);\r\n        if (this.fornecedorForm.get('cep').valid) {\r\n\r\n\r\n            //var mystring = \"crt/r2002_2\";\r\n            CEP = CEP.replace('-', '');\r\n            CEP = CEP.replace('.', '');\r\n            console.log(CEP);\r\n            this._http.get(`https://viacep.com.br/ws/${CEP}/json/`, {})\r\n                .subscribe(response => {\r\n\r\n                    this.fornecedorForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n                    this.fornecedorForm.get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n                    this.fornecedorForm.get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n                    this.fornecedorForm.get('uf').setValue(response[\"uf\"].toUpperCase());\r\n                    \r\n                }, err => { \r\n                   // console.log(err) \r\n                },\r\n                    () => {\r\n                        //  console.log('finaly')\r\n                      //  this.showEndereco = true\r\n                    });\r\n        }\r\n    }\r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n    \r\n}","<div style=\"font-size: 1.2em;\">Cadastrar Fornecedor\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n\r\n<div style=\"position: relative;\">\r\n\r\n    <hr>\r\n\r\n    <form novalidate [formGroup]=\"fornecedorForm\" (ngSubmit)=\"onSubmit(fornecedorForm)\">\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 300px; \">\r\n            <mat-label>Nome/Razão Social</mat-label>\r\n            <input selected formControlName=\"razaoSocial\" \r\n            oninput=\"this.value = this.value.toUpperCase()\" matInput placeholder=\"Nome\">\r\n            \r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 220px; margin-left: 10px;\">\r\n            <mat-label>Email</mat-label>\r\n            <input selected formControlName=\"email\" \r\n            oninput=\"this.value = this.value.toLowerCase()\" matInput placeholder=\"Email\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 140px;\">\r\n            <mat-label>CPF/CNPJ</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                formControlName=\"cnpj_cpf\" minlength=\"11\" maxlength=\"14\" selected matInput\r\n                placeholder=\"digite o CPF\">\r\n        </mat-form-field>\r\n\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 140px;margin-left: 10px;\">\r\n            <mat-label>IE/RG</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                formControlName=\"ie_rg\" selected matInput placeholder=\"digite o CPF\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field style=\"width: 130px;\" appearance=\"standard\">\r\n            <mat-label>Tel contato</mat-label>\r\n            <input formControlName=\"telContato\" mask=\"(00) 00000-0000\" matInput\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field style=\"width: 130px; margin-left: 10px;\" appearance=\"standard\">\r\n            <mat-label>Whatsapp</mat-label>\r\n            <input formControlName=\"whatsApp\" mask=\"(00) 00000-0000\" matInput\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 150px;margin-left: 10px;\">\r\n            <mat-label>contato/Nome</mat-label>\r\n            <input selected formControlName=\"nomeContato\" oninput=\"this.value = this.value.toUpperCase()\"\r\n             matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 17%;\">\r\n            <mat-label>CEP</mat-label>\r\n            <input mask=\"00.000-000\" onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                formControlName=\"cep\" minlength=\"8\" maxlength=\"10\" matInput placeholder=\"apenas números\">\r\n        </mat-form-field>\r\n\r\n        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button type=\"button\" (click)=\"consultaCEP(fornecedorForm.get('cep').value)\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <br>\r\n\r\n        <ng-container [style.visibility]=\"enderecoContainer\">\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n                <mat-label>Logradouro</mat-label>\r\n                <input selected formControlName=\"logradouro\" oninput=\"this.value = this.value.toUpperCase()\"\r\n                 matInput placeholder=\"ex: rua tal...\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 80px;margin-left: 10px;\">\r\n                <mat-label>Número</mat-label>\r\n                <input selected formControlName=\"numero\" oninput=\"this.value = this.value.toUpperCase()\" matInput placeholder=\"123...\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n                <mat-label>Complemento</mat-label>\r\n                <input selected formControlName=\"complemento\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                    placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n                <mat-label>Cidade</mat-label>\r\n                <input disabled selected [value]=\"fornecedorForm.get('cidade').value\" name=\"cidade\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 40px; margin-left: 10px;\">\r\n                <mat-label>UF</mat-label>\r\n                <input disabled selected [value]=\"fornecedorForm.get('uf').value\" name=\"uf\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n                <mat-label>Bairro</mat-label>\r\n                <input selected formControlName=\"bairro\" oninput=\"this.value = this.value.toUpperCase()\"\r\n                 matInput placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n        </ng-container>\r\n\r\n        <div *ngIf=\"showMensagem\" class=\"alert alert-danger\" role=\"alert\"\r\n            style=\"text-align: center; vertical-align: middle; position:relative; height: 45px; float:left;margin-bottom: 20px;\">\r\n            {{mensagem}}\r\n        </div>\r\n\r\n        <mat-progress-bar [style.visibility]=\"saveSpinner\" @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <button type=\"submit\" mat-raised-button disabled=\"false\" \r\n        color=\"primary\"\r\n        style=\"float:right;margin-top: 10px;margin-left: 10px;\"\r\n            [disabled]=\"disabledButton\">\r\n            Salvar\r\n        </button>\r\n\r\n\r\n    </form>\r\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  jwtHelper = new JwtHelperService();\n  constructor(private router: Router) {}\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\n    const token = localStorage.getItem('jwt');\n   // console.log(!this.jwtHelper.isTokenExpired(token));\n   // console.log(token)\n\n    if ((localStorage.getItem('jwt') !== null) && \n    (!this.jwtHelper.isTokenExpired(token))) {\n      //console.log('canactivate inside')\n      return true;\n    } else {\n      this.router.navigate(['/user/login']);\n      //console.log('canactivate inside')\n      return false;\n    }\n  }\n}\n\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Component({\r\n    selector: \"finrelatorio.component-app\",\r\n    templateUrl: './fin-relatorio.component.html',\r\n    styleUrls: ['./fin-relatorio.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class FinRelatorioComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    // length: number = 0\r\n    // pageSize: number = 5;\r\n    // pageEvent: PageEvent;\r\n    // pageIndexNumber: number = 0;\r\n    // actualPage = 1\r\n    // paginationInfo: IPager;\r\n\r\n    // formSubmitted: boolean = false;\r\n    // showTable: boolean = false;\r\n    // showSpinner = false\r\n    // showSpinnerFirst = false\r\n\r\n    // showMessage: boolean = false;\r\n    // cargos = Cargos;\r\n    // unidades = Unidades\r\n    showMessageNoColaborador = false\r\n    mensagem: string = \"\";\r\n    public fornecedores: any;\r\n\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    private jwtHelper = new JwtHelperService();\r\n\r\n    //pagination\r\n\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog\r\n        //private EditColaboradoresModal: MatDialog\r\n    ) { }\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n\r\n\r\n    pesquisar(nome: string, cargo: string, unidade: string) {\r\n\r\n        //this.openConferencia();\r\n        // console.log(nome + \" \" + cargo + \" \" + unidade)\r\n        // if (nome == \"\" || nome == undefined) nome = \"\"\r\n        // if (cargo == \"\" || cargo == undefined) cargo = \"\"\r\n        // if (unidade == \"\" || unidade == undefined) unidade = \"\"\r\n\r\n        // if ((nome == \"\" || nome == undefined) &&\r\n        //     (cargo == \"\" || cargo == undefined) &&\r\n        //     (unidade == \"\" || unidade == undefined)) {\r\n        //     console.log(\"retorno\")\r\n        //     return;\r\n        // }\r\n        // this.showMessageNoColaborador = false\r\n        // this.mensagem = \"\"\r\n\r\n        // let query = { nome: nome, cargo: cargo, unidade: unidade }\r\n        // this.params.nome = nome\r\n        // this.params.email = cargo\r\n        // this.params.cpf = unidade\r\n        // //console.log(params)\r\n        // //var itemsPerPage = 5;\r\n        // //this.actualPage\r\n        // //var currentPage = 1;\r\n        // this.showSpinnerFirst = true\r\n        // this.colaboradores = new Array<Colaborador>();\r\n        // let paramsJson = JSON.stringify(this.params)\r\n        // console.log(query)\r\n\r\n        // this.http.post(`${this.baseUrl}/colaboradores/pesquisar/?itemsPerPage=` + this.pageSize + `&currentPage=1`, paramsJson, {\r\n        //     headers: new HttpHeaders({\r\n        //         \"Content-Type\": \"application/json\",\r\n        //         \"Authorization\": `Bearer ${localStorage.getItem('jwt')}`\r\n        //     })\r\n        // }).subscribe(\r\n        //     (response) => {\r\n        //         console.log(response)\r\n        //         this.colaboradores = Object.assign([], response['data']);\r\n        //         //  this.length = tasks['data'].length;\r\n        //         this.length = response['totalItemsInDatabase']\r\n        //         if (this.length == 0) {\r\n        //             this.showMessageNoColaborador = true\r\n        //             this.mensagem = \"Registro não localizado.\"\r\n        //         }\r\n        //         else if (this.colaboradores.length == 0) {\r\n        //             console.log(\"lengt zero\")\r\n        //             this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n        //             this.showMessageNoColaborador = true\r\n        //         }\r\n        //         // this.applyFiler()\r\n        //     },\r\n        //     (err) => {\r\n        //         this.showSpinnerFirst = false\r\n        //         console.log(err)\r\n        //         //this.openSnackBar(err)\r\n\r\n        //     },\r\n        //     () => {\r\n        //         this.showSpinnerFirst = false\r\n        //         console.log('ok get');\r\n        //         //this.pageIndexNumber = (evento.pageIndex * this.pageSize)\r\n        //     },\r\n        // )\r\n\r\n    }\r\n\r\n\r\n    // openCreateFornecedorModal(): void {\r\n    //     const dialogRef = this._modal\r\n    //         .open(CreateFornecedoromponent, {\r\n    //             height: 'auto',\r\n    //             width: '1030px',\r\n    //             autoFocus: false,\r\n    //             maxHeight: '90vh',\r\n    //             maxWidth: '400vh',\r\n\r\n    //             data: { Hello: \"Hello World\" },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n\r\n\r\n    //     dialogRef.afterClosed().subscribe((data) => {\r\n    //         if (data.clicked === \"Ok\") {\r\n    //             // Reset form here\r\n    //             console.log('afte close ok')\r\n    //             //this.getColaboradores(1, this.pageSize);\r\n    //         } else if (data.clicked === \"Cancel\") {\r\n    //             // Do nothing. Cancel any events that navigate away from the\r\n    //             // component.\r\n    //         }\r\n    //     });\r\n    // }   \r\n\r\n    openEditUserModal() { }\r\n    deleteColaborador() { }\r\n\r\n}\r\n","export class Fornecedor{\r\n    constructor(\r\n        public id?: number,\r\n        public razaoSocial?: string,\r\n        public ie_rg?: string,\r\n        public cnpj_cpf?: string,\r\n        public email?: string,\r\n        public telContato?: string,\r\n        public whatsApp?: string,\r\n        public nomeContato?: string,\r\n        public cep?: string,\r\n        public logradouro?: string,\r\n        public complemento?: string,\r\n        public cidade?: string,\r\n        public uf?: string,\r\n        public bairro?: string,\r\n        public ativo?: boolean,\r\n        public observacoes?: string,\r\n    ){\r\n\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { TokenInfos } from '../_shared/models/token.model';\r\n\r\n\r\n\r\ndeclare interface RouteInfo {\r\n    path: string;\r\n    title: string;\r\n    class: string;\r\n    typeIcon: string;\r\n}\r\n\r\nexport const ROUTES: RouteInfo[] = [\r\n    { path: '/financeiro/alunofin', title: 'Aluno/Financeiro', class: '', typeIcon: 'manage_accounts' },\r\n    { path: '/financeiro/balanco', title: 'Caixa/Cursos', class: '', typeIcon: 'store' },\r\n    { path: '/financeiro/fincaixa', title: 'Caixa/Produtos', class: '', typeIcon: 'store' },\r\n    { path: '/financeiro/unidadebalanco', title: 'Balanço/Unidade', class: '', typeIcon: 'sync_alt' },\r\n    { path: '/financeiro/fornecedor', title: 'Fornecedores', class: '', typeIcon: 'contact_page' },\r\n    //{ path: '/financeiro/relatorio', title: 'Relatórios', class: '', typeIcon: 'description' }\r\n] // sync_alt\r\n\r\n@Component({\r\n    selector: 'financeiro-app',\r\n    templateUrl: './financeiro.component.html',\r\n    styleUrls: ['./financeiro.component.scss']\r\n})\r\n\r\nexport class FinanceiroComponent implements OnInit{\r\n\r\n    \r\n    menu: any;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    \r\n    constructor(\r\n        //private jwtHelper: JwtHelperService, \r\n        private router: Router, \r\n        private http: HttpClient\r\n        ) { \r\n            \r\n        }\r\n    ngOnInit(){\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n       // this.isUserAuthenticated();\r\n       this.menu = ROUTES.filter(menu => menu);\r\n    }    \r\n\r\n  \r\n\r\n}","<ng-container>\r\n\r\n    <mat-sidenav-container class=\"example-container\" style=\"\r\n    background-color: rgba(250, 245, 245, 0); \">\r\n        <mat-sidenav style=\"\" #sidenav mode=\"side\" opened class=\"example-sidenav mat-elevation-z8\">\r\n            <div class=\"d-flex flex-column text-white \" \r\n            style=\"position: absolute;\r\n            width: auto;\r\n            top: 0px;\r\n            bottom: 0px;\r\n            left: 0;\r\n            background-color: rgb(109, 218, 109);\r\n            right: 0;\">\r\n              <a class=\"d-flex align-items-center  mb-md-0 me-md-auto text-white text-decoration-none\">\r\n                <span  style=\"width: 190px;\r\n                text-align: center;margin-top: 15px;font-size: 1em;\">\r\n                FINANCEIRO<br>Unidade {{tokenInfo.Unidade}}\r\n              </span>\r\n              </a>\r\n              <hr>\r\n              <ul class=\"nav nav-pills flex-column mb-auto\">\r\n\r\n                <li *ngFor=\"let item of menu\" routerLinkActive=\"active\" \r\n                    class=\"nav-item {{item.class}}\"\r\n                        style=\"overflow: auto;\">\r\n\r\n                        <a [routerLink]=\"[item.path]\" class=\"nav-link text-white\">\r\n                            <mat-icon style=\"top: -3px;\r\n                                        position:relative;\r\n                                        overflow: auto;\r\n                                        color:rgb(245, 243, 243); \r\n                                        vertical-align: middle;\">\r\n                                        {{item.typeIcon}}\r\n                            </mat-icon>\r\n                                {{item.title}}\r\n                        </a>\r\n                    </li>\r\n                \r\n              </ul>\r\n              <hr>\r\n              <!-- <div class=\"dropdown\">\r\n                <a href=\"#\" class=\"d-flex align-items-center text-white text-decoration-none dropdown-toggle\" id=\"dropdownUser1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  <img src=\"https://github.com/mdo.png\" alt=\"mdo\" width=\"32\" height=\"32\" class=\"rounded-circle me-2\">\r\n                  <strong>conta</strong>\r\n                </a>\r\n                <ul class=\"dropdown-menu dropdown-menu text-small shadow\" aria-labelledby=\"dropdownUser1\" \r\n                style=\"background-color: rgb(73, 168, 73);\">\r\n                  <li><a style=\"color: white;\" class=\"dropdown-item\" >New project...</a></li>\r\n                  <li><a style=\"color: white;\" class=\"dropdown-item\" >Settings</a></li>\r\n                  <li><a style=\"color: white;\" class=\"dropdown-item\" >Profile</a></li>\r\n                  <li><hr style=\"color: white;\" class=\"dropdown-divider\"></li>\r\n                  <li><a style=\"color: white;\" class=\"dropdown-item\" >Sign out</a></li>\r\n                </ul>\r\n              </div> -->\r\n            </div>\r\n            \r\n\r\n        </mat-sidenav>\r\n        <router-outlet ></router-outlet>\r\n       \r\n    </mat-sidenav-container>\r\n\r\n  \r\n</ng-container> \r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n//import { GenericTask } from 'src/app/shared/models/generictask.model';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n//import { AdmService } from '../../adm.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { PerfilEnum } from \"src/app/_shared/models/perfil.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'createusermodal',\r\n    templateUrl: './createuser.component.html',\r\n    styleUrls: ['./createuser.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class CreateUserComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl\r\n    public usuario: any;//Colaborador = new Colaborador();\r\n    public usuarioForm: FormGroup;\r\n    public perfisArray: any[] = new Array<any>()// = PerfilEnum;\r\n    public initProgressBar = 'hidden'\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n    // pageEvent: PageEvent;\r\n    mensagem = \"\";\r\n    showForm = false\r\n    showMensagem = false\r\n    constructor(\r\n        //private service: AdmService,\r\n        private _helper: HelpersService,\r\n        public fb: FormBuilder,\r\n        public http: HttpClient,\r\n        public dialogRef: MatDialogRef<CreateUserComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.usuarioForm = fb.group({\r\n            id: [],\r\n            // nome: ['', [Validators.required, Validators.minLength(2)]],\r\n            perfil: ['', [Validators.required]],\r\n            // email: ['', [Validators.required, Validators.email]],\r\n            perfilAtivo: [true, [Validators.required]]\r\n        })\r\n    }\r\n\r\n    //@Output() newItemEvent = new EventEmitter<string>();\r\n\r\n\r\n    ngOnInit() {\r\n        // this.usuario.perfilAtivo = true;\r\n        // console.log(\"on init\")\r\n        //this.getTasks(1, this.pageSize);\r\n    }\r\n\r\n\r\n    consultaUsuario(email: any) {\r\n       // console.log(email)\r\n        if (email == '') return;\r\n        this.showForm = false\r\n        this.showMensagem = false\r\n        this.initProgressBar = 'visible'\r\n        this.http.get(`${this.baseUrl}/usuario/procurar/?email=${email}`).subscribe(\r\n            (result) => {\r\n\r\n                this.usuario = Object.assign({}, result['result'])\r\n                //console.log(this.usuario)\r\n                this.perfisArray = result['perfis']\r\n\r\n                this.usuarioForm.get('id').setValue(this.usuario.id)\r\n\r\n            },\r\n            (err) => {\r\n                if(err['status'] == 401){\r\n                    this._helper.openSnackBarError(\"Você não possui autorização para conceder acesso.\")\r\n                    this.dialogRef.close();\r\n                }else{\r\n                this.initProgressBar = 'hidden'\r\n               // console.log(err['error'])\r\n                this.mensagem = err['error'].mensagem\r\n                this.showMensagem = true\r\n                }\r\n            },\r\n            () => {\r\n                this.initProgressBar = 'hidden'\r\n                \r\n                this.showMensagem = false\r\n                this.showForm = true\r\n               \r\n            }\r\n        )\r\n\r\n    }\r\n    public sabeSpinner = 'hidden'\r\n    disabledSaveButton = false\r\n    get disabledButton() {\r\n        if (this.usuarioForm.valid) {\r\n            return this.sabeSpinner != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n\r\n    }\r\n\r\n    SaveUser(form: FormGroup) {\r\n\r\n       // console.log(form.valid)\r\n\r\n        if (this.usuarioForm.valid) {\r\n            \r\n            this.sabeSpinner = 'visible'\r\n            this.disabledSaveButton = true\r\n            let perfil = this.usuarioForm.get('perfil').value\r\n            let perfilAtivo = this.usuarioForm.get('perfilAtivo').value\r\n\r\n            this.http.post(`${this.baseUrl}/usuario/${this.usuario.id}/?perfil=${perfil}&perfilAtivo=${perfilAtivo}`, {\r\n            }).subscribe(\r\n                (result) => {\r\n                },\r\n                (err) => {\r\n                    //console.log(err['error'].msg)\r\n                    if(err['status'] == 400){\r\n                        this.sabeSpinner = 'hidden'\r\n                        this._helper.openSnackBarError(err['error'].msg)\r\n                        this.dialogRef.close();    \r\n                    }else{\r\n                        this.sabeSpinner = 'hidden'\r\n                        this._helper.openSnackBarErrorDefault()\r\n                        this.dialogRef.close();\r\n                    }\r\n                    \r\n\r\n                },\r\n                () => {\r\n                    this.sabeSpinner = 'hidden'\r\n                    this._helper.openSnackBarSucesso(\"Acesso criado com sucesso\")\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport class JsonPatch {\r\n    constructor(\r\n\r\n    ) { }\r\n}","<div style=\"font-size: 1.2em;\">Conceder acesso ao sistema.\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n<hr>\r\n\r\n<form novalidate [formGroup]=\"usuarioForm\" (ngSubmit)=\"SaveUser(usuarioForm)\" style=\"\">\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 40%;\">\r\n        <mat-label>Email</mat-label>\r\n        <input #email required selected name=\"email\" matInput placeholder=\"Email\">\r\n    </mat-form-field>\r\n\r\n\r\n    <i style=\"width: 10%;margin-left: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n\r\n        <button (click)=\"consultaUsuario(email.value)\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n            <mat-icon>search</mat-icon>\r\n        </button>\r\n\r\n    </i>\r\n\r\n    <div *ngIf=\"showMensagem\" class=\"alert alert-danger\" role=\"alert\"\r\n            style=\"text-align: center; vertical-align: middle; position:relative; height: 45px; float:left;margin-bottom: 20px;\">\r\n            {{mensagem}}\r\n        </div>\r\n\r\n    <mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n\r\n    <ng-container *ngIf=\"showForm\">\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 60%;\">\r\n            <mat-label>Nome</mat-label>\r\n            <input disabled selected [value]=\"usuario.nome\" name=\"nome\" matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n       \r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%;margin-left: 5%;\">\r\n            <mat-label>Cargo</mat-label>\r\n            <input disabled selected [value]=\"usuario.cargo\" name=\"nome\" matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n            <mat-label>Perfil</mat-label>\r\n            <mat-select formControlName=\"perfil\" selected required>\r\n                <mat-option></mat-option>\r\n                <mat-option *ngFor=\"let perfil of perfisArray\" [value]=\"perfil\">\r\n                    {{perfil}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-slide-toggle style=\"margin-left: 5%;\" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n            formControlName=\"perfilAtivo\" required matTooltip=\"ativo/inativo\" [required]=\"false\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"250\" color=\"primary\">\r\n        </mat-slide-toggle>\r\n\r\n\r\n\r\n        <div *ngIf=\"showMensagem\" class=\"alert alert-danger\" role=\"alert\"\r\n            style=\"text-align: center; vertical-align: middle; position:relative; height: 45px; float:left;margin-bottom: 20px;\">\r\n            {{mensagem}}\r\n        </div>\r\n        <br>\r\n\r\n        <mat-progress-bar [style.visibility]=\"sabeSpinner\" @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n        </mat-progress-bar>\r\n        <div style=\"float: right;margin-top: 15px;\">\r\n\r\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"disabledButton\" style=\"width: 100px; position: relative; float:right;margin-bottom: 10px;\r\n                margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n\r\n\r\n        </div>\r\n\r\n    </ng-container>\r\n\r\n</form>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\n\r\n@Component({\r\n    selector: 'messagemodal',\r\n    templateUrl: './messagemodal.component.html'\r\n})\r\n\r\nexport class MessageModalComponent implements OnInit {\r\n\r\n    mensagem: any;\r\n    public horario: any\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n\r\n\r\n    constructor(\r\n        //private router: Router,\r\n        //private http: HttpClient,\r\n        public dialogRef: MatDialogRef<MessageModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n       // console.log(this.data)\r\n        this.mensagem = this.data['message']\r\n        //this.horario = this.data['horario']\r\n    }\r\n\r\n}","<div class=\"container\">\r\n    Olá {{tokenInfo.Nome}}!\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Sim'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n    <hr>\r\n    <br>\r\n    <div [innerHTML]=\"mensagem\"></div>\r\n    <!-- <div [innerHTML]=\"horario\"></div> -->\r\n    <!-- São {{ horario | date:'long' }} -->\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { TokenInfos } from '../_shared/models/token.model';\r\n\r\n\r\n\r\ndeclare interface RouteInfo {\r\n    path: string;\r\n    title: string;\r\n    class: string;\r\n    typeIcon: string;\r\n}\r\n\r\nexport const ROUTES: RouteInfo[] = [\r\n    { path: '/pedag/matricula', title: 'Alunos', class: '', typeIcon: 'face' },\r\n    { path: '/pedag/alunoacesso', title: 'Alunos/Acesso', class: '', typeIcon: 'face' },\r\n  //  { path: '/pedag/pedagalunos', title: 'Alunos', class: '', typeIcon: 'face' },\r\n    { path: '/pedag/transf', title: 'Transferência', class: '', typeIcon: 'sync_alt' },\r\n   // { path: '/pedag/reposicoes', title: 'Reposições', class: '', typeIcon: 'change_circle' },\r\n    { path: '/pedag/turmasinfo', title: 'Turmas', class: '', typeIcon: 'school' },\r\n    { path: '/pedag/turmas', title: 'Diário de Classe', class: '', typeIcon: 'assignment' },\r\n   // { path: '/pedag/pedagrel', title: 'Relatório', class: '', typeIcon: 'article' },\r\n    { path: '/pedag/analisedocs', title: 'Documentação', class: '', typeIcon: 'description' },\r\n    { path: '/pedag/config', title: 'Estágios', class: '', typeIcon: 'settings_applications' },\r\n    { path: '/pedag/estagiosdoc', title: 'Estágios/Gestão', class: '', typeIcon: 'settings_applications' },\r\n]\r\n\r\n@Component({\r\n    selector: 'pedagogico-app',\r\n    templateUrl: './pedagogico.component.html',\r\n    styleUrls: ['./pedagogico.component.scss']\r\n})\r\n\r\nexport class PedagogicoComponent implements OnInit{\r\n\r\n    \r\n    menu: any;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    \r\n    constructor(\r\n        private router: Router, \r\n        private http: HttpClient\r\n        ) { \r\n            \r\n        }\r\n    ngOnInit(){\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n       this.menu = ROUTES.filter(menu => menu);\r\n    }      \r\n\r\n\r\n    invalidLogin: boolean;  \r\n\r\n    logOut() {\r\n        localStorage.removeItem(\"jwt\");\r\n        this.router.navigate([\"/login\"]);\r\n    }\r\n\r\n}","<ng-container>\r\n\r\n  <mat-sidenav-container class=\"example-container\" style=\"\r\n    background-color: rgba(250, 245, 245, 0); \">\r\n    <mat-sidenav style=\"\" #sidenav mode=\"side\" opened class=\"example-sidenav mat-elevation-z8\">\r\n      <div class=\"d-flex flex-column text-white \" style=\"position: absolute;\r\n            width: auto;\r\n            top: 0px;\r\n            bottom: 0px;\r\n            left: 0;\r\n            background-color: rgb(109, 218, 109);\r\n            right: 0;\">\r\n        <a class=\"d-flex align-items-center  mb-md-0 me-md-auto text-white text-decoration-none\">\r\n          <span style=\"width: 190px;\r\n                text-align: center;margin-top: 15px;font-size: 1em;\">\r\n            PEDAGÓGICO<br>Unidade {{tokenInfo.Unidade}}\r\n          </span>\r\n        </a>\r\n        <hr>\r\n        <ul class=\"nav nav-pills flex-column mb-auto\">\r\n\r\n          <li *ngFor=\"let item of menu\" routerLinkActive=\"active\" class=\"nav-item {{item.class}}\"\r\n            style=\"overflow: auto;\">\r\n\r\n            <a [routerLink]=\"[item.path]\" class=\"nav-link text-white\">\r\n              <mat-icon style=\"top: -3px;\r\n                                        position:relative;\r\n                                        overflow: auto;\r\n                                        color:rgb(245, 243, 243); \r\n                                        vertical-align: middle;\">\r\n                {{item.typeIcon}}\r\n              </mat-icon>\r\n              {{item.title}}\r\n            </a>\r\n          </li>\r\n\r\n        </ul>\r\n      </div>\r\n\r\n\r\n    </mat-sidenav>\r\n    <router-outlet></router-outlet>\r\n\r\n  </mat-sidenav-container>\r\n\r\n\r\n</ng-container>","export class DisponibilidadeDto {\r\n    constructor(\r\n        public horarioDisponivelView?: string,\r\n        public diaSemana?: string,\r\n        public diaSemanaView?: string,\r\n        public diaData?: Date,\r\n        public horarios?: HorariosViewDto[]\r\n    ) { }\r\n}\r\n\r\nexport class HorariosViewDto {\r\n    constructor(\r\n        public inicio?: string,\r\n        public fim?: string,\r\n    ) { }\r\n}\r\n//vV2\r\n\r\nexport class DisponibilidadeDtoV2 {\r\n    constructor(\r\n        public horarioDisponivelView?: string,\r\n        public availabilityDayOne?: DisponibilidadeDayOneDtoV2,\r\n        public availabilityTwo?: DisponibilidadeDayTwoDtoV2[]\r\n    ) { }\r\n}\r\n\r\nexport class DisponibilidadeDayOneDtoV2 {\r\n    constructor(\r\n        public diaSemana?: string,\r\n\r\n        public horaIni?: Date,\r\n        public horaFim?: Date,\r\n        public ranges?: RangeDatas[],\r\n        //\r\n        public diaSemanaView?: string,\r\n        public diaData?: Date\r\n    ) { }\r\n}\r\n\r\nexport class RangeDatas {\r\n    constructor(\r\n        public item1?: Date,\r\n        public item2?: Date\r\n    ) {\r\n\r\n    }\r\n}\r\n\r\nexport class DisponibilidadeDayTwoDtoV2 {\r\n    constructor(\r\n        public diaSemana?: string,\r\n        public horaIni?: Date,\r\n        public horaFim?: Date,\r\n        //\r\n        public diaSemanaView?: string,\r\n        public diaData?: Date\r\n    ) { }\r\n}","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\n@Directive({ selector: '[datePastCheck]'})\r\nexport class DatePastDirective {\r\n\r\n    private hasView = false;\r\n\r\n    //new Date(this.paramentrosEventos[index + 1].datainicio).valueOf() >=\r\n      //              new Date(evento.dataFim).valueOf()) {\r\n\r\n    constructor(\r\n      private templateRef: TemplateRef<any>,\r\n      private viewContainer: ViewContainerRef) { }\r\n  \r\n    @Input() set datePastCheck(data: Date) {\r\n\r\n        data = new Date(data)\r\n        let dateNow = new Date()\r\n        //console.log(data)\r\n        //console.log(dateNow)\r\n\r\n        if(new Date(data).valueOf() < new Date().valueOf()){\r\n\r\n            this.viewContainer.createEmbeddedView(this.templateRef);\r\n\r\n        }else{\r\n\r\n            this.viewContainer.clear();\r\n\r\n        }\r\n\r\n       \r\n\r\n    //   if (!condition && !this.hasView) {\r\n    //     this.viewContainer.createEmbeddedView(this.templateRef);\r\n    //     this.hasView = true;\r\n    //   } else if (condition && this.hasView) {\r\n    //     \r\n    //     this.hasView = false;\r\n    //   }\r\n    }\r\n  }","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormControl } from \"@angular/forms\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { AgendaProvas } from \"src/app/_shared/models/agenda.modal\";\r\nimport { Materias, TurmaViewModel } from \"src/app/_shared/models/Turma.model\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n@Component({\r\n    selector: 'agendamento-app',\r\n    templateUrl: './agendamento.component.html'\r\n    //, styleUrls: ['./agendamento.component.scss']\r\n    //animations: [HighlightTrigger]\r\n\r\n})\r\n\r\nexport class AgendamentoComponent implements OnInit {\r\n\r\n    private BaseUrl = environment.baseUrl;\r\n    public materias: Materias[] = new Array<Materias>();\r\n    public turma: TurmaViewModel = new TurmaViewModel();\r\n    public avaliacao = Avaliacao\r\n    public showListaDatas = false\r\n    public agendaProvas: AgendaProvas[] = new Array<AgendaProvas>()\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n    ngOnInit() {\r\n        //console.log(this.data['turma'])\r\n        //console.log(this.data)\r\n        this.turma = this.data['turma']\r\n        this.getMaterias();\r\n       // console.log(new Date('0001-01-01T00:00:00Z'));\r\n    }\r\n\r\n    getMaterias() {\r\n\r\n        this._http.get(`${this.BaseUrl}/pedag/materias`)\r\n        //this._http.get(`${this.BaseUrl}/pedag/agendas/${this.turma.id}`)\r\n            .subscribe(response => {\r\n\r\n                this.materias = Object.assign([], response)\r\n\r\n            },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                   // console.log(this.materias)\r\n                })\r\n\r\n    }\r\n\r\n    setData(mat, Av: string, mode: string) {\r\n        console.log(mode)\r\n        const dialogRef = this._modal\r\n            .open(SetDataModal, {\r\n                height: 'auto',\r\n                width: 'auto',\r\n                autoFocus: false,\r\n                //maxHeight: '90vh',\r\n                //maxWidth: '400vh',\r\n\r\n                data: { materia: mat, avaliacao: Av, mode: mode },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result.clicked === \"SIM\") {\r\n                //console.log(this.materias)\r\n            } else {\r\n\r\n               // console.log('nao')\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    headerOne =\"\"\r\n    headerTwo =\"\"\r\n\r\n    avalAtual = 0;\r\n    avalSelected(aval:number, avalString:string){\r\n        // agenda\r\n        //turmas    //turmaId, [FromQuery] int avaliacao)\r\n        //console.log('aval selected '+aval)\r\n        this.avalAtual = aval\r\n        this._http.get(`${this.BaseUrl}/turmas/agenda/?turmaId=${this.data['turma'].id}&avaliacao=${aval}`)\r\n        .subscribe(response => {\r\n\r\n            this.agendaProvas = Object.assign([],response);\r\n\r\n        },\r\n        (error) => { console.log(error)},\r\n        () => {\r\n            this.headerOne = avalString\r\n            this.showListaDatas = true\r\n            //console.log(this.agendaProvas)\r\n        })\r\n    }\r\n\r\n    saveCalendar(){\r\n\r\n        //console.log(this.agendaProvas)\r\n      //  var fsdf = JSON.stringify(this.agendaProvas)\r\n      //  console.log(fsdf)\r\n        \r\n        this._http.post(`${this.BaseUrl}/turmas/agenda-atualizar/${this.avalAtual}`, this.agendaProvas,{})\r\n        .subscribe(resp => {\r\n\r\n        },\r\n        (error) => { console.log(error)},\r\n        () => { \r\n            \r\n        })\r\n\r\n    }\r\n\r\n    keyPress(event: KeyboardEvent) {\r\n        //     console.log(event)\r\n        //     const pattern = /[0-9]/;\r\n        // const inputChar = String.fromCharCode(event).charCode);\r\n        // if (!pattern.test(inputChar)) {    \r\n        //     // invalid character, prevent input\r\n        //     event.preventDefault();\r\n        // }\r\n\r\n    }\r\n\r\n\r\n    onFocusOutDateEvent(event: any) {\r\n        var data;\r\n       \r\n        if (event.target.value.length == 10) {\r\n            var data = event.target.value.split('/')\r\n           //console.log(data)\r\n            var dataForm: Date = new Date(parseInt(data[2]),parseInt(data[1]) - 1,\r\n            parseInt(data[0]))\r\n           \r\n           // this.valor = dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'confirm-dialog',\r\n    template: `<mat-form-field appearance=\"standard\" style=\"width: 150px;\">\r\n    <mat-label>Data</mat-label>\r\n    <date-input #valor [formControl]=\"date\"\r\n    (focusout)=\"onFocusOutDateEvent($event, valor)\" name=\"nascimento\"\r\n        matInput required></date-input>\r\n</mat-form-field> \r\n<br>\r\n<button (click)=\"salvar()\" type=\"submit\" mat-raised-button disabled=\"false\" style=\"float:right;margin-bottom: 10px;margin-left: 10px;\">\r\nSalvar\r\n</button>\r\n<button style=\"float:right;margin-bottom: 10px;\" mat-raised-button\r\n[mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button>`,\r\n})\r\nexport class SetDataModal implements OnInit {\r\n\r\n    dia: any\r\n    mes: any\r\n    ano: any\r\n    private BaseUrl = environment.baseUrl;\r\n    date = new FormControl('');\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<SetDataModal>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n    ngOnInit() {\r\n        console.log(this.data)\r\n        if (this.data['mode'] == \"edit\") {\r\n\r\n            if (this.data['avaliacao'] == \"1a\") {\r\n\r\n                console.log('editando')\r\n                var dataArray = this.data['materia'].avaliacaoUm.split('/')\r\n                console.log(dataArray)\r\n                this.date = new FormControl({ dia: dataArray[0], mes: dataArray[1], ano: dataArray[2] });\r\n\r\n            } else if(this.data['avaliacao'] == \"2a\"){\r\n\r\n                console.log('editando')\r\n                var dataArray = this.data['materia'].avaliacaoDois.split('/')\r\n                console.log(dataArray)\r\n                this.date = new FormControl({ dia: dataArray[0], mes: dataArray[1], ano: dataArray[2] });\r\n              \r\n            }else if(this.data['avaliacao'] == \"3a\"){\r\n                console.log('editando')\r\n                var dataArray = this.data['materia'].avaliacaoTres.split('/')\r\n                console.log(dataArray)\r\n                this.date = new FormControl({ dia: dataArray[0], mes: dataArray[1], ano: dataArray[2] });\r\n            }else if (this.data['avaliacao'] == \"1b\") {\r\n\r\n                console.log('editando')\r\n                var dataArray = this.data['materia'].segundaChamadaAvaliacaoUm.split('/')\r\n                console.log(dataArray)\r\n                this.date = new FormControl({ dia: dataArray[0], mes: dataArray[1], ano: dataArray[2] });\r\n\r\n            } else if(this.data['avaliacao'] == \"2b\"){\r\n\r\n                console.log('editando')\r\n                var dataArray = this.data['materia'].segundaChamadaAvaliacaoDois.split('/')\r\n                console.log(dataArray)\r\n                this.date = new FormControl({ dia: dataArray[0], mes: dataArray[1], ano: dataArray[2] });\r\n              \r\n            }else if(this.data['avaliacao'] == \"3b\"){\r\n                console.log('editando')\r\n                var dataArray = this.data['materia'].segundaChamadaAvaliacaoTres.split('/')\r\n                console.log(dataArray)\r\n                this.date = new FormControl({ dia: dataArray[0], mes: dataArray[1], ano: dataArray[2] });\r\n            }\r\n        }\r\n    }\r\n\r\n    // onNoClick(): void {\r\n    //   this.dialogRef.close();\r\n    // }\r\n    //date = new Date;\r\n\r\n    salvar() {\r\n        //this.data['materia'].avaliacaoUm = new Date(this.date.value).toLocaleDateString()\r\n        console.log(this.date.value);\r\n        console.log(this.date.valid);\r\n        console.log(this.data['materia']);\r\n        if (this.date.valid) {\r\n\r\n            if (this.data['avaliacao'] == \"1a\") {\r\n                this.data['materia'].avaliacaoUm = new Date(this.date.value).toLocaleDateString()\r\n            } else if (this.data['avaliacao'] == \"2a\"){\r\n                this.data['materia'].avaliacaoDois = new Date(this.date.value).toLocaleDateString()\r\n            }else if(this.data['avaliacao'] == \"3a\"){\r\n                this.data['materia'].avaliacaoTres = new Date(this.date.value).toLocaleDateString()\r\n            }else if (this.data['avaliacao'] == \"1b\") {\r\n                this.data['materia'].segundaChamadaAvaliacaoUm = new Date(this.date.value).toLocaleDateString()\r\n            } else if (this.data['avaliacao'] == \"2b\"){\r\n                this.data['materia'].segundaChamadaAvaliacaoDois = new Date(this.date.value).toLocaleDateString()\r\n            }else if(this.data['avaliacao'] == \"3b\"){\r\n                this.data['materia'].segundaChamadaAvaliacaoTres = new Date(this.date.value).toLocaleDateString()\r\n            }\r\n\r\n            this._http.put(`${this.BaseUrl}/pedag/agendas`, this.data['materia'], {})\r\n                .subscribe(response => {\r\n\r\n                },\r\n                    (error) => { console.log(error) },\r\n                    () => {\r\n\r\n                        this.dialogRef.close({ clicked: \"SIM\" });\r\n                    })\r\n\r\n\r\n        }\r\n    }\r\n    onFocusOutDateEvent(event: any, valor: any) {\r\n        console.log(event);\r\n        console.log(this.date.value);\r\n        console.log(this.date.valid);\r\n        console.log(valor);\r\n        console.log(event.target.value);\r\n\r\n\r\n\r\n        // console.log(this.colaboradorForm.get('nascimento').value)\r\n        // var dataForm: Date = new Date(this.colaboradorForm.get('nascimento').value)\r\n\r\n        // let timeDiff = Math.abs(Date.now() - dataForm.getTime());\r\n        // let age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\r\n        // console.log(age)\r\n        // if (age < 18 && age != NaN) {\r\n        //     this.showTabMenorIdade = true\r\n        //     this.showPerguntaRespFinanc = false\r\n        //     this.showFormRespFinanc = false\r\n        //     this.colaboradorForm.get('temRespFin').setValue(true)\r\n        // } else if (age > 18 && age != NaN) {\r\n        //     this.showTabMenorIdade = false\r\n        //     this.showPerguntaRespFinanc = true\r\n        //     if (this.checkedRespFinanc.sim == true) {\r\n        //         this.showFormRespFinanc = false\r\n        //     } else {\r\n        //         this.showFormRespFinanc = true\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\n\r\nexport const Avaliacao = [\r\n    { type: 1, value: '1ª Avaliação' },\r\n   // { type: 'segundaChamadaAvaliacaoUm', value: '2º Chamada aval. 1' },\r\n    { type: 2, value: '2ª Avaliação' },\r\n    //{ type: 'segundaChamadaAvaliacaoDois', value: '2º Chamada aval. 2' },\r\n    { type: 3, value: '3ª Avaliação' }\r\n    //{ type: 'segundaChamadaAvaliacaoTres', value: '2º Chamada aval. 3' }\r\n   // { type: 'irmao', value: 'Irmão/Irmã' }\r\n\r\n]","<div style=\"font-size: 1.2em;\">Agendamento de avaliações\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n\r\n<hr>\r\n\r\n<br>\r\n<div style=\"margin-bottom: 50px;\">{{turma.descricao}} - Turma {{turma.identificador}}</div>\r\n\r\n<mat-form-field style=\"width: 25%;\">\r\n    <mat-label>Avaliação</mat-label>\r\n    <mat-select selected>\r\n        <mat-option></mat-option>\r\n        <mat-option (click)=\"avalSelected(item.type, item.value)\" *ngFor=\"let item of avaliacao\" [value]=\"item.type\">\r\n            {{item.value}}\r\n        </mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n\r\n<div class=\"table-responsive\" *ngIf=\"showListaDatas\" style=\"height: 430px;position: relative;\">\r\n    <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n\r\n        <thead>\r\n            <tr>\r\n                <th style=\"width: 2%; \r\n                text-align:left; \r\n                vertical-align: middle;\r\n                border-top: 0px;\"></th>\r\n\r\n\r\n                <th style=\"width: 28%;font-size:1em;\r\n                vertical-align: middle; \r\n                text-align:left;\r\n                 border-top: 0px; font-weight: 400;\">Matéria</th>\r\n\r\n\r\n\r\n                <th style=\"width: 35%;font-size:1em;\r\n                text-align:center; border: 1px solid red;\r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">\r\n                    {{ headerOne }}\r\n                </th>\r\n\r\n                <th style=\"width: 35%;font-size:1em;\r\n                text-align:center; border: 1px solid red;\r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">\r\n                    2ª ch.\r\n                </th>\r\n\r\n                <!-- <th style=\"width: 12%;font-size:1em;\r\n                text-align:center;\r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">\r\n                    2ª Avaliação\r\n                </th>\r\n\r\n                <th style=\"width: 12%;font-size:1em;\r\n                text-align:center;\r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">\r\n                    2ª ch.\r\n                </th>\r\n\r\n                <th style=\"width: 12%;font-size:1em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">3ª Avaliação</th>\r\n\r\n                <th style=\"width: 12%;font-size:1em;\r\n                text-align:center;\r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">\r\n                    2ª ch.\r\n                </th> -->\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            <tr *ngFor=\"let mat of agendaProvas; let i = index;\">\r\n                <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                <td style=\"font-size:0.8em;text-align:left;vertical-align: middle;\">\r\n                    {{mat.materia}}\r\n                </td>\r\n\r\n\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;\">\r\n                    <!-- <mat-form-field appearance=\"standard\" style=\"width: 25%; \">\r\n                        \r\n                        <input  mask=\"00/00/0000\" required name=\"aval\" matInput placeholder=\"\" \r\n                        [(ngModel)]=\"mat.avaliacaoUm\"\r\n                        \r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </mat-form-field> -->\r\n\r\n                    <!-- <mat-form-field style=\"width: 165px; transform: scale(0.85);padding: 0px;margin: 0px;\"\r\n                        appearance=\"fill\">\r\n\r\n                        <input [(ngModel)]=\"mat.avaliacaoUm\" name=\"avalone\" matInput [matDatepicker]=\"dp3\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #dp1 disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field> -->\r\n\r\n\r\n\r\n                    <container-element [ngSwitch]=\"avalAtual\">\r\n\r\n                        <some-element *ngSwitchCase=\"1\">\r\n                            <mat-form-field style=\"width: 165px; transform: scale(0.85);padding: 0px;margin: 0px;\"\r\n                                appearance=\"fill\">\r\n\r\n                                <input [(ngModel)]=\"mat.avaliacaoUm\" name=\"avalone\" matInput [matDatepicker]=\"dp1\">\r\n                                <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #dp1 disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                        </some-element>\r\n\r\n                        <some-element *ngSwitchCase=\"2\">\r\n                            <mat-form-field style=\"width: 165px; transform: scale(0.85);padding: 0px;margin: 0px;\"\r\n                                appearance=\"fill\">\r\n\r\n                                <input [(ngModel)]=\"mat.avaliacaoDois\" name=\"avalone\" matInput [matDatepicker]=\"dp2\">\r\n                                <mat-datepicker-toggle matSuffix [for]=\"dp2\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #dp2 disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                        </some-element>\r\n                        \r\n                        <some-other-element *ngSwitchCase=\"3\">\r\n                            <mat-form-field style=\"width: 165px; transform: scale(0.85);padding: 0px;margin: 0px;\"\r\n                                appearance=\"fill\">\r\n\r\n                                <input [(ngModel)]=\"mat.avaliacaoTres\" name=\"avalone\" matInput [matDatepicker]=\"dp3\">\r\n                                <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                        </some-other-element>\r\n\r\n                    </container-element>\r\n\r\n                </td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                    <container-element [ngSwitch]=\"avalAtual\">\r\n\r\n                        <some-element *ngSwitchCase=\"1\">\r\n                            <mat-form-field style=\"width: 165px; transform: scale(0.85);padding: 0px;margin: 0px;\"\r\n                                appearance=\"fill\">\r\n\r\n                                <input [(ngModel)]=\"mat.segundaChamadaAvaliacaoUm\" name=\"avalone\" matInput [matDatepicker]=\"dp1a\">\r\n                                <mat-datepicker-toggle matSuffix [for]=\"dp1a\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #dp1a disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                        </some-element>\r\n\r\n                        <some-element *ngSwitchCase=\"2\">\r\n                            <mat-form-field style=\"width: 165px; transform: scale(0.85);padding: 0px;margin: 0px;\"\r\n                                appearance=\"fill\">\r\n\r\n                                <input [(ngModel)]=\"mat.segundaChamadaAvaliacaoDois\" name=\"avalone\" matInput [matDatepicker]=\"dp2a\">\r\n                                <mat-datepicker-toggle matSuffix [for]=\"dp2a\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #dp2a disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                        </some-element>\r\n                        \r\n                        <some-other-element *ngSwitchCase=\"3\">\r\n                            <mat-form-field style=\"width: 165px; transform: scale(0.85);padding: 0px;margin: 0px;\"\r\n                                appearance=\"fill\">\r\n\r\n                                <input [(ngModel)]=\"mat.segundaChamadaAvaliacaoTres\" name=\"avalone\" matInput [matDatepicker]=\"dp3a\">\r\n                                <mat-datepicker-toggle matSuffix [for]=\"dp3a\"></mat-datepicker-toggle>\r\n                                <mat-datepicker #dp3a disabled=\"false\"></mat-datepicker>\r\n                            </mat-form-field>\r\n                        </some-other-element>\r\n                        \r\n\r\n                    </container-element>\r\n\r\n                </td>\r\n\r\n                <!-- <td style=\"text-align: center;vertical-align: middle;\">\r\n                    <i *ngIf=\"mat.avaliacaoDois == null;else mostrarDataDois\" style=\"margin: 0px; margin: 0px;\"\r\n                        #tooltip=\"matTooltip\" matTooltip=\"agendar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <button (click)=\"setData(mat, '2a','create')\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                            <mat-icon>pending_actions</mat-icon>\r\n                        </button>\r\n                    </i>\r\n                    <ng-template #mostrarDataDois>\r\n                        {{ mat.avaliacaoDois }}\r\n                        <i style=\"margin-left: 2px; vertical-align: middle; margin-bottom: 10px;\"\r\n                            #tooltip=\"matTooltip\" matTooltip=\"editar\" matTooltipPosition=\"above\"\r\n                            matTooltipHideDelay=\"100\">\r\n                            <button (click)=\"setData(mat, '2a', 'edit')\" style=\"vertical-align: middle;margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon style=\"font-size: 1em;vertical-align: middle;\">build</mat-icon>\r\n                            </button>\r\n                        </i>\r\n                    </ng-template>\r\n                </td>\r\n               \r\n                <td style=\"text-align: center;vertical-align: middle;\">\r\n                    <i *ngIf=\"mat.segundaChamadaAvaliacaoDois == null;else mostrarData\" style=\"margin: 0px; margin: 0px;\"\r\n                        #tooltip=\"matTooltip\" matTooltip=\"agendar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <button (click)=\"setData(mat, '2b','create')\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                            <mat-icon>pending_actions</mat-icon>\r\n                        </button>\r\n                    </i>\r\n                    <ng-template #mostrarData>\r\n                        {{ mat.segundaChamadaAvaliacaoDois }}\r\n                        <i style=\"margin-left: 2px; vertical-align: middle; margin-bottom: 10px;\"\r\n                            #tooltip=\"matTooltip\" matTooltip=\"editar\" matTooltipPosition=\"above\"\r\n                            matTooltipHideDelay=\"100\">\r\n                            <button (click)=\"setData(mat, '2b', 'edit')\" style=\"vertical-align: middle;margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon style=\"font-size: 1em;vertical-align: middle;\">build</mat-icon>\r\n                            </button>\r\n                        </i>\r\n                    </ng-template>\r\n\r\n                </td> -->\r\n\r\n                <!-- <td style=\"text-align: center;vertical-align: middle;\">\r\n                    <i *ngIf=\"mat.avaliacaoTres == null;else mostrarDataTres\" style=\"margin: 0px; margin: 0px;\"\r\n                        #tooltip=\"matTooltip\" matTooltip=\"agendar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <button (click)=\"setData(mat, '3a','create')\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                            <mat-icon>pending_actions</mat-icon>\r\n                        </button>\r\n                    </i>\r\n                    <ng-template #mostrarDataTres>\r\n                        {{ mat.avaliacaoTres }}\r\n                        <i style=\"margin-left: 2px; vertical-align: middle; margin-bottom: 10px;\"\r\n                            #tooltip=\"matTooltip\" matTooltip=\"editar\" matTooltipPosition=\"above\"\r\n                            matTooltipHideDelay=\"100\">\r\n                            <button (click)=\"setData(mat, '3a', 'edit')\" style=\"vertical-align: middle;margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon style=\"font-size: 1em;vertical-align: middle;\">build</mat-icon>\r\n                            </button>\r\n                        </i>\r\n                    </ng-template>\r\n                </td>\r\n               \r\n                <td style=\"text-align: center;vertical-align: middle;\">\r\n                    <i *ngIf=\"mat.segundaChamadaAvaliacaoTres == null;else mostrarData\" style=\"margin: 0px; margin: 0px;\"\r\n                        #tooltip=\"matTooltip\" matTooltip=\"agendar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <button (click)=\"setData(mat, '3b','create')\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                            <mat-icon>pending_actions</mat-icon>\r\n                        </button>\r\n                    </i>\r\n                    <ng-template #mostrarData>\r\n                        {{ mat.segundaChamadaAvaliacaoTres }}\r\n                        <i style=\"margin-left: 2px; vertical-align: middle; margin-bottom: 10px;\"\r\n                            #tooltip=\"matTooltip\" matTooltip=\"editar\" matTooltipPosition=\"above\"\r\n                            matTooltipHideDelay=\"100\">\r\n                            <button (click)=\"setData(mat, '3b', 'edit')\" style=\"vertical-align: middle;margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon style=\"font-size: 1em;vertical-align: middle;\">build</mat-icon>\r\n                            </button>\r\n                        </i>\r\n                    </ng-template>\r\n\r\n                </td> -->\r\n\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <br>\r\n\r\n</div>\r\n<ng-container *ngIf=\"showListaDatas\">\r\n    <button style=\"float:right;margin-top: 15px; margin-bottom: 10px;\" mat-raised-button\r\n        (click)=\"saveCalendar()\">Save</button>\r\n</ng-container>","import { Component, EventEmitter, Inject, OnInit, Output } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { PedagService } from \"../../service/pedag.service\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { InfoFinanceiras } from \"src/app/_shared/models/InfoFinanceiras.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { DocumentoAlunoDto } from \"../../Pedag-Models/documentoaluno.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\n@Component({\r\n    selector: 'info-cadastraismodal',\r\n    templateUrl: './info-cadastrais.component.html',\r\n    styleUrls: ['./info-cadastrais.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class InfoCadastraisComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    public initProgressBar = 'visible'\r\n    public disabledSaveButton = 'hidden'\r\n    private alunoOriginal: any\r\n    public aluno: any\r\n    public showForm = false\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n\r\n    public alunoForm: FormGroup;\r\n    private alunoOriginalForm: any\r\n\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _helper: HelpersService,\r\n        public dialogRef: MatDialogRef<InfoCadastraisComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.alunoForm = _fb.group({\r\n            id: [''],\r\n            nome: [''],\r\n            nomeSocial: [''],\r\n            cpf: [''],\r\n            rg: [''],\r\n            nomePai: [''],\r\n            nomeMae: [''],\r\n            nascimento: [''],\r\n            naturalidade: ['', [Validators.required]],\r\n            naturalidadeUF: ['', [Validators.required]],\r\n            email: [''],\r\n            telReferencia: [null, [Validators.required, Validators.minLength(10)]],\r\n            nomeContatoReferencia: ['', [Validators.required, Validators.minLength(2)]],\r\n            telCelular: [''],\r\n            telWhatsapp: [''],\r\n            telResidencial: [''],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            numero: ['', [Validators.required, Validators.minLength(1)]],\r\n            complemento: [''],\r\n            cidade: [''],\r\n            uf: [''],\r\n            bairro: [''],\r\n            ativo: [''],\r\n            dataCadastro: [''],\r\n            unidadeId: ['']\r\n        })\r\n\r\n        this.alunoForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n                //console.log(this.alunoForm.get('telWhatsapp').value.length)\r\n                // Nenhum preenchido\r\n                if (this.alunoForm.get('telCelular').value == '' &&\r\n                    this.alunoForm.get('telWhatsapp').value == '' &&\r\n                    this.alunoForm.get('telResidencial').value == '') {\r\n                    //console.log('all null')\r\n                    //console.log(this.alunoForm)\r\n                    this.alunoForm.get('telCelular').setValidators([Validators.required, Validators.minLength(11)])\r\n                    this.alunoForm.get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n                    this.alunoForm.get('telWhatsapp').setValidators([Validators.required, Validators.minLength(11)])\r\n                    this.alunoForm.get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n                    this.alunoForm.get('telResidencial').setValidators([Validators.required, Validators.minLength(10)])\r\n                    this.alunoForm.get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n\r\n                } else if (this.alunoForm.get('telCelular').value.length < 11 ||\r\n                    this.alunoForm.get('telWhatsapp').value.length < 11 ||\r\n                    this.alunoForm.get('telResidencial').value.length < 10) {\r\n                    //console.log('um com valor')\r\n                    //console.log(this.alunoForm)\r\n                    if (this.alunoForm.get('telCelular').value.length < 11 && this.alunoForm.get('telCelular').value.length > 0) {\r\n                        this.alunoForm.get('telCelular').setValidators([Validators.required, Validators.minLength(11)])\r\n                        this.alunoForm.get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n                    } else {\r\n                        this.alunoForm.get('telCelular').clearValidators()\r\n                        this.alunoForm.get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n                    }\r\n                    if (this.alunoForm.get('telWhatsapp').value.length < 11 && this.alunoForm.get('telWhatsapp').value.length > 0 ) {\r\n                        this.alunoForm.get('telWhatsapp').setValidators([Validators.required, Validators.minLength(11)])\r\n                        this.alunoForm.get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n                    } else {\r\n                        this.alunoForm.get('telWhatsapp').clearValidators()\r\n                        this.alunoForm.get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n                    }\r\n                    if (this.alunoForm.get('telResidencial').value.length < 10 && this.alunoForm.get('telResidencial').value.length > 0 ) {\r\n                        this.alunoForm.get('telResidencial').setValidators([Validators.required, Validators.minLength(10)])\r\n                        this.alunoForm.get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n                    } else {\r\n                        this.alunoForm.get('telResidencial').clearValidators()\r\n                        this.alunoForm.get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n                    }\r\n                } else {\r\n                    this.alunoForm.get('telCelular').clearValidators()\r\n                    this.alunoForm.get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    this.alunoForm.get('telWhatsapp').clearValidators()\r\n                    this.alunoForm.get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    this.alunoForm.get('telResidencial').clearValidators()\r\n                    this.alunoForm.get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n                }\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        //this.alunoId = this.data['aluno'].nome\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        //console.log(this.data['aluno'])\r\n        this.getAluno(this.data['aluno'].id);\r\n    }\r\n    \r\n    getAluno(alunoId) {\r\n\r\n        this._http.get(`${this.baseUrl}/alunos/cadastro/${alunoId}`)\r\n            .subscribe(resp => {\r\n                // this.alunoOriginal = Object.assign({}, resp['aluno'])\r\n                // this.aluno = Object.assign({}, resp['aluno'])\r\n\r\n                this.alunoForm.patchValue(resp['aluno']);\r\n                this.alunoOriginalForm = JSON.parse(JSON.stringify(this.alunoForm.value))\r\n\r\n\r\n            }, () => {\r\n                this.initProgressBar = 'hidden'\r\n            },\r\n                () => {\r\n\r\n                    this.initProgressBar = 'hidden'\r\n                    this.dialogRef.addPanelClass('infocadastrais-class')\r\n                    console.log(this.aluno)\r\n                    this.showForm = true\r\n                })\r\n    }\r\n\r\n    get podeSalvar() {\r\n\r\n        if (this.alunoForm.valid &&\r\n            JSON.stringify(this.alunoOriginalForm) !=\r\n            JSON.stringify(this.alunoForm.value)) {\r\n\r\n            return this.disabledSaveButton != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    onFocusOutDateEvent($event) {\r\n\r\n    }\r\n\r\n    consultaCEP(CEP: string) {\r\n        //console.log(cep);\r\n        if (this.alunoForm.get('cep').valid) {\r\n\r\n            CEP = CEP.replace('-', '');\r\n            CEP = CEP.replace('.', '');\r\n\r\n\r\n            this._http.get(`https://viacep.com.br/ws/${CEP}/json/`)\r\n                .subscribe(response => {\r\n                    //console.log(response);\r\n                    this.alunoForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase())\r\n                    this.alunoForm.get('bairro').setValue(response[\"bairro\"].toUpperCase())\r\n                    this.alunoForm.get('cidade').setValue(response[\"localidade\"].toUpperCase())\r\n                    this.alunoForm.get('uf').setValue(response[\"uf\"].toUpperCase())\r\n\r\n\r\n                }, err => {\r\n                    //console.log(\"erros\") \r\n                },\r\n                    () => {\r\n                        //    console.log('finaly') \r\n                    });\r\n        }\r\n    }\r\n\r\n    public SaveEdit(form: any) {\r\n        this.disabledSaveButton = 'visible'\r\n        if (form.valid) {\r\n\r\n            //this.redi([\"./adm/colaboradores\"]);\r\n            this._http.put(`${this.baseUrl}/alunos`, this.alunoForm.value, {})\r\n                .subscribe(response => {\r\n\r\n                }, err => {\r\n                    this.disabledSaveButton = 'hidden'\r\n                },\r\n                    () => {\r\n                        this.disabledSaveButton = 'hidden'\r\n                        this._helper.openSnackBarSucesso(\"Cadastro editado com sucesso.\")\r\n                        this.dialogRef.close({ clicked: true });\r\n\r\n                    });\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Cadastro\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n<hr>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight style=\"margin:0px\" mode=\"query\"></mat-progress-bar>\r\n\r\n\r\n<div *ngIf=\"showForm\" style=\"position: relative;\">\r\n\r\n    <form novalidate [formGroup]=\"alunoForm\" (ngSubmit)=\"SaveEdit(alunoForm)\">\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n            <mat-label>Nome completo</mat-label>\r\n            <input [value]=\"alunoForm.get('nome').value\" disabled matInput>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 14%; margin-left: 2%;\">\r\n            <mat-label>CPF</mat-label>\r\n            <input disabled [value]=\"alunoForm.get('cpf').value | cpf\" matInput>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 12%; margin-left: 2%;\">\r\n            <mat-label>RG</mat-label>\r\n            <input [value]=\"alunoForm.get('rg').value\" disabled matInput>\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 13%; margin-left: 2%;\">\r\n            <mat-label>Nascimento</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" [value]=\"alunoForm.get('nascimento').value\" disabled>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <mat-slide-toggle style=\"margin-left: 15%;\" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n            formControlName=\"ativo\" required matTooltip=\"ativo/inativo\" [required]=\"false\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"250\" color=\"primary\">\r\n        </mat-slide-toggle>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n            <mat-label>Nome Pai</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"nomePai\" matInput\r\n                placeholder=\"Nome do pai\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%;margin-left: 2%;\">\r\n            <mat-label>Nome Mãe</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"nomeMae\" matInput\r\n                placeholder=\"Nome da mãe\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n            <mat-label>Nome Social</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"nomeSocial\" matInput\r\n                placeholder=\"Nome social\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n            <mat-label>Naturalidade</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"naturalidade\" matInput>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n            <mat-label>UF</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\"\r\n                oninput=\"this.value = this.value.toUpperCase()\" minlength=\"2\" maxlength=\"2\" matInput\r\n                formControlName=\"uf\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n            <mat-label>Email</mat-label>\r\n            <input [value]=\"alunoForm.get('email').value\" disabled matInput>\r\n            <mat-hint @rowHighlight *ngIf=\"validadeEmailMsg\" style=\"color: red;\">\r\n                O email informado já existe\r\n            </mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n            <mat-label>Celular</mat-label>\r\n            <input formControlName=\"telCelular\" mask=\"(00) 00000-0000\" matInput\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n            <mat-label>WhatsApp</mat-label>\r\n            <input formControlName=\"telWhatsapp\" mask=\"(00) 00000-0000\" matInput\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n            <mat-label>Residencial</mat-label>\r\n            <input formControlName=\"telResidencial\" mask=\"(00) 0000-0000\" matInput\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 17%;\">\r\n            <mat-label>Tel referência</mat-label>\r\n            <input formControlName=\"telReferencia\" mask=\"(00) 00000-0000\" matInput\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%;margin-left: 5%; \">\r\n            <mat-label>Nome do contato</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"nomeContatoReferencia\" matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n            <mat-label>CEP</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" formControlName=\"cep\"\r\n            mask=\"00.000-000\" minlength=\"8\" maxlength=\"10\"  matInput>\r\n        </mat-form-field>\r\n        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <span type=\"button\" (click)=\"consultaCEP(alunoForm.get('cep').value)\" style=\"margin: 0px; margin: 0px;\"\r\n                mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </span>\r\n        </i>\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 5%;\">\r\n            <mat-label>Logradouro</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"logradouro\" matInput\r\n                placeholder=\"ex: rua tal...\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 5%;\">\r\n            <mat-label>Número</mat-label>\r\n            <input selected oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"numero\" name=\"numero\"\r\n                matInput placeholder=\"ex: rua tal...\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 5%;\">\r\n            <mat-label>Complemento</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"complemento\" matInput\r\n                placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n            <mat-label>Cidade</mat-label>\r\n            <input [value]=\"alunoForm.get('cidade').value\" disabled matInput>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 5%;\">\r\n            <mat-label>UF</mat-label>\r\n            <input disabled [value]=\"alunoForm.get('uf').value\" matInput>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 5%;\">\r\n            <mat-label>Bairro</mat-label>\r\n            <input [value]=\"alunoForm.get('bairro').value\" disabled matInput>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n\r\n\r\n        <mat-progress-bar @rowHighlight [style.visibility]=\"disabledSaveButton\" style=\"margin:0px\" mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <span style=\"float: right;margin-top: 15px;\">\r\n            <button type=\"submit\" color=\"primary\" mat-raised-button [disabled]=\"podeSalvar\">\r\n                Salvar\r\n            </button>\r\n        </span>\r\n    </form>\r\n\r\n</div>","export const Tabs = [\r\n    { class: '', typeIcon: 'manage_accounts' },\r\n    // { path: '/adm/unidades', title: 'Unidades', class: '', typeIcon: 'house' },\r\n    { class: '', typeIcon: 'house' },\r\n    { class: '', typeIcon: 'engineering' },\r\n    { class: '', typeIcon: 'fact_check' },\r\n]\r\n\r\n\r\n\r\nexport const Parentesco = [\r\n    { type: 'pais', value: 'Pai/Mãe' },\r\n    { type: 'filhos', value: 'Filho/Filha' },\r\n    { type: 'avos', value: 'Avô/Avó' },\r\n    { type: 'sobrinhos', value: 'Sobinho(a)' },\r\n    { type: 'tio', value: 'Tio(a)' },\r\n    { type: 'conjuge', value: 'Conjugê' },\r\n    { type: 'irmao', value: 'Irmão/Irmã' }\r\n\r\n]\r\n\r\nexport const CienciaCurso = [\r\n    { type: 'Balcão', value: 'Balcão' },\r\n    { type: 'Indicação Aluno', value: 'Indicação Aluno' },\r\n    { type: 'Rádio', value: 'Rádio' },\r\n    { type: 'Facebook', value: 'Facebook' },\r\n    { type: 'Internet', value: 'Internet' },\r\n    { type: 'Site', value: 'Site' }\r\n]\r\n\r\nexport const Parcelas = [\r\n    { type: 'vista', value: 'A Vista' },\r\n    { type: '2', value: '2x' },\r\n    { type: '3', value: '3x' },\r\n    { type: '4', value: '4x' },\r\n    { type: '5', value: '5x' },\r\n    { type: '6', value: '6x' },\r\n    { type: '7', value: '7x' },\r\n    { type: '8', value: '8x' },\r\n    { type: '9', value: '9x' },\r\n    { type: '10', value: '10x' },\r\n    { type: '11', value: '11x' },\r\n    { type: '12', value: '12x' },\r\n    { type: '13', value: '13x' },\r\n    { type: '14', value: '14x' },\r\n    { type: '15', value: '15x' },\r\n    { type: '16', value: '16x' },\r\n    { type: '17', value: '17x' },\r\n    { type: '18', value: '18x' },\r\n    { type: '19', value: '19x' },\r\n    { type: '20', value: '20x' },\r\n]\r\n\r\nexport const DiaVencimento = [\r\n    { type: '1', value: '1' },\r\n    { type: '3', value: '3' },\r\n    { type: '5', value: '5' },\r\n    { type: '8', value: '8' },\r\n    { type: '10', value: '10' },\r\n    { type: '15', value: '15' }\r\n]\r\n\r\n\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n\r\nexport interface IServico{\r\n    pegar(): string\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class Servico implements IServico{\r\n\r\n    palavra: string = '';\r\n\r\n    pegar(): string {\r\n        //throw new Error(\"Method not implemented.\");\r\n        return this.palavra;\r\n    }\r\n\r\n    // \r\n\r\n    // pegar(): string {\r\n    //     this.palavra = 'Álvaro';\r\n    //     \r\n\r\n    // }\r\n    \r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  baseURL = environment.baseUrl;\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n\n  constructor(private http: HttpClient) { }\n\n  login(model: any, unidadeId:any) {\n\n    let url = `${this.baseURL}/identity/login/${unidadeId}`\n\n   \n    return this.http\n      .post(url, model, {\n\n      }).pipe(\n        map((response: any) => {\n          const user = response;\n          //console.log(user)\n          if (user) {\n            localStorage.setItem('jwt', user.accessToken);\n            //this.decodedToken = this.jwtHelper.decodeToken(user.userToken);\n            sessionStorage.setItem('username', user.userToken.nome);\n          }\n        })\n      );\n  }\n\n  public extractData(response: any) {\n    return response || {};\n  }\n\n  preLogin(model: any) {\n\n    //let url = `${this.baseURL}/identity/login`\n    let url = `${this.baseURL}/identity/pre-login`\n   \n    let response = this.http\n      .post(url, model, {\n\n      }).pipe(\n        map(this.extractData),\n        catchError(this.serviceError));\n\n    return response;\n  }\n\n  public serviceError(response: Response | any) {\n    let customError: string[] = [];\n\n    if (response instanceof HttpErrorResponse) {\n\n      if (response.statusText === \"Unknown Error\") {\n        customError.push(\"Ocorreu um erro desconhecido\");\n        response.error.errors = customError;\n      }\n    }\n\n    // console.error(response);\n    return throwError(response);\n  }\n  loggedIn() {\n    const token = localStorage.getItem('jwt');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n}\n","import { Component, Inject, Input, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { PedagogicoService } from \"../../service/pedagogico.service\";\r\nimport { Observable } from \"rxjs\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'confirmamat',\r\n    templateUrl: './confirmamat.component.html'\r\n    //; styleUrls: ['./confirm.component.scss']\r\n})\r\n\r\nexport class ConfirmMatriculaComponent implements OnInit {\r\n\r\n    hidden = 'hidden'\r\n    msgSpan = 'hidden'\r\n    msg = 'fazendo download do contrato...'\r\n    baseUrl = environment.baseUrl;\r\n\r\n\r\n    constructor(\r\n        //private service: AdmService,\r\n        private _http: HttpClient,\r\n        private CreateMatriculaModal: MatDialog,\r\n        private router: Router,\r\n        private _pedagService: PedagogicoService,\r\n        public dialogRef: MatDialogRef<ConfirmMatriculaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n    }\r\n\r\n\r\n\r\n    ngOnInit() {\r\n        // console.log(\"on init\")\r\n        //this.getTasks(1, this.pageSize);\r\n        //this.colaboradorForm.get('logradouro').disable()\r\n\r\n    }\r\n\r\n    Confirm(msg: Boolean) {\r\n        if (msg == true) {\r\n            this.disabledButton = true\r\n            this.BaixarContrato()\r\n\r\n        } else {\r\n\r\n            this.dialogRef.close();\r\n\r\n        }\r\n    }\r\n\r\n\r\n    disabledButton = false\r\n\r\n    BaixarContrato() {\r\n        var file = 'contrato';//doc.nome;// \"Modelo LEAD.xlsx\";// this.createFileName(\"EXCEL\");\r\n        this.hidden = 'visible'\r\n        this.msgSpan = 'visible'\r\n        this.msg = 'fazendo download do contrato...'\r\n        this.downloadContrato().subscribe(data => {\r\n\r\n            switch (data.type) {\r\n                case HttpEventType.Response:\r\n                    // this.showSpinner = false;\r\n                    //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n                    const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n                    const a = document.createElement('a');\r\n                    a.setAttribute('style', 'display:none;');\r\n                    document.body.appendChild(a);\r\n                    a.download = file;\r\n                    a.href = URL.createObjectURL(downloadedFile);\r\n                    a.target = '_blank';\r\n                    a.click();\r\n                    document.body.removeChild(a);\r\n                    break;\r\n            }\r\n        },\r\n            (err) => {\r\n                this.dialogRef.close();\r\n            },\r\n            () => {\r\n                this.BaixarFicha()\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    BaixarFicha() {\r\n        var file = 'ficha';//doc.nome;// \"Modelo LEAD.xlsx\";// this.createFileName(\"EXCEL\");\r\n        this.hidden = 'visible'\r\n        this.msgSpan = 'visible'\r\n        this.msg = 'fazendo download da ficha de matrícula...'\r\n        this.downloadFicha().subscribe(data => {\r\n\r\n            switch (data.type) {\r\n                case HttpEventType.Response:\r\n                    // this.showSpinner = false;\r\n                    //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n                    const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n                    const a = document.createElement('a');\r\n                    a.setAttribute('style', 'display:none;');\r\n                    document.body.appendChild(a);\r\n                    a.download = file;\r\n                    a.href = URL.createObjectURL(downloadedFile);\r\n                    a.target = '_blank';\r\n                    a.click();\r\n                    document.body.removeChild(a);\r\n                    break;\r\n            }\r\n        },\r\n            (err) => {\r\n                this.dialogRef.close();\r\n            },\r\n            () => {\r\n                this.dialogRef.close();\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    public downloadContrato(): Observable<HttpEvent<Blob>> {\r\n        return this._http.request(new HttpRequest(\r\n            'GET', `${this.baseUrl}/pedag/doc/getcontrato/${this.data['matriculaId']}`, null, {\r\n            reportProgress: true,\r\n            responseType: 'blob'\r\n        }));\r\n    }\r\n\r\n    public downloadFicha(): Observable<HttpEvent<Blob>> {\r\n        return this._http.request(new HttpRequest(\r\n            'GET', `${this.baseUrl}/pedag/doc/getficha/${this.data['matriculaId']}`, null, {\r\n            reportProgress: true,\r\n            responseType: 'blob'\r\n        }));\r\n    }\r\n\r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n}","<div class=\"container\">\r\n\r\n    <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n\r\n        <div style=\"font-size: 1.2em;\">Matrícula realizada com sucesso!</div>\r\n\r\n        <div>\r\n            Deseja imprimir o contrato e a ficha de matrícula?\r\n        </div>\r\n\r\n    </div>\r\n    <span [style.visibility]=\"msgSpan\" style=\"font-size: 0.8em;\">{{msg}}</span>\r\n    <mat-progress-bar [style.visibility]=\"hidden\" @rowHighlight mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n    <div class=\"row\">\r\n        <button style=\"width: 30px;\" [disabled]=\"disabledButton\" (click)=\"Confirm(true)\" mat-button>SIM</button>\r\n        <button style=\"width: 30px;\" [disabled]=\"disabledButton\" (click)=\"Confirm(false)\" mat-button>NÃO</button>\r\n    </div>\r\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { environment } from \"src/environments/environment\";\r\n//import { Cargo } from \"../Adm-Models/cargos.model\";\r\nimport { AdmService } from \"../services/adm.services\";\r\nimport { EditCargoModalConfig } from \"../services/modal.config\";\r\nimport { CargoEditComponent } from \"./Cargos-edit/cargo-edit.component\";\r\nimport { CargoCreateComponent } from \"./Config-Cargos/cargo-create.component\";\r\nimport { DocTemplateComponent } from \"./Doc-create/doctemplate.component\";\r\nimport { MateriaTemplateComponent } from \"./Mat-create/mat-create.component\";\r\n\r\n//declare var $: any;\r\n\r\nenum Config {\r\n    CARGOS,\r\n    DOCUMENTOS,\r\n    MATERIAS\r\n}\r\n\r\n@Component({\r\n    selector: \"configuracoes-app\",\r\n    templateUrl: './configuracoes.component.html',\r\n    styleUrls: ['./configuracoes.component.scss'],\r\n    animations: [HighlightTrigger]\r\n\r\n})\r\n\r\nexport class ConfiguracoesComponent implements OnInit {\r\n\r\n    // Materias paginated\r\n    materiasLength: number = 0\r\n    materiasPageSize: number = 10;\r\n    materiasPageEvent: PageEvent;\r\n    materiasPageIndexNumber: number = 0;\r\n    materiasCurrentPage = 1\r\n    @ViewChild(MatPaginator) MateriaPaginator: MatPaginator\r\n    //\r\n    public config: Config\r\n    public configCargos = Config.CARGOS\r\n    private baseUrl = environment.baseUrl;\r\n    public searchSpinner = 'hidden'\r\n    public showCargosTable = false\r\n    public showDocumentosTable = false\r\n    public showMateriasTable = false\r\n    public htmlContent: any = \"weewgwegewgegergregergergerg\";//any;\r\n    public cargos: any[] = new Array<any>();\r\n    public documentos: any[] = new Array<any>();\r\n    public materias: any[] = new Array<any>();\r\n    constructor(\r\n        private _admService: AdmService,\r\n        //private _http: HttpClient,\r\n        private _modal: MatDialog\r\n    ) { }\r\n\r\n\r\n\r\n    ngOnInit() {\r\n        // $(\".showtoast\").click(function () {\r\n        //     $('.toast').toast('show');\r\n        // })\r\n        // this.pegarMesg();\r\n    }\r\n\r\n    // Materias\r\n    public GetMaterias(event?: any) {\r\n\r\n        this.searchSpinner = 'visible'\r\n\r\n        if (event != undefined) {\r\n            this.materiasCurrentPage = event.pageIndex + 1\r\n        } else {\r\n            this.materiasCurrentPage = 1\r\n        }\r\n\r\n        this._admService.GetMaterias(this.materiasPageSize, this.materiasCurrentPage)\r\n            .subscribe(\r\n                sucesso => { this.GetMateriasSucesso(sucesso, event) },\r\n                falha => { this.GetMateriasError(falha) }\r\n            )\r\n    }\r\n\r\n    private GetMateriasSucesso(response: any, event?: any) {\r\n        console.log(response)\r\n        this.materias = Object.assign([], response['results'].data);\r\n\r\n        this.materiasLength = response['results'].totalItemsInDatabase\r\n\r\n\r\n        this.searchSpinner = 'hidden'\r\n        if (event != undefined) {\r\n            this.materiasPageIndexNumber = (event.pageIndex * this.materiasPageSize)\r\n        } else {\r\n            this.materiasPageIndexNumber = 0\r\n            console.log(this.MateriaPaginator)\r\n            if (this.MateriaPaginator != undefined) {\r\n                this.MateriaPaginator.firstPage();\r\n            }\r\n        }\r\n\r\n        console.log(this.materiasLength) \r\n        console.log(this.materiasPageSize)\r\n\r\n        this.showMateriasTable = true\r\n    }\r\n\r\n    private GetMateriasError(fail) {\r\n        if (fail['status'] == 404) {\r\n            // this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n            // this.showMessageNoColaborador = true\r\n            this.materias = new Array<any>();\r\n        }\r\n        if (fail['status'] != 404) {\r\n            // this.mensagem = \"Ocorreu um erro desconhecido, por favor, procure o administrador do sistema\"\r\n            // this.showMessageNoColaborador = true\r\n            this.materias = new Array<any>();\r\n        }\r\n\r\n        this.searchSpinner = 'hidden'\r\n    }\r\n\r\n\r\n    //Documentos\r\n\r\n\r\n    showTableCargos = false\r\n\r\n\r\n\r\n    public GetConfig(config: any) {\r\n        this.showCargosTable = false\r\n        this.showDocumentosTable = false\r\n        this.showMateriasTable = false\r\n        console.log(config)\r\n        this.searchSpinner = 'visible'\r\n        this._admService.GetConfig(config)\r\n            .subscribe(\r\n                sucesso => { this.GetConfigSucess(sucesso, config) },\r\n                falha => { this.GetConfigError(falha) }\r\n            )\r\n    }\r\n\r\n    private GetConfigSucess(response, config) {\r\n        this.searchSpinner = 'hidden'\r\n        if (config == 'CARGOS') {\r\n            this.showCargosTable = true\r\n            this.cargos = response['values']\r\n            console.log(response['values'])\r\n        }\r\n        if (config == 'DOCUMENTOS') {\r\n            this.showDocumentosTable = true\r\n            this.documentos = response['docs']\r\n            console.log(response['docs'])\r\n        }\r\n        if (config == 'MATERIAS') {\r\n            this.showMateriasTable = true\r\n            this.materias = response['results']\r\n            console.log(response['results'])\r\n        }\r\n\r\n    }\r\n\r\n    private GetConfigError(error) {\r\n        this.searchSpinner = 'hidden'\r\n    }\r\n\r\n\r\n    // getCargos() {\r\n    //     this.showTableCargos = false\r\n    //     this._http.get(`${this.baseUrl}/unidade/cargo`)\r\n    //         .subscribe(resp => {\r\n    //             this.cargos = Object.assign([], resp)\r\n    //         }, (error) => {\r\n    //             console.log(error)\r\n    //         },\r\n    //             () => {\r\n    //                 this.showTableCargos = true\r\n    //             })\r\n    // }\r\n\r\n    // mensagem: any;\r\n    // pegarMesg() {\r\n\r\n    //     this._http.get(`${this.baseUrl}/mensagem`)\r\n    //         .subscribe(resp => {\r\n    //             console.log(resp)\r\n    //             this.mensagem = resp\r\n    //             this.htmlContent = resp\r\n    //         }, (error) => { console.log(error) },\r\n    //             () => {\r\n\r\n    //             })\r\n    // }\r\n\r\n\r\n\r\n    getDocumentacao() {\r\n\r\n    }\r\n\r\n    getMaterias() {\r\n\r\n    }\r\n\r\n    openCreateMateriaModal(): void { // MateriaTemplateComponent\r\n        const dialogRef = this._modal\r\n            .open(MateriaTemplateComponent, {\r\n                height: 'auto',\r\n                width: '850px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    openCreateDocModal(): void { //DocTemplateComponent\r\n        const dialogRef = this._modal\r\n            .open(DocTemplateComponent, {\r\n                height: 'auto',\r\n                width: '700px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    openCreateCargoModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(CargoCreateComponent, {\r\n                height: 'auto',\r\n                width: '700px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }    \r\n\r\n    public OpenEditCargoModal(item: any): void {\r\n        const dialogRef = this._modal\r\n            .open(CargoEditComponent, EditCargoModalConfig(item));\r\n        dialogRef.afterClosed().subscribe(data => {\r\n        });\r\n    }\r\n\r\n\r\n}","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <span>\r\n        <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"criar cargo\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openCreateCargoModal()\" mat-icon-button>\r\n                <mat-icon>engineering</mat-icon>\r\n            </button>\r\n        </i>\r\n    </span>\r\n\r\n    <span>\r\n        <i style=\"margin-left: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"criar documento\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openCreateDocModal()\" disabled mat-icon-button>\r\n                <mat-icon>assignment_ind</mat-icon>\r\n            </button>\r\n        </i>\r\n    </span>\r\n\r\n    <span>\r\n        <i style=\"margin-left: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"criar materia\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openCreateMateriaModal()\" disabled  mat-icon-button>\r\n                <mat-icon>school</mat-icon>\r\n            </button>\r\n        </i>\r\n    </span>\r\n\r\n    <br>\r\n    <br>\r\n\r\n    <span color=\"primary\" style=\"display: block; font-size: 0.9em;font-style: italic;\">\r\n        pesquisar:\r\n    </span>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 150px;\">\r\n        <mat-label></mat-label>\r\n        <mat-select placeholder=\"\" >\r\n            <mat-option></mat-option>\r\n            <mat-option (click)=\"GetConfig('CARGOS')\" value=\"Cargos\">Cargos</mat-option>\r\n            <mat-option disabled (click)=\"GetConfig('DOCUMENTOS')\" value=\"Cargos\">Documentos</mat-option>\r\n            <mat-option disabled (click)=\"GetMaterias()\" value=\"Cargos\">Matérias</mat-option>\r\n\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n    <!-- <div class=\"card-header card-msg-response\" unselectable=\"on\"\r\n    onselectstart=\"return false;\" *ngIf=\"showMessageNoColaborador\">{{mensagem}}</div> -->\r\n\r\n    <mat-progress-bar [style.visibility]=\"searchSpinner\" style=\"margin-top: 20px;\" @rowHighlight style=\"margin:0px\"\r\n        mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n    <!--    CARGOS         -->\r\n\r\n    <div *ngIf=\"showCargosTable\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n        position: relative;\r\n        margin-top: 20px;\r\n        box-shadow: 0 0 1em rgb(172, 170, 170);\r\n        background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Cargos</h4>\r\n            <p class=\"card-category\"> Cargos cadastrados no sistema: </p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive table-config-cargos\" style=\"height: 430px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n\r\n                            <th>NOME</th>\r\n\r\n                            <th>DESCRIÇÃO</th>\r\n\r\n                            <th></th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of cargos;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{i + 1}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{ item.value }}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{ item.comentario }}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button (click)=\"OpenEditCargoModal(item)\"\r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon  >settings</mat-icon>\r\n                                </button>\r\n                            </i>\r\n\r\n                            </td>\r\n\r\n\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <!-- <mat-paginator *ngIf=\"length > 5\" style=\"\r\n            background-color: rgb(227, 240, 227);\r\n            bottom: 0px;\r\n            right: 0px;\" [length]=\"length\" [pageSize]=\"5\" hidePageSize=\"true\" (page)=\"pageEvent = $event\"\r\n            (click)=\"changePage(pageEvent)\">\r\n        </mat-paginator> -->\r\n\r\n        </div>\r\n\r\n        <!-- <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n        top: 46.5%; \r\n        position: absolute;\">\r\n    </mat-spinner> -->\r\n    </div>\r\n\r\n\r\n\r\n    <!--    DOCUMENTOS         -->\r\n\r\n    <div *ngIf=\"showDocumentosTable\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n        position: relative;\r\n        margin-top: 20px;\r\n        box-shadow: 0 0 1em rgb(172, 170, 170);\r\n        background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Documentos</h4>\r\n            <p class=\"card-category\"> Documentos cadastrados no sistema: </p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive table-config-documentos\" style=\"height: 430px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n\r\n                            <th>NOME</th>\r\n\r\n                            <th>DESCRIÇÃO</th>\r\n\r\n                            <th>VALIDADE</th>\r\n\r\n                            <th></th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of documentos;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{i + 1}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.descricao }}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                            </td>\r\n\r\n\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <!-- <mat-paginator *ngIf=\"length > 5\" style=\"\r\n            background-color: rgb(227, 240, 227);\r\n            bottom: 0px;\r\n            right: 0px;\" [length]=\"length\" [pageSize]=\"5\" hidePageSize=\"true\" (page)=\"pageEvent = $event\"\r\n            (click)=\"changePage(pageEvent)\">\r\n        </mat-paginator> -->\r\n\r\n        </div>\r\n\r\n        <!-- <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n        top: 46.5%; \r\n        position: absolute;\">\r\n    </mat-spinner> -->\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <!--    MATERIAS         -->\r\n\r\n    <div *ngIf=\"showMateriasTable\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n        position: relative;\r\n        margin-top: 20px;\r\n        box-shadow: 0 0 1em rgb(172, 170, 170);\r\n        background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Matérias</h4>\r\n            <p class=\"card-category\"> Matérias cadastrados no sistema: </p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive table-config-materias\" style=\"height: 490px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n\r\n                            <th>NOME</th>\r\n\r\n                            <th>DESCRIÇÃO</th>\r\n\r\n                            <th>MODALIDADE</th>\r\n\r\n                            <th></th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of materias;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{i + 1}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.modalidade }}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                            </td>\r\n\r\n\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <mat-paginator  style=\"\r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" \r\n                [length]=\"materiasLength\" \r\n                [pageSize]=\"materiasPageSize\" \r\n                hidePageSize=\"true\"\r\n                (page)=\"materiasPageEvent = GetMaterias($event)\">\r\n            </mat-paginator>\r\n\r\n        </div>\r\n\r\n        <!-- <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n        top: 46.5%; \r\n        position: absolute;\">\r\n    </mat-spinner> -->\r\n    </div>\r\n\r\n\r\n\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'https://invictus-api-hml.azurewebsites.net/api'\n  //baseUrl: 'http://localhost:5000/api'\n  //baseUrl: 'https://localhost:5001/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Parametros } from \"../colaboradores/colaboradores.component\";\r\nimport { AdmService } from \"../services/adm.services\";\r\nimport { EditAcessoModal } from \"../services/modal.config\";\r\nimport { CreateUserComponent } from \"./CreateModal/createuser.component\";\r\nimport { EditAcessoComponent } from \"./EditAcesso/editacesso.component\";\r\nimport { EditUserComponent } from \"./EditModal/edituser.component\";\r\n\r\n@Component({\r\n    selector: \"usuario-app\",\r\n    templateUrl: './usuario.component.html',\r\n    styleUrls: ['./usuario.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class UsuarioComponent implements OnInit {\r\n\r\n    testeDonne: string = 'done'\r\n    private baseUrl = environment.baseUrl;\r\n    pageSize: number = 5;\r\n    length: number = 0\r\n    pageIndexNumber: number = 0;\r\n    currentPage = 1\r\n    usuarios: any[] = new Array<any>();// Colaborador[] = new Array<Colaborador>()\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n    public pesquisarForm: FormGroup\r\n    public spinnerSearch = 'hidden'\r\n\r\n    constructor(\r\n        //private http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _admService: AdmService,\r\n        private _modal: MatDialog) {\r\n\r\n            this.pesquisarForm = _fb.group({\r\n                nome: ['', [Validators.required]],\r\n                email: ['', [Validators.required]],\r\n                cpf: ['', [Validators.required]],\r\n                ativo: [false]\r\n            });\r\n    \r\n            this.pesquisarForm.valueChanges.subscribe(\r\n                (form: any) => {\r\n    \r\n                    if (this.pesquisarForm.get('nome').value == '' &&\r\n                        this.pesquisarForm.get('email').value == '' &&\r\n                        this.pesquisarForm.get('cpf').value == '') {\r\n    \r\n                        this.pesquisarForm.controls['nome'].setErrors({ required: true });\r\n                        this.pesquisarForm.controls['email'].setErrors({ required: true });\r\n                        this.pesquisarForm.controls['cpf'].setErrors({ required: true });\r\n                    } else {\r\n                        this.pesquisarForm.controls['nome'].setErrors(null);\r\n    \r\n                        this.pesquisarForm.controls['email'].setErrors(null)\r\n    \r\n                        this.pesquisarForm.controls['cpf'].setErrors(null);\r\n                    }\r\n                }\r\n            );\r\n\r\n         }\r\n\r\n    ngOnInit() {\r\n        //this.getUsers(1, this.pageSize)\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n    }\r\n\r\n    get disabledEdit(){\r\n\r\n        return false\r\n    }\r\n\r\n    /*\r\n        getUsers(actualPage: number, pageSize: number) {\r\n    \r\n            this.http.get(`${this.baseUrl}/colaboradores/users/?itemsPerPage=${pageSize}&currentPage=${actualPage}`, {\r\n    \r\n            }).subscribe(response => {\r\n    \r\n                console.log(response)\r\n                Object.assign(this.usuarios, response['data'])\r\n    \r\n            },\r\n                (error) => { console.log(error) },\r\n                () => { })\r\n    \r\n        }\r\n    */\r\n    openCreateUserModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(CreateUserComponent, {\r\n                height: '400px',\r\n                width: '600px',\r\n\r\n                //data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n        //     console.log('The dialog was closed');\r\n        //     // this.animal = result;\r\n        // });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            //console.log('The dialog was closed');\r\n            // console.log(result);\r\n            // console.log(this.templateTasks);\r\n            //console.log(this.templateTasks);\r\n            //this.newtasks. = this.templateTasks\r\n            // this.templateTasks = result;\r\n        });\r\n    }\r\n\r\n    openEditUserModal(item: Colaborador): void {\r\n        const dialogRef = this._modal\r\n            .open(EditUserComponent, {\r\n               // height: '300px',\r\n                width: '600px',\r\n\r\n                data: { colaborador: item },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n        //     console.log('The dialog was closed');\r\n        //     // this.animal = result;\r\n        // });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            //console.log('The dialog was closed');\r\n            // console.log(result);\r\n            // console.log(this.templateTasks);\r\n            //console.log(this.templateTasks);\r\n            //this.newtasks. = this.templateTasks\r\n            // this.templateTasks = result;\r\n        });\r\n    }\r\n\r\n    openAcessoModal(usuario){\r\n        const dialogRef = this._modal\r\n        .open(EditAcessoComponent, EditAcessoModal(usuario));\r\n    dialogRef.afterClosed().subscribe((data) => {\r\n\r\n    });\r\n    }\r\n\r\n    showMessageNoColaborador = false\r\n    mensagem: string = \"\";\r\n    params: Parametros = new Parametros()\r\n    showSpinnerFirst = false\r\n\r\n    onSubmit(event?: any) {\r\n\r\n        this.showMessageNoColaborador = false\r\n\r\n        if (this.pesquisarForm.valid) {\r\n           // this.spinnerSearch = true\r\n           this.spinnerSearch = 'visible'\r\n\r\n            if (event != undefined) {\r\n              //  this.currentPageTeste = event.pageIndex + 1\r\n            } else {\r\n               // this.currentPageTeste = 1\r\n            }\r\n\r\n            this._admService.getUsuarios(this.pageSize, this.currentPage, this.pesquisarForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.processarSucesso(sucesso, event) },\r\n                    falha => { this.processarFalha(falha) }\r\n                );\r\n        }\r\n\r\n    }\r\n\r\n\r\n    processarSucesso(response: any, event?: any) {\r\n       \r\n        this.usuarios = Object.assign([], response['data']);\r\n\r\n        this.length = response['totalItemsInDatabase']\r\n\r\n       // this.spinnerSearch = false\r\n        if (event != undefined){\r\n            this.pageIndexNumber = (event.pageIndex * this.pageSize)\r\n        }else{\r\n            this.pageIndexNumber = 0\r\n          \r\n           // this.paginator.firstPage();\r\n        }\r\n\r\n        this.spinnerSearch = 'hidden'\r\n\r\n    }\r\n\r\n    processarFalha(fail: any) {\r\n\r\n        if (fail['status'] == 404) {\r\n            this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n            this.showMessageNoColaborador = true\r\n            this.usuarios = new Array<any>();\r\n        }\r\n        if (fail['status'] != 404) {\r\n            this.mensagem = \"Ocorreu um erro desconhecido, por favor, procure o administrador do sistema\"\r\n            this.showMessageNoColaborador = true\r\n            this.usuarios = new Array<any>();\r\n        }\r\n        this.spinnerSearch = 'hidden'\r\n       // this.spinnerSearch = false\r\n    }\r\n\r\n\r\n    pesquisar(nome: string, email: string, cpf: string) {\r\n\r\n    //     console.log(nome + \" \" + email + \" \" + cpf)\r\n    //     if (nome == \"\" || nome == undefined) nome = \"\"\r\n    //     if (email == \"\" || email == undefined) email = \"\"\r\n    //     if (cpf == \"\" || cpf == undefined) cpf = \"\"\r\n\r\n    //     if ((nome == \"\" || nome == undefined) &&\r\n    //         (email == \"\" || email == undefined) &&\r\n    //         (cpf == \"\" || cpf == undefined)) {\r\n    //         console.log(\"retorno\")\r\n    //         return;\r\n    //     }\r\n    //     this.showMessageNoColaborador = false\r\n    //     this.mensagem = \"\"\r\n\r\n    //     let query = { nome: nome, cargo: email, unidade: cpf }\r\n    //     this.params.nome = nome\r\n    //     this.params.email = email\r\n    //     this.params.cpf = cpf\r\n\r\n    //     this.showSpinnerFirst = true\r\n    //     this.usuarios = new Array<Colaborador>();\r\n    //     let paramsJson = JSON.stringify(this.params)\r\n    //     console.log(query)\r\n\r\n\r\n    //     this.http.get(`${this.baseUrl}/usuario/?paramsJson={\"nome\":\"${nome}\",\"email\":\"${email}\",\"cpf\":\"${cpf}\"}&itemsPerPage=` + this.pageSize + `&currentPage=1`\r\n    //         //this.http.post(`${this.baseUrl}/colaboradores/pesquisar/?itemsPerPage=` + this.pageSize + `&currentPage=1`, paramsJson, {\r\n    //         // headers: new HttpHeaders({\r\n    //         //     \"Content-Type\": \"application/json\",\r\n    //         //     \"Authorization\": \"Bearer \"\r\n    //         // })}\r\n    //     ).subscribe(\r\n    //         (response) => {\r\n    //             console.log(response)\r\n    //             this.usuarios = Object.assign([], response['usuarios'].data);\r\n\r\n    //             //this.length = response['totalItemsInDatabase']\r\n    //             // if (this.length == 0) {\r\n    //             //     this.showMessageNoColaborador = true\r\n    //             //     this.mensagem = \"Registro não localizado.\"\r\n    //             // }\r\n    //             // else if (this.usuarios.length == 0) {\r\n    //             //     console.log(\"lengt zero\")\r\n    //             //     this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n    //             //     this.showMessageNoColaborador = true\r\n    //             // }\r\n\r\n    //         },\r\n    //         (err) => {\r\n    //             this.showSpinnerFirst = false\r\n    //             console.log(err)\r\n    //             this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n    //             this.showMessageNoColaborador = true\r\n\r\n    //         },\r\n    //         () => {\r\n    //             this.showSpinnerFirst = false\r\n    //             console.log('ok get');\r\n\r\n    //         },\r\n    //     )\r\n\r\n    // }\r\n\r\n}}","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <div>\r\n        <i #tooltip=\"matTooltip\" matTooltip=\"Conceder acesso\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openCreateUserModal()\" mat-icon-button>\r\n                <mat-icon>person_add_alt</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n\r\n    <br>\r\n\r\n\r\n    <form [formGroup]=\"pesquisarForm\" (ngSubmit)=\"onSubmit()\" class=\"form-inline siteForm\">\r\n\r\n        <span style=\"font-size: 0.9em;font-style: italic;\">Digite ao menos um dos campos para\r\n            pesquisar pelo usuário do sistema:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center divSiteForm\">\r\n\r\n            <mat-form-field appearance=\"standard\" >\r\n                <mat-label>Nome</mat-label>\r\n                <input selected formControlName=\"nome\" matInput placeholder=\"digite o nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field  appearance=\"standard\" style=\"margin-left:10px;\">\r\n                <mat-label>E-mail</mat-label>\r\n                <input selected formControlName=\"email\" matInput placeholder=\"digite o E-mail\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"margin-left: 10px;\">\r\n                <mat-label>CPF</mat-label>\r\n                <input selected mask=\"000.000.000-00\" formControlName=\"cpf\" matInput placeholder=\"digite o CPF\">\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n    <div class=\"card-header \" style=\"background-color: rgb(227, 240, 227);\r\n    width: 350px; font-size: 0.9em;box-shadow: 0 0 0.5em rgb(172, 170, 170);\" unselectable=\"on\"\r\n          *ngIf=\"showMessageNoColaborador\">{{mensagem}}</div>\r\n \r\n    \r\n          <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"spinnerSearch\"  @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n    <div @rowHighlight *ngIf=\"usuarios.length > 0\" class=\"card card-plain mat-elevation-z8\" \r\n        style=\"width: 100%;\r\n        position: relative;\r\n        margin-top: 50px;\r\n        box-shadow: 0 0 1em rgb(172, 170, 170);\r\n        background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Usuários</h4>\r\n            <p class=\"card-category\"> Usuários com acesso sistema - {{ tokenInfo.Unidade }}</p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 38%;font-size:1.2em;\r\n                                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Nome</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1.2em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Perfil</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1.2em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Autorizado</th>\r\n\r\n                            <th style=\"width: 20%;\r\n                    border-top: 0px;\"></th>\r\n\r\n                           \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of usuarios;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{(i + 1)+(pageIndexNumber)}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.roleName || 'sem perfil'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"ativo\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        [style.color]=\"item.ativo == true ? 'green' : 'red'\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>{{item.ativo == true ? 'done' : 'close'}}</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n                            </td>\r\n\r\n                            <td >\r\n\r\n                                <!-- <i type=\"submit\" #tooltip=\"matTooltip\" matTooltip=\"deletar tarefa\" matTooltipPosition=\"above\"\r\n                        matTooltipHideDelay=\"100\" (click)=\"Delete(item.id)\"\r\n                        class=\"material-icons md-dark\">\r\n                        delete_outline\r\n                      </i> -->\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"disabledEdit\" (click)=\"openEditUserModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 20px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openAcessoModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>key</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n\r\n                            </td>\r\n                            \r\n                        </tr>\r\n\r\n                        <!-- <tr>\r\n                                    <td style=\"text-align:center;vertical-align: middle;\"></td>\r\n                                    <td style=\"text-align:center;vertical-align: middle;\">Bruno</td>\r\n                                    <td style=\"text-align: left;vertical-align: middle;\">administrador</td>\r\n                                    <td style=\"text-align: left;vertical-align: middle;\">\r\n                                        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                            matTooltip=\"deletar tarefa\" matTooltipPosition=\"above\"\r\n                                            matTooltipHideDelay=\"100\">\r\n                                            <button style=\"margin: 0px; margin: 0px;color:red\" mat-icon-button>\r\n                                                <mat-icon>close</mat-icon>\r\n                                            </button>\r\n                                        </i>\r\n                                    </td>\r\n                                    <td style=\"position: relative;\">\r\n\r\n                                   \r\n\r\n                                        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                            matTooltip=\"deletar tarefa\" matTooltipPosition=\"above\"\r\n                                            matTooltipHideDelay=\"100\">\r\n                                            <button style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                                <mat-icon>search</mat-icon>\r\n                                            </button>\r\n                                        </i>\r\n\r\n\r\n                                    </td>\r\n                                    <td style=\"position: relative;\">\r\n\r\n                                       \r\n\r\n                                        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                            matTooltip=\"deletar tarefa\" matTooltipPosition=\"above\"\r\n                                            matTooltipHideDelay=\"100\">\r\n                                            <button style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                                <mat-icon>delete_outline</mat-icon>\r\n                                            </button>\r\n                                        </i>\r\n\r\n\r\n                                    </td>\r\n                                </tr> -->\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <mat-paginator *ngIf=\"length > 5\" style=\"\r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" [length]=\"length\" [pageSize]=\"5\" hidePageSize=\"true\" (page)=\"pageEvent = $event\"\r\n                (click)=\"changePage(pageEvent)\">\r\n            </mat-paginator>\r\n\r\n        </div>\r\n\r\n        <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n            top: 46.5%; \r\n            position: absolute;\">\r\n        </mat-spinner>\r\n    </div>   \r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, RequiredValidator, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { SpinnerParams } from \"src/app/_shared/models/spinner.model\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { AdmService } from \"src/app/Adm/services/adm.services\";\r\n\r\n@Component({\r\n    selector: 'add-matmodal',\r\n    templateUrl: './add-mat.component.html',\r\n    styleUrls: ['./add-mat.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class AddMatComponent implements OnInit {\r\n\r\n\r\n    baseUrl = environment.baseUrl;\r\n    materiasAtuais: any[] = new Array<any>()\r\n    materias: any[] = new Array<any>()\r\n    typePacotes: any[] = new Array<any>()\r\n    materiasForm: FormGroup\r\n    mostrarDivPrincipal = false\r\n    showForm = false\r\n    constructor(\r\n        private _admService: AdmService,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _helper: HelpersService,\r\n        public dialogRef: MatDialogRef<AddMatComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.materiasForm = _fb.group({\r\n            typePacoteId: ['', [Validators.required]],\r\n            materiaId: ['', [Validators.required]],\r\n        })\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.materiasAtuais = Object.assign([], this.data['materias'])\r\n        this.GetTypePacotes()\r\n    }\r\n\r\n    GetTypePacotes() {\r\n\r\n        this._admService.getTypePacotes()\r\n            .subscribe(\r\n                sucesso => { this.processarSucesso(sucesso) },\r\n                falha => { this.processarFalha(falha) }\r\n            );\r\n    }\r\n\r\n    GetMaterias(typePacoteId) {\r\n\r\n        this._admService.getMateriasByTypeId(typePacoteId)\r\n            .subscribe(\r\n                sucesso => { this.processarSucesso(sucesso) },\r\n                falha => { this.processarFalha(falha) }\r\n            );\r\n    }\r\n\r\n    processarSucesso(response: any) {\r\n        this.typePacotes = response['typePacotes']\r\n        this.dialogRef.addPanelClass('addMat-class')\r\n        this.mostrarDivPrincipal = true\r\n        //this.showForm = true\r\n    }\r\n\r\n    processarFalha(falha: any) {\r\n\r\n    }\r\n\r\n    adicionar() {\r\n        this.materias = new Array<any>()\r\n        this.showMateriaMsg = false\r\n        this.showMateriaMsg = false\r\n        this.materiasForm.get('materiaId').setValue('')\r\n        if (this.materiasForm.get('typePacoteId').valid) {\r\n\r\n            this._admService.getMateriasByTypeId(this.materiasForm.get('typePacoteId').value)\r\n                .subscribe(\r\n                    sucesso => { this.setMaterias(sucesso) },\r\n                    falha => { this.procssMateriaFalha(falha) }\r\n                );\r\n        }\r\n    }\r\n\r\n    setMaterias(resposta) {\r\n        this.materias = resposta['materias']\r\n\r\n    }\r\n    procssMateriaFalha(falha) {\r\n\r\n    }\r\n    showMateriaMsg = false\r\n    save(){\r\n        this.showMateriaMsg = false\r\n        var mat = this.materiasAtuais.find(element => element.pacoteMateriaId == this.materiasForm.get('materiaId').value)\r\n        console.log(mat)\r\n        if(mat != undefined){\r\n            this.showMateriaMsg = true\r\n            return;\r\n        }\r\n\r\n        this.disabledSaveButton = true\r\n\r\n        if (this.materiasForm.valid) {\r\n            this._admService.saveProfessorMateria(this.data['profId'], this.materiasForm.get('materiaId').value)\r\n            .subscribe(\r\n                sucesso => {  \r\n                    this._helper.openSnackBarSucesso(\"Matéria adicionada com sucesso.\")\r\n                    this.dialogRef.close({ clicked: true });\r\n                },\r\n                falha => {  \r\n                    this._helper.openSnackBarError(\"Ocorreu um erro, entre em contato com o administrador do sistema.\")\r\n                },\r\n            )\r\n        }\r\n    }\r\n\r\n    disabledSaveButton = false\r\n    get disabledButton() {\r\n        if (this.materiasForm.valid) {\r\n            return this.disabledSaveButton && !this.showMateriaMsg\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Matéria\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" *ngIf=\"!mostrarDivPrincipal;else mostraPrincipal\" @rowHighlight\r\n    style=\"margin:0px\" mode=\"query\"></mat-progress-bar>\r\n<ng-template #mostraPrincipal>\r\n\r\n    <hr>\r\n    <div style=\"position: relative; height: 200px;\">\r\n        <form [formGroup]=\"materiasForm\" (ngSubmit)=\"save()\">\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n                <mat-label>Selecione o pacote</mat-label>\r\n                <mat-select formControlName=\"typePacoteId\" selected required>\r\n                    <mat-option (click)=\"adicionar()\"></mat-option>\r\n                    <mat-option (click)=\"adicionar()\" *ngFor=\"let type of typePacotes\" [value]=\"type.id\">\r\n                        {{ type.nome }}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field *ngIf=\"materias.length > 0\" appearance=\"standard\" style=\"width: 320px;\">\r\n                <mat-label>escolha a matéria que deseja adicionar</mat-label>\r\n                <mat-select formControlName=\"materiaId\" selected required>\r\n                    <mat-option></mat-option>\r\n                    <mat-option *ngFor=\"let mat of materias\" [value]=\"mat.id\">\r\n                        {{ mat.nome }}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <!-- <div *ngIf=\"showMateriaMsg\" class=\"alert alert-danger\" role=\"alert\" style=\"text-align: left; vertical-align: middle; position:relative;  float:left;margin-bottom: 0px;\r\n            padding: 5px;\">\r\n                <div style=\"font-size: 0.8em;\">\r\n                    O professor já está habilitado para a matéria selecionada.\r\n\r\n                </div>\r\n\r\n            </div> -->\r\n\r\n            <mat-progress-bar *ngIf=\"disabledSaveButton\" @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n            </mat-progress-bar>\r\n\r\n\r\n            <span *ngIf=\"showMateriaMsg\" style=\"position: absolute; bottom: 0px;left:0px;\">\r\n                <span style=\"font-size: 0.8em;color: red\">\r\n                    O professor já está habilitado para a matéria selecionada.\r\n\r\n                </span>\r\n\r\n            </span>\r\n\r\n           \r\n            <span style=\"position: absolute; bottom: 0px;right:0px;\">\r\n\r\n                <!-- <div style=\"float: right;bottom: 0px; margin-top: 15px;\"> -->\r\n\r\n                <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"disabledButton\" style=\"\">\r\n                    Salvar\r\n                </button>\r\n                <!-- </div> -->\r\n            </span>\r\n\r\n        </form>\r\n    </div>\r\n\r\n</ng-template>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { ListaPresencaDto } from \"src/app/Pedagogico/Pedag-Models/infodia.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'cal-presenca-app',\r\n    templateUrl: './cal-presenca.component.html',\r\n    styleUrls: ['./cal-presenca.component.scss'],\r\n    animations: [HighlightTrigger]\r\n\r\n})\r\n\r\nexport class CalendPresencaComponent implements OnInit {\r\n\r\n    private _baseUrl = environment.baseUrl\r\n    public initProgressBar = 'visible'\r\n    public saveProgressBar = 'hidden'\r\n    public showContent = false\r\n    public noAlunos = false\r\n    public listaPresencaDto: any[] = new Array<any>()// ListaPresencaDto[] = new Array<ListaPresencaDto>();\r\n    public infoDia: any// InfoDia = new InfoDia();\r\n    public saveCommand: any//SavePresencaCommand = new SavePresencaCommand();\r\n    public presenca: any\r\n    public observacoes: string = \"\";\r\n    public obsForm: FormGroup;\r\n    public diaAulaString: any\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog,\r\n        public _dialogRef: MatDialogRef<CalendPresencaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.obsForm = this._fb.group({\r\n            observacoes: ['']\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        // console.log(this.data['calendario'])\r\n\r\n        this.getPresencaViewModel(this.data['calendario'].id);\r\n    }\r\n\r\n    getPresencaViewModel(calendarioId: number) {\r\n\r\n        this._http.get(`${this._baseUrl}/pedag/turma/presenca-diario/${calendarioId}`)\r\n            .subscribe(resp => {\r\n\r\n                console.log(resp)\r\n\r\n                this.infoDia = Object.assign({}, resp['presencas'].aulaViewModel)\r\n                //console.log(this.infoDia)\r\n                this.listaPresencaDto = Object.assign([], resp['presencas'].listaPresenca)\r\n                //this.infoDia.diaAula = new Date(this.infoDia.diaAula).toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })\r\n                // this.diaAulaString = new Date(this.infoDia.diaAula).toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })\r\n                // this.listaPresencaDto = Object.assign([], resp['lista'])\r\n                this.initProgressBar = 'hidden'\r\n\r\n            },\r\n                (error) => {\r\n\r\n                    this.initProgressBar = 'hidden'\r\n                },\r\n                () => {\r\n\r\n                    if (this.listaPresencaDto.length == 0) {\r\n                        this.showContent = true\r\n                        this.noAlunos = true\r\n                    } else {\r\n                        this._dialogRef.addPanelClass('presenca-diario-class')\r\n                        this.showContent = true\r\n                    }\r\n                })\r\n    }\r\n\r\n    concluirAula() {\r\n        // calendárioId\r\n    }\r\n\r\n    concluiraula(form: any): void {\r\n        // console.log(this.listaPresencaDto)\r\n        // const dialogRef = this._modal\r\n        //     .open(ConcluirAulaModal, {\r\n        //         height: 'auto',\r\n        //         width: '500px',\r\n        //         autoFocus: false,\r\n        //         //maxHeight: '90vh',\r\n        //         //maxWidth: '400vh',\r\n\r\n        //         data: { form: form },\r\n        //         hasBackdrop: true,\r\n        //         disableClose: true\r\n        //     });\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n        //     if (result.clicked == true) {\r\n        //         console.log(form.value)\r\n        //        this.salvar(form);\r\n\r\n        //     } else {\r\n        //         //console.log('nao')\r\n        //     }\r\n\r\n        // });\r\n    }\r\n\r\n    get disabledSave() {\r\n\r\n        var disabledButton = true\r\n        var temNull = this.listaPresencaDto.filter((lista) => {\r\n            return lista.isPresentToString == null || lista.isPresentToString == \"\";\r\n        })\r\n\r\n        // console.log(temNull);\r\n\r\n        if (temNull.length == 0) {\r\n            disabledButton = false\r\n        } else {\r\n            disabledButton = true\r\n        }\r\n\r\n        if (!disabledButton && this.obsForm.valid) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    salvar(form: any) {\r\n\r\n        if (form.valid) {\r\n            // console.log(this.listaPresencaDto)\r\n            // this.saveCommand.listaPresencaDto = this.listaPresencaDto\r\n            // this.saveCommand.calendarId = this.infoDia.id\r\n            // this.saveCommand.observacoes = this.obsForm.get('observacoes').value\r\n            this.infoDia.observacoes = this.obsForm.get('observacoes').value\r\n            let presencaView = { infoDia: this.infoDia, listaPresencaDto: this.listaPresencaDto }\r\n\r\n\r\n            this._http.post(`${this._baseUrl}/pedag/turma/presenca-diario/${this.data['calendario'].id}`, { aulaViewModel: this.infoDia, listaPresenca: this.listaPresencaDto }, {})\r\n                .subscribe(resp => {\r\n\r\n\r\n\r\n                },\r\n                    (error) => {\r\n                        //  console.log(error) \r\n                    },\r\n                    () => {\r\n                        this._dialogRef.close({ clicked: \"OK\" })\r\n                    })\r\n        }\r\n    }\r\n\r\n    presente = true\r\n\r\n}\r\n\r\n\r\n// @Component({\r\n//     selector: 'confirmdialog',\r\n//     template: `<div class=\"container\">\r\n//     <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n//         <div style=\"font-size: 1.2em;\">Tem certeza que deseja concluir a aula?</div>\r\n//         <div>\r\n//             Após a conclusão, não será possível retornar a tela de presenças novamente.\r\n//         </div>\r\n//     </div>\r\n//     <div class=\"row\">\r\n//         <button style=\"width: 30px;\" [mat-dialog-close]=\"{clicked:true}\" mat-button>SIM</button>\r\n//         <button style=\"width: 30px;\" [mat-dialog-close]=\"{clicked:false}\" mat-button>NÃO</button>\r\n//     </div>\r\n// </div>`,\r\n// })\r\n// export class ConcluirAulaModal {\r\n\r\n//     constructor(\r\n//         public dialogRef: MatDialogRef<ConcluirAulaModal>,\r\n//         @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n// }\r\n\r\n// export class SavePresencaCommand {\r\n//     constructor(\r\n//         public listaPresencaDto?: ListaPresencaDto[],\r\n//         public calendarId?: number,\r\n//         public observacoes?: string\r\n//     ) {\r\n\r\n//     }\r\n// }","<div style=\"font-size: 1.2em;\">Lista de presença\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<hr>\r\n<div *ngIf=\"showContent\" @rowHighlight>\r\n\r\n\r\n    <div *ngIf=\"!noAlunos;else msgNoAlunos\" style=\"position: relative;\">\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 700px; \">\r\n            <mat-label>Turma</mat-label>\r\n            <input selected style=\"color:rgb(59, 57, 57)\" disabled\r\n                value=\"{{this.data['turma'].descricao}} - Turma {{this.data['turma'].identificador}}\" required matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px; \">\r\n            <mat-label>Professor</mat-label>\r\n            <input selected style=\"color:rgb(59, 57, 57)\" disabled [value]=\"infoDia.nome\" required matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field appearance=\"standard\" style=\"width: 350px; \">\r\n            <mat-label>Aula</mat-label>\r\n            <input selected style=\"color:rgb(59, 57, 57)\" disabled [value]=\"infoDia.materiaDescricao\" required matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px;margin-left: 10px ; \">\r\n            <mat-label>Dia</mat-label>\r\n            <input selected style=\"color:rgb(59, 57, 57)\" disabled \r\n            value=\"{{infoDia.diaAula | date:'dd/MM/yyyy'}} {{infoDia.horaInicial}} às {{infoDia.horaFinal}}\" required matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n        <br> \r\n\r\n\r\n        <div style=\"color: red;font-size: 0.9;\">* Professor, não se esqueça de antes de concluir a aula, preencher o\r\n            conteúdo programático e a lista de presença:</div>\r\n            -->\r\n\r\n        <div class=\"table-responsive\" style=\"position: relative;\">\r\n            <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n\r\n                <thead>\r\n                    <tr>\r\n                        <th style=\"width: 2%; \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                        <th style=\"width: 70%;font-size:1em;\r\n                    vertical-align: middle; \r\n                    text-align:left;\r\n                     border-top: 0px; font-weight: 400;\"></th>\r\n\r\n                        <th style=\"width: 28%;font-size:1em;\r\n                    text-align:right;\r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Presente?(F/P)</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    <tr *ngFor=\"let aluno of listaPresencaDto;let i = index;\">\r\n                        <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                        <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                            {{aluno.nome}}\r\n                        </td>\r\n\r\n                        <td style=\"float: right; position: relative;\">\r\n\r\n                            <input type=\"text\" style=\"margin-right: auto;\r\n                            margin-left: auto;font-size:0.9em;width: 40px;\" class=\"form-control\"\r\n                                [(ngModel)]=\"aluno.isPresentToString\" name=\"isPresentToString\" disabled\r\n                                aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\r\n                        </td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </table>\r\n            <br>\r\n            <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"saveProgressBar\" @rowHighlight mode=\"query\">\r\n            </mat-progress-bar>\r\n            <form [formGroup]=\"obsForm\" (ngSubmit)=\"salvar(obsForm)\">\r\n\r\n                <!-- <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                    <mat-label>conteúdo programático...</mat-label>\r\n                    <textarea formControlName=\"observacoes\" matInput></textarea>\r\n                </mat-form-field> -->\r\n\r\n                <!-- <button type=\"submit\" color=\"primary\" mat-raised-button disabled=\"false\" \r\n                    style=\"float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n                    Salvar\r\n                </button> -->\r\n            </form>\r\n\r\n        </div>\r\n\r\n\r\n        <br>\r\n    </div>\r\n    <ng-template #msgNoAlunos>\r\n        <span style=\"font-style: italic; font-size: 0.9em;\" >Não havia alunos matriculados no dia da turma</span>\r\n    </ng-template>\r\n    \r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { PedagogicoService } from \"src/app/Pedagogico/service/pedagogico.service\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n@Component({\r\n    selector: 'obsturmamodaldialog',\r\n    templateUrl: './obsturmamodal.component.html',\r\n    styleUrls:['./obsturmamodal.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\nexport class ObservacoesTurmaModal implements OnInit{\r\n\r\n    //private _baseUrl = environment.baseUrl\r\n    public initProgressBar = 'visible'\r\n    public showContent = false\r\n    public aula: any\r\n    constructor(\r\n        //private _http: HttpClient,\r\n        private _pedagService: PedagogicoService,\r\n        public dialogRef: MatDialogRef<ObservacoesTurmaModal>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n        ngOnInit() {\r\n            //this.dialogRef.addPanelClass('auladetalhe-class')\r\n            this.GetAulaInfos()\r\n            //console.log(this.data['caled'])\r\n        }\r\n\r\n        private GetAulaInfos(){\r\n\r\n            this._pedagService.GetAulaViewModel(this.data['caled'].id)\r\n                .subscribe(\r\n                    sucesso => { this.GetAulaInfosSucesso(sucesso)},\r\n                    falha => { this.GetAulaInfosFalha(falha)}\r\n                )\r\n        }\r\n\r\n        private GetAulaInfosSucesso(resp){\r\n            this.aula = resp['aula']\r\n           // console.log(this.aula)\r\n            this.dialogRef.addPanelClass('auladetalhe-class')\r\n            this.initProgressBar = 'hidden'\r\n            this.showContent = true\r\n        }\r\n\r\n        private GetAulaInfosFalha(error){\r\n\r\n        }\r\n}\r\n\r\n","<div style=\"font-size: 1.2em;\">Observação\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" style=\"margin-top: 20px;\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n\r\n\r\n<div *ngIf=\"showContent\">\r\n    <hr>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 50%;\">\r\n        <mat-label>Turma</mat-label>\r\n        <input selected matInput disabled value=\"{{aula.descricao}} - {{aula.identificador}}\"\r\n            oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 10px;\">\r\n        <mat-label>Sala</mat-label>\r\n        <input selected matInput disabled value=\"{{aula.titulo}}\"\r\n            oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 70%;\">\r\n        <mat-label>Professor</mat-label>\r\n        <input selected matInput [value]=\"aula.nome || 'Sem professor'\" disabled oninput=\"this.value = this.value.toLowerCase()\"\r\n            placeholder=\"Email\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 70%;\">\r\n        <mat-label>Matéria</mat-label>\r\n        <input selected value=\"Ética\" disabled [value]=\"aula.materiaDescricao\" matInput\r\n            oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n        <mat-label>Dia/Horário Aula</mat-label>\r\n        <input selected disabled\r\n            value=\"{{aula.diaAula | date: 'dd/MM/yyyy'}} {{aula.horaInicial}} às {{aula.horaFinal}}\" matInput\r\n            oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n    </mat-form-field>\r\n\r\n    <ng-container *ngIf=\"aula.aulaIniciada;else naoIniciada\">\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n            <mat-label>Aula iniciada em</mat-label>\r\n            <input disabled selected value=\"{{aula.dateAulaIniciada | date:'d/MM/yyyy h:mm'}}\" matInput \r\n                placeholder=\"Email\">\r\n        </mat-form-field>\r\n    </ng-container>\r\n    <ng-template #naoIniciada>\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n            <mat-label>Aula iniciada em</mat-label>\r\n            <input disabled selected value=\"Aula não iniciada\" matInput \r\n                placeholder=\"Email\">\r\n        </mat-form-field>\r\n    </ng-template>\r\n\r\n\r\n\r\n    <ng-container *ngIf=\"aula.aulaConcluida;else naoConcluida\">\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n            <mat-label>Aula concluída em</mat-label>\r\n            <input disabled selected matInput value=\"{{aula.dateAulaConcluida | date:'d/MM/yyyy h:mm'}}\" \r\n                placeholder=\"Email\">\r\n        </mat-form-field>\r\n    </ng-container>\r\n    <ng-template #naoConcluida>\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n            <mat-label>Aula iniciada em</mat-label>\r\n            <input disabled selected value=\"Aula não concluída\" matInput \r\n                placeholder=\"Email\">\r\n        </mat-form-field>\r\n    </ng-template>\r\n\r\n\r\n    <div style=\"position: relative;\">\r\n        <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n            <mat-label>Nota da aula</mat-label>\r\n            <textarea disabled placeholder=\"\" [value]=\"aula.observacoes || ''\" matInput></textarea>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <!-- <mat-progress-bar @rowHighlight style=\"margin-top:10px\" mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n  \r\n        <button style=\"float: right;margin-top: 10px;\" mat-raised-button type=\"submit\" color=\"primary\">\r\n            Salvar\r\n        </button>\r\n  -->\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { PedagogicoService } from \"src/app/Pedagogico/service/pedagogico.service\";\r\n\r\n@Component({\r\n    selector: 'certificadomodal',\r\n    templateUrl: './certificado.component.html',\r\n    styleUrls: ['./certificado.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class CertificadoComponent implements OnInit {\r\n   \r\n    public initProgressBar = 'visible'\r\n    public showContent = false\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();   \r\n\r\n    constructor(       \r\n        private _modal: MatDialog,\r\n        private _pedagService: PedagogicoService,\r\n        public dialogRef: MatDialogRef<CertificadoComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n      \r\n        this.GetCertificado();\r\n    }\r\n\r\n    public GetCertificado(){\r\n\r\n        this._pedagService.GetCertificado(this.data['matricula'].id)\r\n                .subscribe(\r\n                    sucesso => { this.processarSucesso(sucesso) },\r\n                    falha => { this.processarFalha(falha) }\r\n                );\r\n    }\r\n\r\n    private processarSucesso(response){\r\n        this.initProgressBar = 'hidden'\r\n        this.showContent = true\r\n    }\r\n\r\n    private processarFalha(error){\r\n        this.initProgressBar = 'hidden'\r\n        this.showContent = true\r\n    }\r\n\r\n   \r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Certificado de Conclusão\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\"></mat-progress-bar>\r\n\r\n<div *ngIf=\"showContent\" @rowHighlight>\r\n\r\n   <span style=\"font-size:0.9em;margin-top: 10px;font-style: italic;\" >O aluno ainda não cumpre os requisitos para emissão do certificado</span>\r\n\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n  constructor(protected sanitizer: DomSanitizer) {}\r\n \r\n public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n    switch (type) {\r\n\t\t\tcase 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\r\n\t\t\tcase 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\r\n\t\t\tcase 'script': return this.sanitizer.bypassSecurityTrustScript(value);\r\n\t\t\tcase 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\r\n\t\t\tcase 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n\t\t\tdefault: throw new Error(`Invalid safe type specified: ${type}`);\r\n\t\t}\r\n  }\r\n}","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, MeioPagamento, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { VendaPesquisaComponent } from \"./venda-pesquisa.component.ts/venda-pesquisa.component\";\r\nimport { CompraProdutoCommand, Produto, ProdutosCommand } from \"src/app/_shared/models/produto.model\";\r\nimport { Parcelas } from \"src/app/_shared/models/utils.model\";\r\n\r\n\r\n@Component({\r\n    selector: 'vendacaixamodal',\r\n    templateUrl: './vendacaixa.component.html',\r\n    styleUrls: ['./vendacaixa.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\n\r\nexport class VendaCaixaComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public meioPagamento = MeioPagamento\r\n    public showParcelas = false;\r\n    public msg = \"\"\r\n    public showMgs = false\r\n    public produtosCesta: Produto[] = new Array<Produto>();\r\n    public totalParcelas: number\r\n    parcelas = Parcelas\r\n\r\n    public produtos: Produto[] = new Array<Produto>();\r\n    constructor(\r\n        //private service: AdmService,\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog,\r\n        public dialogRef: MatDialogRef<VendaCaixaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        //this.colaboradorForm = _fb.group({\r\n        // templateName: ['', [Validators.required, Validators.minLength(5)]],\r\n\r\n        //})\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        console.log(this.tokenInfo.Unidade);\r\n        console.log(this.tokenInfo.Codigo);\r\n        console.log(this.tokenInfo);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    onSubmit(form: FormGroup) {\r\n        // this.showMensagem = false\r\n        console.log(form)\r\n        console.log(form.value)\r\n        console.log(form.valid)\r\n        //var cel = `${form['celular'].value}`\r\n        //console.log(cel)\r\n        // this.dialogRef.close();\r\n        if (form.valid) {\r\n            console.log('form valid')\r\n            const novoColaborador = JSON.stringify(form.value);\r\n            //this.save(novoColaborador)\r\n            // let newTemplate = this.mapForm(tempForm)\r\n\r\n            this._http.post(`${this.baseUrl}/colaboradores`, novoColaborador, {\r\n                //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n                headers: new HttpHeaders({\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bear \"\r\n                })\r\n            }).subscribe(response => {\r\n\r\n                console.log(response)\r\n                // this.colaboradores = Object.assign([], response['data'])\r\n                // console.log(this.colaboradores)\r\n                // this.dialogRef.close();\r\n            }, (err) => {\r\n                console.log(err)\r\n                console.log(err['error'].mensagem)\r\n                //this.mensagem = err['error'].mensagem\r\n                //this.showMensagem = true\r\n            },\r\n                () => {\r\n                    //console.log(response)\r\n                    this.openSnackBar()\r\n                    //this.showMensagem = false\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                });\r\n        }\r\n    }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Colaborador salvo com sucesso.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    meioPagamentoSelect(meioPag) {\r\n\r\n        this.compraProdutoCommand.meioPagamento = meioPag\r\n\r\n        console.log(meioPag)\r\n\r\n        if (meioPag != \"credito\") {\r\n            this.showParcelas = false\r\n        } else {\r\n            this.showParcelas = true\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onOkClick() {\r\n\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n\r\n    }\r\n\r\n    fechar() {\r\n\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n\r\n    }\r\n\r\n    pesquisaItem(nome: string) {\r\n        this.showMgs = false\r\n        if (nome == \"\") return\r\n\r\n        console.log(nome)\r\n\r\n        this._http.get(`${this.baseUrl}/financeiro/produtos-buscar/${nome}`)\r\n            .subscribe(resp => {\r\n                this.produtos = Object.assign([], resp)\r\n            },\r\n                (erro) => { console.log(erro) },\r\n                () => {\r\n\r\n                    if (this.produtos.length == 0) {\r\n\r\n                        this.msg = \"nenhum produto com esse nome foi localizado\"\r\n                        this.showMgs = true\r\n                    } else {\r\n\r\n                        this.openPesquisaResult()\r\n\r\n                    }\r\n\r\n                })\r\n    }\r\n\r\n    add(product: Produto) {\r\n        var index = this.compraProdutoCommand.produtos.indexOf(product)\r\n        var qntAtual = this.compraProdutoCommand.produtos[index].quantidadeComprada\r\n        this.compraProdutoCommand.produtos[index].quantidadeComprada = qntAtual + 1\r\n    }\r\n\r\n    remove(product: Produto) {\r\n        var index = this.compraProdutoCommand.produtos.indexOf(product)\r\n        var qntAtual = this.compraProdutoCommand.produtos[index].quantidadeComprada\r\n        if (qntAtual == 1) {\r\n\r\n        } else {\r\n            this.compraProdutoCommand.produtos[index].quantidadeComprada = qntAtual - 1\r\n        }\r\n\r\n    }\r\n\r\n    get valorTotalVenda() {\r\n\r\n        /*\r\n                var preco = parseFloat(form.value[\"preco\"])\r\n                var precoFloat = preco.toFixed(2)\r\n                console.log(precoFloat)\r\n                produto.preco =  parseFloat(preco.toFixed(2))\r\n                console.log(produto)\r\n                */\r\n        //var array = [1, 2, 3, 4, 5];\r\n        var sum = 0\r\n        this.compraProdutoCommand.produtos.forEach(element => {\r\n            sum += element.quantidadeComprada * element.preco\r\n        });\r\n\r\n        this.compraProdutoCommand.valorTotal = sum\r\n\r\n        // console.log(sum);\r\n        // console.log(this.compraProdutoCommand.valorTotal)\r\n\r\n        var sum2 = sum.toFixed(2)\r\n\r\n        return `R$ ${sum2}`\r\n    }\r\n\r\n    deletar(product: Produto) {\r\n\r\n        var index = this.compraProdutoCommand.produtos.indexOf(product)\r\n        this.compraProdutoCommand.produtos[index]\r\n        this.compraProdutoCommand.produtos.splice(index, 1);\r\n\r\n    }\r\n\r\n\r\n    private productCommand: ProdutosCommand = new ProdutosCommand();\r\n\r\n    public compraProdutoCommand: CompraProdutoCommand = new CompraProdutoCommand();\r\n\r\n\r\n    openPesquisaResult(): void {\r\n        const dialogRef = this._modal\r\n            .open(VendaPesquisaComponent, {\r\n                height: 'auto',\r\n                width: '700px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                maxWidth: '400vh',\r\n\r\n                data: { produtos: this.produtos },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                // Reset form here\r\n                console.log('afte close ok')\r\n                //this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Ok-ADD\") {\r\n\r\n                //this.produtosCesta.push(data.produto)\r\n                console.log(data.produto)\r\n                this.productCommand = Object.assign({}, data.produto)\r\n                this.productCommand.quantidadeComprada = 1;\r\n                this.compraProdutoCommand.produtos.push(this.productCommand)\r\n\r\n                console.log(this.compraProdutoCommand)\r\n\r\n            }\r\n        });\r\n    }\r\n    parcelasTotais: any\r\n    saveEdit(form: any) {\r\n        console.log(form.value['totalParcelas'])\r\n        console.log(this.compraProdutoCommand)\r\n\r\n        this.compraProdutoCommand.parcelas = this.parcelasTotais\r\n        //this.compraProdutoCommand.cpf_comprador = \r\n        console.log(this.compraProdutoCommand.meioPagamento)\r\n        if (this.compraProdutoCommand.meioPagamento == undefined ||\r\n            this.compraProdutoCommand.meioPagamento == \"\") return\r\n        console.log(this.meioPagamento)\r\n        if (this.compraProdutoCommand.produtos.length == 0) return\r\n\r\n        if (this.compraProdutoCommand.meioPagamento != \"dinherio\") {\r\n            if (form.valid && form.value['totalParcelas'] != 0) {\r\n                console.log()\r\n\r\n            }\r\n        }\r\n\r\n        // this.compraProdutoCommand.parcelas = form.value['totalParcelas']\r\n\r\n        var sendForm = JSON.stringify(this.compraProdutoCommand)\r\n        console.log(sendForm)\r\n\r\n        this._http.post(`${this.baseUrl}/financeiro/produto-venda`,\r\n            this.compraProdutoCommand, {\r\n        })\r\n            .subscribe(resp => { },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                })\r\n\r\n        console.log(this.compraProdutoCommand)\r\n\r\n    }\r\n\r\n}","<div style=\"font-size: 1.2em;\">Venda - produtos\r\n\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button (click)=\"fechar()\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<hr>\r\n\r\n\r\n<div>\r\n    <mat-form-field style=\"width: 21%; margin-bottom: 10px; \r\n    transform: scale(0.85);\" appearance=\"outline\">\r\n        <mat-label>Pesquise pelo item</mat-label>\r\n        <input name=\"nome\" #item selected matInput>\r\n    </mat-form-field>\r\n    <span>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"pesquisaItem(item.value)\" style=\"\" mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n        </i>\r\n    </span>\r\n    <span *ngIf=\"showMgs\">* {{msg}}</span>\r\n</div>\r\n\r\n<br>\r\n\r\n\r\n<div *ngIf=\"compraProdutoCommand.produtos.length > 0\" class=\"table-responsive\" style=\"position: relative;\">\r\n\r\n    <form novalidate #form=\"ngForm\" (ngSubmit)=\"saveEdit(form)\">\r\n        <table style=\"margin-bottom: 0px;\" class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"text-align: left;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Produto</th>\r\n                    <th style=\"text-align: center;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Quantidade</th>\r\n                    <th style=\"text-align: center;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Preço</th>\r\n                    <th style=\"text-align: center;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Total</th>\r\n                    <th style=\"width: 10%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\"></th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                <tr *ngFor=\"let product of compraProdutoCommand.produtos\">\r\n                    <td style=\"vertical-align: middle;width: 6%;font-size:1em;font-weight: 400;\r\n                border-top: 0px;\">{{product.nome}}</td>\r\n\r\n\r\n                    <td style=\"vertical-align: middle;text-align: center;width: 6%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">\r\n\r\n                        <span style=\"vertical-align: middle;margin-top: 5px;\">\r\n                            <span style=\"vertical-align: middle;\" mat-icon-button>\r\n                                <mat-icon type=\"button\" (click)=\"add(product)\">\r\n                                    add\r\n                                </mat-icon>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span style=\"margin-right: 5px;margin-left: 5px; vertical-align: middle;width: 6%;font-size:1.4em;font-weight: 400;\r\n            border-top: 0px;\">{{product.quantidadeComprada}}</span>\r\n\r\n                        <span style=\"vertical-align: middle;\">\r\n                            <span style=\"vertical-align: middle;\" mat-icon-button>\r\n                                <mat-icon type=\"button\" (click)=\"remove(product)\">remove</mat-icon>\r\n                            </span>\r\n                        </span>\r\n\r\n                    </td>\r\n\r\n                    <td style=\"vertical-align: middle;text-align: center;width: 6%;font-size:1em;font-weight: 400;\r\n                    border-top: 0px;\">\r\n                        <span >{{product.preco | currency:'BRL':true:'1.2-2'}}</span>\r\n\r\n                    </td>\r\n\r\n                    <td style=\"vertical-align: middle;text-align: center;width: 6%;font-size:1em;font-weight: 400;\r\n                border-top: 0px;\">\r\n                        <span #valorTotal>{{product.preco * product.quantidadeComprada | currency:'BRL':true:'1.2-2'}}</span>\r\n\r\n                    </td>\r\n                    <td style=\"width: 6%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">\r\n                        <span style=\"\">\r\n                            <button style=\"\" mat-icon-button>\r\n                                <mat-icon (click)=\"deletar(product)\">\r\n                                    delete\r\n                                </mat-icon>\r\n                            </button>\r\n                        </span>\r\n                    </td>\r\n\r\n                </tr>\r\n\r\n            </tbody>\r\n\r\n\r\n\r\n        </table>\r\n        <!-- <div>Blusa Invictus xpto + 1 - <span style=\"\">remover</span> R$ 20,00</div> -->\r\n\r\n\r\n\r\n        <mat-form-field style=\"width: 21%;margin-top: 20px; \" appearance=\"outline\">\r\n            <mat-label>Valor total:</mat-label>\r\n            <input disabled name=\"CPF\" matInput [value]=\"valorTotalVenda\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n        <mat-label>Adicione o pagamento</mat-label>\r\n        <mat-select selected name=\"cargo\" required>\r\n            <mat-option value=\"\"></mat-option>\r\n            <mat-option>Dinheiro</mat-option>\r\n            <mat-option>Débito</mat-option>\r\n            <mat-option>Crédito</mat-option>\r\n        </mat-select>\r\n    </mat-form-field> -->\r\n    <mat-form-field appearance=\"standard\" style=\"width: 15%;\">\r\n        <mat-label>CPF Comprador</mat-label>\r\n        <input [(ngModel)]=\"compraProdutoCommand.cpf_comprador\"\r\n        mask=\"000.000.000-00\"\r\n            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n             \r\n            minlength=\"11\" maxlength=\"14\" selected name=\"templateName\" matInput placeholder=\"digite o CPF\">\r\n        <!-- <mat-hint @rowHighlight *ngIf=\"validadeCPFMsg\" style=\"color: red;\">\r\n            O CPF informado já existe\r\n        </mat-hint> -->\r\n    </mat-form-field>\r\n    <br>\r\n\r\n        <mat-form-field appearance=\"outline\" style=\"width: 25%;\">\r\n            <mat-label>Adicione o pagamento</mat-label>\r\n            <mat-select selected name=\"cargo\" required>\r\n                <mat-option (click)=\"meioPagamentoSelect('')\" value=\"\"></mat-option>\r\n                <mat-option (click)=\"meioPagamentoSelect(meioPag.value)\" *ngFor=\"let meioPag of meioPagamento\"\r\n                    [value]=\"meioPag.value\">{{meioPag.viewValue}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field *ngIf=\"showParcelas\" style=\"width: 8%; margin-bottom: 20px; \r\n            margin-left: 2%;\" appearance=\"standard\">\r\n            <mat-label>Parcelas</mat-label>\r\n            <input [(ngModel)]=\"totalParcelas\" name=\"totalParcelas\" matInput type=\"number\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field *ngIf=\"showParcelas\" appearance=\"outline\" style=\"width: 25%;margin-left: 2%;margin-top: 20px;\">\r\n            <mat-label>Número de parcelas</mat-label>\r\n            <mat-select [(ngModel)]=\"parcelasTotais\"  selected name=\"noparcelas\" required>\r\n                <!-- <mat-option ></mat-option> -->\r\n                <mat-option  *ngFor=\"let item of parcelas\" [value]=\"item.type\">\r\n                    {{item.value}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n        <mat-label>Observações gerais</mat-label>\r\n        <textarea name=\"observacoes\" matInput></textarea>\r\n    </mat-form-field> -->\r\n        <br>\r\n\r\n        <button type=\"submit\" mat-raised-button disabled=\"false\"\r\n            style=\"float:right;margin-bottom: 0px;margin-left: 10px;\">\r\n            Concluir Venda\r\n        </button>\r\n\r\n    </form>\r\n\r\n</div>","import { Component, Inject, Input, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, NgForm, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cursos, DiaSemana, DiasSemana, Turnos } from \"src/app/_shared/models/perfil.model\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { Turma } from \"src/app/_shared/models/Turma.model\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { MyTime } from \"src/app/_shared/customMasks/maskTimeStan/myTime.model\";\r\n//import { AddProfModalComponent } from \"./addProfessorModal/addProfessor.component\";\r\nimport { CurrencyPipe, DatePipe } from '@angular/common';\r\nimport { Modulo } from \"src/app/_shared/models/modulo.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { DisponibilidadeDto, DisponibilidadeDtoV2 } from \"src/app/_shared/models/disponibilidade.model\";\r\nimport { Horarios, TurmaCommand } from \"src/app/_shared/models/turmacommand.model\";\r\nimport { Sala } from \"../../adm-models/sala.model\";\r\nimport { CreateTurmaViewModel } from \"../../adm-models/createturmaviewmodel.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\nexport class ProfResponse {\r\n    constructor(\r\n        public id?: number,\r\n        public nome?: string,\r\n        public disciplina?: string,\r\n        public checked?: boolean\r\n    ) { }\r\n\r\n}\r\n\r\n@Component({\r\n    selector: 'createcursomodal',\r\n    templateUrl: './createcurso.component.html',\r\n    styleUrls: ['./createcurso.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\n\r\nexport class CreateCursoComponent implements OnInit {\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public initProgressBar = 'visible'\r\n\r\n    item = { value: 0 }\r\n    cursos: Modulo = new Modulo();\r\n    //public salas: Sala[] = new Array<Sala>();\r\n    public salas: any[] = new Array<any>();\r\n    public typePacotes: any[] = new Array<any>();\r\n    public pacotes: any[] = new Array<any>();\r\n    tempoExemplo: MyTime = new MyTime(\"09\", \"13\")\r\n    diasSemanaView = DiaSemana\r\n    public cursoForm: FormGroup;\r\n    baseUrl = environment.baseUrl;\r\n    profes = [\"Joao\", \"jose\", \"Mario\"]\r\n    professores: Colaborador[] = new Array<Colaborador>();\r\n    showProflist: boolean = false\r\n    turma: Turma = new Turma();\r\n    turnos = Turnos;\r\n    //diasSemana = DiasSemana   \r\n    minDate: Date;\r\n    nimDateTemino: Date;\r\n    disabledSpinner = true\r\n    testando = \"testando\"\r\n    termino1 = \"\"\r\n    termino2 = \"\"\r\n    termino3 = \"\"\r\n    showSelectTurno = false\r\n    showHorarioTurno = false\r\n    valorx = '4,900'\r\n    cursoPreco = ''\r\n    public createTurmaViewModel = new CreateTurmaViewModel();\r\n    listaprofessores = new FormArray([])\r\n    profResp: ProfResponse[] = new Array<ProfResponse>();\r\n    constructor(\r\n        private _datepipe: DatePipe,\r\n        private _helper: HelpersService,\r\n        private _currencyPipe: CurrencyPipe,\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private addProfModal: MatDialog,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<CreateCursoComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any\r\n    ) {\r\n        this.cursoForm = _fb.group({\r\n\r\n\r\n            pacoteId: ['', [Validators.required]],\r\n            descricao: ['', [Validators.required]],\r\n            salaId: ['', [Validators.required]],\r\n            minVagas: [, [Validators.required]],\r\n\r\n            // OLD\r\n            //curso: ['', [Validators.required]],\r\n\r\n\r\n\r\n\r\n\r\n            prevInicio_1: ['', [Validators.required, Validators.minLength(10)]],\r\n            prevTermino_1: ['', [Validators.required, Validators.minLength(10)]],\r\n            prevInicio_2: ['', [Validators.required, Validators.minLength(10)]],\r\n            prevTermino_2: ['', [Validators.required, Validators.minLength(10)]],\r\n            prevInicio_3: ['', [Validators.required, Validators.minLength(10)]],\r\n            prevTermino_3: ['', [Validators.required, Validators.minLength(10)]],\r\n\r\n\r\n            // horarioIni_1: ['', [Validators.required]],\r\n            // horarioFim_1: ['', [Validators.required]],\r\n            // horarioIni_2: [''],\r\n            // horarioFim_2: [''],\r\n            // dia1: ['', [Validators.required]],\r\n            // dia2: [''],\r\n\r\n\r\n\r\n            diasSemana: this._fb.array([], [Validators.required]),\r\n\r\n            // planoId:['', [Validators.required]]\r\n\r\n        });\r\n\r\n        // this.cursoForm.valueChanges.subscribe(form => {\r\n        //     if (form.curso) {\r\n        //         console.log(this.cursoForm.get('curso').value)\r\n        //         var valor = this.createTurmaViewModel.modulos.find(item =>\r\n        //             item.id == this.cursoForm.get('curso').value\r\n        //         )\r\n\r\n        //         console.log(valor)\r\n\r\n        //         this.cursoPreco = this._currencyPipe.transform(valor.preco, 'BRL', 'R$  ', '1.2-2')\r\n\r\n        //     }\r\n        // }\r\n\r\n        // );\r\n\r\n    }\r\n\r\n    ver(event) {\r\n        // console.log(this.cursoForm.get('prevInicio_1').value)\r\n    }\r\n\r\n    verVar(precocurso) {\r\n        // console.log(precocurso)\r\n    }\r\n\r\n    ngOnInit() {\r\n        //console.log(\"create modal 123\")\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        //console.log(this.tokenInfo)\r\n        this.showProflist = false\r\n\r\n        this.getCreateTurmaViewModel();\r\n\r\n    }\r\n\r\n    get diasSemana() {\r\n        return this.cursoForm.controls[\"diasSemana\"] as FormArray;\r\n    }\r\n\r\n    addDiaSemana() {\r\n\r\n        // let pacote = form.value['pacote']\r\n\r\n        // if (form.valid) {\r\n        //     let pacotId = this.diasSemana.value.find(element =>\r\n        //         element.materiaId == pacote.id);\r\n\r\n        //     if (pacotId != undefined) return;\r\n\r\n        const matForm = this._fb.group({\r\n            diaSemana: [''],\r\n            horarioInicio: [''],\r\n            horarioFim: ['']\r\n        });\r\n\r\n        this.diasSemana.push(matForm);\r\n        // }\r\n    }\r\n\r\n    removeDiaSemana(index: number) {\r\n        this.diasSemana.removeAt(index);\r\n    }\r\n\r\n    showForm = false\r\n    mensagemErro = ''\r\n    showmensagemErro = false\r\n    getCreateTurmaViewModel() {\r\n\r\n\r\n        this._http.get(`${this.baseUrl}/turma/create`)\r\n            .subscribe(\r\n                response => {\r\n                    // console.log(response)\r\n                    this.salas = Object.assign([], response['salas'])\r\n                    this.typePacotes = Object.assign([], response['typePacotes'])\r\n                    //console.log(this.createTurmaViewModel)\r\n                },\r\n                (error) => {\r\n                    // console.log(error)\r\n                    this.initProgressBar = 'hidden'\r\n                    this.mensagemErro = \"Não há salas cadastradas para esta unidade ou não há tipos de pacotes cadastrados\"\r\n                    this.showmensagemErro = true\r\n                },\r\n                () => {\r\n                    //this.showSelec = truetTurno = true\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showForm = true\r\n                    this.showCapacidadeDropDown = true\r\n                    /*if domingo ou sabado\r\n                    \r\n                    */\r\n\r\n                }\r\n            )\r\n    }\r\n\r\n    showNoPacote = false\r\n    pesquisarPacotes(typePacoteId) {\r\n        this.pacotes = new Array<any>()\r\n        this.cursoForm.get('pacoteId').setValue('')\r\n        this.initProgressBar = 'visible'\r\n        this._http.get(`${this.baseUrl}/pacote/lista/${typePacoteId}`)\r\n            .subscribe(\r\n                response => {\r\n                    this.pacotes = Object.assign([], response['pacotes'])\r\n                    \r\n                    //console.log(this.createTurmaViewModel)\r\n                },\r\n                (error) => {\r\n                    this.initProgressBar = 'hidden'\r\n                    // console.log(error)\r\n                },\r\n                () => { \r\n                    this.initProgressBar = 'hidden'\r\n                    this.showCapacidadeDropDown = true \r\n                }\r\n            )\r\n    }\r\n\r\n    onSubmit(form) {\r\n\r\n        if (this.cursoForm.valid) {\r\n            this.disabledSaveButton = true\r\n           // this.cursoForm.get('prevInicio_1').setValue(new Date(this.cursoForm.get('prevInicio_1').value).toLocaleString())\r\n            console.log(this.cursoForm.value)\r\n\r\n            this.disabledSpinner = false\r\n            this._http.post(`${this.baseUrl}/turma/`, this.cursoForm.value, {})\r\n                .subscribe(\r\n                    response => { },\r\n                    (error) => {\r\n                        //console.log(error)\r\n                        this._helper.openSnackBarErrorDefault()\r\n                        this.disabledSpinner = true\r\n                        this.disabledSaveButton = false\r\n                    },\r\n                    () => {\r\n                        this._helper.openSnackBarSucesso(\"Turma criada com sucesso.\")\r\n                        this.dialogRef.close({ clicked: \"OK\" });\r\n                    }\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    disabledSaveButton = false\r\n    get disabledButton() {\r\n        if (this.cursoForm.valid) {\r\n            return this.disabledSaveButton\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    showCapacidadeDropDown = false\r\n    getSalasDisponiveis() {\r\n\r\n\r\n        this._http.get(`${this.baseUrl}/unidade/salas`)\r\n            .subscribe(\r\n                response => {\r\n                    console.log(response)\r\n                    this.salas = Object.assign([], response)\r\n                    //console.log(this.cursos)\r\n                },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                    //this.showSelec = truetTurno = true\r\n                    this.showCapacidadeDropDown = true\r\n                    /*if domingo ou sabado\r\n                    \r\n                    */\r\n\r\n                }\r\n            )\r\n\r\n    }\r\n\r\n    getModulos() {\r\n\r\n        this._http.get(`${this.baseUrl}/adm/modulos/CGI`)\r\n            .subscribe(\r\n                response => {\r\n                    console.log(response)\r\n                    this.cursos = response//Object.assign([], response)\r\n                    console.log(this.cursos)\r\n                },\r\n                (error) => {\r\n\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    this.showSelectTurno = true\r\n\r\n                    /*if domingo ou sabado\r\n                    \r\n                    */\r\n\r\n                }\r\n            )\r\n\r\n    }\r\n\r\n    createItem(id): FormGroup {\r\n        return this._fb.group({\r\n            id: id\r\n        });\r\n    }\r\n\r\n    get Professores(): FormArray {\r\n        return this.cursoForm.get(\"listaprofessores\") as FormArray\r\n    }\r\n\r\n    addProfs(profId) {\r\n        this.Professores.push(this.createItem(profId));\r\n    }\r\n\r\n    removeProf(i: number) {\r\n        const index = this.Professores.value.findIndex(c => c.id == i)\r\n        this.Professores.removeAt(index);\r\n    }\r\n\r\n    showOnMoreDay: boolean = false\r\n    showSecondDay: boolean = false\r\n    viewModel: CreateTurmaViewModel[] = new Array<CreateTurmaViewModel>()\r\n\r\n    // v1\r\n    primeiroDia: DisponibilidadeDto = new DisponibilidadeDto();\r\n    outrosDias: DisponibilidadeDto[] = new Array<DisponibilidadeDto>();\r\n    //V2\r\n    disponibilidades: DisponibilidadeDtoV2 = new DisponibilidadeDtoV2();\r\n    pesquisar() {\r\n\r\n        this.showHorarioTurno = false\r\n        this.showGridDias = false\r\n\r\n        var dataIni = new Date(this.cursoForm.get('prevInicio_1').value).toISOString()\r\n        var dataEnd = new Date(this.cursoForm.get('prevTermino_3').value).toISOString()\r\n        var salaId = this.cursoForm.get('salaId').value\r\n\r\n        this._http.get(`${this.baseUrl}/turmas/disponibilidade/${dataIni}/${dataEnd}/${salaId}`)\r\n            .subscribe(\r\n                response => {\r\n                    console.log(response)\r\n                    //v1\r\n                    this.primeiroDia = Object.assign({}, response['availabilityOne'] as DisponibilidadeDto)\r\n                    this.outrosDias = Object.assign([], response['availabilityTwo'] as DisponibilidadeDto[])\r\n                    this.viewModel = Object.assign([], response as CreateTurmaViewModel[])\r\n                    console.log(this.viewModel)\r\n\r\n                    //v2\r\n                    this.disponibilidades = Object.assign({}, response)\r\n\r\n                    console.log(this.disponibilidades)\r\n                },\r\n                (error) => {\r\n\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n\r\n                    this.showGridDias = true\r\n                    console.log(this.primeiroDia)\r\n                    console.log(this.outrosDias)\r\n\r\n                    this.cursoForm.get('dia1').setValue(this.primeiroDia.diaSemana);\r\n                    if (this.outrosDias.length == 0) {\r\n                        console.log('segundo objeto null')\r\n                        this.showOnMoreDay = false\r\n                    } else {\r\n                        this.showOnMoreDay = true\r\n                    }\r\n\r\n                }\r\n            )\r\n        // }\r\n        console.log(this.cursoForm.get('prevInicio_1').value)\r\n\r\n    }\r\n\r\n    addOneMoreDay() {\r\n\r\n        this.showSecondDay = true\r\n\r\n\r\n    }\r\n\r\n    onCheckboxChange(e, profId) {\r\n\r\n        console.log(e.checked)\r\n        console.log(e)\r\n        console.log(profId)\r\n        if (e.checked) {\r\n            this.addProfs(profId)\r\n        } else {\r\n            this.removeProf(profId)\r\n        }\r\n    }\r\n\r\n\r\n    diasSemanas = \"\"\r\n    horarioValue = \"\";\r\n    showGridDias = false\r\n    showGridFDS = false\r\n    selectTurno(turno) {\r\n        console.log(turno)\r\n        this.showHorarioTurno = true\r\n        // TODO: verificar disponibilidade\r\n        console.log(turno)\r\n        console.log(turno.turno)\r\n        if (turno.turno == 'Sábado' || turno.turno == 'Domingo') {\r\n            this.horarioValue = \"10:00 às 17:00\"\r\n\r\n            this.cursoForm.get('turno').setValue(turno.turno);\r\n            this.cursoForm.get('horarioIni_1').setValue('10:00');\r\n            this.cursoForm.get('horarioFim_1').setValue('17:00');\r\n            this.cursoForm.get('dia1').disable();\r\n            this.cursoForm.get('dia2').disable();\r\n\r\n            this.showGridDias = false\r\n            this.showGridFDS = true\r\n\r\n        } else if (turno.value == '') {\r\n            this.showGridDias = false\r\n            this.showGridFDS = false\r\n        } else if (turno.turno == 'Manhã') {\r\n            console.log('sleect manha')\r\n            console.log(turno)\r\n            //this.horarioValue = \"08:00 às 13:00\"\r\n            this.diasSemanas = turno.diasSemanaDisponiveis\r\n            this.primeiroDia = turno.primeiroDiaSemana\r\n\r\n            this.cursoForm.get('turno').setValue(turno.turno);\r\n            this.cursoForm.get('horarioIni_1').setValue('09:00');\r\n            this.cursoForm.get('horarioFim_1').setValue('12:30');\r\n            this.cursoForm.get('dia1').enable();\r\n            this.cursoForm.get('dia2').enable();\r\n            this.cursoForm.get('dia1').setValue(turno.primeiroDiaSemana.item2);\r\n\r\n            this.showGridDias = true\r\n            this.showGridFDS = false\r\n        } else if (turno.turno == 'Tarde') {\r\n            console.log('select tarde')\r\n            // this.horarioValue = \"13:00 às 18:00\"\r\n            this.diasSemanas = turno.diasSemanaDisponiveis\r\n            this.primeiroDia = turno.primeiroDiaSemana\r\n\r\n\r\n\r\n            this.cursoForm.get('turno').setValue(turno.turno);\r\n            this.cursoForm.get('horarioIni_1').setValue('13:00');\r\n            this.cursoForm.get('horarioFim_1').setValue('17:30');\r\n            this.cursoForm.get('dia1').enable();\r\n            this.cursoForm.get('dia2').enable();\r\n            this.cursoForm.get('dia1').setValue(turno.primeiroDiaSemana.item2);\r\n\r\n            this.showGridDias = true\r\n            this.showGridFDS = false\r\n        } else if (turno.turno == 'Noite') {\r\n            this.horarioValue = \"18:00 às 22:00\"\r\n\r\n            this.showGridDias = true\r\n            this.showGridFDS = false\r\n        }\r\n    }\r\n\r\n    setSegundoDiaSemana(item) {\r\n        console.log(item)\r\n        if (item == undefined) {\r\n            this.cursoForm.get('dia2').setValue('')\r\n        } else {\r\n            this.cursoForm.get('dia2').setValue(item)\r\n        }\r\n\r\n    }\r\n    //prevtermino: Date = new Date(0, 0, 0)\r\n    onFocusOutDateEvent1(event: any) {\r\n        console.log(event.target.value);\r\n        //console.log(this.colaboradorForm.get('nascimento').value)\r\n        var dataForm: Date = new Date(this.cursoForm.get('prevInicio_1').value)\r\n        console.log(dataForm.valueOf())\r\n\r\n        console.log(new Date().valueOf())\r\n        if (dataForm.valueOf() >= new Date().valueOf()) {\r\n\r\n            let novaData = new Date(dataForm.getFullYear(), dataForm.getMonth() + 20, dataForm.getDate(), 0, 0, 0, 0)\r\n            //let novaData = new Date(dataForm)\r\n            novaData.setDate(dataForm.getDate())\r\n            console.log(dataForm)\r\n            //console.log(novaData.setMonth(+20))\r\n            console.log(novaData.getDate())\r\n            console.log(novaData.getMonth())\r\n            console.log(novaData.getFullYear())\r\n            //this.cursoForm.get('prevtermino_1').setValue(new Date(dataForm.getFullYear(), dataForm.getMonth() + (20 -1),dataForm.getDay()))\r\n            //this.cursoForm.get('prevTermino_1').enable()\r\n\r\n            //this.cursoForm.get('prevTermino_1').setValue(this._datepipe.transform(novaData, '   dd  /  MM  /  yyyy'));\r\n            this.cursoForm.get('prevTermino_1').setValue(new Date(novaData));\r\n            console.log(this.cursoForm.get('prevTermino_1').value)\r\n            this.termino1 = this._datepipe.transform(novaData, '   dd  /  MM  /  yyyy')\r\n            ///this.cursoForm.get('prevTermino_1').disable()\r\n        }\r\n    }\r\n    onFocusOutDateEvent2(event: any) {\r\n        console.log(event.target.value);\r\n        //console.log(this.colaboradorForm.get('nascimento').value)\r\n        var dataForm: Date = new Date(this.cursoForm.get('prevInicio_2').value)\r\n        console.log(dataForm.valueOf())\r\n\r\n        console.log(new Date().valueOf())\r\n        if (dataForm.valueOf() >= new Date().valueOf()) {\r\n\r\n            let novaData = new Date(dataForm.getFullYear(), dataForm.getMonth() + 20, dataForm.getDate())\r\n            //let novaData = new Date(dataForm)\r\n            novaData.setDate(dataForm.getDate())\r\n            console.log(dataForm)\r\n            //console.log(novaData.setMonth(+20))\r\n            console.log(novaData.getDate())\r\n            console.log(novaData.getMonth())\r\n            console.log(novaData.getFullYear())\r\n            //this.cursoForm.get('prevtermino_1').setValue(new Date(dataForm.getFullYear(), dataForm.getMonth() + (20 -1),dataForm.getDay()))\r\n            //this.cursoForm.get('prevTermino_1').enable()\r\n            //            this.cursoForm.get('prevTermino_2').setValue(this._datepipe.transform(novaData, '   dd  /  MM  /  yyyy'));\r\n            this.cursoForm.get('prevTermino_2').setValue(new Date(novaData))//, '   dd  /  MM  /  yyyy'));\r\n            this.termino2 = this._datepipe.transform(novaData, '   dd  /  MM  /  yyyy')\r\n            //this.cursoForm.get('prevTermino_2').disable()\r\n        }\r\n    }\r\n    onFocusOutDateEvent3(event: any) {\r\n        console.log(event.target.value);\r\n        //console.log(this.colaboradorForm.get('nascimento').value)\r\n        var dataForm: Date = new Date(this.cursoForm.get('prevInicio_3').value)\r\n        console.log(dataForm.valueOf())\r\n\r\n        console.log(new Date().valueOf())\r\n        if (dataForm.valueOf() >= new Date().valueOf()) {\r\n\r\n            let novaData = new Date(dataForm.getFullYear(), dataForm.getMonth() + 20, dataForm.getDate())\r\n            //let novaData = new Date(dataForm)\r\n            novaData.setDate(dataForm.getDate())\r\n            console.log(dataForm)\r\n            //console.log(novaData.setMonth(+20))\r\n            console.log(novaData.getDate())\r\n            console.log(novaData.getMonth())\r\n            console.log(novaData.getFullYear())\r\n            //this.cursoForm.get('prevtermino_1').setValue(new Date(dataForm.getFullYear(), dataForm.getMonth() + (20 -1),dataForm.getDay()))\r\n            this.cursoForm.get('prevTermino_3').setValue(new Date(novaData));\r\n            this.termino3 = this._datepipe.transform(novaData, '   dd  /  MM  /  yyyy')\r\n            //this.cursoForm.get('prevTermino_3').disable()\r\n        }\r\n    }\r\n\r\n\r\n    disabled = false\r\n    getProfsList(itemsPerPage: number, currentPage: number) {\r\n\r\n        //this.http.get(`${this.baseUrl}/colaboradores/professores/?unidade=Campo Grande&itemsPerPage=${itemsPerPage}&currentPage=${currentPage}`)\r\n        this._http.get(`${this.baseUrl}/colaboradores/professores/?unidade=Campo Grande`)\r\n            .subscribe(\r\n                (result) => {\r\n\r\n                    console.log(result)\r\n\r\n                    this.profResp = Object.assign([], result)\r\n\r\n                    this.profResp.forEach(element => {\r\n                        element.checked = false\r\n                    });\r\n                    console.log(this.profResp)\r\n                    //  this.profResp.length > 0 ? this.showProflist = true :\r\n                    //  this.showProflist = false\r\n\r\n                },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n\r\n                    this.showProflist = true\r\n                }\r\n            )\r\n    }\r\n\r\n    getFirst() {\r\n        // return this.formArray.get(0);\r\n    }\r\n    clear() {\r\n        //  this.formArray.clear();\r\n    }\r\n    replace() {\r\n        //   this.formArray.setControl(0, new FormControl(''));\r\n    }\r\n    addSkill() {\r\n        const group = new FormGroup({\r\n            level: new FormControl(''),\r\n            name: new FormControl('')\r\n        });\r\n\r\n        //   this.formArray.push(group);\r\n        //this.formArray.push(new FormControl(''));\r\n    }\r\n\r\n\r\n\r\n    prepend() {\r\n        //   this.formArray.insert(0, new FormControl(''));\r\n    }\r\n\r\n    createItemFormGroup() {\r\n        return this._fb.group({\r\n            nome: ['', [Validators.required]],\r\n            materia: ['', [Validators.required]]\r\n        });\r\n    }\r\n\r\n    addItem() {\r\n        //   this.formArray.push(this.createItemFormGroup());\r\n    }\r\n\r\n\r\n\r\n    transfer = { amount: 0 }\r\n\r\n    validateOnlyNumbers(evt) {\r\n        var theEvent = evt || window.event;\r\n        var key = theEvent.keyCode || theEvent.which;\r\n        key = String.fromCharCode(key);\r\n        var regex = /[0-9]|\\./;\r\n        if (!regex.test(key)) {\r\n            theEvent.returnValue = false;\r\n            if (theEvent.preventDefault) theEvent.preventDefault();\r\n        }\r\n    }\r\n    dobMaxDate = new Date();\r\n\r\n    save(form: any) {\r\n        //const novoColaborador = JSON.stringify(form.value);\r\n        console.log(form)\r\n\r\n        //this.redi([\"./adm/colaboradores\"]);\r\n        this._http.post(`${this.baseUrl}/colaboradores`, form, {\r\n            //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bear \"\r\n            })\r\n        }).subscribe(response => {\r\n\r\n            console.log(response)\r\n\r\n\r\n            // this.dialogRef.close();\r\n        }, err => { },\r\n            () => { });\r\n    }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Truma criada com sucesso', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    // onSubmit(form: any) {\r\n\r\n\r\n\r\n    //     if (form.valid) {\r\n    //         this.turma = Object.assign({}, form.value);\r\n\r\n    //         const turma = JSON.stringify(this.turma);\r\n    //         this.disabledSpinner = true\r\n    //         console.log(this.turma)\r\n\r\n\r\n    //         // test new\r\n    //         console.log(this.cursoForm.get('curso').value)\r\n    //         var command: TurmaCommand = new TurmaCommand();\r\n    //         command.modulo = this.cursoForm.get('curso').value\r\n\r\n\r\n    //         //command.vagas = this.cursoForm.get('vagas').value\r\n    //         command.salaId = this.cursoForm.get('salaId').value\r\n    //         command.minVagas = this.cursoForm.get('minVagas').value\r\n    //         command.prevInicio_1 = this.cursoForm.get('prevInicio_1').value\r\n    //         command.prevInicio_2 = this.cursoForm.get('prevInicio_2').value\r\n    //         command.prevInicio_3 = this.cursoForm.get('prevInicio_3').value\r\n\r\n    //         command.prevTermino_1 = this.cursoForm.get('prevTermino_1').value\r\n    //         command.prevTermino_2 = this.cursoForm.get('prevTermino_2').value\r\n    //         command.prevTermino_3 = this.cursoForm.get('prevTermino_3').value\r\n    //         // temp\r\n    //         command.horarioIni_1 = this.cursoForm.get('horarioIni_1').value\r\n    //         command.horarioFim_1 = this.cursoForm.get('horarioFim_1').value\r\n\r\n    //         command.horarioIni_2 = this.cursoForm.get('horarioIni_2').value\r\n    //         command.horarioFim_2 = this.cursoForm.get('horarioFim_2').value\r\n\r\n    //         command.segundoDiaAula = this.outrosDias[0].diaData\r\n\r\n    //         command.descricao = this.cursoForm.get('descricao').value\r\n\r\n    //         //console.log(command)\r\n\r\n    //         let horarios: Horarios = new Horarios()\r\n    //         horarios.dia1 = this.cursoForm.get('dia1').value\r\n    //         horarios.horarioIni_1 = this.cursoForm.get('horarioIni_1').value\r\n    //         horarios.horarioFim_1 = this.cursoForm.get('horarioFim_1').value\r\n    //         //command.horarios.dia1= this.cursoForm.get('dia1').value\r\n    //         //command.horarios.dia2= this.cursoForm.get('dia2').value\r\n\r\n    //         //command.horarios.horarioIni_1= this.cursoForm.get('horarioIni_1').value\r\n    //         //command.horarios.horarioFim_1= this.cursoForm.get('horarioFim_1').value\r\n    //         command.horarios = horarios\r\n    //         //command.horarios.horarioIni_2= this.cursoForm.get('horarioIni_2').value\r\n    //         //command.horarios.horarioFim_2= this.cursoForm.get('horarioFim_2').value\r\n    //         var verify = JSON.stringify(command);\r\n    //         console.log(verify)\r\n    //         console.log(command)\r\n    //         this._http.post(`${this.baseUrl}/turmas`, command, {\r\n    //         }).subscribe(response => {\r\n\r\n    //         },\r\n    //             (error) => {\r\n    //                 console.log(error)\r\n    //                 this.disabledSpinner = false\r\n    //             },\r\n    //             () => {\r\n\r\n    //                 this.openSnackBar()\r\n    //                 this.disabledSpinner = false\r\n    //                 this.cursoForm.reset();\r\n    //                 this.dialogRef.close({ clicked: \"OK\" });\r\n    //             }\r\n    //         )\r\n    //     }\r\n\r\n\r\n    //     // console.log(this.turma)\r\n    //     // if (form.valid) {\r\n    //     //     console.log('form valid')\r\n    //     //     const novoColaborador = JSON.stringify(form.value);\r\n    //     // }\r\n    // }\r\n\r\n    valor: any\r\n    previIniOne: any\r\n    previIniDois: any\r\n    previIniTres: any\r\n    ver1() {\r\n        console.log(this.cursoForm.get('prevInicio_1').value)\r\n        console.log(this.cursoForm.get('prevInicio_2').value)\r\n        console.log(this.cursoForm.get('prevInicio_3').value)\r\n    }\r\n    onFocusOutDateEvent(event: any, param) {\r\n        var data;\r\n        //if (event.target.value.length == 10) {\r\n\r\n        if (param == \"iniUm\") {\r\n\r\n            if (event.target.value.length == 10) {\r\n                var data = event.target.value.split('/')\r\n                var dataForm: Date = new Date(parseInt(data[2]), parseInt(data[1]) - 1,\r\n                    parseInt(data[0]), 0, 0, 0)\r\n\r\n                this.previIniOne = dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n\r\n                this.cursoForm.get('prevInicio_1').setValue(dataForm.toJSON())\r\n            } else {\r\n                this.cursoForm.get('prevInicio_1').setValue('')\r\n            }\r\n\r\n\r\n        }\r\n\r\n        if (param == \"iniDois\") {\r\n            if (event.target.value.length == 10) {\r\n                var data = event.target.value.split('/')\r\n                var dataForm: Date = new Date(parseInt(data[2]), parseInt(data[1]) - 1,\r\n                    parseInt(data[0]), 0, 0, 0)\r\n\r\n                this.previIniDois = dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n\r\n                this.cursoForm.get('prevInicio_2').setValue(dataForm.toJSON())\r\n            } else {\r\n                this.cursoForm.get('prevInicio_2').setValue('')\r\n            }\r\n        }\r\n\r\n        if (param == \"iniTres\") {\r\n            if (event.target.value.length == 10) {\r\n                var data = event.target.value.split('/')\r\n                var dataForm: Date = new Date(parseInt(data[2]), parseInt(data[1]) - 1,\r\n                    parseInt(data[0]), 0, 0, 0)\r\n\r\n                this.previIniTres = dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n\r\n                this.cursoForm.get('prevInicio_3').setValue(dataForm.toJSON())\r\n            } else {\r\n                this.cursoForm.get('prevInicio_3').setValue('')\r\n            }\r\n        }\r\n\r\n\r\n        // } else {\r\n        // this.cursoForm.get('prevInicio_1').setValue('')\r\n        // this.cursoForm.get('prevInicio_2').setValue('')\r\n        // this.cursoForm.get('prevInicio_3').setValue('')\r\n        // }\r\n        //console.log(this.cursoForm.get('prevInicio_1').value)\r\n\r\n    }\r\n\r\n    get getDatasValid() {\r\n        return this.cursoForm.get('prevInicio_1').valid &&\r\n            this.cursoForm.get('prevInicio_2').valid &&\r\n            this.cursoForm.get('prevInicio_3').valid &&\r\n            this.cursoForm.get('prevTermino_3').valid &&\r\n            this.cursoForm.get('salaId').valid\r\n\r\n    }\r\n\r\n\r\n\r\n    previTerminoOne: any\r\n    previTerminoDois: any\r\n    previTerminoTres: any\r\n    onFocusOutDateFinalEvent(event: any, param) {\r\n        var data;\r\n        if (event.target.value.length == 10) {\r\n\r\n            if (param == \"iniUm\") {\r\n\r\n                var data = event.target.value.split('/')\r\n                var dataForm: Date = new Date(parseInt(data[2]), parseInt(data[1]) - 1,\r\n                    parseInt(data[0]), 0, 0, 0)\r\n\r\n                this.previTerminoOne = dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n\r\n                this.cursoForm.get('prevTermino_1').setValue(dataForm.toJSON())\r\n            }\r\n\r\n            if (param == \"iniDois\") {\r\n\r\n                var data = event.target.value.split('/')\r\n                var dataForm: Date = new Date(parseInt(data[2]), parseInt(data[1]) - 1,\r\n                    parseInt(data[0]), 0, 0, 0)\r\n\r\n                this.previTerminoDois = dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n\r\n                this.cursoForm.get('prevTermino_2').setValue(dataForm.toJSON())\r\n            }\r\n\r\n            if (param == \"iniTres\") {\r\n\r\n                var data = event.target.value.split('/')\r\n                var dataForm: Date = new Date(parseInt(data[2]), parseInt(data[1]) - 1,\r\n                    parseInt(data[0]), 0, 0, 0)\r\n\r\n                this.previTerminoTres = dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n\r\n                this.cursoForm.get('prevTermino_3').setValue(dataForm.toJSON())\r\n            }\r\n\r\n\r\n        } else {\r\n            // this.cursoForm.get('prevInicio_1').setValue('')\r\n            // this.cursoForm.get('prevInicio_2').setValue('')\r\n            // this.cursoForm.get('prevInicio_3').setValue('')\r\n        }\r\n        console.log(this.cursoForm.get('prevInicio_1').value)\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport class PrimeiroDiaSemana {\r\n    constructor(\r\n        public item1?: string,\r\n        public item2?: string,\r\n    ) {\r\n\r\n    }\r\n}\r\n\r\nexport class DiasDisponiveis {\r\n    constructor(\r\n        public item1?: string,\r\n        public item2?: string,\r\n    ) {\r\n\r\n    }\r\n}\r\n\r\nexport class TurnosViewModel {\r\n    constructor(\r\n        public turno?: string,\r\n        public diaSemana?: string,\r\n        public diasSemanaDisponiveis?: string[]\r\n    ) {\r\n\r\n    }\r\n}\r\n\r\n","<div style=\"font-size: 1.2em;\">Abertura de Turma\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n\r\n<div *ngIf=\"showmensagemErro\" style=\"color:red; font-style: italic; font-size: 0.8em;margin-top: 5px;\">\r\n    * {{mensagemErro}}\r\n</div>\r\n\r\n<div *ngIf=\"showForm\" style=\"position: relative;\">\r\n\r\n    <div style=\"font-size: 0.8em;margin-top: 5px;\">* A turma será criada na unidade de {{tokenInfo.Unidade}}</div>\r\n    <hr>\r\n\r\n    <form novalidate [formGroup]=\"cursoForm\" (ngSubmit)=\"onSubmit(cursoForm)\" style=\"margin: 0px\">\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 175px; \">\r\n            <mat-label>Tipo do Pacote</mat-label>\r\n            <mat-select selected required>\r\n                <mat-option></mat-option>\r\n                <mat-option (click)=\"pesquisarPacotes(pac.id)\" *ngFor=\"let pac of typePacotes\" [value]=\"pac.id\">\r\n                    {{ pac.nome}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field disabled appearance=\"standard\" style=\"width: 200px;margin-left: 10px; \">\r\n            <mat-label>Pacote</mat-label>\r\n            <mat-select [disabled]=\"pacotes.length == 0\" formControlName=\"pacoteId\" selected>\r\n                <mat-option *ngFor=\"let pac of pacotes\" [value]=\"pac.id\">\r\n                    {{ pac.descricao}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <span *ngIf=\"showNoPacote\" style=\"color: red; font-size: 0.9;\">* Não há pacotes cadastrados para o tipo.</span>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 250px; \">\r\n            <mat-label>Descrição</mat-label>\r\n            <input selected formControlName=\"descricao\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                placeholder=\"Ex: Curso Técnico...\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 140px;margin-left: 10px;\">\r\n            <mat-label>Sala/Capacidade</mat-label>\r\n            <mat-select formControlName=\"salaId\" (change)=\"verVar($event)\" selected required>\r\n                <mat-option *ngFor=\"let item of salas\" [value]=\"item.id\">\r\n                    {{item.titulo}}/{{ item.capacidade }} alunos\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 120px;margin-left: 10px;\">\r\n            <mat-label>Mínimo Vagas</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" formControlName=\"minVagas\"\r\n                minlength=\"1\" maxlength=\"4\" required name=\"minVagas\" matInput>\r\n        </mat-form-field>\r\n\r\n\r\n\r\n        <mat-tab-group>\r\n            <mat-tab label=\"Previsões\">\r\n                <ng-container>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 145px;\">\r\n                        <mat-label>Previsão 1</mat-label>\r\n                        <input matInput [matDatepicker]=\"dp1\" formControlName=\"prevInicio_1\" disabled>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #dp1 disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field>\r\n\r\n                    <!-- <mat-form-field (focusout)=\"onFocusOutDateEvent($event, 'iniUm')\" appearance=\"standard\"\r\n                        style=\"width: 145px; \">\r\n                        <mat-label>Previsão 1</mat-label>\r\n                        <input mask=\"00/00/0000\" required name=\"prevInicio_1\" matInput [value]=\"previIniOne\"\r\n                            formControlName=\"prevInicio_1\"\r\n                            onkeypress=\"String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        <mat-hint>Previsão de início 1</mat-hint>\r\n                    </mat-form-field> -->\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 145px;margin-left: 20px;\">\r\n                        <mat-label>Previsão 2</mat-label>\r\n                        <input matInput [matDatepicker]=\"dp2\" formControlName=\"prevInicio_2\" disabled>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"dp2\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #dp2 disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field>\r\n\r\n                    <!-- <mat-form-field (focusout)=\"onFocusOutDateEvent($event, 'iniDois')\" appearance=\"standard\"\r\n                        style=\"width: 145px;margin-left: 20px; \">\r\n\r\n                        <mat-label>Previsão 2</mat-label>\r\n\r\n                        <input mask=\"00/00/0000\" required name=\"prevInicio_2\" matInput [value]=\"previIniDois\"\r\n                            formControlName=\"prevInicio_2\"\r\n                            onkeypress=\"String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n\r\n                        <mat-hint>Previsão de início 2</mat-hint>\r\n\r\n                    </mat-form-field> -->\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 145px;margin-left: 20px;\">\r\n                        <mat-label>Previsão 3</mat-label>\r\n                        <input matInput [matDatepicker]=\"dp3\" formControlName=\"prevInicio_3\" disabled>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field>\r\n\r\n                    <!-- <mat-form-field (focusout)=\"onFocusOutDateEvent($event, 'iniTres')\" appearance=\"standard\"\r\n                        style=\"width: 145px;margin-left: 20px; \">\r\n                        <mat-label>Previsão 3</mat-label>\r\n                        <input mask=\"00/00/0000\" required name=\"prevInicio_3\" matInput [value]=\"previIniTres\"\r\n                            formControlName=\"prevInicio_3\"\r\n                            onkeypress=\"String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        <mat-hint>Previsão de início 3</mat-hint>\r\n                    </mat-form-field> -->\r\n\r\n                    <br>\r\n\r\n                    <!-- <div style=\"font-style: italic; font-size: 0.8em;margin-left: 10px;margin-top: 10px;\">data mínimo para término: 05/10/2023</div> -->\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 145px;\">\r\n                        <mat-label>Término 1</mat-label>\r\n                        <input matInput [matDatepicker]=\"dp4\" formControlName=\"prevTermino_1\" disabled>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"dp4\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #dp4 disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field>\r\n\r\n                    <!-- <mat-form-field (focusout)=\"onFocusOutDateFinalEvent($event, 'iniUm')\" appearance=\"standard\"\r\n                        style=\"width: 145px; \">\r\n                        <mat-label>Término 1</mat-label>\r\n                        <input mask=\"00/00/0000\" required name=\"prevTermino_1\" matInput [value]=\"previTerminoOne\"\r\n                            formControleName=\"prevTermino_1\"\r\n                            onkeypress=\"String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        <mat-hint>Previsão de término 1</mat-hint>\r\n                    </mat-form-field> -->\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 145px;margin-left: 20px;\">\r\n                        <mat-label>Término 2</mat-label>\r\n                        <input matInput [matDatepicker]=\"dp5\" formControlName=\"prevTermino_2\" disabled>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"dp5\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #dp5 disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field>\r\n\r\n                    <!-- <mat-form-field (focusout)=\"onFocusOutDateFinalEvent($event, 'iniDois')\" appearance=\"standard\"\r\n                        style=\"width: 145px;margin-left: 20px; \">\r\n                        <mat-label>Término 2</mat-label>\r\n                        <input mask=\"00/00/0000\" required name=\"prevTermino_2\" matInput [value]=\"previTerminoDois\"\r\n                            formControleName=\"prevTermino_2\"\r\n                            onkeypress=\"String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        <mat-hint>Previsão de término 2</mat-hint>\r\n                    </mat-form-field> -->\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 145px;margin-left: 20px;\">\r\n                        <mat-label>Término 3</mat-label>\r\n                        <input matInput [matDatepicker]=\"dp6\" formControlName=\"prevTermino_3\" disabled>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"dp6\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #dp6 disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field>\r\n\r\n                    <!-- <mat-form-field (focusout)=\"onFocusOutDateFinalEvent($event, 'iniTres')\" appearance=\"standard\"\r\n                        style=\"width: 145px;margin-left: 20px; \">\r\n                        <mat-label>Término 3</mat-label>\r\n                        <input mask=\"00/00/0000\" required name=\"prevTermino_3\" matInput [value]=\"previTerminoTres\"\r\n                            formControleName=\"prevTermino_3\"\r\n                            onkeypress=\"String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        <mat-hint>Previsão de término 3</mat-hint>\r\n                    </mat-form-field> -->\r\n\r\n\r\n                </ng-container>\r\n\r\n\r\n            </mat-tab>\r\n            <mat-tab label=\"Dias da semana\">\r\n\r\n                <br>\r\n\r\n                <div style=\"font-size: 0.9em;font-style: italic;\">\r\n                    Adicione ao menos um dia da semana:\r\n                </div>\r\n\r\n                <button (click)=\"addDiaSemana()\" mat-icon-button type=\"button\" #tooltip=\"matTooltip\"\r\n                    matTooltip=\"adicionar matéria\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n\r\n                <ng-container formArrayName=\"diasSemana\">\r\n\r\n                    <ng-container *ngFor=\"let diaSemanaForm of diasSemana.controls; let i = index;\">\r\n                        <div [formGroup]=\"diaSemanaForm\">\r\n\r\n\r\n                            <mat-form-field appearance=\"standard\" style=\"width: 140px;margin-left: 10px;\">\r\n                                <mat-label>Dia</mat-label>\r\n                                <mat-select formControlName=\"diaSemana\" selected required>\r\n                                    <mat-option *ngFor=\"let item of diasSemanaView\" [value]=\"item.value\">\r\n                                        {{item.value}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field style=\"width: 80px; margin-left: 10px;\" appearance=\"standard\">\r\n                                <mat-label>horário</mat-label>\r\n                                <mytime-input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                                    formControlName=\"horarioInicio\" required></mytime-input>\r\n                                <mat-hint></mat-hint>\r\n                            </mat-form-field>\r\n\r\n                            <span style=\"margin-left: 10px;\">\r\n                                às\r\n                            </span>\r\n                            <mat-form-field style=\"width: 80px; margin-left: 10px;\" appearance=\"standard\">\r\n                                <mat-label>horário</mat-label>\r\n                                <mytime-input formControlName=\"horarioFim\" required></mytime-input>\r\n                                <mat-hint></mat-hint>\r\n                            </mat-form-field>\r\n\r\n\r\n                            <button mat-icon-button (click)=\"removeDiaSemana(i)\" type=\"button\"\r\n                                style=\"margin-left:10px ;\" #tooltip=\"matTooltip\" matTooltip=\"remover\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n\r\n                                <mat-icon style=\"vertical-align: middle;\" class=\"delete-btn\">\r\n                                    delete_forever</mat-icon>\r\n                            </button>\r\n\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                </ng-container>\r\n\r\n            </mat-tab>\r\n\r\n        </mat-tab-group>\r\n\r\n        <br>\r\n\r\n        <mat-progress-bar *ngIf=\"disabledSaveButton\" @rowHighlight style=\"margin:0px\" mode=\"query\"></mat-progress-bar>\r\n        <div style=\"float: right;margin-top: 15px;\">\r\n\r\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"disabledButton\" style=\"\">\r\n                Salvar\r\n            </button>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Produto } from \"src/app/_shared/models/produto.model\";\r\n\r\n\r\n\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'produto-createmodal',\r\n    templateUrl: './produto-create.component.html',\r\n    styleUrls: ['./produto-create.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ProdutoCreateComponent implements OnInit {\r\n\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n    // pageEvent: PageEvent;\r\n    baseUrl = environment.baseUrl;\r\n    //public cepReturn: CepReturn = new CepReturn();\r\n    public produtoForm: FormGroup;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public unidades: any[] = new Array<any>();\r\n    // public validadeEmailMsg = false\r\n    // public validadeCPFMsg = false\r\n    //cargos = Cargos;\r\n    //mensagem = \"\";\r\n    //showMensagem = false\r\n    //public bairro: string = null;\r\n    //@Input() disabled = true;\r\n    //unidades = Unidades;//: string[] = new Array(\"Campo Grande II\", \"Jacarepaguá\");\r\n    constructor(\r\n        //private service: AdmService,\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<ProdutoCreateComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.produtoForm = _fb.group({\r\n            // templateName: ['', [Validators.required, Validators.minLength(5)]],\r\n            // newCat: [,[Validators.required, Validators.minLength(3)]],\r\n            // newFunc: [, [Validators.required, Validators.minLength(3)]]\r\n            nome: ['', [Validators.required, Validators.minLength(5)]],\r\n            descricao: ['', [Validators.required]],\r\n            preco: ['', [Validators.required]],\r\n            precoCusto: ['', [Validators.required]],\r\n            quantidade: [, [Validators.required, Validators.min(1)]],\r\n            nivelMinimo: [, [Validators.required]],\r\n            unidadeId: ['', [Validators.required]],\r\n            observacoes: [''],\r\n\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        // console.log(this.tokenInfo.Unidade);\r\n        // console.log(this.tokenInfo.Codigo);\r\n        // console.log(this.tokenInfo);\r\n        // this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n        // this.colaboradorForm.get('cpf').setErrors({ 'incorrect': true });\r\n        //this.colaboradorForm.get('unidade').setValue(this.tokenInfo.Codigo)\r\n        // console.log(\"on init\")\r\n        //this.getTasks(1, this.pageSize);\r\n        //this.colaboradorForm.get('logradouro').disable()\r\n        this.GetUnidades()\r\n    }\r\n\r\n    GetUnidades(){\r\n\r\n        this._http.get(`${this.baseUrl}/unidade`)\r\n        .subscribe(resp => {\r\n            this.unidades = Object.assign([], resp['unidades'])\r\n        },\r\n        (err)=> { console.log(err)},\r\n        () => { \r\n\r\n        })\r\n\r\n    }\r\n    //     ngOnChanges() {\r\n    //         logradouro\r\n    // cidade\r\n    // uf\r\n    // bairro\r\n\r\n    //     }\r\n\r\n    // save(form: any) {\r\n    //     //const novoColaborador = JSON.stringify(form.value);\r\n    //     console.log(form)\r\n\r\n    //     //this.redi([\"./adm/colaboradores\"]);\r\n    //     this.http.post(`${this.baseUrl}/colaboradores`, form, {\r\n    //         //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n    //         headers: new HttpHeaders({\r\n    //             \"Content-Type\": \"application/json\",\r\n    //             \"Authorization\": \"Bear \"\r\n    //         })\r\n    //     }).subscribe(response => {\r\n\r\n    //         console.log(response)\r\n\r\n\r\n    //         this.dialogRef.close();\r\n    //     }, err => { },\r\n    //         () => { });\r\n    // }\r\n\r\n    onSubmit(form: FormGroup) {\r\n\r\n        var produto = new Produto();\r\n        produto = form.value\r\n        console.log(form.value)\r\n        console.log(form.valid)\r\n        //produto.toFloat(form.value[\"preco\"])\r\n        var preco = parseFloat(form.value[\"preco\"])\r\n        var precoFloat = preco.toFixed(2)\r\n        console.log(precoFloat)\r\n        produto.preco =  parseFloat(preco.toFixed(2))\r\n        console.log(produto)\r\n        //.toFixed(2)\r\n\r\n        if (form.valid) {\r\n\r\n\r\n            this._http.post(`${this.baseUrl}/produto`, produto, {\r\n\r\n            }).subscribe(response => {\r\n\r\n                console.log(response)\r\n\r\n            }, (err) => {\r\n                console.log(err)\r\n\r\n            },\r\n                () => {\r\n\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                });\r\n        }\r\n    }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Colaborador salvo com sucesso.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n    // buscarEmail(event: any) {\r\n    //     if (this.colaboradorForm.get('email').valid) {\r\n    //         this.validadeEmailMsg = false\r\n    //         this.http.get(`${this.baseUrl}/adm/aluno/email/${event.target.value}`, {\r\n    //             headers: new HttpHeaders({\r\n    //                 \"Content-Type\": \"application/json\",\r\n    //                 \"Authorization\": \"Bear \"\r\n    //             })\r\n    //         }).subscribe(response => {\r\n\r\n    //         }, (err) => {\r\n    //             if (err['status'] == 409) {\r\n    //                 this.validadeEmailMsg = true\r\n    //                 this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n    //             }\r\n    //         },\r\n    //             () => {\r\n    //                 this.colaboradorForm.get('email').setErrors(null);\r\n    //             });\r\n\r\n    //         //this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n\r\n    //     }\r\n    // }\r\n\r\n    // buscarCPF(event: any) {\r\n    //     // console.log(event.target.value)\r\n    //     console.log(this.colaboradorForm.get('cpf').value)\r\n    //     console.log(this.colaboradorForm.get('cpf').valid)\r\n    //     console.log(this.colaboradorForm.get('cpf').value.length)\r\n    //     if (this.colaboradorForm.get('cpf').valid) {\r\n    //         this.validadeCPFMsg = false\r\n    //         let cpf = this.colaboradorForm.get('cpf').value\r\n    //         //this.http.get(`${this.baseUrl}/adm/aluno/cpf/${event.target.value}`, {\r\n    //         this.http.get(`${this.baseUrl}/adm/aluno/cpf/${cpf}`, {\r\n    //             headers: new HttpHeaders({\r\n    //                 \"Content-Type\": \"application/json\",\r\n    //                 \"Authorization\": \"Bear \"\r\n    //             })\r\n    //         }).subscribe(response => {\r\n\r\n    //         }, (err) => {\r\n    //             if (err['status'] == 409) {\r\n    //                 this.validadeCPFMsg = true\r\n    //                 this.colaboradorForm.get('cpf').setErrors({ 'incorrect': true });\r\n    //             }\r\n    //         },\r\n    //             () => {\r\n    //                 this.colaboradorForm.get('cpf').setErrors(null);\r\n    //             });\r\n\r\n    //         //this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n\r\n    //     }\r\n    // }\r\n    // https://viacep.com.br/ws/01001000/json/\r\n    // consultaCEP(CEP: string) {\r\n    //     console.log(CEP);\r\n\r\n    //     this.http.get(`https://viacep.com.br/ws/${CEP}/json/`, {\r\n\r\n    //     }\r\n    //     )\r\n    //         .subscribe(response => {\r\n\r\n    //             console.log(response)\r\n    //             // this.cepReturn = new CepReturn(\r\n    //             //     response[\"logradouro\"],\r\n    //             //     response[\"bairro\"],\r\n    //             //     response[\"localidade\"],\r\n    //             //     response[\"uf\"]);\r\n    //             //console.log(this.cepReturn)\r\n    //             this.colaboradorForm.get('logradouro').setValue(response[\"logradouro\"]);\r\n    //             this.colaboradorForm.get('bairro').setValue(response[\"bairro\"]);\r\n    //             this.colaboradorForm.get('cidade').setValue(response[\"localidade\"]);\r\n    //             this.colaboradorForm.get('uf').setValue(response[\"uf\"]);\r\n    //             //this.bairro = this.cepReturn.bairro\r\n    //             // const token = (<any>response).accessToken;\r\n    //             // console.log(response)\r\n    //             // localStorage.setItem(\"jwt\", token);\r\n    //             // this.invalidLogin = false;\r\n    //             // this.router.navigate([\"/main\"]);\r\n    //         }, err => { console.log(err) },\r\n    //             () => { console.log('finaly') });\r\n    // }\r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n    // login(form: NgForm) {\r\n    //     const credentials = JSON.stringify(form.value);\r\n    //     console.log(credentials)\r\n    //     this.http.post(\"https://localhost:44370/api/identity/login\", credentials, {\r\n    //     //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n    //         headers: new HttpHeaders({\r\n    //             \"Content-Type\": \"application/json\"\r\n    //         })\r\n    //     }).subscribe(response => {\r\n    //         const token = (<any>response).accessToken;\r\n    //         console.log(response)\r\n    //         localStorage.setItem(\"jwt\", token);\r\n    //         this.invalidLogin = false;\r\n    //         this.router.navigate([\"/main\"]);\r\n    //     }, err => {\r\n    //         this.invalidLogin = true;\r\n    //     });\r\n    // }\r\n    // getTasks(actualPage: number, pageSize: number) {\r\n    //     this.service.getTasks(actualPage, pageSize)\r\n    //         .subscribe(\r\n    //             tasks => {\r\n    //                 console.log(tasks)\r\n    //                 this.genericTasks =  Object.assign([],tasks[\"data\"]);\r\n    //                 this.length = tasks[\"totalItemsInDatabase\"];\r\n\r\n    //             },\r\n    //             (err) => {\r\n    //                 console.log(\"err erro\")\r\n\r\n\r\n    //             },\r\n    //             () => { console.log('ok get') },\r\n    //         )\r\n\r\n    // }\r\n\r\n    // addNewItem(value: string) {\r\n    //     console.log(value)\r\n    //     this.newItemEvent.emit(value);\r\n    // }\r\n\r\n    // adicionar(taskAded: GenericTask) {\r\n    //     console.log(taskAded)\r\n    //     let templateTask:TemplateTasks = new TemplateTasks()\r\n    //     templateTask.genericTaskId = taskAded.id\r\n    //     templateTask.name = taskAded.name\r\n    //     templateTask.hour = taskAded.hour\r\n    //     templateTask.minute = taskAded.minute\r\n    //     console.log(templateTask)\r\n\r\n    //     this.data.templateTasks.push(templateTask)\r\n\r\n    //     console.log(this.data.templateTasks)\r\n    //     console.log('adicionar task')\r\n    // }\r\n\r\n\r\n    // //mat-dialog-container\r\n    // onNoClick(): void {\r\n    //     this.dialogRef.close();\r\n    // }\r\n    // pageIndexNumber: number = 0;\r\n    // clicar(evento: any) {\r\n    //     console.log(evento)\r\n\r\n    //     this.pageIndexNumber = (evento.pageIndex * this.pageSize)\r\n    //     this.getTasks(evento.pageIndex + 1, this.pageSize);\r\n    // }\r\n}","<div style=\"font-size: 1.2em;\">Cadastrar Produto\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<!-- <div style=\"font-size: 0.8em;margin-top: 5px;\">* O colaborador será salvo na unidade de {{tokenInfo.Unidade}}</div> -->\r\n<hr>\r\n\r\n<form novalidate [formGroup]=\"produtoForm\" (ngSubmit)=\"onSubmit(produtoForm)\">\r\n\r\n    <!-- <div class=\"card-body\"> -->\r\n    <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Nome</mat-label>\r\n        <input color=\"primary\" selected formControlName=\"nome\" required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n    \r\n    <br>\r\n    \r\n    <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Descrição</mat-label>\r\n        <input selected required formControlName=\"descricao\" name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 100px;margin-left: 10px;\">\r\n        <mat-label>Unidade</mat-label>\r\n        <mat-select formControlName=\"unidadeId\" selected required>\r\n            <mat-option ></mat-option>\r\n            <mat-option [value]=\"uni.id\" *ngFor=\"let uni of unidades\">{{uni.sigla}}</mat-option>\r\n            \r\n            <!-- <mat-option *ngFor=\"let cargo of cargos\" [value]=\"cargo.id\">{{cargo.nome}}\r\n            </mat-option> -->\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 45%;margin-left: 10%;\">\r\n        <mat-label>Categoria</mat-label>\r\n        <mat-select  selected name=\"cargo\" required>\r\n            <mat-option value=\"\"></mat-option>\r\n            <mat-option >Blusa</mat-option>\r\n        </mat-select>\r\n    </mat-form-field> -->\r\n\r\n    <br>\r\n\r\n    \r\n    <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n        <mat-label>Preço venda</mat-label>\r\n        <input currencyMask [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" \r\n        formControlName=\"preco\" type=\"text\"\r\n        selected required name=\"preco\" matInput placeholder=\"Nome\">\r\n        <span matPrefix>R$&nbsp;</span>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 5% \">\r\n        <mat-label>Preço de custo</mat-label>\r\n        <input currencyMask [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" \r\n        formControlName=\"precoCusto\" type=\"text\"\r\n        selected required name=\"precoCusto\" matInput placeholder=\"Nome\">\r\n        <span matPrefix>R$&nbsp;</span>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 5%\">\r\n        <mat-label>Quantidade</mat-label>\r\n        <input formControlName=\"quantidade\" type=\"number\"  onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" \r\n        selected required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n    \r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 5%\">\r\n        <mat-label>Nível mínimo</mat-label>\r\n        <input formControlName=\"nivelMinimo\" type=\"number\" onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" \r\n        selected required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n    \r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 2%;\">\r\n        <mat-label>Cargo/Função</mat-label>\r\n        <mat-select formControlName=\"cargo\" selected name=\"cargo\" required>\r\n            <mat-option value=\"\"></mat-option>\r\n            <mat-option >unidade</mat-option>\r\n        </mat-select>\r\n    </mat-form-field> -->\r\n\r\n    <!-- descrição\r\n    preço\r\n    quantidade \r\n    nível mínimo\r\n    medida -->\r\n\r\n    <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n        <mat-label>Observações</mat-label>\r\n        <textarea formControlName=\"observacoes\" maxlength=\"200\" name=\"observacoes\" matInput></textarea>\r\n    </mat-form-field>\r\n    \r\n    <!-- <div *ngIf=\"showMensagem\" class=\"alert alert-danger\" role=\"alert\"\r\n        style=\"text-align: center; vertical-align: middle; position:relative; height: 45px; float:left;margin-bottom: 20px;\">\r\n        {{mensagem}}\r\n    </div> -->\r\n\r\n    <button type=\"submit\" color=\"primary\" mat-raised-button disabled=\"false\" style=\"float:right;margin-bottom: 0px;margin-left: 10px;\"\r\n        [disabled]=\"!produtoForm.valid\">\r\n        Salvar\r\n    </button>\r\n\r\n    <!-- <button style=\"float:right;margin-bottom: 10px;\" mat-raised-button\r\n        [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button> -->\r\n\r\n    <!-- <div mat-dialog-actions>\r\n        <button mat-raised-button (click)=\"onOkClick()\">Ok</button>\r\n        <button mat-raised-button [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button>\r\n    </div> -->\r\n\r\n\r\n</form>\r\n<!-- \r\nNome\r\ndescrição\r\npreço\r\nquantidade \r\nnível mínimo\r\nmedida\r\nObeservações -->","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { Parametros } from \"src/app/Adm/colaboradores/colaboradores.component\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { ConfirmAcaoModalComponent } from \"src/app/_shared/components/ConfirmarAcao/confirm-acao.component\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { ConfirmAcaoModalConfig } from \"src/app/_shared/models/modal.config\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { InfoFinancComponentModal, OpenInfoComponentModal } from \"../service/modal.config\";\r\nimport { PedagogicoService } from \"../service/pedagogico.service\";\r\nimport { BoletimAlunoComponent } from \"./BoletimAluno/boletimaluno.component\";\r\nimport { CreateMatriculaComponent } from \"./CreateModal/creatematricula.component\";\r\nimport { InfoCadastraisComponent } from \"./InfoCad/info-cadastrais.component\";\r\nimport { InfoFinancPedagComponent } from \"./infoFinancas/infofinanc.component\";\r\nimport { InfosComponent } from \"./informacoes/infos.component\";\r\nimport { AlunoMatriculaComponent } from \"./matricula/alunomatricula.component\";\r\n\r\n\r\n@Component({\r\n    selector: \"matricula-app\",\r\n    templateUrl: './matricula.component.html',\r\n    styleUrls: ['./matricula.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class MatriculaComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl\r\n\r\n    showMessageNoAluno = false\r\n    mensagem: string = \"\";\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public pesquisarForm: FormGroup\r\n    // length: number;\r\n    length: number = 0\r\n    pageSize: number = 5;\r\n    pageEvent: PageEvent;\r\n    pageIndexNumber: number = 0;\r\n    currentPage = 1\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    // formSubmitted: boolean = false;\r\n    // showTable: boolean = false;\r\n    // paginationInfo: IPager;\r\n    // showMessage: boolean = false;\r\n    public spinnerSearch = 'hidden'\r\n    params: Parametros = new Parametros()\r\n    listAlunos: any[] = new Array<any>();\r\n\r\n\r\n    public testeForm: FormGroup\r\n\r\n\r\n\r\n    constructor(\r\n        //private _snackBar: MatSnackBar,\r\n        private _helpers: HelpersService,\r\n        private _pedagService: PedagogicoService,\r\n        private _modal: MatDialog,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient\r\n    ) {\r\n        this.pesquisarForm = _fb.group({\r\n            nome: ['', [Validators.required]],\r\n            email: ['', [Validators.required]],\r\n            cpf: ['', [Validators.required]],\r\n            ativo: [false],\r\n            todasUnidades: [false],\r\n            todosAlunos: [false]\r\n        });\r\n\r\n        this.pesquisarForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n                // console.log('form changed to:', form);\r\n                //if (this.tokenInfo['role'] != 'SuperAdm') {\r\n\r\n                if (this.pesquisarForm.get('nome').value == '' &&\r\n                    this.pesquisarForm.get('email').value == '' &&\r\n                    this.pesquisarForm.get('cpf').value == '') {\r\n                    //  console.log('false valid')\r\n\r\n                    this.pesquisarForm.controls['nome'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['email'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['cpf'].setErrors({ required: true });\r\n                    // this.pesquisarForm.setErrors({required: true});\r\n                } else {\r\n                    //   console.log('true valid')\r\n                    this.pesquisarForm.controls['nome'].setErrors(null);\r\n\r\n                    this.pesquisarForm.controls['email'].setErrors(null)\r\n\r\n                    this.pesquisarForm.controls['cpf'].setErrors(null);\r\n\r\n                    //this.pesquisarForm.setErrors({required: false});\r\n\r\n\r\n                }\r\n\r\n                // } else {\r\n                //     this.pesquisarForm.controls['nome'].setErrors(null);\r\n\r\n                //     this.pesquisarForm.controls['email'].setErrors(null)\r\n\r\n                //     this.pesquisarForm.controls['cpf'].setErrors(null);\r\n                // }\r\n\r\n\r\n            }\r\n\r\n\r\n        );\r\n\r\n        this.testeForm = _fb.group({\r\n            nome: ['', [Validators.required]],\r\n            child: this._fb.group({\r\n                nome: ['', [Validators.required]]\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    get disabledTest() {\r\n\r\n        return !this.testeForm.valid\r\n\r\n    }\r\n\r\n    get searchTodosAlunosButton() {\r\n\r\n        // console.log(this.tokenInfo['role'] != 'SuperAdm')\r\n        return this.tokenInfo['role'] == 'SuperAdm'\r\n    }\r\n\r\n    salvarTeste() {\r\n\r\n        this._http.post(`${this.baseUrl}/teste/salvarteste`, this.testeForm.value, {})\r\n            .subscribe(resp => {\r\n\r\n            },\r\n                (error) => { })\r\n    }\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.testeForm.get('child').disable()\r\n        //this.getColaboradores(1, this.pageSize);\r\n    }\r\n    // pageIndex = 0\r\n\r\n\r\n    getColaboradores(actualPage: number, pageSize: number) {\r\n\r\n    }\r\n\r\n    clicar(evento: any) {\r\n\r\n    }\r\n\r\n    paginationChange(pageEvt: PageEvent) {\r\n      //  console.log(pageEvt)\r\n\r\n    }\r\n\r\n    // GetAll(event?: any,getAll?:any) {\r\n\r\n    //     //this.pesquisar(event)\r\n\r\n    //     this.showMessageNoAluno = false\r\n    //     this.spinnerSearch = 'visible'\r\n    //     if (event != undefined) {\r\n    //         this.currentPage = event.pageIndex + 1\r\n    //     } else {\r\n    //         this.currentPage = 1\r\n    //     }\r\n    //     this._pedagService.getAllAlunos(this.pageSize, this.currentPage, this.pesquisarForm.value)\r\n    //         .subscribe(\r\n    //             sucesso => { this.processarSucesso(sucesso, event) },\r\n    //             falha => { this.processarFalha(falha) }\r\n    //         );\r\n\r\n\r\n    // }\r\n\r\n    pesquisar(event?: any) {\r\n\r\n      //  console.log(event)\r\n        this.showMessageNoAluno = false\r\n\r\n        if (this.pesquisarForm.valid || this.tokenInfo['role'] == 'SuperAdm') {\r\n\r\n            this.spinnerSearch = 'visible'\r\n\r\n            if (event != undefined) {\r\n                this.currentPage = event.pageIndex + 1\r\n            } else {\r\n                this.currentPage = 1\r\n            }\r\n\r\n\r\n            this._pedagService.getAlunos(this.pageSize, this.currentPage, this.pesquisarForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.processarSucesso(sucesso, event) },\r\n                    falha => { this.processarFalha(falha) }\r\n                );\r\n        }\r\n    }\r\n\r\n    processarSucesso(response: any, event?: any) {\r\n      //  console.log(response)\r\n        this.listAlunos = Object.assign([], response['data']);\r\n\r\n        this.length = response['totalItemsInDatabase']\r\n\r\n        this.spinnerSearch = 'hidden'\r\n        if (event != undefined) {\r\n            this.pageIndexNumber = (event.pageIndex * this.pageSize)\r\n        } else {\r\n            this.pageIndexNumber = 0\r\n\r\n            if (this.paginator != undefined) {\r\n                this.paginator.firstPage();\r\n            }\r\n        }\r\n    }\r\n\r\n    processarFalha(fail: any) {\r\n\r\n        if (fail['status'] == 404) {\r\n            this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n            this.showMessageNoAluno = true\r\n            this.listAlunos = new Array<any>();\r\n        }\r\n        if (fail['status'] != 404) {\r\n            this.mensagem = \"Ocorreu um erro desconhecido, por favor, procure o administrador do sistema\"\r\n            this.showMessageNoAluno = true\r\n            this.listAlunos = new Array<any>();\r\n        }\r\n\r\n        this.spinnerSearch = 'hidden'\r\n    }\r\n\r\n    deletar(aluno): void {\r\n\r\n        const dialogRef = this._modal\r\n            .open(ConfirmAcaoModalComponent, ConfirmAcaoModalConfig());\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked == true) {\r\n\r\n                this._http.delete(`https://localhost:5001/api/dev/deletar-aluno/${aluno.id}`, {})\r\n                    .subscribe(resp => {\r\n\r\n                    }, erro => {\r\n                        this._helpers.openSnackBarErrorDefault();\r\n                      //  console.log(erro)\r\n                    }, () => {\r\n                        this._helpers.openSnackBarSucesso(\"Cadastro excluído com sucesso.\")\r\n                    }\r\n\r\n                    )\r\n            }\r\n        });\r\n    }\r\n\r\n    deletarMat(mat): void {\r\n\r\n        const dialogRef = this._modal\r\n            .open(ConfirmAcaoModalComponent, ConfirmAcaoModalConfig());\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked == true) {\r\n                //  console.log(mat)\r\n                this._http.delete(`https://localhost:5001/api/dev/deletar-matricula/${mat.matriculaId}`, {})\r\n                    .subscribe(resp => {\r\n                    }, erro => {\r\n                        this._helpers.openSnackBarErrorDefault();\r\n                    }\r\n                    ), () => {\r\n                        this._helpers.openSnackBarSucesso(\"Matricula excluída com sucesso.\")\r\n                    }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    matricular(aluno) {\r\n        const dialogRef = this._modal\r\n            .open(AlunoMatriculaComponent, {\r\n                height: '235px',\r\n                width: '850px',\r\n                // autoFocus: false,\r\n                //maxHeight: '400vh',\r\n\r\n                data: { aluno: aluno },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                //clicked: \"Ok\"\r\n                //  this.openSnackBar()\r\n                this.pesquisar();\r\n                // console.log('afte close ok')\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    viewInfoCadastrais(aluno): void {\r\n        const dialogRef = this._modal\r\n            .open(InfoCadastraisComponent, {\r\n                //height: '810px',\r\n                width: '1000px',\r\n                //autoFocus: false,\r\n               // maxHeight: '400vhvh',\r\n\r\n                data: { aluno: aluno },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked == true) {\r\n                this.pesquisar();\r\n               // console.log(JSON.stringify(this.pesquisarForm.value))\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n    openMatriculaModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(CreateMatriculaComponent, {\r\n                // height: '90vh',\r\n                width: '1000px',\r\n                // autoFocus: false,\r\n                // maxHeight: '400vhvh',\r\n\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"OK\") {\r\n                //this.openSnackBar()\r\n               // console.log('afte close ok')\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    openInfoModal(aluno): void {\r\n        const dialogRef = this._modal\r\n            .open(InfosComponent, OpenInfoComponentModal(aluno));\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"OK\") {\r\n            } else if (data.clicked === \"Cancel\") {\r\n            }\r\n        });\r\n    }\r\n\r\n    // openInfoModal(aluno: Aluno): void {\r\n    //     const dialogRef = this._modal\r\n    //         .open(InfosComponent, {\r\n    //             height: '90vh',\r\n    //             width: '1000px',\r\n    //             autoFocus: false,\r\n    //             // maxHeight: '90vh',\r\n\r\n    //             data: { aluno: aluno },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n\r\n    //     dialogRef.afterClosed().subscribe((data) => {\r\n    //         if (data.clicked === \"OK\") {\r\n    //             //this.openSnackBar()\r\n    //             console.log('afte close ok')\r\n    //         } else if (data.clicked === \"Cancel\") {\r\n    //             // Do nothing. Cancel any events that navigate away from the\r\n    //             // component.\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    openInfoFinancModal(aluno: Aluno): void {\r\n        const dialogRef = this._modal\r\n            .open(InfoFinancPedagComponent, InfoFinancComponentModal(aluno));\r\n        dialogRef.afterClosed().subscribe(\r\n            data => { });\r\n\r\n\r\n        // const dialogRef = this.CreateMatriculaModal\r\n        //     .open(InfoFinancPedagComponent, {\r\n        //         height: '90vh',\r\n        //         width: '1050px',\r\n        //         autoFocus: false,\r\n\r\n\r\n        //         data: { aluno: aluno },\r\n        //         hasBackdrop: true,\r\n        //         disableClose: true\r\n        //     });\r\n\r\n        // dialogRef.afterClosed().subscribe((data) => {\r\n        //     if (data.clicked === \"OK\") {\r\n        //         this.openSnackBar()\r\n        //         console.log('afte close ok')\r\n        //     } else if (data.clicked === \"Cancel\") {\r\n\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    get podeDeletar() {\r\n        // console.log(this.tokenInfo)\r\n        return this.tokenInfo.role == 'SuperAdm'\r\n    }\r\n\r\n    openBoletimodal(aluno: Aluno): void {\r\n        const dialogRef = this._modal\r\n            .open(BoletimAlunoComponent, {\r\n                //  height: '90vh',\r\n                width: '1000px',\r\n                //  autoFocus: false,\r\n\r\n\r\n                data: { aluno: aluno },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked == true) {\r\n                // this.openSnackBar()\r\n                // console.log('afte close ok')\r\n            } else if (data.clicked == false) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    // openSnackBar() {\r\n    //     this._snackBar.open('Aluno matriculado com sucesso', '', {\r\n    //         horizontalPosition: 'center',\r\n    //         verticalPosition: 'top',\r\n    //         panelClass: 'green-snackbar',\r\n    //         duration: 3 * 1000,\r\n    //     });\r\n    // }\r\n\r\n    deleteColaborador(id: number) {\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface IPager {\r\n    itemsPerPage?: number;\r\n    totalItemsInDatabase?: number;\r\n    currentPage?: number;\r\n    totalPages?: number;\r\n    items?: number;\r\n}\r\n\r\nfunction InfoComponent(InfoComponent: any, arg1: { height: string; width: string; autoFocus: false; maxHeight: string; data: { Hello: string; }; hasBackdrop: true; disableClose: true; }) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n","<div class=\"container\" style=\"width: 95%;padding-top: 20px; \">\r\n<!-- \r\n    <div>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"cadastrar/matricular\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button style=\"\" (click)=\"openMatriculaModal()\" mat-icon-button>\r\n                <mat-icon>person_add_alt</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div> -->\r\n    <!-- <button type=\"submit\" class=\"bg-success\" (click)=\"openMatriculaModal()\" mat-raised-button disabled=\"false\"\r\n        style=\"margin-top: 20px;\">\r\n        cadastrar/matricular aluno\r\n    </button> -->\r\n\r\n\r\n    <br>\r\n    <!-- <div style=\"bottom: 0; float:right;\">\r\n       \r\n    </div>\r\n    <form [formGroup]=\"testeForm\" class=\"form-inline siteForm\"\r\n        style=\"margin-top: 5px;display: inline-block\">       \r\n\r\n            <mat-form-field  appearance=\"standard\">\r\n                <mat-label>Nome</mat-label>\r\n                <input selected formControlName=\"nome\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field formGroupName=\"child\" class=\"siteForm-select\" style=\"margin-left: 10px;\">\r\n                <mat-label>E-mail</mat-label>\r\n                <input selected formControlName=\"nome\" matInput placeholder=\"digite um nome\"\r\n                value=\"testando\"\r\n                >\r\n            </mat-form-field>\r\n\r\n            <button type=\"button\"  [disabled]=\"disabledTest\" mat-raised-button (click)=\"salvarTeste()\"\r\n            color=\"primary\" style=\"bottom: 0; float:right;margin-bottom: 0px;margin-left: 10px;\">\r\n            Confirmar matrícula\r\n        </button>\r\n\r\n    </form>\r\n\r\n\r\n    <div> {{ testeForm.value | json }}</div> -->\r\n\r\n\r\n    <!-- <form [formGroup]=\"myForm\" (ngSubmit)=\"send()\">\r\n        <input type=\"text\" name=\"name\" formControlName=\"name\">\r\n        <div formGroupName=\"child\">\r\n           <input type=\"text\" name=\"id\" formControlName=\"id\">\r\n           <input type=\"text\" name=\"name\" formControlName=\"name\">\r\n        </div>\r\n        <button class=\"btn btn-primary\">send</button>\r\n      </form> -->\r\n\r\n\r\n    <!-- <div>\r\n\r\n\r\n    </div> -->\r\n    <form [formGroup]=\"pesquisarForm\" (ngSubmit)=\"pesquisar()\" class=\"form-inline siteForm\"\r\n        style=\"margin-top: 5px;display: inline-block\">\r\n        <span style=\"font-size: 0.9em;font-style: italic;\">Digite ao menos um dos campos para\r\n            pesquisar pelo aluno:</span>\r\n        <div class=\"form-row align-items-center divSiteForm\">\r\n\r\n            <mat-form-field appearance=\"standard\">\r\n                <mat-label>Nome</mat-label>\r\n                <input selected formControlName=\"nome\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"margin-left: 10px;\">\r\n                <mat-label>E-mail</mat-label>\r\n                <input selected formControlName=\"email\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"margin-left: 10px;\">\r\n                <mat-label>CPF</mat-label>\r\n                <input selected mask=\"000.000.000-00\" formControlName=\"cpf\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button type=\"submit\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n\r\n                <!-- <i *ngIf=\"searchTodosAlunosButton\" style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"GetAll()\" type=\"button\" mat-icon-button>\r\n                        <mat-icon>all_inclusive</mat-icon>\r\n                    </button>\r\n                </i> -->\r\n            </span>\r\n            <br>\r\n            <span style=\"font-size: 0.9em;font-style: italic;\">\r\n                incluir inativos:\r\n            </span>\r\n            <mat-checkbox formControlName=\"ativo\" [required]=\"false\" color=\"primary\"></mat-checkbox>\r\n\r\n            <ng-container *ngIf=\"searchTodosAlunosButton\">\r\n\r\n                <span style=\"margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n                    todas unidades:\r\n                </span>\r\n                <mat-checkbox formControlName=\"todasUnidades\" [required]=\"false\" color=\"primary\"></mat-checkbox>\r\n            </ng-container>\r\n\r\n            <!-- <ng-container *ngIf=\"searchTodosAlunosButton\">\r\n\r\n                <span style=\"margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n                    todos Alunos:\r\n                </span>\r\n                <mat-checkbox formControlName=\"todosAlunos\" [required]=\"false\" color=\"primary\"></mat-checkbox>\r\n            </ng-container> -->\r\n        </div>\r\n\r\n    </form>\r\n\r\n    <div class=\"card-header card-msg-response\" unselectable=\"on\" *ngIf=\"showMessageNoAluno\">{{mensagem}}</div>\r\n\r\n    <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"spinnerSearch\" @rowHighlight style=\"margin:0px\"\r\n        mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n\r\n    <div *ngIf=\"listAlunos.length > 0\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n        margin-top: 10px;\r\n        box-shadow: 0 0 1em rgb(172, 170, 170);\r\n        background-color: rgb(227, 240, 227);\">\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Alunos</h4>\r\n            <p class=\"card-category\">{{length}} alunos localizados.</p>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 380px;position: relative;\">\r\n                <table @rowHighlight color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                text-align:left; \r\n                vertical-align: middle;\r\n                border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 26%;font-size:1em;\r\n                                vertical-align: middle;\r\n                                text-align:left;\r\n                border-top: 0px; font-weight: 400;\">NOME</th>\r\n\r\n                            <th style=\"width: 10%;font-size:1em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">Nº MAT.</th>\r\n\r\n                            <th style=\"width: 15%;font-size:1em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">CPF</th>\r\n\r\n\r\n\r\n                            <th style=\"width: 11%;font-size:1em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">UNIDADE</th>\r\n\r\n                            <th style=\"width: 5%;font-size:1em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">ATIVO</th>\r\n\r\n                            <th style=\"width: 31%;font-size:1em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\"></th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let item of listAlunos;let i = index;\" @rowHighlight>\r\n                            <td style=\"height: 65px; text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{item.numeroMatricula || 'não matriculado'}}</td>\r\n                            <!-- <td style=\"text-align:center;vertical-align: middle;\">não matriculado</td> -->\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.cpf}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.sigla}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.ativo ? 'sim' : 'não'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                                <ng-container *ngIf=\"item.numeroMatricula != null;else semMat\">\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"informações financeiras\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openInfoFinancModal(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>request_quote</mat-icon>\r\n                                        </button>\r\n\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"informações\"\r\n                                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openInfoModal(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>info</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"matricular aluno em um curso\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"matricular(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>read_more</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"boletim escolar\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openBoletimodal(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>school</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i *ngIf=\"podeDeletar\" style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"deletar registro\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"deletarMat(item)\" \r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>delete_outline</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                </ng-container>\r\n\r\n                                <ng-template #semMat>\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"informações cadastrais\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"viewInfoCadastrais(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>search</mat-icon>\r\n                                        </button>\r\n\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"matricular aluno em um curso\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"matricular(item)\" [disabled]=\"!item.ativo\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>read_more</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i *ngIf=\"podeDeletar\" style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"deletar registro\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"deletar(item)\" \r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>delete_outline</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n                                </ng-template>\r\n\r\n                            </td>\r\n\r\n                        </tr>\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n\r\n            </div>\r\n            <mat-paginator *ngIf=\"length > 5\" style=\" \r\n            background-color: rgb(227, 240, 227);\r\n            bottom: 0px;\r\n            right: 0px;\" [length]=\"length\" [pageSize]=\"pageSize\" hidePageSize=\"true\"\r\n                (page)=\"pageEvent = pesquisar($event)\">\r\n            </mat-paginator>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { HelpersService } from \"../helpers/helpers.component\";\r\n\r\n@Component({\r\n    selector: 'confirm-modal',\r\n    templateUrl: './confirm-modal.component.html',\r\n    styleUrls: ['./confirm-modal.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ConfirmModalComponent implements OnInit {\r\n\r\n    public msg: string = ''\r\n    public url: string = ''\r\n    public hidden = 'hidden'\r\n    public disabledSaveButton = false\r\n    constructor(\r\n        //private _modal: MatDialog,\r\n        private _helper: HelpersService,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<ConfirmModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n    }\r\n    \r\n    ngOnInit() {\r\n        this.msg = this.data['msg']\r\n        this.url = this.data['url']\r\n    }\r\n\r\n    confirmar() {\r\n        this.hidden = 'visible'\r\n        this.disabledSaveButton = true\r\n        this._http.delete(`${this.url}`)\r\n            .subscribe(response => {\r\n\r\n            },\r\n                (error) => { \r\n                    //console.log(error)\r\n                    this.dialogRef.close({ clicked: false });\r\n                 },\r\n                () => {\r\n                    //this._helper.openSnackBar(\"Professor excluído com sucesso.\")\r\n                    this.dialogRef.close({ clicked: true });\r\n                }\r\n            )\r\n    }\r\n\r\n    cancelar() {\r\n        this.dialogRef.close({ clicked: false });\r\n    }\r\n\r\n\r\n\r\n\r\n}","<div class=\"container\">\r\n\r\n    <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n\r\n        <div style=\"font-size: 1.2em;\"></div>\r\n\r\n        <div style=\"font-size: 1.1em;\">\r\n            {{msg}}\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <mat-progress-bar [style.visibility]=\"hidden\" @rowHighlight mode=\"query\"></mat-progress-bar>\r\n\r\n    <div>\r\n        <i style=\"margin-left: 5px;float: left;margin-left: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"confirmar\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n            <button (click)=\"confirmar()\" [disabled]=\"disabledSaveButton\" style=\"color: green;\" mat-icon-button>\r\n                <mat-icon>done</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <i style=\"margin-left: 5px;float: left;margin-left: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"cancelar\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n            <button (click)=\"cancelar()\" [disabled]=\"disabledSaveButton\" style=\"color: red;\" mat-icon-button>\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n    </div>\r\n\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { AfterViewInit, Component, Inject, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { InfoDia, ListaPresencaDto } from \"../../Pedag-Models/infodia.model\";\r\nimport { AulaEditModalConfig, ObsTurmaModalConfig, OpenCalendarioPresencaomponentModal } from \"../../service/modal.config\";\r\nimport { ObservacoesTurmaModal } from \"./AulaDetalhe/obsturmamodal.component\";\r\nimport { ObservacoesTurmaEditModal } from \"./AulaDetalheEdit/obsturmamodal-edit.component\";\r\nimport { AulaEditarModal } from \"./AulaEditar/aulaeditar.component\";\r\nimport { CalendPresencaComponent } from \"./CalendPresenca/cal-presenca.component\";\r\nimport { CalendPresencaEditComponent } from \"./CalendPresencaEdit/cal-presencaedit.component\";\r\n\r\n\r\n@Component({\r\n    selector: 'calendarioturma-app',\r\n    templateUrl: './calendarioturma.component.html',\r\n    styleUrls: ['./calendarioturma.component.scss'],\r\n    animations: [HighlightTrigger]\r\n\r\n})\r\n\r\nexport class CalendarioTurmaComponent implements OnInit {\r\n\r\n    private _baseUrl = environment.baseUrl\r\n    public showSpin = false\r\n    public initProgressBar = 'visible'\r\n    public ShowTableHeader = false\r\n    public calendarios: any[] = new Array<any>()\r\n\r\n    length: number = 0\r\n    pageSize: number = 10;\r\n    pageEvent: PageEvent;\r\n    pageIndexNumber: number = 0;\r\n    currentPage = 1\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n\r\n\r\n    public pesquisarForm: FormGroup\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog,\r\n        public _dialogRef: MatDialogRef<CalendarioTurmaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.pesquisarForm = _fb.group({\r\n            nome: [''],\r\n            email: [''],\r\n            cpf: [''],\r\n            ativo: [false],\r\n            todasUnidades: [false],\r\n            todosAlunos: [false],\r\n            primeiraReq: [false]\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n\r\n        //console.log(this.data['turma'])\r\n\r\n        // this.GetCalendarioTurma(this.data['turma'].id);\r\n        this.pesquisar(undefined, true)\r\n    }\r\n\r\n    private GetCalendarioTurma(turmaId: number) {\r\n\r\n        //this._http.get(`${this._baseUrl}/pedag/turma/calendario/${turmaId}`) //calendario-pagination\r\n        this._http.get(`${this._baseUrl}/pedag/turma/calendario-pagination/${turmaId}`)\r\n            .subscribe(resp => {\r\n                //console.log(resp)\r\n                this.calendarios = Object.assign([], resp['calends'])\r\n            },\r\n                (error) => {\r\n                    // console.log(error)\r\n                    this.showSpin = true\r\n                },\r\n                () => {\r\n                    this.ShowTableHeader = true\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showSpin = true\r\n                })\r\n    }\r\n\r\n    pesquisar(event?: any, firstConsult?: boolean) {\r\n\r\n        //console.log(event)\r\n        this.initProgressBar = 'visible'\r\n        // this.showMessageNoAluno = false\r\n\r\n        //if (this.pesquisarForm.valid || this.tokenInfo['role'] == 'SuperAdm') {\r\n\r\n        //  this.spinnerSearch = 'visible'\r\n\r\n        if (event != undefined) {\r\n            this.currentPage = event.pageIndex + 1\r\n        } else {\r\n            this.currentPage = 1\r\n        }\r\n\r\n        this.pesquisarForm.get('primeiraReq').setValue(firstConsult)\r\n\r\n        var formJson = JSON.stringify(this.pesquisarForm.value)\r\n        // let path = `/colaboradores/pesquisar/?itemsPerPage=` + pageSize + `&currentPage=${currentPage}&paramsJson=${formJson}`\r\n        this._http.get(`${this._baseUrl}/pedag/turma/calendario-pagination/?turmaId=${this.data['turma'].id}&itemsPerPage=${this.pageSize}&currentPage=${this.currentPage}&paramsJson=${formJson}`)\r\n            .subscribe(\r\n                sucesso => { this.processarSucesso(sucesso, event, firstConsult) },\r\n                fallha => { this.processarFalha(fallha) }\r\n            )\r\n    }\r\n    initialPage = 0\r\n    processarSucesso(resp: any, event?: any, firstConsult?: any) {\r\n        //console.log(resp['result'].data)\r\n        // console.log(resp['result'].currentPage)\r\n        // console.log(resp['result'].itemsPerPage)\r\n        // console.log(resp['result'].totalItemsInDatabase)\r\n        this.calendarios = Object.assign([], resp['result'].data)\r\n\r\n\r\n\r\n        //OLD\r\n        // console.log(response)\r\n        // this.listAlunos = Object.assign([], response['data']);\r\n\r\n        //this.length = resp['result'].totalItemsInDatabase\r\n\r\n        // this.spinnerSearch = 'hidden'\r\n        if (event != undefined) {\r\n            this.pageIndexNumber = (event.pageIndex * this.pageSize)\r\n        } else {\r\n            this.pageIndexNumber = resp['result'].currentPage\r\n            //  console.log(this.paginator)\r\n            this.initialPage = resp['result'].currentPage - 1\r\n            if (this.paginator != undefined) {\r\n                //this.paginator.pageIndex = resp['result'].currentPage -1\r\n                //this.initialPage = resp['result'].currentPage -1\r\n                //this.paginator.hasNextPage()\r\n                ///this.paginator.firstPage();\r\n            }\r\n        }\r\n        this.length = resp['result'].totalItemsInDatabase\r\n        this._dialogRef.addPanelClass('pedagcalendar-class')\r\n        this.ShowTableHeader = true\r\n        this.initProgressBar = 'hidden'\r\n        this.showSpin = true\r\n\r\n    }\r\n\r\n    // ngAfterViewInit() {\r\n    //     setTimeout(() => {\r\n    //      this.paginator.pageIndex = this.initialPage;\r\n    //     }, 10);\r\n    //   }\r\n\r\n    processarFalha(fail: any) {\r\n        this.showSpin = true\r\n        this.initProgressBar = 'hidden'\r\n        // if (fail['status'] == 404) {\r\n        //     this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n        //     this.showMessageNoAluno = true\r\n        //     this.listAlunos = new Array<any>();\r\n        // }\r\n        // if (fail['status'] != 404) {\r\n        //     this.mensagem = \"Ocorreu um erro desconhecido, por favor, procure o administrador do sistema\"\r\n        //     this.showMessageNoAluno = true\r\n        //     this.listAlunos = new Array<any>();\r\n        // }\r\n\r\n        // this.spinnerSearch = 'hidden'\r\n    }\r\n\r\n    concluirAula() {\r\n        // calendárioId\r\n    }\r\n\r\n    get podeEditar() {\r\n\r\n        return this.tokenInfo.role == 'SuperAdm'\r\n    }\r\n\r\n    public GetNotaAulaEdit(caled): void {\r\n        const dialogRef = this._modal\r\n            .open(ObservacoesTurmaEditModal, ObsTurmaModalConfig(caled));\r\n        dialogRef.afterClosed().subscribe(data => {\r\n        });\r\n    }\r\n\r\n    public GetNotaAula(caled): void {\r\n        const dialogRef = this._modal\r\n            .open(ObservacoesTurmaModal, ObsTurmaModalConfig(caled));\r\n        dialogRef.afterClosed().subscribe(data => {\r\n        });\r\n    }\r\n\r\n    openPresencaEdit(calend: any): void {\r\n        const dialogRef = this._modal\r\n            .open(CalendPresencaEditComponent, OpenCalendarioPresencaomponentModal(calend));\r\n        dialogRef.afterClosed().subscribe(data => {\r\n        });\r\n    }\r\n\r\n    openPresenca(calend: any): void {\r\n        const dialogRef = this._modal\r\n            .open(CalendPresencaComponent, OpenCalendarioPresencaomponentModal(calend));\r\n        dialogRef.afterClosed().subscribe(data => {\r\n        });\r\n    }\r\n\r\n    public EditAula(caled): void {\r\n        const dialogRef = this._modal\r\n            .open(AulaEditarModal, AulaEditModalConfig(caled));\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data['result'] == true) {\r\n                let index = this.calendarios.findIndex((obj => obj.id == data['aula'].id));\r\n                this.calendarios[index] = data['aula']\r\n                // console.log(this.calendarios[index])\r\n\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n","<!--\r\n<div style=\"font-size: 1.2em;position: sticky;z-index: 9; padding-top: 20px;\r\nbackground-color: rgb(252, 253, 255);\r\ntop: 0;\">Calendario\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n\r\n    <hr>\r\n    <div style=\"font-size: 0.8em;margin-top: 10px;\">\r\n        {{data['turma'].descricao }} - {{ data['turma'].identificador}}\r\n    </div>\r\n\r\n    <mat-progress-bar style=\"margin-top: 5px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n    <hr>\r\n    <div *ngIf=\"ShowTableHeader\" class=\"table-responsive table-calend-top\" style=\"position: relative;\">\r\n        <table style=\"margin-bottom: 0px; padding: 0px;\" class=\"table\">\r\n          \r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width: 3.5%; font-size: 0.7em;\r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n\r\n                    <th style=\"width: 8%;font-size: 0.7em;\r\n                    vertical-align: middle; \r\n                    text-align:left;\r\n                     border-top: 0px; font-weight: 400;\">DIA</th>\r\n\r\n                    <th style=\"width: 12%;font-size: 0.7em;\r\n                    vertical-align: middle;\r\n                    text-align:center;\r\n                    border-top: 0px; font-weight: 400;\">HORÁRIO</th>\r\n\r\n                    <th style=\"width: 13%;font-size: 0.7em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">INICIADA/CONCLUÍDA</th>\r\n\r\n                    <th style=\"width: 8%;font-size: 0.7em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">SALA</th>\r\n\r\n                    <th style=\"width: 18%;font-size: 0.7em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">MATÉRIA</th>\r\n\r\n                    <th style=\"width: 25%;font-size: 0.7em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">PROFESSOR</th>\r\n\r\n                    <th style=\"width: 12.5%;font-size: 0.7em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">OBS</th>\r\n\r\n\r\n                </tr>\r\n            </thead>\r\n           \r\n        </table>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div *ngIf=\"showSpin\" class=\"table-responsive table-calend\" style=\"position: relative;min-height: 100px;\">\r\n  \r\n    <table *ngIf=\"calendarios.length > 0\" color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n       \r\n        <tbody>\r\n\r\n            <tr *ngFor=\"let cale of calendarios;let i = index;\">\r\n\r\n                <td style=\"text-align:left;vertical-align: middle;width: 2%; \">\r\n                    {{ i + 1}}\r\n                </td>\r\n                <td style=\"text-align:left;vertical-align: middle;width: 8%;\">\r\n                    {{cale.diaaula | date:'dd/MM/yyyy'}}\r\n                </td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;width: 12%;\">\r\n                    {{cale.diadasemana}}<br>{{cale.horainicial}} às {{cale.horafinal}}\r\n                </td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;width: 13%;\">\r\n\r\n                    <ng-container *datePastCheck=\"cale.diaaula;\">\r\n\r\n\r\n                        <ng-container *ngIf=\"cale.aulainiciada;else naoiniciada\">\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"aula iniciada pelo professor\" matTooltipPosition=\"above\"\r\n                                matTooltipHideDelay=\"100\">\r\n                                <mat-icon style=\"color: green;\">done</mat-icon>\r\n\r\n                            </i>\r\n                        </ng-container>\r\n                        <ng-template #naoiniciada>\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"aula não iniciado pelo professor\" matTooltipPosition=\"above\"\r\n                                matTooltipHideDelay=\"100\">\r\n                                <mat-icon style=\"color: red;\">close</mat-icon>\r\n                            </i>\r\n                        </ng-template>\r\n\r\n                        <ng-container *ngIf=\"cale.aulaconcluida;else naoconcluida\">\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"aula concluída pelo professor\" matTooltipPosition=\"above\"\r\n                                matTooltipHideDelay=\"100\">\r\n                                <mat-icon style=\"color: green;\">done</mat-icon>\r\n\r\n                            </i>\r\n                        </ng-container>\r\n                        <ng-template #naoconcluida>\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"aula não concluída pelo professor\" matTooltipPosition=\"above\"\r\n                                matTooltipHideDelay=\"100\">\r\n                                <mat-icon style=\"color: red;\">close</mat-icon>\r\n                            </i>\r\n                        </ng-template>\r\n\r\n\r\n                    </ng-container>\r\n                </td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;width: 8%;\">\r\n                    {{cale.titulo}}\r\n                </td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;width: 18%;\">\r\n                    {{cale.nome || 'livre'}}\r\n                </td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;width: 25%;\">\r\n                    {{cale.professor || 'Nenhum professor alocado'}}\r\n                </td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;width: 14%;\">\r\n                   \r\n                    <ng-container *ngIf=\"cale.podeVerRelatorioAula;\">\r\n                        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"nota da aula\"\r\n                            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                            <button [disabled]=\"showSpinner\" (click)=\"GetNotaAula(cale)\"\r\n                                style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon style=\"font-size: 1.3em;\">note_alt</mat-icon>\r\n                            </button>\r\n                        </i>\r\n\r\n                        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"lista presença\"\r\n                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <button [disabled]=\"showSpinner\" (click)=\"openPresenca(cale)\"\r\n                            style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                            <mat-icon style=\"font-size: 1.3em;\">fact_check</mat-icon>\r\n                        </button>\r\n                    </i>\r\n\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngIf=\"cale.podeVerRelatorioAula == false\">\r\n                        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"editar\"\r\n                            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                            <button (click)=\"EditAula(cale)\"  style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon style=\"font-size: 1.3em;\">edit</mat-icon>\r\n                            </button>\r\n                        </i>\r\n                        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"\"\r\n                            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                            <button disabled style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon style=\"font-size: 1.3em;\">note_alt</mat-icon>\r\n                            </button>\r\n                        </i>\r\n                        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"\"\r\n                            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                            <button disabled style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon style=\"font-size: 1.3em;\">note_alt</mat-icon>\r\n                            </button>\r\n                        </i>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngIf=\"cale.podeVerRelatorioAula == null\">\r\n                        aguarde a conslusão da aula de hoje...\r\n                    </ng-container>\r\n                </td>\r\n\r\n\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n   \r\n</div>\r\n-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div style=\"font-size: 1.2em;position: sticky;z-index: 9; padding-top: 20px;\r\nbackground-color: rgb(252, 253, 255);\r\ntop: 0;\">Calendario\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n\r\n    <hr>\r\n    <div style=\"font-size: 0.8em;margin-top: 10px;\">\r\n        {{data['turma'].descricao }} - {{ data['turma'].identificador}}\r\n    </div>\r\n\r\n    <mat-progress-bar style=\"margin-top: 15px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n    <hr>\r\n    <div *ngIf=\"ShowTableHeader\" class=\"table-responsive table-calend-top\" style=\"position: relative;\">\r\n        <table style=\"margin-bottom: 0px; padding: 0px;\" class=\"table\">\r\n\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width: 3.5%; font-size: 0.7em;\r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n\r\n                    <th style=\"width: 8%;font-size: 0.7em;\r\n                    vertical-align: middle; \r\n                    text-align:left;\r\n                     border-top: 0px; font-weight: 400;\">DIA</th>\r\n\r\n                    <th style=\"width: 12%;font-size: 0.7em;\r\n                    vertical-align: middle;\r\n                    text-align:center;\r\n                    border-top: 0px; font-weight: 400;\">HORÁRIO</th>\r\n\r\n                    <th style=\"width: 13%;font-size: 0.7em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">INICIADA/CONCLUÍDA</th>\r\n\r\n                    <th style=\"width: 8%;font-size: 0.7em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">SALA</th>\r\n\r\n                    <th style=\"width: 18%;font-size: 0.7em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">MATÉRIA</th>\r\n\r\n                    <th style=\"width: 25%;font-size: 0.7em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">PROFESSOR</th>\r\n\r\n                    <th style=\"width: 12.5%;font-size: 0.7em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">OBS</th>\r\n\r\n\r\n                </tr>\r\n            </thead>\r\n            <!-- <tbody *ngIf=\"false\"></tbody> -->\r\n        </table>\r\n    </div>\r\n\r\n</div>\r\n<div *ngIf=\"showSpin\">\r\n\r\n    <div class=\"table-responsive table-calend\" style=\"position: relative;min-height: 100px;\">\r\n        <!-- <mat-spinner *ngIf=\"showSpin\" @rowHighlight [diameter]=\"100\" style=\"margin-left: 450px;\">\r\n    </mat-spinner> -->\r\n        <table *ngIf=\"calendarios.length > 0\" color=\"primary\" style=\"height: 480px; margin-bottom: 0px;\" class=\"table\">\r\n            <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n            <!-- <thead>\r\n            <tr>\r\n                <th style=\"width: 3.5%; \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n\r\n                <th style=\"width: 8%;\r\n                    vertical-align: middle; \r\n                    text-align:left;\r\n                     border-top: 0px; font-weight: 400;\">DIA</th>\r\n\r\n                <th style=\"width: 12%;\r\n                    vertical-align: middle;\r\n                    text-align:center;\r\n                    border-top: 0px; font-weight: 400;\">HORÁRIO</th>\r\n\r\n                <th style=\"width: 13%;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">INICIADA/CONCLUÍDA</th>\r\n\r\n                <th style=\"width: 8%;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">SALA</th>\r\n\r\n                <th style=\"width: 18%;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">MATÉRIA</th>\r\n\r\n                <th style=\"width: 25%;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">PROFESSOR</th>\r\n\r\n                <th style=\"width: 12.5%;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">OBS</th>\r\n\r\n\r\n            </tr>\r\n        </thead> -->\r\n            <tbody>\r\n\r\n                <tr *ngFor=\"let cale of calendarios;let i = index;\">\r\n\r\n                    <td style=\"text-align:left;vertical-align: middle;width: 2%;\">\r\n                        {{(i + 1)+(pageIndexNumber)}}\r\n                    </td>\r\n                    <td style=\"text-align:left;vertical-align: middle;width: 7%;\">\r\n                        {{cale.diaaula | date:'dd/MM/yyyy'}}\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;width: 10%;\">\r\n                        {{cale.diadasemana}}<br>{{cale.horainicial}} às {{cale.horafinal}}\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;width: 13%;\">\r\n\r\n                        <ng-container *datePastCheck=\"cale.diaaula;\">\r\n\r\n\r\n                            <ng-container *ngIf=\"cale.aulainiciada;else naoiniciada\">\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"aula iniciada pelo professor\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <mat-icon style=\"color: green;\">done</mat-icon>\r\n\r\n                                </i>\r\n                            </ng-container>\r\n                            <ng-template #naoiniciada>\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"aula não iniciado pelo professor\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <mat-icon style=\"color: red;\">close</mat-icon>\r\n                                </i>\r\n                            </ng-template>\r\n\r\n                            <!-- <span> / </span> -->\r\n\r\n                            <ng-container *ngIf=\"cale.aulaconcluida;else naoconcluida\">\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"aula concluída pelo professor\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <mat-icon style=\"color: green;\">done</mat-icon>\r\n\r\n                                </i>\r\n                            </ng-container>\r\n                            <ng-template #naoconcluida>\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"aula não concluída pelo professor\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <mat-icon style=\"color: red;\">close</mat-icon>\r\n                                </i>\r\n                            </ng-template>\r\n\r\n\r\n                        </ng-container>\r\n\r\n                        <!-- <ng-template #testando>teste</ng-template> -->\r\n\r\n\r\n                        <!-- {{cale.aulainiciada}} {{cale.aulaconcluida}} -->\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;width: 8%;\">\r\n                        {{cale.titulo}}\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;width: 18%;\">\r\n                        {{cale.nome || 'livre'}}\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;width: 25%;\">\r\n                        {{cale.professor || 'Nenhum professor alocado'}}\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;width: 17%;\">\r\n\r\n                        <!-- <ng-container *datePastCheck=\"cale.diaaula;\"> -->\r\n                        <ng-container *ngIf=\"cale.podeVerRelatorioAula;\">\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"nota da aula\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button [disabled]=\"showSpinner\" (click)=\"GetNotaAula(cale)\"\r\n                                    style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.3em;\">note_alt</mat-icon>\r\n                                </button>\r\n                            </i>\r\n\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"lista presença\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button [disabled]=\"showSpinner\" (click)=\"openPresenca(cale)\"\r\n                                    style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.3em;\">fact_check</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                        <ng-container *ngIf=\"podeEditar\">\r\n                            |\r\n\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"editar nota da aula\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button [disabled]=\"showSpinner\" (click)=\"GetNotaAulaEdit(cale)\"\r\n                                    style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.3em;\">note_alt</mat-icon>\r\n                                </button>\r\n                            </i>\r\n\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"editar lista presença\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button [disabled]=\"showSpinner\" (click)=\"openPresencaEdit(cale)\"\r\n                                    style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.3em;\">fact_check</mat-icon>\r\n                                </button>\r\n                            </i>\r\n\r\n                        </ng-container>\r\n\r\n                        </ng-container>\r\n                        <!-- <ng-template #naoConcluida>aula não concluída</ng-template> -->\r\n\r\n                        <!-- </ng-container> -->\r\n\r\n                        <!-- TEST-->\r\n                        <ng-container *ngIf=\"cale.podeVerRelatorioAula == false\">\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"editar\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button (click)=\"EditAula(cale)\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.3em;\">edit</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button disabled style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.3em;\">note_alt</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button disabled style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.3em;\">note_alt</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                        </ng-container>\r\n\r\n                        <ng-container *ngIf=\"cale.podeVerRelatorioAula == null\">\r\n                            aguarde a conslusão da aula de hoje...\r\n                        </ng-container>\r\n                    </td>\r\n\r\n\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        <!-- <mat-spinner  @rowHighlight [diameter]=\"100\" style=\"margin-left: 20.5%;\r\n                   position: absolute;\">\r\n    </mat-spinner> -->\r\n    </div>\r\n    <mat-paginator *ngIf=\"length > 10\" \r\n    style=\"bottom: 0px;right: 0px;\" \r\n    [length]=\"length\" \r\n    [pageSize]=\"pageSize\" \r\n    [pageIndex]=\"initialPage\"\r\n    hidePageSize=\"true\" \r\n    (page)=\"pageEvent = pesquisar($event, false)\">\r\n    </mat-paginator>\r\n</div>\r\n\r\n<!-- style=\"margin-left: 42.5%;\r\n        margin-top: 10%; \r\n        position: absolute;\" \r\n    \r\n    check_circle\r\n    dangerous\r\n    -->","export class MyDate {\r\n    constructor(\r\n        public dia: string,\r\n        public mes: string,\r\n        public ano: string\r\n    ) { }\r\n\r\n    customDate() {\r\n        var data: string = `${this.dia}/${this.mes}/${this.ano}`;\r\n        return data\r\n    }\r\n}","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\n\r\n@Component({\r\n    selector: 'editcolaboradoresmodal',\r\n    templateUrl: './editcolaboradores.component.html',\r\n    styleUrls: ['./editcolaboradores.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class EditColaboradoresComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    originalColaborador: any;\r\n\r\n    public initProgressBar = 'visible'\r\n    public saveBar = 'hidden'\r\n    unidades = Unidades;\r\n    showMensagem = false\r\n    mensagem = ''\r\n    cpf = ''\r\n    showForm = false\r\n\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    cargos: any[] = new Array<any>();\r\n    ativo = true;\r\n    public colaboradorForm: FormGroup\r\n\r\n    constructor(\r\n        private _helper: HelpersService,\r\n        private _admService: AdmService,\r\n        private http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        public dialogRef: MatDialogRef<EditColaboradoresComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.colaboradorForm = _fb.group({\r\n            id: [''],\r\n            nome: ['', [Validators.required, Validators.minLength(5)]],\r\n            email: [''],\r\n            cpf: [''],\r\n            celular: [null, [Validators.required, Validators.minLength(5)]],\r\n            cargoId: ['', [Validators.required]],\r\n            unidadeId: [''],\r\n            ativo: [true, [Validators.required]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            complemento: [''],\r\n            numero: ['', [Validators.required]],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            dataCriacao: [''],\r\n            supervisorId:['']\r\n        })\r\n    }\r\n\r\n    tentando = true\r\n    get teste() {\r\n        return this.tentando\r\n    }\r\n    get desabilitar() {\r\n          \r\n            if (this.colaboradorForm.valid &&\r\n                JSON.stringify(this.originalColaborador) !=\r\n                JSON.stringify(this.colaboradorForm.value)) {\r\n    \r\n                return this.saveBar != 'hidden'\r\n            } else {\r\n                return true\r\n            }\r\n    }\r\n\r\n    ngOnInit() {       \r\n        this.getColaborador();\r\n    }\r\n\r\n    getColaborador() {\r\n        this.http.get(`${this.baseUrl}/colaboradores/Cargo/${this.data['colaborador'].id}`)\r\n            .subscribe(response => {\r\n\r\n                this.cargos = Object.assign([], response['values'])\r\n                this.colaboradorForm.patchValue(response['colaborador']);\r\n                this.originalColaborador = JSON.parse(JSON.stringify(this.colaboradorForm.value))\r\n\r\n            }, err => {\r\n                console.log(err)\r\n                this.initProgressBar = 'hidden'\r\n            },\r\n                () => {\r\n                    this.dialogRef.addPanelClass('myeditcolab-class')\r\n                    this.showForm = true\r\n                    this.initProgressBar = 'hidden'\r\n\r\n                });\r\n    }\r\n\r\n    disabledSpinner = false\r\n    edit(form: any) {\r\n      \r\n        if (this.colaboradorForm.valid) {\r\n            this.saveBar = 'visible'\r\n          \r\n            this.http.put(`${this.baseUrl}/colaboradores`, this.colaboradorForm.value, {})\r\n                .subscribe(response => {\r\n\r\n                }, err => {\r\n                    console.log(err)\r\n                    this.saveBar = 'hidden'\r\n                },\r\n                    () => {\r\n                        this._helper.openSnackBarSucesso('Colaborador editado com sucesso.')\r\n                        this.saveBar = 'hidden'\r\n                     \r\n                        this.dialogRef.close();\r\n\r\n                    });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    openSnackBar() {\r\n\r\n        this._helper.openSnackBarError('ERRO')\r\n       \r\n    }    \r\n\r\n    consultaCEP(CEP: string) {\r\n\r\n        if (this.colaboradorForm.get('cep').valid) {\r\n\r\n            CEP = CEP.replace('-', '');\r\n            CEP = CEP.replace('.', '');\r\n\r\n            this._admService.CepConsulta(this.colaboradorForm.get('cep').value)\r\n                .subscribe(response => {\r\n\r\n                    this.colaboradorForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase())\r\n                    this.colaboradorForm.get('bairro').setValue(response[\"bairro\"].toUpperCase())\r\n                    this.colaboradorForm.get('cidade').setValue(response[\"localidade\"].toUpperCase())\r\n                    this.colaboradorForm.get('uf').setValue(response[\"uf\"].toUpperCase())\r\n\r\n                }, err => {  },\r\n                    () => {  });\r\n        }\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">\r\n    Visualizar/Editar Colaborador\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\"  mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<div *ngIf=\"showForm\" >\r\n\r\n    <hr>\r\n\r\n    <form novalidate [formGroup]=\"colaboradorForm\" (ngSubmit)=\"edit(colaboradorForm)\">\r\n        \r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 55%; \">\r\n            <mat-label>Nome</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\"\r\n             matInput required formControlName=\"nome\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 40%; margin-left: 5%;\">\r\n            <mat-label>Email</mat-label>\r\n            <input selected matInput [value]=\"colaboradorForm.get('email').value\" disabled >\r\n        </mat-form-field>\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 18%;\">\r\n            <mat-label>CPF</mat-label>\r\n            <input disabled selected name=\"cpf\" matInput [value]=\"colaboradorForm.get('cpf').value | cpf\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 5%;\">\r\n            <mat-label>celular</mat-label>\r\n            <input selected mask=\"(00) 00000-0000\" matInput formControlName=\"celular\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 5%;\">\r\n            <mat-label>Cargo/Função</mat-label>\r\n            <mat-select placeholder=\"cargo/função\" formControlName=\"cargoId\">\r\n                \r\n                <mat-option *ngFor=\"let cargo of cargos\" [value]=\"cargo.id\">\r\n                    {{cargo.value}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-slide-toggle style=\"width: 10%; margin-left: 17%\" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n        formControlName=\"ativo\" required matTooltip=\"ativo/inativo\" \r\n            [required]=\"false\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"250\" color=\"primary\">\r\n        </mat-slide-toggle>\r\n\r\n     \r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 15%;\">\r\n            <mat-label>CEP</mat-label>\r\n            <input required selected mask=\"00.000-000\" minlength=\"8\" maxlength=\"10\" \r\n            matInput formControlName=\"cep\">\r\n        </mat-form-field>\r\n        \r\n        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <span type=\"button\" (click)=\"consultaCEP(colaboradorForm.get('cep').value)\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </span>\r\n        </i>\r\n        <br>\r\n        <div>\r\n            <mat-form-field appearance=\"standard\" style=\"width: 35%;\">\r\n                <mat-label>Logradouro</mat-label>\r\n                <input disabled [value]=\"colaboradorForm.get('logradouro').value\" oninput=\"this.value = this.value.toUpperCase()\" selected matInput>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 10%;margin-left: 5%;\">\r\n                <mat-label>Nº</mat-label>\r\n                <input formControlName=\"numero\" oninput=\"this.value = this.value.toUpperCase()\" required selected matInput placeholder=\"ex: rua tal...\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 45%; margin-left: 5%;\">\r\n                <mat-label>Complemento</mat-label>\r\n                <input selected matInput oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"complemento\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%\">\r\n                <mat-label>Cidade</mat-label>\r\n                <input selected disabled [value]=\"colaboradorForm.get('cidade').value\"  matInput oninput=\"this.value = this.value.toUpperCase()\" >\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 5%; margin-left: 5%;\">\r\n                <mat-label>UF</mat-label>\r\n                <input disabled [value]=\"colaboradorForm.get('uf').value\"  selected oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 35%; margin-left: 5%\">\r\n                <mat-label>Bairro</mat-label>\r\n                <input selected formControlName=\"bairro\" matInput oninput=\"this.value = this.value.toUpperCase()\" >\r\n            </mat-form-field>\r\n            \r\n            \r\n        </div>\r\n\r\n        <mat-progress-bar [style.visibility]=\"saveBar\" @rowHighlight mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <div style=\"float: right;margin-top: 15px;\">\r\n            <button color=\"primary\" [disabled]=\"desabilitar\" type=\"submit\" mat-raised-button \r\n            style=\"position: relative; float:right;margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n        </div>  \r\n        \r\n    </form>\r\n\r\n\r\n</div>","<ng-container>\r\n\r\n\r\n    <mat-sidenav-container class=\"example-container\" style=\"\r\n    background-color: rgba(250, 245, 245, 0); \">\r\n        <mat-sidenav style=\"\"\r\n         #sidenav mode=\"side\" opened class=\"example-sidenav mat-elevation-z8\">\r\n            <div class=\"d-flex flex-column text-white \" \r\n            style=\"position: absolute;\r\n            width: auto;\r\n            top: 0px;\r\n            bottom: 0px;\r\n            left: 0;\r\n            background-color: rgb(109, 218, 109);\r\n            right: 0;\">\r\n                <a href=\"/\" class=\"d-flex align-items-center  mb-md-0 me-md-auto text-white text-decoration-none\">\r\n                    \r\n                    <span style=\"width: 200px;\r\n                    text-align: center;margin-top: 15px;font-size: 1em;\">ALUNO</span>\r\n                </a>\r\n                <hr>\r\n                <ul class=\"nav nav-pills flex-column mb-auto\">\r\n\r\n                    <li *ngFor=\"let item of menu\" routerLinkActive=\"active\" \r\n                    class=\"nav-item {{item.class}}\"\r\n                        style=\"overflow: auto;\">\r\n\r\n                        <a [routerLink]=\"[item.path]\" class=\"nav-link text-white\">\r\n                            <mat-icon style=\"top: -3px;\r\n                                        position:relative;\r\n                                        overflow: auto;\r\n                                        color:rgb(245, 243, 243); \r\n                                        vertical-align: middle;\r\n                                        \">\r\n                                        {{item.typeIcon}}\r\n                            </mat-icon>\r\n                                {{item.title}}\r\n                        </a>\r\n                    </li>\r\n                    \r\n\r\n                </ul>\r\n                <hr>\r\n                <!-- <div class=\"dropdown\">\r\n                    <a href=\"#\" class=\"d-flex align-items-center text-white text-decoration-none dropdown-toggle\"\r\n                        id=\"dropdownUser1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <img src=\"https://github.com/mdo.png\" alt=\"mdo\" width=\"32\" height=\"32\"\r\n                            class=\"rounded-circle me-2\">\r\n                        <strong>conta</strong>\r\n                    </a>\r\n                    <ul id=\"menu\" class=\"dropdown-menu dropdown-menu text-small shadow\" aria-labelledby=\"dropdownUser1\"\r\n                        style=\"background-color: rgb(73, 168, 73);\">\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">New project...</a></li>\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">Settings</a></li>\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">Profile</a></li>\r\n                        <li>\r\n                            <hr style=\"color: white;\" class=\"dropdown-divider\">\r\n                        </li>\r\n                        <li><a type=\"button\"\r\n                            (click)=\"logOut()\"\r\n                            style=\"color: white;\" class=\"dropdown-item\">Sign out</a></li>\r\n                    </ul>\r\n                </div> -->\r\n            </div>            \r\n\r\n        </mat-sidenav>\r\n        <router-outlet></router-outlet>\r\n\r\n    </mat-sidenav-container>\r\n\r\n\r\n</ng-container>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\ndeclare interface RouteInfo {\r\n    path: string;\r\n    title: string;\r\n    class: string;\r\n    typeIcon: string;\r\n}\r\n\r\nexport const ROUTES: RouteInfo[] = [\r\n    { path: '/aluno/estagio', title: 'Estágios', class: '', typeIcon: 'domain' },\r\n    { path: '/aluno/alunodocs', title: 'Documentação', class: '', typeIcon: 'attachment' }\r\n]\r\n\r\n@Component({\r\n    selector: 'aluno-app',\r\n    templateUrl: './aluno.component.html',\r\n    styleUrls: ['./aluno.component.scss']\r\n})\r\n\r\nexport class AlunoComponent implements OnInit {\r\n    menu: any;\r\n    constructor(\r\n        //private jwtHelper: JwtHelperService, \r\n        private router: Router,\r\n        private http: HttpClient) { }\r\n    ngOnInit() {\r\n        // this.isUserAuthenticated();\r\n        this.menu = ROUTES.filter(menu => menu);\r\n    }\r\n\r\n    invalidLogin: boolean;\r\n  \r\n    logOut() {\r\n        localStorage.removeItem(\"jwt\");\r\n        this.router.navigate([\"/login\"]);\r\n\r\n    }\r\n\r\n}","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { Debito, InfoFinanceiras } from \"src/app/_shared/models/InfoFinanceiras.model\";\r\nimport { ConfirmarParcelamento } from \"./Confirmar/reapconfirmar.component\";\r\n\r\n\r\n@Component({\r\n    selector: 'reparcelamentomodal',\r\n    templateUrl: './reparcelamento.component.html',\r\n    //styleUrls: ['./infos.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ReparcelamentoComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    tabs = ['Financeiro', 'Responsável Financeiro', 'Responsável (menor)'\r\n        , 'Financeiro', 'Documentação'];\r\n\r\n    public showAluno: boolean = false\r\n    public showRespFinanc: boolean = false\r\n    public showRespMenor: boolean = false\r\n    public nome: string = ''\r\n    public aluno: Aluno = new Aluno();\r\n    // public debitos: Debito[] = new Array<Debito>();\r\n    public debitos: ReparcelamentoDebito[] = new Array<ReparcelamentoDebito>();\r\n    public turma: any\r\n    public originalAluno: any\r\n    public originalRespFin: any\r\n    public originalRespMenor: any\r\n\r\n    private respFinId: number = 0;\r\n    private respMenorId: number = 0;\r\n\r\n    public alunoForm: FormGroup;\r\n    public respFinancForm: FormGroup;\r\n    public respMenorForm: FormGroup;\r\n\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog,\r\n        // private _service: PedagService,\r\n        public dialogRef: MatDialogRef<ReparcelamentoComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.nome = this.data['aluno'].nome\r\n       // console.log(this.data['aluno'])\r\n        this.getInfoFinancAlunos(this.data['aluno'].matriculaId)\r\n    }\r\n\r\n    getInfoFinancAlunos(matriculaId) {\r\n\r\n        this._http.get(`${this.baseUrl}/financeiro/debitos/${matriculaId}`)\r\n            .subscribe(resp => {\r\n                this.debitos = Object.assign([], resp['debitos']);\r\n                this.turma = Object.assign({}, resp['turma']);\r\n                this.debitos.forEach(element => {\r\n\r\n                    element.selected = false;\r\n\r\n                });\r\n            },\r\n                (error) => { \r\n                  //  console.log(error)\r\n                 },\r\n                () => {\r\n                   // console.log(this.debitos);\r\n                })\r\n    }\r\n\r\n    public boletoUrl = \"\"\r\n\r\n    public cepReturn: CepReturn = new CepReturn();\r\n\r\n    public localidade = ''\r\n    public uf = ''\r\n\r\n\r\n    saveEditAluno() {\r\n\r\n      //  console.log(this.aluno)\r\n\r\n    }\r\n\r\n    valorEntrada = 0\r\n    parcelas = 0\r\n\r\n    juros = 0\r\n    desconto = 0\r\n    acrescimo = 0\r\n\r\n    totalValor = 0\r\n    get totalSelecionado() {\r\n        //console.log('parcelar')\r\n        this.totalValor = 0\r\n        this.debitos.forEach(element => {\r\n            if (element.selected == true) {\r\n                this.totalValor += element.valor\r\n            }\r\n        });\r\n        //console.log(`R$ ${this.totalValor.toFixed(2)}`)\r\n        return `R$ ${this.totalValor.toFixed(2)}`\r\n    }\r\n\r\n    totalFinal = 0\r\n    get totalParcelar() {\r\n        //console.log('parcelar')\r\n        this.totalFinal = this.totalValor + this.juros - this.desconto + this.acrescimo\r\n\r\n        return `R$ ${this.totalFinal.toFixed(2)}`\r\n    }\r\n\r\n    //vencimento: any;\r\n\r\n\r\n    vencimento: any\r\n    onFocusOutDateEvent(event: any) {\r\n        var data;\r\n\r\n        if (event.target.value.length == 10) {\r\n            var data = event.target.value.split('/')\r\n           // console.log(data)\r\n            var dataForm: Date = new Date(parseInt(data[2]), parseInt(data[1]) - 1,\r\n                parseInt(data[0]))\r\n\r\n            this.vencimento = dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n            //this.valor = dataForm//.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n        }\r\n\r\n\r\n    }\r\n\r\n    debitosIds: any[] = new Array<any>()\r\n\r\n    calcular(): void {\r\n        this.debitos.forEach(element => {\r\n            if (element.selected == true) {\r\n                this.totalValor += element.valor\r\n                this.debitosIds.push(element.id)\r\n            }\r\n        });\r\n      //  console.log(this.debitosIds)\r\n        const dialogRef = this._modal\r\n            .open(ConfirmarParcelamento, {\r\n                height: 'auto',\r\n                width: '600px',\r\n                autoFocus: false,\r\n               // maxHeight: '90vh',\r\n\r\n                data: { totalFinal: this.totalFinal, debitosIds: this.debitosIds,\r\n                    parcelas: this.parcelas, vencimento: this.vencimento,\r\n                valorEntrada: this.valorEntrada },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            this.getInfoFinancAlunos(this.data['aluno'].id)\r\n\r\n            if (data.clicked === \"Ok\") {\r\n                this.getInfoFinancAlunos(this.data['aluno'].id)\r\n            } else if (data.clicked === \"Cancel\") {\r\n                \r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class ReparcelamentoDebito {\r\n    constructor(\r\n        public id?: string,\r\n        public vencimento?: Date,\r\n        public dataPagamento?: Date,\r\n        public valor?: number,\r\n        public valorPago?: number,\r\n        public juros?: number,\r\n        public jurosFixo?: number,\r\n        public multa?: string,\r\n        public multaFixo?: string,\r\n        public desconto?: string,\r\n        public diasDesconto?: string,\r\n        public statusBoleto?: string,\r\n        public reparcelamentoId?: string,\r\n        public centroCustoUnidadeId?: string,\r\n        public informacaoDebitoId?: string,\r\n        //public BoletoResponseInfo InfoBoletos { get; private set; }\r\n        public  id_unico?: string,\r\n        public id_unico_original?: string,\r\n        public status?: string,\r\n        public msg?: string,\r\n        public nossonumero?: string,\r\n        public linkBoleto?: string,\r\n        public linkGrupo?: string,\r\n        public linhaDigitavel?: string,\r\n        public pedido_numero?: string,\r\n        public banco_numero?: string,\r\n        public token_facilitador?: string,\r\n        public credencial?: string,\r\n        public selected?: boolean\r\n    ) {\r\n\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Reparcelamento\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n<hr>\r\n\r\n\r\n<mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n    <mat-label>Aluno</mat-label>\r\n    <input [value]=\"nome\" selected disabled required name=\"nome\" matInput placeholder=\"Nome\">\r\n</mat-form-field>\r\n\r\n<mat-form-field appearance=\"standard\" style=\"width: 12%; margin-left: 5%; \">\r\n    <mat-label>Nº matrícula</mat-label>\r\n    <input value=\"000213\" selected disabled required name=\"nome\" matInput placeholder=\"Nome\">\r\n</mat-form-field>\r\n<br>\r\n<!-- <div style=\"color:red; margin-bottom: 10px; font-size: 0.8em; font-style: italic;\">* O aluno não se encontra matriculado\r\n    em nenhuma\r\n    turma.</div> -->\r\n\r\n\r\n\r\n<mat-tab-group mat-align-tabs=\"start\">\r\n\r\n    <!--                  CADASTRO            -->\r\n\r\n\r\n\r\n\r\n    <mat-tab [label]=\"tabs[0]\">\r\n\r\n\r\n        <div class=\"table-responsive\" *ngIf=\"debitos.length > 0\" style=\"position: relative;\">\r\n            <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n                <thead style=\"z-index: 9;\r\n                top: 0;\r\n                position: sticky;\r\n                background-color: aliceblue;\">\r\n                    <tr>\r\n                        <!-- <th style=\"width: 2%; \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th> -->\r\n\r\n\r\n                        <!-- <th style=\"width: 8%;font-size:0.8em;\r\n                    vertical-align: middle; \r\n                    text-align:left;\r\n                     border-top: 0px; font-weight: 400;\">Compet.</th> -->\r\n\r\n                        <th style=\"width: 24%;font-size:0.8em;\r\n                    vertical-align: middle;\r\n                    text-align:left;\r\n                    border-top: 0px; font-weight: 400;\">Curso/Turma</th>\r\n\r\n                        <th style=\"width: 10%;font-size:0.8em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Vencimento</th>\r\n\r\n                        <th style=\"width: 12%;font-size:0.8em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">Val. Título</th>\r\n\r\n                        <th style=\"width: 13%;font-size:0.8em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">Data Pagto.</th>\r\n\r\n                        <th style=\"width: 12%;font-size:0.8em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">Val. Pago</th>\r\n\r\n                        <th style=\"width: 21%;font-size:0.8em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\"></th>\r\n                        <!--<th style=\"width: 12%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Matriculados</th>\r\n    \r\n                    <th style=\"width: 13%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Status</th> -->\r\n\r\n                        <!-- <th style=\"width: 34%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">\r\n    \r\n                    </th> -->\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    <tr *ngFor=\"let debs of debitos;let i = index;\">\r\n                        <!-- <td style=\"font-size:0.8em;font-weight: 400;text-align:center;vertical-align: middle;\">\r\n                            {{debs.competencia | date:'M/y' }}\r\n                        </td> -->\r\n\r\n                        <td style=\"font-size:0.8em;font-weight: 400;text-align:left;vertical-align: middle;\">\r\n                            {{turma.descricao}}<br>\r\n                            {{turma.identificador}}\r\n                        </td>\r\n\r\n                        <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                            {{debs.vencimento | date:'dd/MM/y' }}\r\n                        </td>\r\n\r\n                        <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                            {{debs.valor | currency:'BRL':'R$ ' }}\r\n                        </td>\r\n\r\n                        <td style=\"font-size:0.8em;font-weight: 400;;text-align: center;vertical-align: middle;\">\r\n                            <ng-container *ngIf=\"debs.statusBoleto == 'Pago';else semData\">\r\n                                {{debs.dataPagamento | date:'dd/MM/y' }}\r\n                            </ng-container>\r\n                            <ng-template #semData>\r\n                                -\r\n                            </ng-template>\r\n                        </td>\r\n\r\n                        <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                            <ng-container *ngIf=\"debs.valorPago != 0;else semValorPago\">\r\n                                {{ debs.valorPago | currency:'BRL':'R$ ' }}\r\n                            </ng-container>\r\n                            <ng-template #semValorPago>\r\n                                -\r\n                            </ng-template>\r\n                        </td>\r\n\r\n                        <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n\r\n\r\n                            <mat-checkbox *ngIf=\"debs.statusBoleto == 'Em aberto'\" style=\"margin-right: 3px;width: 50px;\" type=\"checkbox\" color=\"primary\"\r\n                                [(ngModel)]=\"debs.selected\" class=\"example-margin\" name=\"checked\">\r\n                            </mat-checkbox>\r\n\r\n\r\n                            <!-- <ng-container *ngIf=\"debs.status != 'Pago'\">\r\n\r\n\r\n                                <i style=\"margin-right: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"enviar por email\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button  style=\"\" mat-icon-button>\r\n                                        <mat-icon (click)=\"sendByEmail(debs)\" style=\"font-size: 1.2em;\">send</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n\r\n                                <i style=\"margin-right: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"imprimir boleto\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"getBoleto(debs)\" style=\"\" mat-icon-button>\r\n                                        <mat-icon style=\"font-size: 1.2em;\">description</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n                            </ng-container> -->\r\n\r\n                            <!-- <i style=\"float: right;\" #tooltip=\"matTooltip\" matTooltip=\"visualizar\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button (click)=\"openEdit(debs)\" style=\"\" mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.2em;\">edit</mat-icon>\r\n                                </button>\r\n                            </i> -->\r\n                        </td>\r\n\r\n                        <!-- <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\" >\r\n                       \r\n                        \r\n                        </td> -->\r\n\r\n\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <!-- <br>\r\n\r\n        <div>\r\n            <ng-container *ngIf=\"hideCursoSearchAndMessage\">\r\n                <div *ngIf=\"showSelectCursoSearch; else message\">\r\n                    Selecione o curso disponível nesta unidade:\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 2%;\">\r\n                        <mat-label>Curso</mat-label>\r\n                        <mat-select selected name=\"cargo\" required>\r\n                            <mat-option></mat-option>\r\n                            <mat-option (click)=\"consultarCursos(item.descricao)\" *ngFor=\"let item of cursosDisponiveis\"\r\n                                [value]=\"item.descricao\">\r\n                                {{item.descricao}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <ng-template #message>\r\n                    Não há turmas com matrículas abertas nesta unidade!\r\n                </ng-template>\r\n            </ng-container>\r\n\r\n\r\n            <div *ngIf=\"showTableCursosAndamento\" class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%;height: 20px;;  \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 32%;font-size:1em;\r\n                                    vertical-align: middle;\r\n                                    text-align:left;\r\n                    border-top: 0px; font-weight: 400;\">Descrição</th>\r\n\r\n                            <th style=\"width: 19%;font-size:1em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">Turno</th>\r\n\r\n                            <th style=\"width: 15%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Prev. início</th>\r\n\r\n                            <th style=\"width: 15%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Prev. término</th>\r\n\r\n                            <th style=\"width: 6%;\r\n                    border-top: 0px;\"></th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of turmasParaMatricular;let i = index;\">\r\n                            <td style=\"text-align:center;vertical-align: middle;\"></td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.descricao}}<br>Turma\r\n                                {{item.identificador}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\"></td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                {{ item.previsaoAtual | date: 'dd/MM/yyyy' }}\r\n\r\n                                <br>\r\n\r\n                                <span *ngIf=\"item.iniciada\" style=\"color:red; font-size: 0.8em;\">\r\n                                    * turma\r\n                                    iniciada!\r\n                                </span>\r\n\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{ item.previsaoTerminoAtual |\r\n                                date: 'dd/MM/yyyy' }}\r\n                            </td>\r\n\r\n                            <td style=\"position: relative;text-align: center;vertical-align: middle;\">\r\n                                <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"ativo\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"selecionarTurma(item)\" style=\"\" mat-icon-button>\r\n                                        <mat-icon style=\"\">note_add</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n                            </td>\r\n                        </tr>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <form *ngIf=\"showFormFinal\" novalidate [formGroup]=\"matriculaTurmaForm\"\r\n            (ngSubmit)=\"submitMatricula(matriculaTurmaForm)\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 17%;margin-left: 2%;\">\r\n                <mat-label>Código do contrato:</mat-label>\r\n                <input disabled name=\"templateName\" matInput value=\"CGI-34534634\">\r\n            </mat-form-field>\r\n\r\n            <div style=\"float: right; width: 50px;\">\r\n                <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"voltar\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"voltar()\" style=\"\" mat-icon-button>\r\n                        <mat-icon>undo</mat-icon>\r\n                    </button>\r\n                </i>\r\n\r\n            </div>\r\n\r\n\r\n            <br>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 29%; ;margin-left: 2%;\">\r\n                <mat-label>Curso</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.descricao\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 13%; margin-left: 2%;\">\r\n                <mat-label>Turma</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.identificador\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>Investimento</mat-label>\r\n                <input disabled name=\"templateName\" matInput value=\"R$ 4.190,00\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 10%; margin-left: 1%;\">\r\n                <mat-label>código </mat-label>\r\n                <input disabled selected name=\"templateName\" matInput placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 13%; margin-left: 2%;\">\r\n                <mat-label>Turno</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.turno\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 18%; margin-left: 2%;\">\r\n                <mat-label>Horário</mat-label>\r\n                <input disabled name=\"templateName\" matInput value=\"10:00 às 16:00\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>Previsão início </mat-label>\r\n                <input selected name=\"templateName\" matInput disabled [(value)]=\"previAtual\" placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 1%;\">\r\n                <mat-label>Previsão término </mat-label>\r\n                <input selected name=\"templateName\" matInput disabled [(value)]=\"previTerminoAtual\" placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n\r\n\r\n\r\n            <mat-form-field appearance=\"fill\" style=\"width: 38%;margin-left: 2%;margin-top: 20px;\">\r\n                <mat-label>Como ficou sabendo dos nossos cursos?</mat-label>\r\n                <mat-select formControlName=\"cienciaCurso\" selected name=\"cargo\" required>\r\n                    <mat-option></mat-option>\r\n                    <mat-option *ngFor=\"let item of cienciaCurso\" [value]=\"item.type\">\r\n                        {{item.value}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <br>\r\n\r\n            <br>\r\n\r\n            <span style=\"margin-left: 2%;\">Escolha a forma de pagamento:</span>\r\n            <mat-tab-group style=\"\">\r\n                <mat-tab label=\"Cartão de Crédito\"> </mat-tab>\r\n                <mat-tab label=\"Boleto\"> </mat-tab>\r\n                <mat-tab label=\"Carnê\"></mat-tab>\r\n            </mat-tab-group>\r\n\r\n\r\n            <br>\r\n            <button type=\"submit\" mat-raised-button disabled=\"false\"\r\n                style=\"bottom: 0; float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n                Confirmar matrícula\r\n            </button>\r\n\r\n        </form> -->\r\n        <ng-container>\r\n            <br>\r\n            <mat-form-field appearance=\"outline\" style=\"width: 140px; \">\r\n                <mat-label>Total selecionado</mat-label>\r\n                <input disabled [value]=\"totalSelecionado\" disabled matInput>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100px;margin-left: 5px; \">\r\n                <mat-label>Juros</mat-label>\r\n                <input [(ngModel)]=\"juros\" currencyMask currencyMask\r\n                    [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" matInput>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100px;margin-left: 5px; \">\r\n                <mat-label>Desconto</mat-label>\r\n                <input [(ngModel)]=\"desconto\" currencyMask currencyMask\r\n                    [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" matInput>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100px;margin-left: 5px; \">\r\n                <mat-label>Acréscimo</mat-label>\r\n                <input [(ngModel)]=\"acrescimo\" currencyMask currencyMask\r\n                    [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" matInput>\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 140px; margin-left: 5px;\">\r\n                <mat-label>Total Parcelar</mat-label>\r\n                <input disabled [value]=\"totalParcelar\" currencyMask disabled matInput>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 120px; \">\r\n                <mat-label>Vencimento</mat-label>\r\n                <input mask=\"00/00/0000\" required name=\"cpf\" matInput placeholder=\"Vencimento\" \r\n                [(ngModel)]=\"vencimento\"\r\n                    (focusout)=\"onFocusOutDateEvent($event)\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100px;margin-left: 5px; \">\r\n                <mat-label>Entrada</mat-label>\r\n                <input [(ngModel)]=\"valorEntrada\" currencyMask currencyMask\r\n                    [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" matInput>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100px;margin-left: 5px; \">\r\n                <mat-label>Parcelas</mat-label>\r\n                <input [(ngModel)]=\"parcelas\" type=\"number\" min=\"0\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" \r\n                     matInput>\r\n            </mat-form-field>\r\n\r\n            <i style=\"margin-right: 5px;margin-bottom: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"calcular\" matTooltipPosition=\"above\"\r\n                matTooltipHideDelay=\"100\">\r\n                <button (click)=\"calcular()\" style=\"\" mat-icon-button>\r\n                    <mat-icon style=\"font-size: 2.2em;\">calculate</mat-icon>\r\n                </button>\r\n            </i>\r\n\r\n        </ng-container>\r\n\r\n    </mat-tab>\r\n\r\n\r\n\r\n</mat-tab-group>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { Debito, InfoFinanceiras } from \"src/app/_shared/models/InfoFinanceiras.model\";\r\n\r\n@Component({\r\n    selector: 'editfinancmodal',\r\n    templateUrl: './edit-financ.component.html',\r\n    styleUrls: ['./edit-financ.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class EditFinancComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n\r\n    public aluno: any;// = new Aluno();\r\n    public debito: any;//Debito = new Debito();\r\n    public turma: any\r\n\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog,\r\n        // private _service: PedagService,\r\n        public dialogRef: MatDialogRef<EditFinancComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.aluno = Object.assign({}, this.data['aluno'])\r\n        this.debito = Object.assign({}, this.data['debito'])\r\n        this.turma = Object.assign({}, this.data['turma'])\r\n        // this.nome = this.data['aluno'].nome\r\n       // console.log(this.aluno)\r\n        console.log(this.debito)\r\n       // console.log(this.turma)\r\n        //this.getInfoFinancAlunos(this.data['aluno'].id)\r\n    }\r\n\r\n\r\n    quitar(debitoId) {\r\n\r\n        this._http.put(`${this.baseUrl}/financeiro/boleto-pagar/${debitoId}`, {})\r\n            .subscribe(resp => {\r\n\r\n            },\r\n                (error) => { \r\n                   // console.log(error)\r\n                 },\r\n                () => {\r\n                    this.dialogRef.close({ clicked: \"PAGO\" })\r\n                })\r\n        //boleto-pagar/{idDebito}\r\n\r\n    }\r\n\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    //public logradouro = ''\r\n    //public bairro = ''\r\n    public localidade = ''\r\n    public uf = ''\r\n\r\n\r\n    saveEditAluno() {\r\n\r\n       // console.log(this.aluno)\r\n\r\n        //this.alunoForm.value\r\n\r\n\r\n\r\n    }\r\n\r\n    onSubmit(form: FormGroup) {\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Detalhes\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n<hr>\r\n\r\n\r\n<ng-container *ngIf=\"debito.status != 'Pago'\">\r\n    <!-- <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"quitar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button (click)=\"quitar(debito.id)\" style=\"\" mat-icon-button>\r\n            <mat-icon style=\"color:green\">paid</mat-icon>\r\n        </button>\r\n    </i> -->\r\n</ng-container>\r\n\r\n<mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n    <mat-label>Aluno</mat-label>\r\n    <input [value]=\"aluno.nome\" selected disabled required name=\"nome\" matInput placeholder=\"Nome\">\r\n</mat-form-field>\r\n\r\n<mat-form-field appearance=\"standard\" style=\"width: 12%; margin-left: 5%; \">\r\n    <mat-label>Nº matrícula</mat-label>\r\n    <input [value]=\"aluno.numeroMatricula\" selected disabled required name=\"nome\" matInput placeholder=\"Nome\">\r\n</mat-form-field>\r\n<br>\r\n\r\n<div *ngIf=\"debito.statusBoleto != 'Pago';else naoPago\" style=\"vertical-align: middle;\">\r\n    <i style=\"vertical-align: middle;margin-left: 5px;float: left;\">\r\n\r\n        <mat-icon style=\"font-size: 1em;color:red\">warning</mat-icon>\r\n\r\n    </i>\r\n\r\n    <span style=\"font-size: 0.9em;\">\r\n        Status: {{debito.statusBoleto}} - vencimento {{ debito.vencimento | date:'dd/MM/y'}}\r\n    </span>\r\n</div>\r\n\r\n\r\n<ng-template #naoPago>\r\n    <div style=\"vertical-align: middle;\">\r\n        <i style=\"vertical-align: middle;margin-left: 5px;float: left;\">\r\n\r\n            <mat-icon style=\"font-size: 1em;color:green\">paid</mat-icon>\r\n\r\n        </i>\r\n\r\n        <span style=\"font-size: 0.9em;\">\r\n            Pagamento efetuado em {{ debito.dataPagamento | date:'dd/MM/y'}}\r\n        </span>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n\r\n\r\n<!-- TODO VENCIDO -->\r\n<ng-container *ngIf=\"debito.statusBoleto == 'Pago'\">\r\n    <mat-form-field  appearance=\"standard\" style=\"width: 100px; \">\r\n        <mat-label>Valor recebido</mat-label>\r\n        <input [value]=\"debito.valorPago | currency:'BRL':'R$ '\"\r\n                    disabled matInput >\r\n    </mat-form-field>\r\n\r\n    <!-- <mat-form-field  appearance=\"standard\" style=\"width: 120px;margin-left: 20px; \">\r\n        <mat-label>Data pagamento</mat-label>\r\n        <input [value]=\"debito.dataPagamento | date: 'dd/MM/yyyy'\" \r\n            disabled matInput >\r\n    </mat-form-field> -->\r\n\r\n</ng-container>\r\n\r\n<mat-form-field *ngIf=\"debito.statusBoleto != 'Pago';\" appearance=\"standard\" style=\"width: 100px; \">\r\n    <mat-label>Valor a receber</mat-label>\r\n    <input [value]=\"debito.valor | currency:'BRL':'R$ '\" \r\n        disabled matInput>\r\n</mat-form-field>\r\n\r\n<!-- <ng-template #recebido appearance=\"standard\" style=\"width: 15%; \">\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 17%; \">\r\n        <mat-label>Valor a receber</mat-label>\r\n        <input [value]=\"debito.valor\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" selected\r\n            disabled required name=\"nome\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n</ng-template> -->\r\n\r\n<br>\r\n\r\n<span style=\"font-size: 0.9em;\">\r\n    Linha Digitável: {{ debito.linhaDigitavel }}\r\n</span>\r\n<!-- <div style=\"font-weight: 400;font-size: 0.9;margin-left: 30px;\">débito gerado em </div> -->\r\n<br>\r\n<span style=\"font-size: 0.9em;\">\r\n    pagamento {{ debito.subConta }}\r\n</span>","import { DEFAULT_CURRENCY_CODE, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//import { CustomersComponent } from './customers/customers.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CommonModule, CurrencyPipe, DatePipe } from '@angular/common';\r\n//import { HomeComponent } from './home.component';\r\nimport { SharedModule } from '../_shared/shared.module';\r\n\r\nimport { MaterialModule } from '../_shared/material/material.module';\r\nimport { IConfig, NgxMaskModule } from 'ngx-mask';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { Servico } from '../Adm/testes/testeexterno';\r\nimport { GeralComponent } from './geral.component';\r\n\r\n\r\n\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n  };\r\n  \r\nexport function tokenGetter() {\r\n    return localStorage.getItem(\"jwt\");\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        GeralComponent,        \r\n        //MyPipe\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        SharedModule,\r\n        MaterialModule,\r\n        AngularEditorModule,\r\n        NgxMaskModule.forRoot(maskConfig),\r\n        CurrencyMaskModule\r\n    ],\r\n    //providers: [AuthGuard],\r\n    providers: [CurrencyPipe, DatePipe, { provide: DEFAULT_CURRENCY_CODE, useValue: 'BRL' },\r\n    {provide: 'IServicoToken', useClass: Servico}\r\n    ],\r\n    exports: [\r\n        GeralComponent\r\n        \r\n    ],\r\n    entryComponents: [\r\n        \r\n    ]\r\n})\r\nexport class GeralModule { }\r\n\r\n","import { DEFAULT_CURRENCY_CODE, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule, CurrencyPipe, DatePipe, UpperCasePipe } from '@angular/common';\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { MaterialModule } from '../_shared/material/material.module';\r\nimport { AdmComponent } from './adm.component';\r\nimport { UsuarioComponent } from './usuarios/usuario.component';\r\nimport { CreateUserComponent } from './usuarios/CreateModal/createuser.component';\r\nimport { EditUserComponent } from './usuarios/EditModal/edituser.component';\r\nimport { ProfessoresComponent } from './professores/professores.component';\r\nimport { ProdutosComponent } from './produtos/produtos.component';\r\nimport { UnidadesComponent } from './unidades/unidades.component';\r\nimport { EditUnidadeComponent } from './unidades/EditModal/editunidade.component';\r\nimport { CreateUnidadeComponent } from './unidades/CreateModal/createunidade.component';\r\nimport { MyPipe } from './unidades/CreateModal/createunidade.component';\r\nimport { ColaboradoresComponent } from './colaboradores/colaboradores.component';\r\nimport { EditColaboradoresComponent } from './colaboradores/editModal/editcolaboradores.component';\r\nimport { CreateColaboradoresComponent } from './colaboradores/createModal/createcolaboradores.component';\r\nimport { CreateCursoComponent } from './turmas/CreateModal/createcurso.component';\r\nimport { EditCursoComponent } from './turmas/EditModal/editcurso.component';\r\nimport { TestesComponent } from './testes/teste.component';\r\nimport { TesteModalComponent } from './testes/modalteste/testemodal.component';\r\nimport { AddProfessorModalComponent } from './turmas/ModalAddProf/addprof.component';\r\nimport { CalendarioModalComponent } from './turmas/Calendario/calendario.component';\r\nimport { AddPMateriaModalComponent } from './turmas/ModalAddMateria/addmateria.component';\r\nimport { TestandoComponent } from './testando/testando.component';\r\nimport { AdmTurmasComponent } from './turmas/admturmas.component';\r\nimport { ConfirmarIniciarTurmaModal } from './turmas/confirm/confirmariniciar.component';\r\nimport { ConfiguracoesComponent } from './configuracoes/configuracoes.component';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\nimport { MessageModalComponent } from './messagemodal/messagemodal.component';\r\nimport { Servico } from './testes/testeexterno';\r\nimport { IConfig, NgxMaskModule } from 'ngx-mask';\r\nimport { AdmRelatorioComponent } from './relatorios/relatorio.component';\r\nimport { ProdutoCreateComponent } from './produtos/produto-create/produto-create.component';\r\nimport { ProdutoEditComponent } from './produtos/produto-edit/produto-edit.component';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { CreateSalaComponent } from './unidades/CreateSalaModal/createsala.component';\r\nimport { ModuloComponent } from './modulos/modulo.component';\r\nimport { ModuloCreateComponent } from './modulos/CreateModulo/modulo-create.component';\r\nimport { PlanoPgmCreateComponent } from './planos/CreatePlanoPgm/create-planopgm.component';\r\nimport { PlanoPgmComponent } from './planos/planopgm.component';\r\nimport { ContratoComponent } from './contratos/contrato.component';\r\nimport { CreateContratoComponent } from './contratos/CreateContrato/create-contrato.component';\r\nimport { DetailPacoteComponent } from './modulos/DetalhePacote/pacote-detalhe.component';\r\nimport { EditarContratoComponent } from './contratos/EditContrato/editcontrato.component';\r\nimport { CargoCreateComponent } from './configuracoes/Config-Cargos/cargo-create.component';\r\nimport { PlanoPgmEditComponent } from './planos/EditPlanoPgm/editplano.component';\r\nimport { CreateProfessorComponent } from './professores/CreateModal/createprofessor.component';\r\nimport { EditProfessorComponent } from './professores/EditModal/editprofessor.component';\r\nimport { SalaEditarComponent } from './unidades/EditarSala/sala-editar.component';\r\nimport { ProdutoDoacaoComponent } from './produtos/produto-doacao/produto-doacao.component';\r\nimport { ProfMateriasComponent } from './professores/Materias/prof-materias.component';\r\nimport { DocTemplateComponent } from './configuracoes/Doc-create/doctemplate.component';\r\nimport { MateriaTemplateComponent } from './configuracoes/Mat-create/mat-create.component';\r\nimport { AddDispoComponent } from './professores/Materias/AddDisponibilidade/add-dispo.component';\r\nimport { AdmService } from './services/adm.services';\r\nimport { AddMatComponent } from './professores/Materias/AddMateria/add-mat.component';\r\nimport { EditDispoComponent } from './professores/Materias/EditDisponibilidade/edit-dispo.component';\r\nimport { PDFTesteComponent } from './PdfTeste/pdfteste.component';\r\nimport { EditAcessoComponent } from './usuarios/EditAcesso/editacesso.component';\r\nimport { BolsasComponent } from './bolsascursos/bolsas.component';\r\nimport { CreateBolsaComponent } from './bolsascursos/create/createbolsa.component';\r\nimport { ShowSenhaComponent } from './bolsascursos/show/showsenha.component';\r\nimport { VisualizarModuloComponent } from './modulos/VisualizarModulo/visualizar.component';\r\nimport { EditBolsaComponent } from './bolsascursos/edit/edit-bolsa.component';\r\nimport { ProfCalendarioComponent } from './professores/ProfCalendario/prof-calendario.component';\r\nimport { ProfRelatorioComponent } from './professores/Relatorio/prof-relatorio.component';\r\nimport { CargoEditComponent } from './configuracoes/Cargos-edit/cargo-edit.component';\r\n\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n};\r\n\r\nexport function tokenGetter() {\r\n    return localStorage.getItem(\"jwt\");\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AdmComponent,\r\n        UsuarioComponent,\r\n        MessageModalComponent,\r\n        CreateUserComponent,\r\n        EditUserComponent,\r\n        UnidadesComponent,\r\n        CreateUnidadeComponent,\r\n        EditUnidadeComponent,\r\n        ProfessoresComponent,\r\n        ProdutosComponent,\r\n        AdmTurmasComponent,\r\n        CreateCursoComponent,\r\n        EditCursoComponent,\r\n        CreateColaboradoresComponent,\r\n        ConfiguracoesComponent,\r\n        EditColaboradoresComponent,\r\n        ColaboradoresComponent,\r\n        TestesComponent,\r\n        TesteModalComponent,\r\n        AddProfessorModalComponent,\r\n        CalendarioModalComponent,\r\n        ConfirmarIniciarTurmaModal,\r\n        AddPMateriaModalComponent,\r\n        TestandoComponent,\r\n        AdmRelatorioComponent,\r\n        ProdutoCreateComponent,\r\n        ProdutoEditComponent,\r\n        CreateSalaComponent,\r\n        ModuloComponent,\r\n        AddDispoComponent,\r\n        //AddSalaComponent,\r\n        ModuloCreateComponent,\r\n        // PacoteCreateComponent,\r\n        PlanoPgmCreateComponent,\r\n        PlanoPgmComponent,\r\n        ContratoComponent,\r\n        CreateContratoComponent,\r\n        DetailPacoteComponent,\r\n        EditarContratoComponent,\r\n        CargoCreateComponent,\r\n        PlanoPgmEditComponent,\r\n        CreateProfessorComponent,\r\n        EditProfessorComponent,\r\n        MyPipe,\r\n        SalaEditarComponent,\r\n        ProdutoDoacaoComponent,\r\n        ProfMateriasComponent,\r\n        DocTemplateComponent,\r\n        MateriaTemplateComponent,\r\n        AddMatComponent,\r\n        EditDispoComponent,\r\n        PDFTesteComponent,\r\n        EditAcessoComponent,\r\n        BolsasComponent,\r\n        CreateBolsaComponent,\r\n        ShowSenhaComponent,\r\n        VisualizarModuloComponent,\r\n        EditBolsaComponent,\r\n        ProfCalendarioComponent,\r\n        ProfRelatorioComponent,\r\n        CargoEditComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        SharedModule,\r\n        MaterialModule,\r\n        AngularEditorModule,\r\n        NgxMaskModule.forRoot(maskConfig),\r\n        CurrencyMaskModule\r\n    ],\r\n    //providers: [AuthGuard],\r\n    providers: [AdmService, CurrencyPipe, UpperCasePipe, DatePipe,\r\n        { provide: DEFAULT_CURRENCY_CODE, useValue: 'BRL' },\r\n        { provide: 'IServicoToken', useClass: Servico }\r\n    ],\r\n    exports: [\r\n        AdmComponent,\r\n        UsuarioComponent,\r\n        UnidadesComponent,\r\n        ColaboradoresComponent,\r\n        ProfessoresComponent,\r\n        ProdutosComponent,\r\n        AdmTurmasComponent,\r\n        TestesComponent,\r\n        TestandoComponent,\r\n        ConfiguracoesComponent,\r\n        ModuloComponent,\r\n        PlanoPgmComponent,\r\n        ContratoComponent,\r\n        PDFTesteComponent,\r\n        BolsasComponent\r\n    ],\r\n    entryComponents: [\r\n        CreateUserComponent,\r\n        MessageModalComponent,\r\n        EditUserComponent,\r\n        CreateUnidadeComponent,\r\n        EditUnidadeComponent,\r\n        CreateColaboradoresComponent,\r\n        EditColaboradoresComponent,\r\n        TesteModalComponent,\r\n        CreateCursoComponent,\r\n        EditCursoComponent,\r\n        AddProfessorModalComponent,\r\n        CalendarioModalComponent,\r\n        ConfirmarIniciarTurmaModal,\r\n        AddPMateriaModalComponent,\r\n        AdmRelatorioComponent,\r\n        ProdutoCreateComponent,\r\n        ProdutoEditComponent,\r\n        CreateSalaComponent,\r\n        ModuloCreateComponent,\r\n        //PacoteCreateComponent,\r\n        PlanoPgmCreateComponent,\r\n        CreateContratoComponent,\r\n        DetailPacoteComponent,\r\n        EditarContratoComponent,\r\n        CargoCreateComponent,\r\n        PlanoPgmEditComponent,\r\n        CreateProfessorComponent,\r\n        EditProfessorComponent,\r\n        SalaEditarComponent,\r\n        ProdutoDoacaoComponent,\r\n        ProfMateriasComponent,\r\n        DocTemplateComponent,\r\n        MateriaTemplateComponent,\r\n        AddDispoComponent,\r\n        AddMatComponent,\r\n        EditDispoComponent,\r\n        EditAcessoComponent,\r\n        CreateBolsaComponent,\r\n        ShowSenhaComponent,\r\n        VisualizarModuloComponent,\r\n        EditBolsaComponent,\r\n        ProfCalendarioComponent,\r\n        ProfRelatorioComponent,\r\n        CargoEditComponent\r\n        //AddSalaComponent\r\n    ]\r\n})\r\nexport class AdmModule { }\r\n\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HelpersService {\r\n\r\n    dialog: any\r\n    modal: any\r\n    public cep: CEP = new CEP()\r\n    constructor(\r\n        private _snackBar: MatSnackBar,\r\n        private _http: HttpClient\r\n    ) {\r\n\r\n    }\r\n\r\n    public openSnackBarSucesso(mensagem) {\r\n        this._snackBar.open(mensagem, '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass:['mat-toolbar', 'mat-primary'],\r\n            duration: 5 * 1000,\r\n        });\r\n    }\r\n\r\n    public openSnackBarError(mensagem) {\r\n        this._snackBar.open(mensagem, '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass:['mat-toolbar', 'mat-warn'],\r\n            duration: 5 * 1000,\r\n        });\r\n    }\r\n\r\n    public openSnackBarErrorDefault() {\r\n        this._snackBar.open('Ocorreu um erro, favor procure o administrador do sistema.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass:['mat-toolbar', 'mat-warn'],\r\n            duration: 5 * 1000,\r\n        });\r\n    }\r\n\r\n    public OpenConfirmModal(){\r\n\r\n        return 'alou'\r\n    }\r\n\r\n    private CloseModalWithOK<TDialogRef>() {\r\n        this.modal as MatDialogRef<TDialogRef>\r\n        this.modal.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n    // public ConsultarCepForm(CEP: string):Observable<CEP> {\r\n\r\n    //     if (CEP.length == 10) {\r\n    //         CEP = CEP.replace('-', '');\r\n    //         CEP = CEP.replace('.', '');\r\n    //         //console.log(CEP);\r\n\r\n    //         this._http.get(`https://viacep.com.br/ws/${CEP}/json/`, {})\r\n    //             .subscribe(response => {\r\n    //                 this.cep.logradouro = response[\"logradouro\"].toUpperCase()\r\n    //                 this.cep.bairro = response[\"bairro\"].toUpperCase()\r\n    //                 this.cep.localidade = response[\"localidade\"].toUpperCase()\r\n    //                 this.cep.uf = response[\"uf\"].toUpperCase()\r\n\r\n    //             }, err => {\r\n    //                 console.log(err)\r\n    //                 return this.cep\r\n    //             },\r\n    //                 () => {\r\n\r\n\r\n    //                 });\r\n\r\n    //                return this.cep\r\n    //     }\r\n\r\n\r\n\r\n    // }\r\n\r\n\r\n}\r\n\r\nexport class CEP {\r\n    constructor(\r\n        public logradouro?: string,\r\n        public bairro?: string,\r\n        public localidade?: string,\r\n        public uf?: string\r\n    ) { }\r\n}","import { Directive, HostListener } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[formControlName][appCPFMask]',\r\n})\r\nexport class CPFMaskDirective {\r\n\r\n  constructor(public ngControl: NgControl) { }\r\n\r\n  @HostListener('ngModelChange', ['$event'])\r\n  onModelChange(event) {\r\n    this.onInputChange(event, false);\r\n  }\r\n\r\n  @HostListener('keydown.backspace', ['$event'])\r\n  keydownBackspace(event) {\r\n    this.onInputChange(event.target.value, true);\r\n  }\r\n  \r\n\r\n  onInputChange(event, backspace) {\r\n    let newVal = event.replace(/\\D/g, '');\r\n    if (backspace && newVal.length <= 6) {\r\n      newVal = newVal.substring(0, newVal.length - 1);\r\n    }\r\n    if (newVal.length === 0) {\r\n      newVal = '';\r\n    } else if (newVal.length <= 3) {\r\n      newVal = newVal.replace(/^(\\d{0,3})/, '$1');\r\n    } else if (newVal.length <= 6) {\r\n      newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})/, '$1.$2');\r\n    } else if (newVal.length <= 9) {\r\n      newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})/, '$1.$2.$3');\r\n    } else if (newVal.length <= 11) {\r\n      newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})(\\d{0,2})/, '$1.$2.$3-$4');\r\n    } else {\r\n      newVal = newVal.substring(0, 11);\r\n      newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})(\\d{0,2})/, '$1.$2.$3-$4');\r\n    }\r\n    this.ngControl.valueAccessor.writeValue(newVal);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { BaseService } from 'src/app/_shared/services/base.service';\r\n\r\n\r\n@Injectable()\r\nexport class NewMatriculaService extends BaseService {\r\n\r\n    constructor(private http: HttpClient) { super(); }\r\n\r\n\r\n\r\n    // getColaboradores(pageSize?: number, currentPage?: number, jsonParam?: any) : Observable<any> {       \r\n\r\n    //     var formJson = JSON.stringify(jsonParam)\r\n\r\n    //     let path = `/colaboradores/pesquisar/?itemsPerPage=` + pageSize + `&currentPage=${currentPage}&paramsJson=${formJson}`\r\n\r\n    //     let response = this.http\r\n    //         .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n\r\n    //         return response;\r\n    // }\r\n\r\n\r\n    getAlunos(pageSize?: number, currentPage?: number, jsonParam?: any) : Observable<any> {       \r\n\r\n        var formJson = JSON.stringify(jsonParam)\r\n\r\n        let path = `/alunos/pesquisar/?itemsPerPage=` + pageSize + `&currentPage=${currentPage}&paramsJson=${formJson}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n\r\n    public GetMatriculaRelatorio(param) : Observable<any> {  \r\n\r\n        let paramJson = JSON.stringify(param)\r\n\r\n        let path = `/pedag/matricula/relatorio/?paramJson=${paramJson}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n            return response;\r\n    }\r\n\r\n    // getSystemRoles() : Observable<any> {  \r\n\r\n    //     let path = `/usuario/roles`\r\n\r\n    //     let response = this.http\r\n    //         .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n\r\n    //         return response;\r\n    // }\r\n\r\n    // getMateriasByTypeId(typePacoteId: any) : Observable<any>{\r\n    //     // /materia-template/filtro/${typeId}\r\n    //     let path = `/materia-template/filtro/${typePacoteId}`\r\n\r\n    //     let response = this.http\r\n    //         .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n\r\n    //         return response;\r\n    // }\r\n\r\n    // saveProfessorMateria(profId: any,materiaId: any ) : Observable<any>{\r\n    //     // /materia-template/filtro/${typeId}\r\n    //     let path = `/professor/materia/${profId}/${materiaId}`\r\n\r\n    //     let response = this.http\r\n    //         .post(this.BaseUrl + path, {}, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n\r\n    //         return response;\r\n    // }\r\n\r\n    // editDisponibilidade(dispo: any) : Observable<any>{\r\n    //     // /materia-template/filtro/${typeId}\r\n    //     let path = `/professor/disponibilidade`\r\n\r\n    //     let response = this.http\r\n    //         .put(this.BaseUrl + path, dispo, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n\r\n    //         return response;\r\n    // }\r\n\r\n    // editUsuario(usuario: any) : Observable<any>{\r\n\r\n    //     let path = `/usuario`\r\n\r\n    //     let response = this.http\r\n    //         .put(this.BaseUrl + path, usuario, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n\r\n    //         return response;\r\n    // }\r\n\r\n    // CepConsulta(CEP?: any) : Observable<any> {       \r\n\r\n    //     let url = `https://viacep.com.br/ws/${CEP}/json/`\r\n\r\n    //     let response = this.http\r\n    //         .get(url)\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n\r\n    //         return response;\r\n    // }\r\n\r\n    // // MODULOS\r\n\r\n    // pesquisarPacote(typePacoteId:any, unidadeId:any): Observable<any>{\r\n\r\n    //     let path = `/pacote/${typePacoteId}/${unidadeId}`\r\n\r\n    //     let response = this.http\r\n    //         .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n\r\n    //         return response;\r\n\r\n    // }\r\n\r\n    // GetCreateModuleViewModel(): Observable<any>{\r\n\r\n    //     let path = `/pacote/create`\r\n\r\n    //     let response = this.http\r\n    //         .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n\r\n    //         return response;\r\n\r\n    // }\r\n\r\n    // GetEditModuleViewModel(pacoteId): Observable<any>{\r\n\r\n    //     let path = `/pacote/edit/${pacoteId}`\r\n\r\n    //     let response = this.http\r\n    //         .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n\r\n    //         return response;\r\n\r\n    // }\r\n\r\n    // savePacote(newPacote): Observable<any>{\r\n\r\n    //     let path = `/pacote`\r\n\r\n    //     let response = this.http\r\n    //         .post(this.BaseUrl + path, newPacote, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n\r\n    //         return response;\r\n    // }\r\n\r\n    // editPacote(editedPacote): Observable<any>{\r\n\r\n    //     let path = `/pacote`\r\n\r\n    //     let response = this.http\r\n    //         .put(this.BaseUrl + path, editedPacote, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n\r\n    //         return response;\r\n    // }\r\n\r\n\r\n    // console.log(CEP);\r\n    // if (CEP.length == 10) {\r\n\r\n\r\n    //     //var mystring = \"crt/r2002_2\";\r\n    //     CEP = CEP.replace('-', '');\r\n    //     CEP = CEP.replace('.', '');\r\n    //     console.log(CEP);\r\n    //     this.http.get(`https://viacep.com.br/ws/${CEP}/json/`, {})\r\n    //         .subscribe(response => {\r\n\r\n    //             //  console.log(response)\r\n    //             // this.cepReturn = new CepReturn(\r\n    //             //     response[\"logradouro\"],\r\n    //             //     response[\"bairro\"],\r\n    //             //     response[\"localidade\"],\r\n    //             //     response[\"uf\"]);\r\n    //             //console.log(this.cepReturn)\r\n    //             this.colaboradorForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n    //             this.colaboradorForm.get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n    //             this.colaboradorForm.get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n    //             this.colaboradorForm.get('uf').setValue(response[\"uf\"].toUpperCase());\r\n    //             //this.bairro = this.cepReturn.bairro\r\n    //             // const token = (<any>response).accessToken;\r\n    //             // console.log(response)\r\n    //             // localStorage.setItem(\"jwt\", token);\r\n    //             // this.invalidLogin = false;\r\n    //             // this.router.navigate([\"/main\"]);\r\n    //         }, err => { console.log(err) },\r\n    //             () => {\r\n    //                 //  console.log('finaly')\r\n    //                 this.showEndereco = true\r\n\r\n\r\n\r\n}","import { getTreeMultipleDefaultNodeDefsError } from \"@angular/cdk/tree\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Materias } from \"src/app/_shared/models/Turma.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { ProfResponse } from \"../CreateModal/createcurso.component\";\r\n\r\n@Component({\r\n    selector: 'addmateria-modal',\r\n    templateUrl: './addmateria.component.html',\r\n    styleUrls: ['./addmateria.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class AddPMateriaModalComponent implements OnInit {\r\n\r\n    private baseUrl = environment.baseUrl\r\n    materias: any[] = new Array<any>();\r\n    public initProgressBar = 'visible'\r\n    public showContent = false\r\n    public disabledSaveButton = false\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        public _dialogRef: MatDialogRef<AddPMateriaModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any\r\n    ) {\r\n\r\n    }\r\n    ngOnInit() {\r\n        this.getMateria()\r\n    }\r\n\r\n    getMateria() {\r\n\r\n        //this.http.get(`${this.baseUrl}/colaboradores/professores/?unidade=Campo Grande&itemsPerPage=${itemsPerPage}&currentPage=${currentPage}`)\r\n        this._http.get(`${this.baseUrl}/pedag/turma/materias/${this.data['turmaId']}/${this.data['professor'].id}`)\r\n            .subscribe(\r\n                (result) => {\r\n\r\n                    console.log(result['matsView'])\r\n                    this.materias = Object.assign([], result['matsView'])\r\n                  \r\n                    console.log(this.materias)\r\n                  \r\n\r\n                },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showContent = true\r\n                    this._dialogRef.addPanelClass('turmaaddmateria-class')\r\n                    // this.materias.forEach(element => {\r\n                    //     console.log(element.profId)\r\n                        \r\n                    // });\r\n\r\n                    \r\n                }\r\n            )\r\n    }\r\n\r\n    get sabeButtom(){\r\n\r\n        return this.disabledSaveButton\r\n    }\r\n\r\n    Checar(){\r\n        return true\r\n    }\r\n    checked = true\r\n    Atualizar() {\r\n        // console.log(this.listProfId)\r\n        // console.log(this.data['turmaId'])\r\n        // console.log(this.data['professor'])\r\n        // this.materias.forEach(element => {\r\n        //     console.log(element.temProfessor)\r\n        //     if(element.temProfessor){\r\n        //         element.profId = this.data['professor'].id\r\n        //     }else{\r\n        //         element.profId = 0\r\n        //     }\r\n        // });\r\n\r\n       // console.log(this.materias)\r\n       this.initProgressBar = 'visible'\r\n       \r\n       this.disabledSaveButton = true\r\n        this._http.put(`${this.baseUrl}/pedag/turma/materias/${this.data['turmaId']}/${this.data['professor'].id}`, this.materias,{\r\n\r\n        })\r\n        .subscribe(\r\n            (result) => {\r\n\r\n              //  console.log(result)\r\n\r\n            },\r\n            (error) => { \r\n               // console.log(error) \r\n            },\r\n            () => {\r\n                this._dialogRef.close({ clicked: true, profsIds: this.listProfId });\r\n            }\r\n        )\r\n\r\n        \r\n    }\r\n\r\n    listProfId: number[] = new Array<number>()\r\n\r\n    onCheckboxChange(event: any) {\r\n        //console.log(profId)\r\n        console.log(event.checked)\r\n        console.log(this.materias)\r\n       // console.log(this.data['professor'])\r\n        // if (event.checked) {\r\n        //     this.listProfId.push(profId)\r\n        // } else {\r\n        //     let index = this.listProfId.indexOf(profId)\r\n        //     this.listProfId.splice(index, 1);\r\n        // }\r\n\r\n        // console.log(this.listProfId)\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Atribuir matéria(s)\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<hr>\r\n\r\n<div *ngIf=\"showContent\" @rowHighlight>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 55%;\">\r\n        <mat-label>Professor</mat-label>\r\n        <input selected disabled [value]=\"data['professor'].nome\" required matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <div class=\"table-responsive\" style=\"height: 410px;position: relative;\">\r\n        <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width: 2%; \r\n            text-align:left; \r\n            vertical-align: middle;\r\n            border-top: 0px;\"></th>\r\n\r\n\r\n                    <th style=\"width: 27%;font-size:1em;\r\n            vertical-align: middle;\r\n            text-align:left;\r\n             border-top: 0px; font-weight: 400;\">Nome</th>\r\n\r\n                    <!-- <th style=\"width: 25%;font-size:1em;\r\n            vertical-align: middle;\r\n            text-align:center;\r\n            border-top: 0px; font-weight: 400;\">E-mail</th> -->\r\n\r\n                    <!-- <th style=\"width: 25%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">Matéria</th> -->\r\n\r\n                    <!--<th style=\"width: 12%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">Matriculados</th>\r\n\r\n            <th style=\"width: 13%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">Status</th> -->\r\n\r\n                    <th style=\"width: 17%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">\r\n                        <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"adicionar professor\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"openAddProfModal()\" style=\"margin: 0px;\" mat-icon-button>\r\n                        <mat-icon>person_add</mat-icon>\r\n                    </button>\r\n                </i> -->\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n                <tr *ngFor=\"let mat of materias;let i = index;\">\r\n\r\n                    <td style=\"text-align:center;vertical-align: middle;\">{{ i + 1}} </td>\r\n\r\n                    <td style=\"text-align:left;vertical-align: middle;\">\r\n                        {{mat.nome}}\r\n                    </td>\r\n\r\n                    <!-- <td style=\"text-align: center;vertical-align: middle;\">\r\n                        \r\n                    </td> -->\r\n\r\n                    <td style=\"position: relative; float: right;\">\r\n                        <mat-checkbox style=\"margin-right: 5px;\" type=\"checkbox\" [(ngModel)]=\"mat.isProfessor\"\r\n                            color=\"primary\" class=\"example-margin\" name=\"checked\">\r\n                        </mat-checkbox>\r\n                    </td>\r\n\r\n                </tr>\r\n\r\n            </tbody>\r\n\r\n        </table>\r\n\r\n\r\n    </div>\r\n    <div style=\"float:right;margin-top: 10px;margin-left: 10px;\">\r\n        <button color=\"primary\" [disabled]=\"sabeButtom\" (click)=\"Atualizar()\" type=\"button\" mat-raised-button\r\n            disabled=\"false\">\r\n            Salvar\r\n        </button>\r\n        <!-- <button style=\"float:right;margin-bottom: 10px;\" mat-raised-button\r\n        [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button> -->\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'footer',\r\n    templateUrl: './footer.component.html',\r\n    styleUrls: []\r\n})\r\nexport class FooterComponent implements OnInit{\r\n\r\n    constructor() { }\r\n    ngOnInit(){\r\n       // this.isUserAuthenticated();\r\n    }    \r\n\r\n    \r\n    // isUserAuthenticated() {\r\n    //     const token: string = localStorage.getItem(\"jwt\");\r\n    //     if (token && !this.jwtHelper.isTokenExpired(token)) {\r\n    //         this.router.navigate([\"/customers\"]);\r\n    //         return true;\r\n    //     }\r\n    //     else {\r\n    //         return false;\r\n    //     }\r\n    // }\r\n    // public logOut = () => {\r\n    //     localStorage.removeItem(\"jwt\");\r\n    // }\r\n\r\n    //constructor(private router: Router, private http: HttpClient) { }\r\n\r\n    // login(form: NgForm) {\r\n    //     const credentials = JSON.stringify(form.value);\r\n    //     console.log(credentials)\r\n    //     this.http.post(\"https://localhost:44370/api/identity/login\", credentials, {\r\n    //         headers: new HttpHeaders({\r\n    //             \"Content-Type\": \"application/json\"\r\n    //         })\r\n    //     }).subscribe(response => {\r\n    //         const token = (<any>response).accessToken;\r\n    //         console.log(response)\r\n    //         localStorage.setItem(\"jwt\", token);\r\n    //         this.invalidLogin = false;\r\n    //         this.router.navigate([\"/\"]);\r\n    //     }, err => {\r\n    //         this.invalidLogin = true;\r\n    //     });\r\n    // }\r\n\r\n    \r\n\r\n}","<div class=\"border-top footer text-muted  bg-success mat-elevation-z8\" style=\"position: fixed; \r\n    box-shadow: 8px 4px 8px 8px rgba(0, 0, 0, 0.2), 60px 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n    height: 25px;\r\n    \r\n    margin: 0px;\r\n    bottom: 0;\r\n    width: 100%;\r\n    z-index: 40;\">\r\n    <div style=\"color: white;\r\n        vertical-align: middle;\r\n        margin-left: 10px;\">\r\n        &copy; Invictus - 2021\r\n    </div>\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { AdmService } from \"../services/adm.services\";\r\nimport { CreateColaboradorModalConfig, EditColaboradorModalConfig } from \"../services/modal.config\";\r\nimport { CreateColaboradoresComponent } from \"./createModal/createcolaboradores.component\";\r\nimport { EditColaboradoresComponent } from \"./editModal/editcolaboradores.component\";\r\n\r\n\r\n@Component({\r\n    selector: \"colaboradores-app\",\r\n    templateUrl: './colaboradores.component.html',\r\n    styleUrls: ['./colaboradores.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ColaboradoresComponent implements OnInit {\r\n\r\n    // paginated\r\n    length: number = 0\r\n    pageSize: number = 5;\r\n    pageEvent: PageEvent;\r\n    pageIndexNumber: number = 0;\r\n    currentPageTeste = 1\r\n\r\n    // baseUrl\r\n    //baseUrl = environment.baseUrl;\r\n\r\n    colaboradores: any[] = new Array<any>();\r\n\r\n    spinnerSearch = 'hidden'\r\n    showMessageNoColaborador = false\r\n    mensagem: string = \"\";\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public pesquisarForm: FormGroup\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator\r\n\r\n    constructor(\r\n        private _admService: AdmService,\r\n       // private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog\r\n    ) {\r\n        this.pesquisarForm = _fb.group({\r\n            nome: ['', [Validators.required]],\r\n            email: ['', [Validators.required]],\r\n            cpf: ['', [Validators.required]],\r\n            ativo: [false],\r\n            todasUnidades:[false]\r\n        });\r\n\r\n        this.pesquisarForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n\r\n                if (this.pesquisarForm.get('nome').value == '' &&\r\n                    this.pesquisarForm.get('email').value == '' &&\r\n                    this.pesquisarForm.get('cpf').value == '') {\r\n\r\n                    this.pesquisarForm.controls['nome'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['email'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['cpf'].setErrors({ required: true });\r\n                } else {\r\n                    this.pesquisarForm.controls['nome'].setErrors(null);\r\n\r\n                    this.pesquisarForm.controls['email'].setErrors(null)\r\n\r\n                    this.pesquisarForm.controls['cpf'].setErrors(null);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n    }\r\n\r\n    //OnSelect\r\n\r\n    onSubmit(event?: any) {\r\n\r\n        this.showMessageNoColaborador = false\r\n\r\n        if (this.pesquisarForm.valid) {\r\n            this.spinnerSearch = 'visible'\r\n\r\n            if (event != undefined) {\r\n                this.currentPageTeste = event.pageIndex + 1\r\n            } else {\r\n                this.currentPageTeste = 1\r\n            }\r\n\r\n            this._admService.getColaboradores(this.pageSize, this.currentPageTeste, this.pesquisarForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.processarSucesso(sucesso, event) },\r\n                    falha => { this.processarFalha(falha) }\r\n                );\r\n        }\r\n\r\n    }\r\n\r\n    processarSucesso(response: any, event?: any) {\r\n\r\n        this.colaboradores = Object.assign([], response['data']);\r\n\r\n        this.length = response['totalItemsInDatabase']\r\n\r\n        this.spinnerSearch = 'hidden'\r\n        if (event != undefined) {\r\n            this.pageIndexNumber = (event.pageIndex * this.pageSize)\r\n        } else {\r\n            this.pageIndexNumber = 0\r\n            console.log(this.paginator)\r\n            if (this.paginator != undefined) {\r\n                this.paginator.firstPage();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    processarFalha(fail: any) {\r\n\r\n        if (fail['status'] == 404) {\r\n            this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n            this.showMessageNoColaborador = true\r\n            this.colaboradores = new Array<any>();\r\n        }\r\n        if (fail['status'] != 404) {\r\n            this.mensagem = \"Ocorreu um erro desconhecido, por favor, procure o administrador do sistema\"\r\n            this.showMessageNoColaborador = true\r\n            this.colaboradores = new Array<any>();\r\n        }\r\n\r\n        this.spinnerSearch = 'hidden'\r\n    }\r\n\r\n    get disabledOpenEditButton() {\r\n\r\n        return this.spinnerSearch != 'hidden'\r\n    }\r\n\r\n    openCreateUserModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(CreateColaboradoresComponent, CreateColaboradorModalConfig());\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n\r\n        });\r\n    }\r\n\r\n    openEditUserModal(item: Colaborador): void {\r\n        const dialogRef = this._modal\r\n            .open(EditColaboradoresComponent, EditColaboradorModalConfig(item));\r\n        dialogRef.afterClosed().subscribe(data => {\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Parametros {\r\n    constructor(\r\n        public nome?: string,\r\n        public email?: string,\r\n        public cpf?: string) { }\r\n}","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <div>\r\n        <i #tooltip=\"matTooltip\" matTooltip=\"cadastrar colaborador\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openCreateUserModal()\" mat-icon-button>\r\n                <mat-icon>person_add_alt</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n\r\n    <br>\r\n\r\n\r\n    <form [formGroup]=\"pesquisarForm\" (ngSubmit)=\"onSubmit()\" class=\"form-inline siteForm\">\r\n\r\n        <span >Digite ao menos um dos\r\n            campos para\r\n            pesquisar pelo colaborador:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center\">\r\n\r\n            <mat-form-field appearance=\"standard\">\r\n                <mat-label>Nome</mat-label>\r\n                <input formControlName=\"nome\" selected matInput placeholder=\"digite o nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-label>E-mail</mat-label>\r\n                <input formControlName=\"email\" selected matInput placeholder=\"digite o E-mail\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field >\r\n                <mat-label>CPF</mat-label>\r\n                <input mask=\"000.000.000-00\" formControlName=\"cpf\" selected matInput placeholder=\"digite o CPF\">\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button type=\"submit\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n            <span style=\"margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n                incluir inativos:\r\n            </span>\r\n\r\n            <mat-checkbox formControlName=\"ativo\" color=\"primary\"></mat-checkbox>\r\n\r\n            <span style=\"margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n                todas unidades:\r\n            </span>\r\n            <mat-checkbox disabled formControlName=\"todasUnidades\" color=\"primary\"></mat-checkbox>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n\r\n    <div class=\"card-header card-msg-response\" unselectable=\"on\"\r\n        *ngIf=\"showMessageNoColaborador\">{{mensagem}}</div>\r\n\r\n    <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"spinnerSearch\"  @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n    <div @rowHighlight *ngIf=\"colaboradores.length > 0\" class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n            position: relative;\r\n            margin-top: 20px;\r\n            box-shadow: 0 0 1em rgb(172, 170, 170);\r\n            background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\" style=\"background-color: rgb(207, 231, 207);\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Colaboradores</h4>\r\n            <p class=\"card-category\"> Colaboradores localizados no sistema: </p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive table-colaborador\" >\r\n\r\n                <table color=\"primary\" class=\"table\">\r\n                    <thead>\r\n                        <tr >\r\n                            <th ></th>\r\n\r\n                            <th >NOME</th>\r\n\r\n                            <th >E-MAIL</th>\r\n\r\n                            <th >ATIVO</th>\r\n\r\n                            <th ></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of colaboradores;let i = index;\" @rowHighlight>\r\n                           \r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{(i + 1)+(pageIndexNumber)}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.email}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n\r\n                                <div *ngIf=\"item.ativo == true;else inativo\">\r\n\r\n                                    <mat-icon style=\"font-size: 1.3em;\r\n                                        background-color: rgb(227, 240, 227);color: green;\" >\r\n                                        done</mat-icon>\r\n\r\n\r\n                                </div>\r\n                                <ng-template #inativo>\r\n\r\n                                    <mat-icon style=\"background-color: rgb(227, 240, 227);font-size: 1.3em;\r\n                                            color: red; \">close</mat-icon>\r\n\r\n\r\n                                </ng-template>\r\n\r\n                            </td>\r\n\r\n                            <td style=\"position: relative;text-align:center; \r\n                            vertical-align: middle;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"disabledOpenEditButton\" (click)=\"openEditUserModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon  >settings</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <mat-paginator *ngIf=\"length > 5\" style=\"\r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" \r\n                \r\n                [length]=\"length\"\r\n                 [pageSize]=\"pageSize\" hidePageSize=\"true\"\r\n                (page)=\"pageEvent = onSubmit($event)\">\r\n            </mat-paginator>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, ElementRef } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { CreateProfessorModalConfig, ProfCalendarioModalConfig, ProfEditModalConfig, ProfRelatorioModalConfig } from \"../services/modal.config\";\r\nimport { CreateProfessorComponent } from \"./CreateModal/createprofessor.component\";\r\nimport { EditProfessorComponent } from \"./EditModal/editprofessor.component\";\r\nimport { ProfMateriasComponent } from \"./Materias/prof-materias.component\";\r\nimport { ProfCalendarioComponent } from \"./ProfCalendario/prof-calendario.component\";\r\nimport { ProfRelatorioComponent } from \"./Relatorio/prof-relatorio.component\";\r\n\r\n\r\n@Component({\r\n    selector: \"professores-app\",\r\n    templateUrl: './professores.component.html',\r\n    styleUrls: ['./professores.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ProfessoresComponent {\r\n\r\n    // paginated\r\n    pageIndexNumber: number = 0;\r\n    public spinnerSearch = 'hidden'\r\n    actualPage = 1\r\n    paginationInfo: IPager;\r\n    pageSize: number = 5;\r\n    pageEvent: PageEvent;\r\n    length: number = 0\r\n    public totalPages: number = 0\r\n    \r\n\r\n\r\n    professores: any[] = new Array<any>();//Colaborador[] = new Array<Colaborador>();\r\n    baseUrl = environment.baseUrl;\r\n\r\n\r\n\r\n\r\n    formSubmitted: boolean = false;\r\n    showTable: boolean = false;\r\n    showSpinner = false\r\n    showSpinnerFirst = false\r\n\r\n    incluirInativos = false\r\n\r\n    showMessage: boolean = false;\r\n    cargos = Cargos;\r\n    unidades = Unidades\r\n    showMessageNoColaborador = false\r\n    mensagem: string = \"\";\r\n\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    private jwtHelper = new JwtHelperService();\r\n\r\n    public pesquisarForm: FormGroup\r\n    //pagination\r\n\r\n\r\n    constructor(\r\n       // private elementRef: ElementRef,\r\n        private http: HttpClient,\r\n        private _fb: FormBuilder,\r\n       // private CreateColaboradoresModal: MatDialog,\r\n        private _modal: MatDialog) {\r\n        this.pesquisarForm = _fb.group({\r\n            nome: ['', [Validators.required]],\r\n            email: ['', [Validators.required]],\r\n            cpf: ['', [Validators.required]],\r\n            ativo: [false],\r\n            todasUnidades:[false]\r\n        });\r\n\r\n        this.pesquisarForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n                // console.log('form changed to:', form);\r\n                if (this.pesquisarForm.get('nome').value == '' &&\r\n                    this.pesquisarForm.get('email').value == '' &&\r\n                    this.pesquisarForm.get('cpf').value == '') {\r\n                    //  console.log('false valid')\r\n\r\n                    this.pesquisarForm.controls['nome'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['email'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['cpf'].setErrors({ required: true });\r\n                    // this.pesquisarForm.setErrors({required: true});\r\n                } else {\r\n                    //   console.log('true valid')\r\n                    this.pesquisarForm.controls['nome'].setErrors(null);\r\n\r\n                    this.pesquisarForm.controls['email'].setErrors(null)\r\n\r\n                    this.pesquisarForm.controls['cpf'].setErrors(null);\r\n\r\n                    //this.pesquisarForm.setErrors({required: false});\r\n\r\n\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n    ngOnInit() {\r\n        // console.log('init colaboradores 123')\r\n        const token = localStorage.getItem('jwt')\r\n    }\r\n\r\n    pageIndex = 0\r\n    get page() {\r\n        return console.log('page')\r\n    }\r\n\r\n    onSubmit(form?: any, event?: any) {\r\n        this.showMessageNoColaborador = false\r\n        var formJson = JSON.stringify(this.pesquisarForm.value)\r\n        this.showSpinner = true\r\n        if (this.pesquisarForm.valid) {\r\n            this.spinnerSearch = 'visible'\r\n            this.http.get(`${this.baseUrl}/professor/?itemsPerPage=` + this.pageSize + `&currentPage=1&paramsJson=${formJson}`)\r\n                .subscribe(\r\n                    (response) => {\r\n\r\n                        this.professores = Object.assign([], response['results'].data);\r\n\r\n                        this.length = response['totalItemsInDatabase']\r\n                        this.totalPages = Math.ceil(this.length / this.pageSize)\r\n                       // console.log(this.totalPages)\r\n                        if (this.professores.length == 0) {\r\n                            // console.log(\"lengt zero\")\r\n                            this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n                            this.showMessageNoColaborador = true\r\n                        }\r\n                        // this.applyFiler()\r\n                    },\r\n                    (err) => {\r\n                        if (err['status'] == 404) {\r\n                            this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n                            this.showMessageNoColaborador = true\r\n                            this.professores = new Array<any>();\r\n                        }\r\n                        if (err['status'] != 404) {\r\n                            this.mensagem = \"Ocorreu um erro desconhecido, por favor, procure o administrador do sistema\"\r\n                            this.showMessageNoColaborador = true\r\n                            this.professores = new Array<any>();\r\n                        }\r\n\r\n                        this.showSpinnerFirst = false\r\n                        this.showSpinner = false\r\n                        // console.log(err)\r\n                         this.spinnerSearch = 'hidden'\r\n                        //this.openSnackBar(err)\r\n\r\n                    },\r\n                    () => {\r\n                        this.showMessageNoColaborador = false\r\n                        this.showSpinnerFirst = false\r\n                        this.showSpinner = false\r\n                        this.spinnerSearch = 'hidden'\r\n                        //  console.log('ok get');\r\n\r\n                        //this.pageIndexNumber = (evento.pageIndex * this.pageSize)\r\n                    },\r\n                )\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    changePage(event?: any, element?: any) {\r\n        console.log(event)\r\n        //console.log(element.target)\r\n\r\n        this.showSpinner = true\r\n        this.showMessageNoColaborador = false\r\n        var formJson = JSON.stringify(this.pesquisarForm.value)\r\n        var currentPage = event.pageIndex + 1\r\n        if (this.pesquisarForm.valid) {\r\n            this.http.get(`${this.baseUrl}/colaboradores/pesquisar/?itemsPerPage=${this.pageSize}&currentPage=${currentPage}&paramsJson=${formJson}`)\r\n                .subscribe(\r\n                    (response) => {\r\n\r\n                        this.professores = Object.assign([], response['data']);\r\n\r\n                        this.length = response['totalItemsInDatabase']\r\n\r\n                        if (this.professores.length == 0) {\r\n                            // console.log(\"lengt zero\")\r\n                            this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n                            this.showMessageNoColaborador = true\r\n                        }\r\n                        // this.applyFiler()\r\n                    },\r\n                    (err) => {\r\n                        this.showSpinnerFirst = false\r\n                        this.showSpinner = false\r\n                        // console.log(err)\r\n                        //this.openSnackBar(err)\r\n\r\n                    },\r\n                    () => {\r\n                        this.showMessageNoColaborador = false\r\n                        this.showSpinnerFirst = false\r\n                        this.showSpinner = false\r\n                        //  console.log('ok get');\r\n                        this.pageIndexNumber = (event.pageIndex * this.pageSize)\r\n                        //this.pageIndexNumber = (evento.pageIndex * this.pageSize)\r\n                    },\r\n                )\r\n        }\r\n\r\n    }\r\n\r\n    public OpenProfCalendarioodal(prof): void {\r\n        const dialogRef = this._modal\r\n            .open(ProfCalendarioComponent, ProfCalendarioModalConfig(prof));\r\n        dialogRef.afterClosed().subscribe(data => {\r\n        });\r\n    }\r\n\r\n    public OpenProfRelatorio(prof):void{\r\n        const dialogRef = this._modal\r\n            .open(ProfRelatorioComponent, ProfRelatorioModalConfig(prof));\r\n        dialogRef.afterClosed().subscribe(data => {\r\n        });\r\n    }\r\n\r\n    openCreateUserModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(CreateProfessorComponent, CreateProfessorModalConfig());\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data.clicked == true) this.getColaboradores(1, this.pageSize);\r\n        });\r\n    }\r\n\r\n    \r\n    public openEditUserModal(prof):void{\r\n        const dialogRef = this._modal\r\n            .open(EditProfessorComponent, ProfEditModalConfig(prof));\r\n        dialogRef.afterClosed().subscribe(data => {\r\n        });\r\n    }\r\n\r\n    // openEditUserModal(prof: any): void { // ProfEditModalConfig\r\n    //     const dialogRef = this._modal\r\n    //         .open(EditProfessorComponent, {\r\n    //             height: '520px',\r\n    //             width: '680px',\r\n\r\n    //             data: { prof: prof },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n\r\n    //     });\r\n    // }\r\n\r\n    getColaboradores(actualPage: number, pageSize: number) {\r\n\r\n        var itemsPerPage = pageSize;\r\n        var currentPage = actualPage;\r\n\r\n        this.http.get(`${this.baseUrl}/colaboradores/?itemsPerPage=` + itemsPerPage + `&currentPage=` + currentPage, {\r\n            //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n            // headers: new HttpHeaders({\r\n            //     \"Content-Type\": \"application/json\",\r\n            //     \"Authorization\": \"Bear \"\r\n            // })\r\n        }).subscribe(response => {\r\n\r\n            console.log(response)\r\n            this.professores = Object.assign([], response['data'])\r\n            this.length = response['totalItemsInDatabase']\r\n            console.log(this.length)\r\n            console.log(this.professores)\r\n            // this.dialogRef.close();\r\n        }, err => { console.log(err) },\r\n            () => { });\r\n\r\n    }\r\n\r\n\r\n    params: Parametros = new Parametros()\r\n\r\n\r\n    paginationChange(pageEvt: PageEvent) {\r\n        console.log(pageEvt)\r\n\r\n    }\r\n\r\n    openProfMateriasModal(prof):void{\r\n        const dialogRef = this._modal\r\n            .open(ProfMateriasComponent, {\r\n                //minHeight: '520px',\r\n                width: '880px',\r\n              //  panelClass: 'my-class',\r\n                data: { prof: prof },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                \r\n              //  console.log('afte close ok')\r\n                this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Cancel\") {\r\n               \r\n            }\r\n        });\r\n    }\r\n    \r\n    \r\n    // openCreateUserModal(): void {\r\n    //     const dialogRef = this._modal\r\n    //         .open(CreateProfessorComponent, {\r\n    //             minHeight: '420px',\r\n    //             width: '680px',\r\n\r\n    //             //data: { Hello: \"Hello World\" },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n\r\n\r\n    //     dialogRef.afterClosed().subscribe((data) => {\r\n    //         if (data.clicked === \"Ok\") {\r\n    //             // Reset form here\r\n    //             console.log('afte close ok')\r\n    //             this.getColaboradores(1, this.pageSize);\r\n    //         } else if (data.clicked === \"Cancel\") {\r\n    //             // Do nothing. Cancel any events that navigate away from the\r\n    //             // component.\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    \r\n\r\n    deleteColaborador(id: number) {\r\n\r\n        this.http.delete(`${this.baseUrl}/colaboradores/${id}`, {\r\n            //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bear \"\r\n            })\r\n        }).subscribe(response => {\r\n\r\n            console.log(response)\r\n\r\n        }, err => { console.log(err) },\r\n            () => {\r\n                // TODO mudar status e perfil acesso\r\n            });\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface IPager {\r\n    itemsPerPage?: number;\r\n    totalItemsInDatabase?: number;\r\n    currentPage?: number;\r\n    totalPages?: number;\r\n    items?: number;\r\n}\r\n\r\nexport class Parametros {\r\n    constructor(\r\n        public nome?: string,\r\n        public email?: string,\r\n        public cpf?: string) { }\r\n}","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <div>\r\n        <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"cadastrar professor\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openCreateUserModal()\" mat-icon-button>\r\n                <mat-icon>person_add_alt</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n\r\n    <br>\r\n\r\n\r\n    <form [formGroup]=\"pesquisarForm\" (ngSubmit)=\"onSubmit()\" class=\"form-inline siteForm\"\r\n        style=\"margin-top: 5px;display: inline-block\">\r\n\r\n        <span color=\"primary\" style=\"font-size: 0.9em;font-style: italic;\">Digite ao menos um dos\r\n            campos para\r\n            pesquisar pelo professor:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center divSiteForm\">\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"\">\r\n                <mat-label>Nome</mat-label>\r\n                <input formControlName=\"nome\" selected matInput placeholder=\"digite o nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"margin-left: 10px;\">\r\n                <mat-label>E-mail</mat-label>\r\n                <input formControlName=\"email\" selected matInput placeholder=\"digite o E-mail\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"width: 120px;margin-left: 10px;\">\r\n                <mat-label>CPF</mat-label>\r\n                <input mask=\"000.000.000-00\" formControlName=\"cpf\" selected matInput placeholder=\"digite o CPF\">\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button type=\"submit\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n            <span style=\"margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n                incluir inativos:\r\n            </span>\r\n            <mat-checkbox formControlName=\"ativo\" color=\"primary\"></mat-checkbox>\r\n            <span style=\"margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n                todas unidades:\r\n            </span>\r\n            <mat-checkbox disabled formControlName=\"todasUnidades\" color=\"primary\"></mat-checkbox>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n\r\n    <div class=\"card-header card-msg-response\" unselectable=\"on\"\r\n         *ngIf=\"showMessageNoColaborador\">{{mensagem}}</div>\r\n\r\n\r\n        <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"spinnerSearch\"  @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n    <div @rowHighlight *ngIf=\"professores.length > 0\" class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n            position: relative;\r\n            margin-top: 20px;\r\n            box-shadow: 0 0 1em rgb(172, 170, 170);\r\n            background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\" style=\"background-color: rgb(207, 231, 207);\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Professores</h4>\r\n            <p class=\"card-category\"> Professores localizados no sistema: </p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 330px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead >\r\n                        <tr style=\"\">\r\n                            <th style=\"width: 2%; \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 32%;font-size:1em;\r\n                                    vertical-align: middle;\r\n                                    text-align:left;\r\n                    border-top: 0px; font-weight: 400;\">NOME</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">EMAIL</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">ACESSO AO SISTEMA\r\n                            </th>\r\n\r\n                            <th style=\"width: 6%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">ATIVO</th>\r\n\r\n                            <th style=\"width: 20%;\r\n                    border-top: 0px;\r\n                    text-align:center; \r\n                    vertical-align: middle;\"></th>\r\n\r\n                            <!-- <th style=\"width: 6%;\r\n                    border-top: 0px;\">\r\n                            </th> -->\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of professores;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{(i + 1)+(pageIndexNumber)}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.email}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.perfil || 'Sem acesso'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                <div *ngIf=\"item.ativo == true;else inativo\">\r\n\r\n                                    <mat-icon style=\"margin: 0px; margin: 0px;\r\n                                        background-color: rgb(227, 240, 227);;color: green;\" style=\"color: green;\">\r\n                                        done</mat-icon>\r\n\r\n\r\n                                </div>\r\n                                <ng-template #inativo>\r\n\r\n                                    <mat-icon style=\"background-color: rgb(227, 240, 227);\r\n                                            margin: 0px; margin: 0px;color: red; \">close</mat-icon>\r\n\r\n\r\n                                </ng-template>\r\n\r\n                            </td>\r\n\r\n                            <td style=\"position: relative;text-align:center; \r\n                            vertical-align: middle;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"matérias\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"openProfMateriasModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>import_contacts</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"openEditUserModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"calendário do professor\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"OpenProfCalendarioodal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>calendar_month</mat-icon>\r\n                                    </button>\r\n                                </i> \r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"relatório de horas\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button [disabled]=\"showSpinner\" (click)=\"OpenProfRelatorio(item)\"\r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>pending_actions</mat-icon>\r\n                                </button>\r\n                            </i> \r\n\r\n\r\n                            </td>\r\n                            <!-- <td style=\"position: relative;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"deletar\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"deleteColaborador(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>delete_outline</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                            </td> -->\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <mat-paginator *ngIf=\"length > 5\" style=\"\r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" #element [length]=\"length\" [pageSize]=\"pageSize\" hidePageSize=\"true\"\r\n                (page)=\"pageEvent = changePage($event)\">\r\n            </mat-paginator>\r\n\r\n        </div>\r\n\r\n        <!-- <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n            top: 46.5%; \r\n            position: absolute;\">\r\n        </mat-spinner> -->\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { AdmService } from \"src/app/Adm/services/adm.services\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { NewMatriculaService } from \"../../services/newmatricula.service\";\r\n\r\n@Component({\r\n    selector: 'createnovamatriculamodal',\r\n    templateUrl: './relatoriomatricula.component.html',\r\n    styleUrls: ['./relatoriomatricula.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class RelatorioMatriculaComponent implements OnInit {\r\n\r\n    public initProgressBar = 'visible'\r\n    public showForm = false\r\n    public showTable = false\r\n    public msgNoRegistro = false\r\n    public turmas: any[] = new Array<any>()\r\n    public matriculas: any[] = new Array<any>()\r\n\r\n    public pesquisaForm: FormGroup\r\n    constructor(\r\n        private _matService: NewMatriculaService,\r\n        private _helper: HelpersService,\r\n        private _admService: AdmService,\r\n        private _fb: FormBuilder,\r\n        public dialogRef: MatDialogRef<RelatorioMatriculaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.pesquisaForm = _fb.group({\r\n            opcao: ['', [Validators.required]],\r\n            inicio: [''],\r\n            fim: [''],\r\n            turmaId: ['']\r\n        })\r\n\r\n        this.pesquisaForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n\r\n                console.log('get form valid')\r\n                if (this.pesquisaForm.get('opcao').valid) {\r\n\r\n                    if (this.pesquisaForm.get('opcao').value == 'periodo') {\r\n                        console.log('get form periodo')\r\n                        this.pesquisaForm.get('inicio').setValidators([Validators.required]);\r\n                        this.pesquisaForm.get('fim').setValidators([Validators.required]);\r\n                        this.pesquisaForm.get('turmaId').setValidators([]);\r\n\r\n\r\n                    } else {\r\n                        console.log('get form turma')\r\n                        this.pesquisaForm.get('inicio').setValidators([]);\r\n                        this.pesquisaForm.get('fim').setValidators([]);\r\n                        this.pesquisaForm.get('turmaId').setValidators([Validators.required]);\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.GetTurmasDaUnidade();\r\n    }\r\n\r\n    public GetTurmasDaUnidade() {\r\n\r\n        this._admService.GetTodasTurmasDaUnidade()\r\n            .subscribe(\r\n                sucesso => { this.GetTurmasSucesso(sucesso) },\r\n                falha => { this.GetTurmasFalha(falha) }\r\n            )\r\n    }\r\n\r\n    private GetTurmasSucesso(resp) {\r\n\r\n        this.turmas = resp['turmas']\r\n        this.initProgressBar = 'hidden'\r\n        this.showForm = true\r\n\r\n    }\r\n\r\n    private GetTurmasFalha(error) {\r\n        this.initProgressBar = 'hidden'\r\n        this._helper.openSnackBarErrorDefault()\r\n    }\r\n\r\n    public Pesquisar(form) {\r\n        if (this.pesquisaForm.valid) {\r\n            this.initProgressBar = 'visible'\r\n            this.msgNoRegistro = false\r\n            this._matService.GetMatriculaRelatorio(this.pesquisaForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.PesquisarSucesso(sucesso) },\r\n                    falha => { this.PesquisarFalha(falha) }\r\n                )\r\n        }\r\n    }\r\n\r\n    private PesquisarSucesso(resp) {\r\n        this.matriculas = resp['matriculas']\r\n        this.initProgressBar = 'hidden'\r\n        this.showTable = false\r\n        this.dialogRef.addPanelClass('relatmatricula-class')\r\n        this.showTable = true\r\n\r\n    }\r\n\r\n    private PesquisarFalha(error) {\r\n        this.initProgressBar = 'hidden'\r\n        this.showTable = false\r\n        if (error['status'] == 404) { // relatsemmatricula\r\n            // this.dialogRef.addPanelClass('relatsemmatricula-class')\r\n            this.msgNoRegistro = true\r\n        } else {\r\n            // this.dialogRef.addPanelClass('relatsemmatricula-class')\r\n            this._helper.openSnackBarErrorDefault()\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","<div style=\"font-size: 1.2em;\">\r\n    Relatório de matrículas\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<div *ngIf=\"showForm\" style=\"\">\r\n\r\n    <hr>\r\n    <form novalidate [formGroup]=\"pesquisaForm\" style=\"\" (ngSubmit)=\"Pesquisar(pesquisaForm)\">\r\n\r\n\r\n        <mat-radio-group formControlName=\"opcao\" aria-label=\"Select an option\">\r\n            <mat-radio-button color=\"primary\" value=\"periodo\">por período</mat-radio-button>\r\n            <mat-radio-button color=\"primary\" style=\"margin-left:5px\" value=\"turma\">por turma</mat-radio-button>\r\n        </mat-radio-group>\r\n\r\n        <br>\r\n\r\n        <ng-container *ngIf=\"pesquisaForm.get('opcao').valid\">\r\n\r\n            <div *ngIf=\"pesquisaForm.get('opcao').value == 'periodo';else turma\">\r\n                <mat-form-field style=\"margin-top: 15px;\" appearance=\"standard\">\r\n                    <mat-label>Selecione o período</mat-label>\r\n                    <mat-date-range-input [rangePicker]=\"picker\">\r\n                        <input matStartDate formControlName=\"inicio\" placeholder=\"início\">\r\n                        <input matEndDate formControlName=\"fim\" placeholder=\"fim\">\r\n                    </mat-date-range-input>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-date-range-picker #picker></mat-date-range-picker>\r\n\r\n                </mat-form-field>\r\n\r\n\r\n                <span>\r\n                    <i #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                        matTooltipHideDelay=\"100\">\r\n                        <button type=\"submit\" mat-icon-button>\r\n                            <mat-icon>search</mat-icon>\r\n                        </button>\r\n                    </i>\r\n                </span>\r\n\r\n            </div>\r\n            <ng-template #turma>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-top: 15px;\">\r\n                    <mat-label>Turma</mat-label>\r\n                    <mat-select formControlName=\"turmaId\" selected>\r\n                        <mat-option></mat-option>\r\n                        <mat-option *ngFor=\"let turma of turmas\" [value]=\"turma.id\">{{turma.descricao}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n\r\n                <span>\r\n                    <i #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                        matTooltipHideDelay=\"100\">\r\n                        <button type=\"submit\" mat-icon-button>\r\n                            <mat-icon>search</mat-icon>\r\n                        </button>\r\n                    </i>\r\n                </span>\r\n\r\n            </ng-template>\r\n\r\n\r\n        </ng-container>\r\n\r\n    </form>\r\n\r\n    <div *ngIf=\"showTable\">\r\n\r\n        <span style=\"font-size: 0.9em;font-style: italic;\">Matrículas: {{ matriculas.length }}</span>\r\n\r\n        <br>\r\n\r\n        <div class=\"table-responsive\">\r\n            <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th style=\"width: 2%; \r\n                        text-align:left; \r\n                        vertical-align: middle;\r\n                        border-top: 0px;\"></th>\r\n\r\n\r\n                        <th style=\"width: 35%;font-size:0.9em;\r\n                        vertical-align: middle; \r\n                        text-align:left;\r\n                        border-top: 0px; font-weight: 400;\">ALUNO</th>\r\n\r\n                        <th style=\"width: 21%;font-size:0.9em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">TURMA</th>\r\n\r\n                        <th style=\"width: 12%;font-size:0.9em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">DATA MATRÍCULA</th>\r\n\r\n                        <th style=\"width: 30%;font-size:0.9em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">RESPONSÁVEL<br>PELA MATRÍCULA</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    <tr *ngFor=\"let mat of matriculas; let i = index;\">\r\n                        <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">\r\n                            {{i + 1}}\r\n                        </td>\r\n\r\n                        <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                            {{mat.alunoNome}}\r\n                        </td>\r\n\r\n                        <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                            {{mat.descricao}} - {{mat.identificador}}\r\n                        </td>\r\n\r\n                        <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                            {{mat.diaMatricula | date:'d/M/yyyy H:mm'}}\r\n                        </td>\r\n\r\n                        <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                            {{mat.colaboradorNome}}\r\n                        </td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    </div>\r\n    <div *ngIf=\"msgNoRegistro\">\r\n        <span style=\"font-size: 0.9em; font-style: italic;\">Nenhum registro encontrado.</span>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n\r\n\r\n\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'createcontratomodal',\r\n    templateUrl: './create-contrato.component.html',\r\n    styleUrls: ['./create-contrato.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class CreateContratoComponent implements OnInit {\r\n    public htmlContent: string = \"\";\r\n    public typePacotes: any\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n    // pageEvent: PageEvent;\r\n    baseUrl = environment.baseUrl;\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    public contratoForm: FormGroup;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public validadeEmailMsg = false\r\n    public validadeCPFMsg = false\r\n    cargos = Cargos;\r\n    mensagem = \"\";\r\n    showMensagem = false\r\n    //public bairro: string = null;\r\n    //@Input() disabled = true;\r\n    unidades = Unidades;//: string[] = new Array(\"Campo Grande II\", \"Jacarepaguá\");\r\n    constructor(\r\n        //private service: AdmService,\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<CreateContratoComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.contratoForm = _fb.group({\r\n            titulo: ['', [Validators.required]],\r\n            typePacoteId: ['', [Validators.required]],\r\n            ativo: [true],\r\n            conteudo: ['', [Validators.required]],\r\n\r\n        })\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.GetTypes()\r\n\r\n    }\r\n\r\n    private GetTypes() {\r\n\r\n        this._http.get(`${this.baseUrl}/typepacote`)\r\n            .subscribe(resp => {\r\n                this.typePacotes = resp['typePacotes']\r\n            },\r\n                (error) => {\r\n                    // this.CapturarErro()\r\n                    console.log(error)\r\n                    console.log(error['status'])\r\n                    if (error['status'] == 404) {\r\n\r\n                    }\r\n\r\n\r\n                },\r\n                () => { })\r\n    }\r\n\r\n    showConteudo(valor){\r\n\r\n        console.log(valor['textArea'].nativeElement)\r\n\r\n    }\r\n\r\n    onSubmit(form: FormGroup) {\r\n        console.log(this.htmlContent)\r\n\r\n        console.log(form.value)\r\n        console.log(this.htmlContent)\r\n\r\n        if (this.contratoForm.valid) {\r\n\r\n            this._http.post(`${this.baseUrl}/contrato`, form.value, {})\r\n                .subscribe(resp => {\r\n\r\n                }, (error) => { console.log(error) },\r\n                    () => {\r\n                        this.dialogRef.close({ clicked: \"OK\" });\r\n                    })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Criar Contrato\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n<div style=\"font-size: 0.8em;margin-top: 5px;\">* O contrato poderá ser visualizado, utilizado e editado por todas as unidades.</div>\r\n\r\n<hr>\r\n\r\n<form novalidate [formGroup]=\"contratoForm\" (ngSubmit)=\"onSubmit(contratoForm)\">\r\n\r\n    <!-- <div class=\"card-body\"> -->\r\n    <mat-form-field appearance=\"standard\" style=\"width: 250px; \">\r\n        <mat-label>Título</mat-label>\r\n        <input selected formControlName=\"titulo\" required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 350px;margin-left: 10px;\">\r\n        <mat-label>Pacote</mat-label>\r\n        <mat-select formControlName=\"typePacoteId\" placeholder=\"\">\r\n            <mat-option \r\n            [value]=\"type.id\"\r\n            *ngFor=\"let type of typePacotes\" >\r\n                {{type.nome}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-slide-toggle style=\"width: 70px; margin-left: 40px;\" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n            formControlName=\"ativo\" required matTooltip=\"ativo/inativo\" [required]=\"false\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"250\" color=\"primary\">\r\n        </mat-slide-toggle>\r\n    <br>\r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Pacote</mat-label>\r\n        <input selected formControlName=\"nome\" required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field> -->\r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 200px;margin-left: 5px;\">\r\n        <mat-label>Modalidade</mat-label>\r\n        <mat-select formControlName=\"pacoteId\" placeholder=\"modalidade\">\r\n            <mat-option [value]=\"1\">APH/Enfermageme</mat-option>\r\n           \r\n        </mat-select>\r\n    </mat-form-field>\r\n    <br> -->\r\n\r\n    <div>\r\n        <!-- Configurações! <br> -->\r\n        <angular-editor color=\"primary\" disabled [placeholder]=\"'Enter text here...'\" formControlName=\"conteudo\"></angular-editor>\r\n        <!-- <angular-editor color=\"primary\"  [innerHTML]=\"htmlContent\" ></angular-editor> -->\r\n\r\n\r\n        <br>\r\n        <button type=\"submit\" color=\"primary\" mat-raised-button disabled=\"false\"\r\n            style=\"float:right;margin-bottom: 0px;margin-left: 10px;\" [disabled]=\"!contratoForm.valid\">\r\n            Salvar\r\n        </button>\r\n        <br>\r\n    </div>\r\n\r\n    <!-- <div [innerHTML]=\"mensagem\"> -->\r\n\r\n</form>","import { Component, EventEmitter, Inject, Input, OnInit, Output } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { Observable } from \"rxjs\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'testemodal',\r\n    templateUrl: './testemodal.component.html'\r\n    //styleUrls: ['./exportar.component.scss']\r\n})\r\n\r\n\r\nexport class TesteModalComponent implements OnInit {\r\n    //public progress: number;\r\n    //public message: string;\r\n    //baseUrl = environment.baseUrl;\r\n\r\n   // @Output() public onUploadFinished = new EventEmitter();\r\n    constructor(\r\n        private http: HttpClient,\r\n        //private exportLeadModal: MatDialog,\r\n        public dialogRef: MatDialogRef<TesteModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n    // \r\n    ngOnInit() {\r\n\r\n    }\r\n   \r\n\r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n}","<div class=\"container\">\r\n\r\n    <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n        <!-- <mat-card class=\"example-card\">\r\n        <mat-card-header> -->\r\n        <!-- <div mat-card-avatar class=\"example-header-image\"></div> -->\r\n        <div style=\"font-size: 1.2em;\">Cadastro realizado com sucesso!</div>\r\n        <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\r\n\r\n        <div >\r\n            Deseja matricular o aluno em alguma turma?\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n    <div class=\"row\">\r\n        <button style=\"width: 30px;\" [mat-dialog-close]=\"{clicked:'Sim'}\" mat-button>SIM</button>\r\n        <button style=\"width: 30px;\" [mat-dialog-close]=\"{clicked:'Cancel'}\" mat-button>NÃO</button>\r\n    </div>\r\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { ConfirmAcaoModalComponent } from \"src/app/_shared/components/ConfirmarAcao/confirm-acao.component\";\r\nimport { ConfirmAcaoModalConfig } from \"src/app/_shared/models/modal.config\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { Turma, TurmaViewModel } from \"src/app/_shared/models/Turma.model\";\r\n\r\nimport { environment } from \"src/environments/environment\";\r\nimport { AdmService } from \"../services/adm.services\";\r\nimport { OpenTurmaEditmodel } from \"../services/modal.config\";\r\nimport { CalendarioModalComponent } from \"./Calendario/calendario.component\";\r\nimport { ConfirmarIniciarTurmaModal } from \"./confirm/confirmariniciar.component\";\r\nimport { CreateCursoComponent } from \"./CreateModal/createcurso.component\";\r\nimport { EditCursoComponent } from \"./EditModal/editcurso.component\";\r\n\r\n\r\n@Component({\r\n    selector: \"admturmas-app\",\r\n    templateUrl: './admturmas.component.html',\r\n    //styleUrls: ['./admturmas.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class AdmTurmasComponent implements OnInit {\r\n\r\n    public initProgressBar = 'visible'\r\n    pageSize: number = 5;\r\n    pageEvent: PageEvent;\r\n    pageIndexNumber: number = 0;\r\n    cursos: Turma[] = new Array<Turma>();\r\n    baseUrl = environment.baseUrl;\r\n    turmas: any[] = new Array<any>();// TurmaViewModel[] = new Array<TurmaViewModel>()\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n    // colaboradores: Colaborador[] = new Array<Colaborador>();\r\n    currentPage = 1\r\n\r\n    showTurmas = false\r\n    showMessage = false\r\n    showSpinner = false\r\n    mensagem: string;\r\n\r\n    constructor(\r\n        private _admService: AdmService,\r\n        private http: HttpClient,\r\n        private _modal: MatDialog\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        //console.log('init colaboradores 123')\r\n        this.getCursos();\r\n    }\r\n\r\n    iniciarTurma(turmaId): void {\r\n        //console.log(item)\r\n        const dialogRef = this._modal\r\n            .open(ConfirmarIniciarTurmaModal, {\r\n                height: 'auto',\r\n                width: '500px',\r\n\r\n                //maxHeight: '90vh',\r\n                //maxWidth: '400vh',\r\n\r\n                data: { turmaId: turmaId },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result.clicked === true) {\r\n                this.getCursos();\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    get podeDeletar() {\r\n        // console.log(this.tokenInfo)\r\n        return this.tokenInfo.role == 'SuperAdm'\r\n    }\r\n\r\n    PodeAdiar(turma: any) {\r\n        return true\r\n        if (turma.statusAndamento == 'Aguardando início' &&\r\n            turma.previsaoInfo != '3ª previsão') {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n\r\n    }\r\n\r\n    adiar(turmaId: number) {\r\n        console.log('adiar')\r\n        return true\r\n        // this.http.put(`${this.baseUrl}/turma/adiar/${turmaId}`, {}).subscribe(response => {\r\n\r\n        // },\r\n        //     (error) => { console.log(error) },\r\n        //     () => {\r\n        //         this.getCursos();\r\n        //     }\r\n        // )\r\n    }\r\n\r\n    // atualizar() {\r\n    //     var itemsPerPage = 0;\r\n    //     var actualPage = 0;\r\n\r\n    //     this.http.get(`${this.baseUrl}/turmas/?itemsPerPage=` + itemsPerPage + `&currentPage=` + actualPage, {\r\n\r\n\r\n    //         headers: new HttpHeaders({\r\n    //             \"Content-Type\": \"application/json\",\r\n    //             \"Authorization\": \"Bear \"\r\n    //         })\r\n    //     }).subscribe(response => {\r\n\r\n\r\n    //         console.log(response)\r\n    //         Object.assign(this.turmas, response['data'])\r\n    //         Object.assign(this.turmas, response)\r\n    //         console.log(this.turmas)\r\n\r\n    //     }, (err) => {\r\n    //         console.log(err)\r\n    //         this.mensagem = \"Ocorreu um erro! Contate o Administrador!\"\r\n\r\n    //     },\r\n    //         () => {\r\n\r\n\r\n    //         });\r\n    // }\r\n\r\n    getCursos() {\r\n\r\n        var itemsPerPage = 0;\r\n        var actualPage = 0\r\n\r\n        this.showTurmas = false\r\n        this.showMessage = false\r\n        this.showSpinner = true\r\n\r\n        this._admService.GetTodasTurmasDaUnidade()\r\n            .subscribe(\r\n                sucesso => { this.getCursosSucesso(sucesso) },\r\n                falha => { this.getCursosFalha(falha) }\r\n            );\r\n    }\r\n\r\n    getCursosSucesso(response) {\r\n        Object.assign(this.turmas, response['turmas'])\r\n        this.initProgressBar = 'hidden'\r\n        this.showTurmas = true\r\n        this.showMessage = false\r\n        this.showSpinner = false\r\n    }\r\n\r\n    getCursosFalha(erro) {\r\n        this.initProgressBar = 'hidden'\r\n        // console.log(err)\r\n        this.mensagem = \"Não há turmas cadastradas ou em andamento nesta unidade.\"\r\n        this.showTurmas = false\r\n        this.showMessage = true\r\n        this.showSpinner = false\r\n    }\r\n\r\n    createCurso() {\r\n\r\n    }\r\n\r\n    openCreateCursoModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(CreateCursoComponent, {\r\n                height: 'auto',\r\n                width: '720px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                //maxWidth: '400vh',\r\n\r\n                //data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n        //     console.log('The dialog was closed');\r\n        //     // this.animal = result;\r\n        // });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result.clicked === \"OK\") {\r\n                this.getCursos();\r\n                console.log('afte close ok')\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    openCalendarioModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(CalendarioModalComponent, {\r\n                height: 'auto',\r\n                width: '1030px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                maxWidth: '400vh',\r\n\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n        //     console.log('The dialog was closed');\r\n        //     // this.animal = result;\r\n        // });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result.clicked === \"OK\") {\r\n                // this.getCursos(1, this.pageSize);\r\n                console.log('afte close ok')\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    openEditCursoModal(turma): void {\r\n        const dialogRef = this._modal\r\n            .open(EditCursoComponent, OpenTurmaEditmodel(turma));\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n\r\n        });\r\n    }\r\n\r\n    deleteCurso(turma): void {\r\n\r\n        const dialogRef = this._modal\r\n            .open(ConfirmAcaoModalComponent, ConfirmAcaoModalConfig());\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n\r\n            if (data.clicked == true) {\r\n\r\n                this.http.delete(`${this.baseUrl}/dev/deletar-turma/${turma.id}`)\r\n                    .subscribe(\r\n                        response => { }, \r\n                        err => { })\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n","<div class=\"container\" style=\"width: 95%;\">\r\n    <br>\r\n    <!-- <button type=\"submit\" (click)=\"openCreateCursoModal()\" mat-raised-button disabled=\"false\"\r\n        style=\"margin-top: 10px;\r\n        background-color: rgb(109, 218, 109);\">\r\n        criar turma\r\n    </button> -->\r\n\r\n    <span>\r\n        <i style=\"margin-left: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"criar turma\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\" (click)=\"openCreateCursoModal()\">\r\n            <!-- <button style=\"\"  mat-icon-button> -->\r\n            <mat-icon type=\"button\" style=\"font-size: 2em;\">post_add</mat-icon>\r\n            <!-- </button> -->\r\n        </i>\r\n    </span>\r\n    <br>\r\n\r\n    <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n    <div @rowHighlight *ngIf=\"showMessage\" class=\"card-header \" style=\"background-color: rgb(227, 240, 227);\r\n    margin-top: 20px;\r\n    margin-left: 10px;\r\n    width: 350px; \r\n    font-size: 0.9em;box-shadow: 0 0 0.5em rgb(172, 170, 170);\" unselectable=\"on\" o>\r\n        {{mensagem}}\r\n    </div>\r\n\r\n\r\n    <div *ngIf=\"showTurmas\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n    margin-top: 10px;\r\n    box-shadow: 0 0 1em rgb(172, 170, 170);\r\n    background-color: rgb(227, 240, 227);\">\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"text-align:left;margin-top: 10px; \r\n            vertical-align: middle;font-size:1.2em; font-weight: 400;\">\r\n                Turmas</h4>\r\n            unidade {{tokenInfo.Unidade}}\r\n            <!-- <p class=\"card-category\"> </p> -->\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: auto;position: relative;\">\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                            text-align:left; \r\n                            vertical-align: middle;\r\n                            border-top: 0px;\"></th>\r\n\r\n\r\n                            <th style=\"width: 26%;font-size:1em;\r\n                            vertical-align: middle; \r\n                            text-align:left;\r\n                             border-top: 0px; font-weight: 400;\">Turma/Descrição</th>\r\n\r\n                            <th style=\"width: 12%;font-size:1em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">Início</th>\r\n\r\n                            <th style=\"width: 8%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">Vagas</th>\r\n\r\n                            <th style=\"width: 12%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">Matriculados</th>\r\n\r\n                            <th style=\"width: 13%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">Status</th>\r\n\r\n                            <th style=\"width: 27%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">\r\n\r\n                            </th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let item of turmas; let i = index;\">\r\n                            <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                                {{item.descricao}}<br>{{item.identificador}}</td>\r\n\r\n                            <td @rowHighlight style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                                <ng-container *ngIf=\"item.statusAndamento == 'Em andamento'; else naoIniciada\">\r\n                                    {{item.previsaoAtual | date:\"dd/MM/yy\"}}<br>\r\n                                    <span @rowHighlight style=\"font-size: 0.8em;color: red;\">\r\n                                        em andamento\r\n                                    </span>\r\n                                </ng-container>\r\n                                <ng-template #naoIniciada>\r\n                                    {{item.previsaoAtual | date:\"dd/MM/yy\"}}<br>\r\n                                    <span @rowHighlight style=\"font-size: 0.8em;color: red;\">\r\n                                        {{item.previsaoInfo}}\r\n                                    </span>\r\n                                </ng-template>\r\n\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">{{item.vagas}}</td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">{{item.totalAlunos}}\r\n\r\n                            </td>\r\n                            <td @rowHighlight style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                                {{item.statusAndamento}}</td>\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"calendário\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openCalendarioModal()\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>description</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"adiar a tumra para a próxima previsão\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"item.statusAtual == 'Aguardando início' || \r\n                                    item.previsao == '3ª previsão'\r\n                                    ? true : false\"\r\n                                        (click)=\"adiar(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon style=\"font-size: 1.5em;\" class=\"material-icons-outlined\">watch_later\r\n                                        </mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"adiar a tumra para a próxima previsão\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"PodeAdiar(item)\" (click)=\"adiar(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon style=\"font-size: 1.5em;\" class=\"material-icons-outlined\">watch_later\r\n                                        </mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"iniciar as aulas\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"item.statusAndamento != 'Aguardando início' ? true : false\"\r\n                                        (click)=\"iniciarTurma(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon style=\"font-size: 1.5em;font-weight: 200;\"\r\n                                            class=\"material-icons-outlined\">play_arrow</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"iniciar as aulas\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"iniciarTurma(item.id)\"\r\n                                        [disabled]=\"item.statusAndamento == 'Em andamento'\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon style=\"font-size: 1.5em;font-weight: 200;\"\r\n                                            class=\"material-icons-outlined\">play_arrow</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <!-- update_disabled -->\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"detalhes/editar\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openEditCursoModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i *ngIf=\"podeDeletar\" style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"deletar turma e os matriculados\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"deleteCurso(item)\"  \r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>delete_outline</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <!-- \r\n    <mat-spinner *ngIf=\"showSpinner\" @rowHighlight [diameter]=\"100\" style=\"\r\n            left: 43.5%;\r\n            top: 40%; \r\n            position: absolute;\">\r\n    </mat-spinner> -->\r\n\r\n\r\n</div>","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({name: 'cnpj'})\r\nexport class CNPJPipe implements PipeTransform {\r\n    transform(value) {\r\n        return value.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/g,\"\\$1.\\$2.\\$3\\/\\$4\\-\\$5\")\r\n    }\r\n}","import { Component, Inject, OnInit,Pipe, PipeTransform } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n//import { GenericTask } from 'src/app/shared/models/generictask.model';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n//import { AdmService } from '../../adm.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n\r\n@Component({\r\n    selector: 'createsalamodal',\r\n    templateUrl: './createsala.component.html',\r\n    styleUrls: ['./createsala.component.scss']\r\n})\r\n\r\nexport class CreateSalaComponent implements OnInit {\r\n\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n    // pageEvent: PageEvent;\r\n    private _baseUrl = environment.baseUrl\r\n    public spinnerSave = 'hidden'\r\n\r\n    public salaForm: FormGroup;\r\n    constructor(\r\n        //private service: AdmService,\r\n        private _http: HttpClient,\r\n        private _helpers: HelpersService,\r\n        private _fb: FormBuilder,\r\n        public dialogRef: MatDialogRef<CreateSalaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.salaForm = this._fb.group({\r\n            descricao: ['',[Validators.required]],\r\n            capacidade:[,[Validators.required, Validators.min(1)]],\r\n            comentarios: ['',[Validators.required, Validators.maxLength(200)]],\r\n            ativo: [true],\r\n            unidadeId: [this.data[\"unidade\"].id],\r\n        })\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n    get disabledButton(){\r\n\r\n        if(this.salaForm.valid){\r\n            return this.spinnerSave != 'hidden'\r\n        }else{\r\n            return true\r\n        }\r\n    }\r\n\r\n    onSubmit(form: any){\r\n       // console.log(this.data[\"unidade\"].id)\r\n\r\n        if(this.salaForm.valid){\r\n\r\n            this.spinnerSave = 'visible'\r\n            this._http.post(`${this._baseUrl}/unidade/sala-create`, this.salaForm.value,{})\r\n                .subscribe(resp => { },\r\n                    (error) => { \r\n                        \r\n                        console.log(error)},\r\n                    () => { \r\n                        this._helpers.openSnackBarSucesso(\"Sala criada com sucesso\")\r\n                        this.dialogRef.close({clicked: \"Ok\"})})\r\n\r\n        }\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Criar Sala / {{data[\"unidade\"].descricao}}\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<hr>\r\n\r\n<div style=\"position: relative;\">\r\n\r\n    <form novalidate [formGroup]=\"salaForm\" (ngSubmit)=\"onSubmit(salaForm)\">\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px; \">\r\n            <mat-label>Descrição</mat-label>\r\n            <input selected formControlName=\"descricao\" matInput placeholder=\"EX: Sala frente\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 100px; margin-left: 15px;\">\r\n            <mat-label>Capacidade</mat-label>\r\n            <input selected ng-pattern=\"/^[a-z]*$/\" formControlName=\"capacidade\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" name=\"capacidade\"\r\n                matInput>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n            <mat-label>Observações gerais</mat-label>\r\n            <textarea formControlName=\"comentarios\" matInput maxlength=\"200\"\r\n            placeholder=\"EX: Sala com ar-condicionado\"></textarea>\r\n        </mat-form-field>\r\n\r\n        <mat-progress-bar [style.visibility]=\"spinnerSave\" @rowHighlight mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"disabledButton\" style=\"float:right;margin-top: 10px;\">\r\n            Salvar</button>\r\n    </form>\r\n\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { InfoDia, ListaPresencaDto } from \"../../Pedag-Models/infodia.model\";\r\n\r\n\r\n@Component({\r\n    selector: 'presenca-app',\r\n    templateUrl: './presenca.component.html',\r\n    styleUrls: ['./presenca.component.scss'],\r\n    animations: [HighlightTrigger]\r\n\r\n})\r\n\r\nexport class PresencaComponent implements OnInit {\r\n\r\n    private _baseUrl = environment.baseUrl\r\n    public initProgressBar = 'visible'\r\n    public saveProgressBar = 'hidden'\r\n    public showContent = false\r\n    public listaPresencaDto: any[] = new Array<any>()// ListaPresencaDto[] = new Array<ListaPresencaDto>();\r\n    public infoDia: any// InfoDia = new InfoDia();\r\n    public saveCommand: any//SavePresencaCommand = new SavePresencaCommand();\r\n    public presenca: any\r\n    public observacoes: string = \"\";\r\n    public obsForm: FormGroup;\r\n    public diaAulaString: any\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog,\r\n        public _dialogRef: MatDialogRef<PresencaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.obsForm = this._fb.group({\r\n            observacoes: ['', [Validators.required]]\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log(this.data['turma'])\r\n\r\n        this.getPresencaViewModel(this.data['turma'].calendarioId);\r\n    }\r\n\r\n    getPresencaViewModel(calendarioId: number) {\r\n\r\n        this._http.get(`${this._baseUrl}/pedag/turma/presenca-diario/${calendarioId}`)\r\n            .subscribe(resp => {\r\n\r\n                console.log(resp)\r\n                \r\n                this.infoDia = Object.assign({}, resp['presencas'].aulaViewModel)\r\n                //console.log(this.infoDia)\r\n                this.listaPresencaDto = Object.assign([], resp['presencas'].listaPresenca)\r\n                //this.infoDia.diaAula = new Date(this.infoDia.diaAula).toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })\r\n               // this.diaAulaString = new Date(this.infoDia.diaAula).toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })\r\n               // this.listaPresencaDto = Object.assign([], resp['lista'])\r\n                this.initProgressBar = 'hidden'\r\n\r\n            },\r\n                (error) => { \r\n                    \r\n                    this.initProgressBar = 'hidden' },\r\n                () => {\r\n                    this._dialogRef.addPanelClass('presenca-diario-class')\r\n                    this.showContent = true\r\n                 })\r\n    }\r\n\r\n    concluirAula() {\r\n        // calendárioId\r\n    }\r\n\r\n    concluiraula(form: any): void {\r\n        console.log(this.listaPresencaDto)\r\n        const dialogRef = this._modal\r\n            .open(ConcluirAulaModal, {\r\n                height: 'auto',\r\n                width: '500px',\r\n                autoFocus: false,\r\n                //maxHeight: '90vh',\r\n                //maxWidth: '400vh',\r\n\r\n                data: { form: form },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result.clicked == true) {\r\n                console.log(form.value)\r\n               this.salvar(form);\r\n\r\n            } else {\r\n                //console.log('nao')\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    get disabledSave() {\r\n\r\n        var disabledButton = true\r\n        var temNull = this.listaPresencaDto.filter((lista) => {\r\n            return lista.isPresentToString == null || lista.isPresentToString == \"\";\r\n        })\r\n\r\n        console.log(temNull);\r\n\r\n        if (temNull.length == 0) {\r\n            disabledButton = false\r\n        } else {\r\n            disabledButton = true\r\n        }\r\n\r\n        if(!disabledButton && this.obsForm.valid){\r\n            return  false\r\n        }else{\r\n            return  true\r\n        }\r\n\r\n       \r\n\r\n    }\r\n\r\n\r\n    salvar(form: any) {\r\n\r\n        if (form.valid) {\r\n             console.log(this.listaPresencaDto)\r\n            // this.saveCommand.listaPresencaDto = this.listaPresencaDto\r\n            // this.saveCommand.calendarId = this.infoDia.id\r\n            // this.saveCommand.observacoes = this.obsForm.get('observacoes').value\r\n            this.infoDia.observacoes = this.obsForm.get('observacoes').value\r\n            let presencaView = { infoDia: this.infoDia, listaPresencaDto: this.listaPresencaDto }\r\n            \r\n           \r\n            this._http.post(`${this._baseUrl}/pedag/turma/presenca-diario/${this.data['turma'].calendarioId}`, { aulaViewModel: this.infoDia, listaPresenca: this.listaPresencaDto }, {})\r\n                .subscribe(resp => {\r\n\r\n                 \r\n\r\n                },\r\n                    (error) => { console.log(error) },\r\n                    () => {\r\n                        this._dialogRef.close({ clicked: \"OK\" })\r\n                    })\r\n        }\r\n    }\r\n\r\n    presente = true\r\n\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'confirmdialog',\r\n    template: `<div class=\"container\">\r\n    <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n        <div style=\"font-size: 1.2em;\">Tem certeza que deseja concluir a aula?</div>\r\n        <div>\r\n            Após a conclusão, não será possível retornar a tela de presenças novamente.\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <button style=\"width: 30px;\" [mat-dialog-close]=\"{clicked:true}\" mat-button>SIM</button>\r\n        <button style=\"width: 30px;\" [mat-dialog-close]=\"{clicked:false}\" mat-button>NÃO</button>\r\n    </div>\r\n</div>`,\r\n})\r\nexport class ConcluirAulaModal {\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<ConcluirAulaModal>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n}\r\n\r\nexport class SavePresencaCommand {\r\n    constructor(\r\n        public listaPresencaDto?: ListaPresencaDto[],\r\n        public calendarId?: number,\r\n        public observacoes?: string\r\n    ) {\r\n\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Lista de presença\r\n  \r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<hr>\r\n<div *ngIf=\"showContent\" @rowHighlight>\r\n\r\n\r\n    <div style=\"position: relative;\">\r\n      \r\n        <mat-form-field appearance=\"standard\" style=\"width: 700px; \">\r\n            <mat-label>Turma</mat-label>\r\n            <input selected style=\"color:rgb(59, 57, 57)\" disabled\r\n                value=\"{{this.data['turma'].descricao}} - Turma {{this.data['turma'].identificador}}\" required matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px; \">\r\n            <mat-label>Professor</mat-label>\r\n            <input selected style=\"color:rgb(59, 57, 57)\" disabled [value]=\"infoDia.nome\" required matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field appearance=\"standard\" style=\"width: 350px; \">\r\n            <mat-label>Aula</mat-label>\r\n            <input selected style=\"color:rgb(59, 57, 57)\" disabled [value]=\"infoDia.materiaDescricao\" required matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px;margin-left: 10px ; \">\r\n            <mat-label>Dia</mat-label>\r\n            <input selected style=\"color:rgb(59, 57, 57)\" disabled \r\n            value=\"{{infoDia.diaAula | date:'dd/MM/yyyy'}} {{infoDia.horaInicial}} às {{infoDia.horaFinal}}\" required matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n        <br>\r\n\r\n\r\n        <div style=\"color: red;font-size: 0.9;\">* Professor, não se esqueça de antes de concluir a aula, preencher o\r\n            conteúdo programático e a lista de presença:</div>\r\n      \r\n        <div class=\"table-responsive\" style=\"position: relative;\">\r\n            <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n              \r\n                <thead>\r\n                    <tr>\r\n                        <th style=\"width: 2%; \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                        <th style=\"width: 70%;font-size:1em;\r\n                    vertical-align: middle; \r\n                    text-align:left;\r\n                     border-top: 0px; font-weight: 400;\"></th>\r\n\r\n                        <th style=\"width: 28%;font-size:1em;\r\n                    text-align:right;\r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Presente?(F/P)</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    <tr *ngFor=\"let aluno of listaPresencaDto;let i = index;\">\r\n                        <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                        <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                            {{aluno.nome}}\r\n                        </td>\r\n\r\n                        <td style=\"float: right; position: relative;\">\r\n                         \r\n                            <input type=\"text\" style=\"margin-right: auto;\r\n                            margin-left: auto;font-size:0.9em;width: 40px;\" class=\"form-control\"\r\n                                [(ngModel)]=\"aluno.isPresentToString\"\r\n                                oninput=\"this.value = this.value.toUpperCase()\"\r\n                                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^FPfp]/g) === null\"\r\n                                maxlength=\"1\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\r\n                        </td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </table>\r\n            <br>\r\n            <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"saveProgressBar\" @rowHighlight mode=\"query\">\r\n            </mat-progress-bar>\r\n            <form [formGroup]=\"obsForm\" (ngSubmit)=\"concluiraula(obsForm)\">\r\n\r\n                <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                    <mat-label>conteúdo programático...</mat-label>\r\n                    <textarea formControlName=\"observacoes\" matInput></textarea>\r\n                </mat-form-field>\r\n\r\n                <button type=\"submit\" color=\"primary\" mat-raised-button disabled=\"false\" [disabled]=\"disabledSave\"\r\n                    style=\"float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n                    Concluir Aula\r\n                </button>\r\n            </form>\r\n\r\n        </div>\r\n\r\n\r\n        <br>\r\n    </div>\r\n</div>\r\n","import { HttpClient, HttpEventType, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, EventEmitter, Inject, OnInit, Output } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: \"inscricaoest-app\",\r\n    templateUrl: './inscricaoest.component.html',\r\n    animations: [HighlightTrigger]\r\n    //styleUrls: ['./estagio.component.scss']\r\n})\r\n\r\nexport class InscricaoEstComponent implements OnInit {\r\n\r\n\r\n    // colaboradores: Colaborador[] = new Array<Colaborador>();\r\n    baseUrl = environment.baseUrl;\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n    formDatas = new FormData();\r\n\r\n    fileAP: File[] = []\r\n    fileAPName: string = null\r\n    fileAPViewName: string = null\r\n\r\n    fileCartaoVac: File[] = []\r\n    fileCartaoVacName: string = null\r\n    fileCartaoVacViewName: string = null\r\n\r\n    fileTipoSang: File[] = []\r\n    fileTipoSangName: string = null\r\n    fileTipoSangViewName: string = null\r\n\r\n    fileHCG: File[] = []\r\n    fileHCGName: string = null\r\n    fileHCGViewName: string = null\r\n\r\n    public progress: number;\r\n    public message: string;\r\n    @Output() public onUploadFinished = new EventEmitter();\r\n\r\n    constructor(\r\n        private _snackBar: MatSnackBar,\r\n        //private CreateMatriculaModal: MatDialog,\r\n        private http: HttpClient,\r\n        public dialogRef: MatDialogRef<InscricaoEstComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any\r\n        //private CreateColaboradoresModal: MatDialog,\r\n        //private EditColaboradoresModal: MatDialog\r\n    ) { }\r\n\r\n\r\n    ngOnInit() {\r\n        console.log('init inscricao')\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        // console.log(this.jwtHelper.decodeToken(token));\r\n        // console.log(this.tokenInfo.Name);\r\n        //this.getColaboradores(1, this.pageSize);\r\n    }\r\n    // pageIndex = 0\r\n    apendFileAP(file) {\r\n        this.fileAP = new Array<File>()\r\n        let fileToUpload = <File>file[0];\r\n        this.fileAPName = `AP${fileToUpload.name}`\r\n        this.fileAPViewName = `${fileToUpload.name}`\r\n        this.fileAP.push(fileToUpload)\r\n    }\r\n\r\n    apendFileCartaoVac(file) {\r\n        this.fileCartaoVac = new Array<File>()\r\n        let fileToUpload = <File>file[0];\r\n        this.fileCartaoVacName = `CV${fileToUpload.name}`\r\n        this.fileCartaoVacViewName = `${fileToUpload.name}`\r\n        this.fileCartaoVac.push(fileToUpload)\r\n    }\r\n\r\n    apendFileTipoSang(file) {\r\n        this.fileTipoSang = new Array<File>()\r\n        let fileToUpload = <File>file[0];\r\n        this.fileTipoSangName = `TP${fileToUpload.name}`\r\n        this.fileTipoSangViewName = `${fileToUpload.name}`\r\n        this.fileTipoSang.push(fileToUpload)\r\n    }\r\n\r\n    apendFileHCG(file) {\r\n        this.fileHCG = new Array<File>()\r\n        let fileToUpload = <File>file[0];\r\n        this.fileHCGName = `HC${fileToUpload.name}`\r\n        this.fileHCGViewName = `${fileToUpload.name}`\r\n        this.fileHCG.push(fileToUpload)\r\n    }\r\n\r\n\r\n    verificar() {\r\n\r\n        console.log(this.fileAP)\r\n        console.log(this.fileCartaoVac)\r\n\r\n        console.log(this.fileTipoSang)\r\n        console.log(this.fileHCG)\r\n\r\n    }\r\n\r\n\r\n    uploadFile() {\r\n        console.log('sendo files')\r\n        this.formDatas.append('file', this.fileAP[0], this.fileAPName);\r\n        this.formDatas.append('file', this.fileCartaoVac[0], this.fileCartaoVacName);\r\n        this.formDatas.append('file', this.fileTipoSang[0], this.fileTipoSangName);\r\n        this.formDatas.append('file', this.fileHCG[0], this.fileHCGName);\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        const Bearer = `Bearer ${token}`;\r\n        this.http.post(`${this.baseUrl}/estagios/arquivos`, this.formDatas, {\r\n            reportProgress: true, observe: 'events',\r\n            headers: new HttpHeaders({\r\n\r\n                \"Authorization\": Bearer\r\n            })\r\n        })\r\n            .subscribe(event => {\r\n                if (event.type === HttpEventType.UploadProgress)\r\n                    this.progress = Math.round(100 * event.loaded / event.total);\r\n                else if (event.type === HttpEventType.Response) {\r\n                    this.message = 'Upload success.';\r\n                    this.onUploadFinished.emit(event.body);\r\n                }\r\n            },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                    console.log('finally')\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                    // this.refresh()\r\n                    //this.onUploadFinished.unsubscribe;\r\n                    //files = null\r\n                });\r\n    }\r\n    //params: Parametros = new Parametros()\r\n    // pesquisar(nome: string, email: string, cpf: string) {\r\n\r\n    //     console.log(nome + \" \" + email + \" \" + cpf)\r\n    //     if (nome == \"\" || nome == undefined) nome = \"\"\r\n    //     if (email == \"\" || email == undefined) email = \"\"\r\n    //     if (cpf == \"\" || cpf == undefined) cpf = \"\"\r\n\r\n    //     if ((nome == \"\" || nome == undefined) &&\r\n    //         (email == \"\" || email == undefined) &&\r\n    //         (cpf == \"\" || cpf == undefined)) {\r\n    //         console.log(\"retorno\")\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.http.get(`${this.baseUrl}/matricula/alunos/?query={\"nome\":\"${nome}\",\"email\":\"${email}\",\"cpf\":\"${cpf}\"}`)\r\n    //         .subscribe(\r\n    //             (response) => {\r\n    //                 console.log(response)\r\n    //                 this.listAlunos = Object.assign([], response)\r\n\r\n    //             },\r\n    //             (err) => {\r\n    //                 //this.showSpinnerFirst = false\r\n    //                 console.log(err)\r\n    //                 //this.openSnackBar(err)\r\n\r\n    //             },\r\n    //             () => {\r\n    //                 //this.showSpinnerFirst = false\r\n    //                 console.log('ok get');\r\n    //                 //this.pageIndexNumber = (evento.pageIndex * this.pageSize)\r\n    //             },\r\n    //         )\r\n\r\n    // }\r\n\r\n    // consulta(nome: string) {\r\n\r\n    //     if (nome == \"\") {\r\n    //         // TODO: sendo form alert: selecionar ao menos um\r\n    //         return;\r\n    //     }\r\n\r\n    //     this.http.get(`${this.baseUrl}/matricula/alunos/?email=&cpf=&nome=${nome}`)\r\n    //         .subscribe(response => {\r\n\r\n    //             console.log(response)\r\n    //             this.listAlunos = Object.assign([], response)\r\n\r\n    //         }, err => { console.log(err) },\r\n    //             () => {\r\n\r\n    //             });\r\n    // }\r\n\r\n    // matricular(aluno){\r\n    //     const dialogRef = this.CreateMatriculaModal\r\n    //     .open(AlunoMatriculaComponent, {\r\n    //         height: 'auto',\r\n    //         width: '1000px',\r\n    //         autoFocus: false,\r\n    //         maxHeight: '90vh',\r\n\r\n    //         data: { alunoId: aluno.id },\r\n    //         hasBackdrop: true,\r\n    //         disableClose: true\r\n    //     });\r\n\r\n    // dialogRef.afterClosed().subscribe((data) => {\r\n    //     if (data.clicked === \"OK\") {\r\n    //         this.openSnackBar()\r\n    //         console.log('afte close ok')\r\n    //     } else if (data.clicked === \"Cancel\") {\r\n    //         // Do nothing. Cancel any events that navigate away from the\r\n    //         // component.\r\n    //     }\r\n    // });\r\n\r\n    // }\r\n\r\n    // openMatriculaModal(): void {\r\n    //     const dialogRef = this.CreateMatriculaModal\r\n    //         .open(CreateMatriculaComponent, {\r\n    //             height: 'auto',\r\n    //             width: '1000px',\r\n    //             autoFocus: false,\r\n    //             maxHeight: '90vh',\r\n\r\n    //             data: { Hello: \"Hello World\" },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n\r\n    //     dialogRef.afterClosed().subscribe((data) => {\r\n    //         if (data.clicked === \"OK\") {\r\n    //             this.openSnackBar()\r\n    //             console.log('afte close ok')\r\n    //         } else if (data.clicked === \"Cancel\") {\r\n    //             // Do nothing. Cancel any events that navigate away from the\r\n    //             // component.\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    // openSnackBar() {\r\n    //     this._snackBar.open('Aluno matriculado com sucesso', '', {\r\n    //         horizontalPosition: 'center',\r\n    //         verticalPosition: 'top',\r\n    //         panelClass: 'green-snackbar',\r\n    //         duration: 3 * 1000,\r\n    //     });\r\n    // }\r\n\r\n    // deleteColaborador(id: number) {\r\n\r\n\r\n    // }\r\n\r\n}\r\n\r\n\r\n// export interface IPager {\r\n//     itemsPerPage?: number;\r\n//     totalItemsInDatabase?: number;\r\n//     currentPage?: number;\r\n//     totalPages?: number;\r\n//     items?: number;\r\n// }","<div style=\"font-size: 1.2em;\">Boa Tarde, {{tokenInfo.Nome}}\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n\r\n<hr>\r\n\r\n\r\n<div class=\"container\">\r\n\r\n  \r\n    <div style=\"font-style: italic;font-size: 0.9em;\">Para poder se candidatar à uma vaga de estágio, é necessário o\r\n        envio das\r\n        documentaçãoes listadas abaixo.\r\n    </div>\r\n    <div style=\"font-style: italic;font-size: 0.9em;color: red;\">\r\n        * formatos permitidos: jpeg, pdf\r\n    </div> \r\n    <div style=\"font-style: italic;font-size: 0.9em;color: red;\">\r\n        * tamanho máximo permitido por arquivo: 500kb\r\n    </div>\r\n    <br>\r\n\r\n    <div>seguro contra acidentes pessoais\r\n        <input multiple type=\"file\" #fileAP placeholder=\"Choose file\" (change)=\"apendFileAP(fileAP.files)\"\r\n            style=\"display:none;\">\r\n        \r\n            <mat-icon type=\"button\" #tooltip=\"matTooltip\" matTooltip=\"anexar arquivo\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\" (click)=\"fileAP.click()\" style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">attachment</mat-icon>\r\n        \r\n        <span style=\"margin-left: 5px;font-size: 0.9em;\">{{fileAPViewName || ''}}</span>\r\n        <!-- <span style=\"margin-left: 5px;font-size: 0.9em;color: red;\">* formato ou tamanho inválido </span> -->\r\n    </div>\r\n\r\n    <div>cartão de vacinação\r\n        <input multiple type=\"file\" #fileCV placeholder=\"Choose file\" (change)=\"apendFileCartaoVac(fileCV.files)\"\r\n        style=\"display:none;\">\r\n\r\n        <mat-icon type=\"button\" #tooltip=\"matTooltip\" matTooltip=\"anexar arquivo\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\" (click)=\"fileCV.click()\" style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">attachment</mat-icon>\r\n\r\n        <span style=\"margin-left: 5px;font-size: 0.9em;\">{{fileCartaoVacViewName || ''}}</span>\r\n    </div>\r\n\r\n    <div>tipo sanguíneo\r\n        <input multiple type=\"file\" #fileTP placeholder=\"Choose file\" (change)=\"apendFileTipoSang(fileTP.files)\"\r\n            style=\"display:none;\">\r\n\r\n            <mat-icon type=\"button\" #tooltip=\"matTooltip\" matTooltip=\"anexar arquivo\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\" (click)=\"fileTP.click()\" style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">attachment</mat-icon>\r\n\r\n        <span style=\"margin-left: 5px;font-size: 0.9em;\">{{fileTipoSangViewName || ''}}</span>\r\n    </div>\r\n    <div>Beta HGC recente (pelo menos 30 dias antes da candidatura à vaga\r\n        (apenas para sexo feminino)\r\n        <input multiple type=\"file\" #fileHCG placeholder=\"Choose file\" (change)=\"apendFileHCG(fileHCG.files)\"\r\n            style=\"display:none;\">\r\n\r\n            <mat-icon type=\"button\" #tooltip=\"matTooltip\" matTooltip=\"anexar arquivo\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\" (click)=\"fileHCG.click()\" style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">attachment</mat-icon>\r\n\r\n        <span style=\"margin-left: 5px;font-size: 0.9em;\">{{fileHCGViewName || ''}}</span>\r\n    </div>\r\n\r\n\r\n    <div (click)=\"verificar()\">verificar</div>\r\n    <button type=\"submit\" color=\"primary\" (click)=\"uploadFile()\" mat-raised-button disabled=\"false\" style=\"float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n        Enviar\r\n    </button>\r\n    <!-- <button style=\"float:right;margin-bottom: 10px;\" mat-raised-button\r\n        [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button> -->\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { Debito, InfoFinanceiras } from \"src/app/_shared/models/InfoFinanceiras.model\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\n@Component({\r\n    selector: 'recebermodal',\r\n    templateUrl: './receber.component.html',\r\n    styleUrls: ['./receber.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ReceberComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n\r\n    public aluno: any;// = new Aluno();\r\n    public debito: any;//Debito = new Debito();\r\n    public turma: any\r\n    public mostrarModalPrincipal = true\r\n    public hoje: Date = new Date()\r\n    public vencido = false\r\n\r\n    public saveSpinner = 'hidden'\r\n    // public valorReceber = 0\r\n    //public valorQuitado = 0\r\n    //public formaRecebimento = \"Dinheiro\"\r\n    public recebimentoForm: FormGroup\r\n\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog,\r\n        private _helper: HelpersService,\r\n        // private _service: PedagService,\r\n        public dialogRef: MatDialogRef<ReceberComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.recebimentoForm = _fb.group({\r\n            boletoId: ['', [Validators.required]],\r\n            valorReceber: [0],\r\n            valorRecebido: [0, [Validators.required]],\r\n            formaRecebimento: ['dinheiro', [Validators.required]],\r\n            transferencia: ['caixaescola', [Validators.required]]\r\n            \r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        // this.dialogRef.addPanelClass('recebervalores-class')\r\n\r\n        //console.log(this.data)\r\n        this.aluno = Object.assign({}, this.data['aluno'])\r\n        this.debito = Object.assign({}, this.data['debito'])\r\n        //this.valorQuitado = this.debito.valor - this.debito.desconto\r\n        this.recebimentoForm.get('boletoId').setValue(this.data['debito'].id)\r\n        if (this.debito.statusBoleto == 'Vencido') {\r\n            // console.log(this.debito.valor)\r\n            this.recebimentoForm.get('valorReceber').setValue(this.debito.valor)\r\n            this.recebimentoForm.get('valorRecebido').setValue(this.debito.valor)\r\n        } else {\r\n            let total = this.debito.valor - parseInt(this.debito.desconto)\r\n            // console.log(total)\r\n            this.recebimentoForm.get('valorReceber').setValue(total)\r\n            this.recebimentoForm.get('valorRecebido').setValue(total)\r\n\r\n        }\r\n       \r\n        this.mostrarModalPrincipal = false\r\n    }\r\n\r\n    get saveButton() {\r\n\r\n        if (this.recebimentoForm.valid) {\r\n            return this.saveSpinner != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n\r\n    public Quitar() {\r\n\r\n        this.saveSpinner = 'visible'\r\n        this._http.put(`${this.baseUrl}/financeiro/boleto-pagar`, this.recebimentoForm.value)\r\n            .subscribe(resp => {\r\n\r\n            },\r\n                (error) => {\r\n                    this.saveSpinner = 'hidden'\r\n                    this._helper.openSnackBarErrorDefault();\r\n                    // console.log(error) \r\n                },\r\n                () => {\r\n                    this._helper.openSnackBarSucesso(\"Status do boleto alterado com sucesso.\")\r\n                    this.dialogRef.close({ clicked: true })\r\n                })\r\n        //boleto-pagar/{idDebito}\r\n\r\n    }\r\n\r\n   \r\n}","<div style=\"font-size: 1.2em;\">Receber\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" *ngIf=\"mostrarModalPrincipal;else mostraPrincipal\" @rowHighlight\r\n    style=\"margin:0px\" mode=\"query\"></mat-progress-bar>\r\n\r\n\r\n<ng-template #mostraPrincipal>\r\n\r\n    <hr>\r\n\r\n    <form novalidate [formGroup]=\"recebimentoForm\" (ngSubmit)=\"Quitar()\">\r\n        <mat-form-field appearance=\"standard\" style=\"width: 300px;\">\r\n            <mat-label>Aluno</mat-label>\r\n            <input [value]=\"aluno.nome\" matInput disabled>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 100px;margin-left: 10px;\">\r\n            <mat-label>Vencimento</mat-label>\r\n            <input [value]=\"debito.vencimento | date: 'dd/MM/yyyy'\" matInput disabled>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <div style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;margin-top: 5px;\">\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 110px;\">\r\n                <mat-label>Data pagamento</mat-label>\r\n                <input matInput [value]=\"hoje | date: 'dd/MM/yyyy'\" disabled>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 120px;margin-left: 10px;\">\r\n                <mat-label>Valor original</mat-label>\r\n                <input matInput disabled [value]=\"debito.valor | currency:'BRL':'R$ '\">\r\n            </mat-form-field>\r\n\r\n            <ng-container *ngIf=\"!vencido;else show\">\r\n                <mat-form-field appearance=\"standard\" style=\"width: 110px;margin-left: 10px;\">\r\n                    <mat-label>Bônus Pontualidade</mat-label>\r\n                    <input matInput disabled [value]=\"debito.desconto | currency:'BRL':'R$ '\">\r\n                </mat-form-field>\r\n            </ng-container>\r\n\r\n            <ng-template #show>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 110px;margin-left: 10px;\">\r\n                    <mat-label>Multa</mat-label>\r\n                    <input matInput disabled value=\"\" placeholder=\"Nome\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 110px;margin-left: 10px;\">\r\n                    <mat-label>Juros</mat-label>\r\n                    <input matInput value=\"\" disabled placeholder=\"Nome\">\r\n                </mat-form-field>\r\n            </ng-template>\r\n\r\n        </div>\r\n\r\n        <div style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;\">\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 110px;margin-left: 10px;\">\r\n                <mat-label>Valor a Receber</mat-label>\r\n                <input matInput [value]=\"recebimentoForm.get('valorReceber').value | currency:'BRL':'R$ '\" disabled>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 120px;margin-left: 10px;\">\r\n                <mat-label>Valor quitado/pago</mat-label>\r\n                <input matInput formControlName=\"valorRecebido\" currencyMask\r\n                    [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\">\r\n                <span matPrefix>R$&nbsp;</span>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <div style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;\">\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 170px;\">\r\n                <mat-label>Forma Recebimento</mat-label>\r\n                <mat-select formControlName=\"formaRecebimento\" selected>\r\n                    <mat-option></mat-option>\r\n                    <mat-option value=\"dinheiro\">Dinheiro</mat-option>\r\n                    <mat-option value=\"credito\">Cartão/Crédito</mat-option>\r\n                    <mat-option value=\"debito\">Cartão/Débito</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 170px;margin-left: 10px;\">\r\n                <mat-label>Transferir Para</mat-label>\r\n                <mat-select selected formControlName=\"transferencia\" disabled required>\r\n                    <mat-option></mat-option>\r\n                    <mat-option value=\"caixaescola\">Caixa da escola</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n        </div>\r\n\r\n\r\n        <!-- <div *ngIf=\"formaRecebimento == 'Dinheiro'\"\r\n        style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;\">\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 110px;\">\r\n            <mat-label>Valor a receber</mat-label>\r\n            <input matInput value=\"\" placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 110px;margin-left: 10px;\">\r\n            <mat-label>Valor recebido</mat-label>\r\n            <input matInput value=\"\" placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 110px;margin-left: 10px;\">\r\n            <mat-label>Troco</mat-label>\r\n            <input matInput value=\"\" placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n    </div> -->\r\n\r\n        <mat-progress-bar [style.visibility]=\"saveSpinner\" mode=\"query\"></mat-progress-bar>\r\n\r\n        <!-- <span *ngFor=\"let msg of errorMsg\" style=\"margin-top: 20px; font-size: 0.8em;color: red;width: 350px;\">\r\n        {{ msg }}\r\n\r\n    </span> -->\r\n\r\n\r\n        <span style=\"bottom: 0px;\">\r\n\r\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"saveButton\"\r\n                style=\"float:right;margin-top: 10px\">\r\n\r\n                salvar\r\n            </button>\r\n\r\n        </span>\r\n    </form>\r\n\r\n</ng-template>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, TitularDoc, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Modulo } from \"src/app/_shared/models/modulo.model\";\r\nimport { Materia } from \"src/app/_shared/models/materia.model\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\n\r\nexport const Modalidade = [\r\n    { type: 'Presencial', value: 'Presencial' },\r\n    { type: 'On-line', value: 'On-line' }\r\n\r\n]\r\n\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'visualizarmodal',\r\n    templateUrl: './visualizar.component.html',\r\n    styleUrls: ['./visualizar.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class VisualizarModuloComponent implements OnInit {\r\n\r\n\r\n    // initProgressBar = 'visible'\r\n    // public moduloForm: FormGroup;\r\n    // public addMateriaForm: FormGroup;\r\n    // public addDocForm: FormGroup;\r\n    // private jwtHelper = new JwtHelperService();\r\n    // public tokenInfo: TokenInfos = new TokenInfos();\r\n    public modulo: any// = new any();\r\n    // materiasTemplate: any//\r\n    public documentos: any//\r\n    // modalidade = Modalidade\r\n    // public titularDoc = TitularDoc\r\n    // showForm = false\r\n\r\n    public initProgressBar = 'visible'\r\n    public saveProgressBar = 'hidden'\r\n\r\n    public showContent = false\r\n    public addMateriasForm = false\r\n\r\n    public moduloForm: FormGroup;\r\n    public addMateriaForm: FormGroup;\r\n    public addDocForm: FormGroup;\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n\r\n    public errorMsg: any[] = new Array<any>()\r\n    public unidadesAutorizadas: any[] = new Array<any>();\r\n    public materiasTemplate: any[] = new Array<any>();\r\n    public documentosTemplate: any[] = new Array<any>();\r\n    public typePacote: any\r\n\r\n    public typePacotes: any\r\n    public docTemplates: any\r\n\r\n    public titularDoc = TitularDoc\r\n\r\n    constructor(\r\n        private _admService: AdmService,\r\n        private _snackBar: MatSnackBar,\r\n        //private router: Router,\r\n        private _fb: FormBuilder,\r\n        //private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<VisualizarModuloComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.addMateriaForm = _fb.group({\r\n            pacote: ['', [Validators.required]]\r\n        })\r\n\r\n        this.addDocForm = _fb.group({\r\n            documento: ['', [Validators.required]]\r\n        })\r\n\r\n        this.moduloForm = _fb.group({\r\n            id: [''],\r\n            descricao: ['', [Validators.required]],\r\n            dataCriacao: [''],\r\n            totalHoras: [''],\r\n            typePacoteId: ['', [Validators.required]],\r\n            unidadeId: ['', [Validators.required]],\r\n            ativo: [''],\r\n\r\n            materias: this._fb.array([], [Validators.required]),\r\n            documentosExigidos: this._fb.array([])\r\n\r\n        })\r\n    }  \r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        console.log(this.data)\r\n        this.GetEditPacoteView(this.data['modulo'].id)\r\n    }\r\n\r\n    GetEditPacoteView(pacoteId) {\r\n\r\n        this._admService.GetEditModuleViewModel(pacoteId)\r\n            .subscribe(\r\n                sucesso => { this.GetEditPacoteViewSucesso(sucesso) },\r\n                error => { this.GetEditPacoteViewErro(error) })\r\n    }\r\n\r\n    GetEditPacoteViewSucesso(response) {\r\n        this.modulo = response['pacote']\r\n        this.materiasTemplate = response['materias']\r\n        this.documentos = response['docs']\r\n        this.typePacote = response['typePacote']\r\n\r\n        this.MappingForm();\r\n    }\r\n\r\n    GetEditPacoteViewErro(error){\r\n        this.initProgressBar = 'hidden'\r\n        //console.log(error)\r\n    }\r\n\r\n    MappingForm(){\r\n        this.modulo.materias.forEach(element => {\r\n            this.addMateriaInitial(element)\r\n        });\r\n\r\n        this.modulo.documentosExigidos.forEach(element => {\r\n            this.addDocumentacaoInitial(element)\r\n        });\r\n        \r\n        this.moduloForm.get('id').setValue(this.modulo.id)\r\n        this.moduloForm.get('descricao').setValue(this.modulo.descricao)\r\n        this.moduloForm.get('dataCriacao').setValue(this.modulo.dataCriacao)\r\n        this.moduloForm.get('totalHoras').setValue(this.modulo.totalHoras)\r\n        this.moduloForm.get('typePacoteId').setValue(this.modulo.typePacoteId)\r\n        this.moduloForm.get('unidadeId').setValue(this.modulo.unidadeId)\r\n        this.moduloForm.get('ativo').setValue(this.modulo.ativo)\r\n        \r\n        this.initProgressBar = 'hidden'\r\n        this.dialogRef.addPanelClass('mymoduloedit-class')\r\n        this.showContent = true\r\n        this.addMateriasForm = true\r\n    }\r\n\r\n\r\n    get materias() {\r\n        return this.moduloForm.controls[\"materias\"] as FormArray;\r\n    }\r\n\r\n    get documentosExig() {\r\n        return this.moduloForm.controls[\"documentosExigidos\"] as FormArray;\r\n    }\r\n\r\n    addDocumentacaoInitial(form: any) {\r\n\r\n        let pacote = form//.value['pacote']\r\n\r\n        // if (form.valid) {\r\n        //     let pacotId = this.materias.value.find(element =>\r\n        //         element.materiaId == pacote.id);\r\n        //         if (pacotId != undefined) return;\r\n        //     }\r\n\r\n\r\n        const docsForm = this._fb.group({\r\n            id: [pacote.id],\r\n            descricao: [pacote.descricao],\r\n            comentario: [pacote.comentario],\r\n            titular: [pacote.titular],\r\n            validadeDias: [pacote.validadeDias],\r\n            obrigatorioParaMatricula: [pacote.obrigatorioParaMatricula],\r\n            pacoteId: [pacote.pacoteId],\r\n\r\n\r\n        });\r\n\r\n        this.documentosExig.push(docsForm);\r\n        //}\r\n\r\n    }\r\n\r\n    addMateriaInitial(form: any) {\r\n\r\n        let pacote = form//.value['pacote']\r\n\r\n        // if (form.valid) {\r\n        //     let pacotId = this.materias.value.find(element =>\r\n        //         element.materiaId == pacote.id);\r\n        //         if (pacotId != undefined) return;\r\n        //     }\r\n\r\n\r\n        const matForm = this._fb.group({\r\n            id: [pacote.id],\r\n            materiaId: [pacote.materiaId],\r\n            nome: [pacote.nome],\r\n            descricao: [pacote.descricao],\r\n            modalidade: [pacote.modalidade],\r\n            cargaHoraria: [pacote.cargaHoraria],\r\n            pacoteId: [pacote.pacoteId],\r\n\r\n        });\r\n\r\n        this.materias.push(matForm);\r\n        //}\r\n    }\r\n\r\n    addMateria(form: any) {\r\n\r\n        let pacote = form.value['pacote']\r\n\r\n        if (form.valid) {\r\n            let pacotId = this.materias.value.find(element =>\r\n                element.materiaId == pacote.id);\r\n\r\n            if (pacotId != undefined) return;\r\n\r\n            const matForm = this._fb.group({\r\n                id: [pacote.id],\r\n                materiaId: [pacote.materiaId],\r\n                nome: [pacote.nome],\r\n                descricao: [pacote.descricao],\r\n                modalidade: [pacote.modalidade],\r\n                cargaHoraria: [pacote.cargaHoraria],\r\n                pacoteId: [pacote.pacoteId],\r\n\r\n            });\r\n\r\n            this.materias.push(matForm);\r\n        }\r\n    }\r\n\r\n    addDocumentos(form: any) {\r\n\r\n        let pacote = form.value\r\n        \r\n\r\n        // if (form.valid) {\r\n        //     let pacotId = this.documentosExig.value.find(element =>\r\n        //         element.materiaId == pacote.id);\r\n        //     if (pacotId != undefined) return;\r\n        // }\r\n        console.log(form.value)\r\n\r\n        const docsForm = this._fb.group({\r\n            id: [pacote.id],\r\n            nome:  [pacote.nome],\r\n            descricao: [pacote.descricao],\r\n            titular: ['',[Validators.required]],\r\n            validadeDias: [pacote.modalidade],\r\n            obrigatorioParaMatricula: [false]\r\n        });\r\n\r\n        this.documentosExig.push(docsForm);\r\n        //}\r\n\r\n    }\r\n\r\n    deleteLesson(index: number) {\r\n        this.materias.removeAt(index);\r\n    }\r\n\r\n    deleteDocs(index: number) {\r\n        this.documentosExig.removeAt(index);\r\n    }\r\n\r\n    get totalHoras() {\r\n        let total = 0\r\n\r\n        if (this.moduloForm.get('materias').value.length > 0) {\r\n            const sum = this.moduloForm.get('materias').value.reduce((horas, a) => ({\r\n                cargaHoraria: horas.cargaHoraria + a.cargaHoraria\r\n            }));\r\n\r\n            if (sum != null) {\r\n                total = sum['cargaHoraria']\r\n            } else {\r\n                total = 0\r\n            }\r\n        }\r\n\r\n        this.moduloForm.get('totalHoras').setValue(total)\r\n\r\n        return total\r\n    }\r\n\r\n\r\n    onSubmit(form: any) {\r\n\r\n        if(this.moduloForm.valid){\r\n\r\n            this._admService.editPacote(this.moduloForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.onSubmitSucesso(sucesso)},\r\n                    falha => { this.onSubmitErro(falha)})\r\n        }\r\n    }\r\n\r\n    onSubmitSucesso(resposta){\r\n\r\n    }\r\n\r\n    onSubmitErro(error){\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Visualizar Pacote\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n<div @rowHighlight *ngIf=\"showContent\">\r\n\r\n    <hr>\r\n\r\n    <form novalidate [formGroup]=\"moduloForm\">\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 80px;\">\r\n            <mat-label>Unidade</mat-label>\r\n            <mat-select formControlName=\"unidadeId\" placeholder=\"type pacote\">\r\n                <mat-option></mat-option>\r\n                <mat-option *ngFor=\"let uni of unidadesAutorizadas\" [value]=\"uni.unidadeId\">{{uni.unidade}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field> -->\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 350px;margin-left: 10px;\">\r\n            <mat-label>Tipo</mat-label>\r\n            <mat-select formControlName=\"typePacoteId\" placeholder=\"\">\r\n                <mat-option></mat-option>\r\n                <mat-option (click)=\"buscarMaterias(type.id)\" [value]=\"type.id\" *ngFor=\"let type of typePacotes\">\r\n                    {{type.nome}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 350px;\">\r\n            <mat-label>Tipo</mat-label>\r\n            <input selected [value]=\"typePacote.nome\" disabled matInput placeholder=\"dica: Curso Técnico de Enfermagem\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 280px; \">\r\n            <mat-label>Descrição</mat-label>\r\n            <input selected [value]=\"moduloForm.get('descricao').value\" disabled matInput placeholder=\"dica: Curso Técnico de Enfermagem\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 80px;margin-left: 10px; \">\r\n            <mat-label>Total horas</mat-label>\r\n            <input selected disabled [value]=\"totalHoras\" matInput placeholder=\"curso tal...\">\r\n        </mat-form-field>\r\n\r\n    </form>\r\n\r\n    <mat-tab-group class=\"matcreatemodulo\">\r\n\r\n        <mat-tab label=\"Matérias\">\r\n\r\n            <ng-container *ngIf=\"addMateriasForm;else showEscolhaMateriasMsg\">\r\n\r\n                <!-- <div style=\"font-size: 0.9em;font-style: italic;margin-top: 20px;\">\r\n                    Adicione ao menos uma matéria ao curso:\r\n                </div>\r\n\r\n                <form novalidate [formGroup]=\"addMateriaForm\" (ngSubmit)=\"addMateria(addMateriaForm)\">\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n                        <mat-label>Matéria</mat-label>\r\n                        <mat-select formControlName=\"pacote\" placeholder=\"\">\r\n                            <mat-option></mat-option>\r\n                            <mat-option [value]=\"type\" *ngFor=\"let type of materiasTemplate\">\r\n                                {{type.nome}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n\r\n                    </mat-form-field>\r\n                    <button mat-icon-button type=\"submit\" #tooltip=\"matTooltip\" matTooltip=\"adicionar matéria\"\r\n                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <mat-icon>add</mat-icon>\r\n                    </button>\r\n                </form> -->\r\n\r\n\r\n                <form novalidate [formGroup]=\"moduloForm\">\r\n\r\n                    <ng-container formArrayName=\"materias\">\r\n\r\n                        <ng-container *ngFor=\"let matForm of materias.controls; let i = index;\">\r\n                            <div [formGroup]=\"matForm\">\r\n\r\n                                <mat-form-field appearance=\"standard\" style=\"width: 245px;\">\r\n                                    <mat-label>Nome</mat-label>\r\n                                    <input selected [value]=\"matForm.value.nome\" disabled matInput\r\n                                        placeholder=\"Descrição\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"standard\" style=\"width: 150px;margin-left: 20px;\">\r\n                                    <mat-label>Descrição</mat-label>\r\n                                    <input selected [value]=\"matForm.value.descricao || ' '\" disabled matInput\r\n                                        placeholder=\"Descrição\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"standard\" style=\"width: 85px;margin-left: 20px;\">\r\n                                    <mat-label>Modalidade</mat-label>\r\n                                    <input selected [value]=\"matForm.value.modalidade\" disabled matInput\r\n                                        placeholder=\"Descrição\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"standard\" style=\"width: 70px;margin-left: 20px;\">\r\n                                    <mat-label>Carga Horária</mat-label>\r\n                                    <input selected [value]=\"matForm.value.cargaHoraria\" disabled matInput\r\n                                        placeholder=\"semestre\">\r\n                                </mat-form-field>\r\n\r\n                                <!-- <button mat-icon-button (click)=\"deleteLesson(i)\" style=\"margin-left:10px ;\"\r\n                                    #tooltip=\"matTooltip\" matTooltip=\"remover\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n\r\n                                    <mat-icon style=\"vertical-align: middle;\" class=\"delete-btn\">\r\n                                        delete_forever</mat-icon>\r\n                                </button> -->\r\n\r\n                            </div>\r\n                        </ng-container>\r\n\r\n                    </ng-container>\r\n\r\n                </form>\r\n            </ng-container>\r\n\r\n            <ng-template #showEscolhaMateriasMsg>\r\n                <span style=\"font-style: italic; margin-top: 10px; font-size: 0.9em;\">\r\n                    * escolha o tipo para poder adicionar as matérias\r\n                </span>\r\n                \r\n            </ng-template>\r\n            \r\n\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"Documentos\">\r\n\r\n\r\n            <!-- <div div style=\"font-size: 0.9em;font-style: italic;margin-top: 20px;\">\r\n                Adicione a documentação exigida (opcional):\r\n            </div>\r\n\r\n            <form novalidate [formGroup]=\"addDocForm\" (ngSubmit)=\"addDocumentos(addDocForm)\">\r\n                <mat-form-field appearance=\"standard\" style=\"width: 175px;\">\r\n                    <mat-label>Documento</mat-label>\r\n                    <mat-select formControlName=\"documento\" placeholder=\"\">\r\n                        <mat-option></mat-option>\r\n                        <mat-option [value]=\"type\" *ngFor=\"let type of docTemplates\">\r\n                            {{type.nome}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n\r\n                </mat-form-field>\r\n                <button mat-icon-button type=\"submit\" #tooltip=\"matTooltip\" matTooltip=\"adicionar documentos\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n            </form> -->\r\n\r\n\r\n            <form novalidate [formGroup]=\"moduloForm\">\r\n\r\n                <ng-container formArrayName=\"documentosExigidos\">\r\n\r\n                    <ng-container *ngFor=\"let docsForm of modulo.documentosExigidos; let i = index;\">\r\n                        <div >\r\n\r\n                            <mat-form-field appearance=\"standard\" style=\"width: 180px;\">\r\n                                <mat-label>Descrição</mat-label>\r\n                                <input selected [value]=\"docsForm.descricao\" disabled matInput\r\n                                    placeholder=\"Descrição\">\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field appearance=\"standard\" style=\"width: 260px;margin-left: 20px;\">\r\n                                <mat-label>Comentário</mat-label>\r\n                                <input selected [value]=\"docsForm.comentario\" disabled matInput placeholder=\"Descrição\">\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field appearance=\"standard\" style=\"width: 175px;;margin-left: 20px;\">\r\n                                <mat-label>Titular</mat-label>\r\n                                <input selected [value]=\"docsForm.titular\" disabled matInput placeholder=\"Descrição\">\r\n                            </mat-form-field>                         \r\n\r\n                            <br>\r\n\r\n                            <mat-form-field appearance=\"standard\" style=\"width: 90px;\">\r\n                                <mat-label>Validade (dias)</mat-label>\r\n                                <input selected [value]=\"docsForm.validadeDias\" disabled matInput\r\n                                    placeholder=\"semestre\">\r\n                            </mat-form-field>\r\n\r\n                            <mat-checkbox color=\"primary\" style=\"margin-left:10px ;\"\r\n                            [value]=\"docsForm.obrigatorioParaMatricula\" disabled>\r\n                                Documento obrigatório para matrícula</mat-checkbox>\r\n\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                </ng-container>\r\n\r\n            </form>\r\n\r\n        </mat-tab>\r\n\r\n    </mat-tab-group>\r\n\r\n    <!-- <mat-progress-bar [style.visibility]=\"saveProgressBar\" mode=\"query\"></mat-progress-bar>\r\n\r\n    <span *ngFor=\"let msg of errorMsg\" style=\"margin-top: 20px; font-size: 0.8em;color: red;width: 350px;\">\r\n        {{ msg }}\r\n\r\n    </span>\r\n\r\n\r\n    <span  >\r\n        <form novalidate [formGroup]=\"moduloForm\" (ngSubmit)=\"onSubmit(moduloForm)\" style=\"width: 200px; float: right;\">\r\n            <button type=\"submit\" [disabled]=\"disabledSaveButton\" mat-raised-button color=\"primary\"\r\n                style=\"float:right;margin-top: 10px\">\r\n\r\n                salvar\r\n            </button>\r\n        </form>\r\n    </span>     -->\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n//import { GenericTask } from 'src/app/shared/models/generictask.model';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n//import { AdmService } from '../../adm.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { AddProfessorModalComponent } from \"../ModalAddProf/addprof.component\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\nexport class Grids {\r\n    constructor(\r\n        //public styles?: string,\r\n        public estilo?: { [key: string]: string },\r\n        public materia?: string\r\n    ) {\r\n\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'calendario-modal',\r\n    templateUrl: './calendario.component.html',\r\n    styleUrls: ['./calendario.component.scss']\r\n})\r\n\r\n\r\nexport class CalendarioModalComponent implements OnInit {\r\n\r\n    grids: Grids[] = new Array<Grids>()\r\n\r\n    styles: { [key: string]: string } = {\r\n        'border': '1px solid rgb(93, 93, 104)',\r\n        'display': 'flex',\r\n        'float': 'left',\r\n        'align-items': 'center',\r\n        'justify-content': 'center',\r\n        'height': '20px',\r\n        'width': '20px'\r\n    }\r\n\r\n    styles2: { [key: string]: string } = {\r\n        'height': '30px',\r\n        'width': '40px',\r\n        'border-radius': '20px',\r\n        'flex': '1',\r\n        'background': 'linear-gradient(45deg, green 0%, green 50%, red 0%, red 50%)'\r\n    }\r\n    // cor = 'rgb(16, 16, 216)'\r\n    cor = 'green'\r\n\r\n    // prototipoCalendario: ProtoCalendar[] = new Array<ProtoCalendar>();\r\n    getColor(dia, index) {\r\n        console.log(dia)\r\n        console.log(index)\r\n        let result;\r\n        // this.prototipoCalendario[0].dias.forEach(element => {\r\n        //     element.dia == dia ? result = true : result = false\r\n        // });\r\n\r\n\r\n        let achado = this.prototipoCalendario[index - 1].dias.find(element => element.dia == dia);\r\n        if (achado == undefined) {\r\n            return false\r\n        } else {\r\n            return true;\r\n        }\r\n\r\n        //return result;\r\n\r\n    }\r\n\r\n    prototipoCalendario = [\r\n        {\r\n            ano: 2021,\r\n            mes: 'Jan',\r\n            visibility: 'visible',\r\n            totaldiasplot: ['', '', '', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11',\r\n                '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26',\r\n                '27', '28', '29', '30', '31', ''\r\n            ],\r\n            dias: [\r\n                {\r\n                    dia: '',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '1',\r\n                    cor: 'linear-gradient(45deg, green 0%, green 50%, red 0%, red 50%)'\r\n                },\r\n                {\r\n                    dia: '2',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '3',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '4',\r\n                    cor: 'green'\r\n                },\r\n                {\r\n                    dia: '5',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '6',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '7',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '8',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '9',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '10',\r\n                    cor: 'white'\r\n                },\r\n\r\n                {\r\n                    dia: '11',\r\n                    cor: 'green'\r\n                },\r\n                {\r\n                    dia: '12',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '13',\r\n                    cor: 'green'\r\n                },\r\n                {\r\n                    dia: '14',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '15',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '16',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '17',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '18',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '19',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '20',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '21',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '22',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '23',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '24',\r\n                    cor: 'green'\r\n                },\r\n                {\r\n                    dia: '25',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '26',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '27',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '28',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '29',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '30',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '31',\r\n                    cor: 'white'\r\n                },\r\n                {\r\n                    dia: '',\r\n                    cor: 'white'\r\n                },\r\n            ]\r\n\r\n        },\r\n        {\r\n            ano: 2021,\r\n            mes: 'Fev',\r\n            visibility: 'visible'\r\n        },\r\n        {\r\n            ano: 2021,\r\n            mes: 'Mar',\r\n            visibility: 'visible'\r\n        }\r\n\r\n    ]\r\n\r\n\r\n    /*\r\n            {\r\n                mes: \"Jan\",\r\n                visibility: 'hidden',\r\n    \r\n            },\r\n            {\r\n                mes: \"Fev\",\r\n                visibility: 'hidden'\r\n            },\r\n            {\r\n                mes: \"Mar\",\r\n                visibility: 'hidden'\r\n            },\r\n            {\r\n                mes: \"Abr\",\r\n                visibility: 'hidden'\r\n            },\r\n            {\r\n                mes: \"Mai\",\r\n                visibility: 'visible',\r\n                dias:\r\n                    [\r\n                        {\r\n                            dia: '4',\r\n                            cor: '',\r\n                        },\r\n                        {\r\n                            dia: '5',\r\n                            cor: '',\r\n                        },\r\n                        {\r\n                            dia: '11',\r\n                            cor: '',\r\n                        },\r\n                        {\r\n                            dia: '12',\r\n                            cor: '',\r\n                        },\r\n                        {\r\n                            dia: '18',\r\n                            cor: '',\r\n                        },\r\n                        {\r\n                            dia: '19',\r\n                            cor: '',\r\n                        },\r\n                        {\r\n                            dia: '25',\r\n                            cor: '',\r\n                        },\r\n                        {\r\n                            dia: '26',\r\n                            cor: '',\r\n                        }\r\n    \r\n    \r\n                    ]\r\n            },\r\n            {\r\n                // 4, 5, 11, 12, 18, 19, 25, 26\r\n                mes: \"Jun\",\r\n                visibility: 'visible'\r\n            },\r\n            {\r\n                mes: \"Jul\",\r\n                visibility: 'visible'\r\n            },\r\n            {\r\n                mes: \"Ago\",\r\n                visibility: 'visible'\r\n            },\r\n            {\r\n                mes: \"Set\",\r\n                visibility: 'visible'\r\n            },\r\n            {\r\n                mes: \"Out\",\r\n                visibility: 'visible'\r\n            },\r\n            {\r\n                mes: \"Nov\",\r\n                visibility: 'visible'\r\n            },\r\n            {\r\n                mes: \"Des\",\r\n                visibility: 'visible'\r\n            }\r\n    \r\n        ]\r\n    \r\n    */\r\n    // cor = 'rgb(173, 92, 92)'\r\n\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n    // pageEvent: PageEvent;\r\n    //editedColaborador: Colaborador = new Colaborador();\r\n    meses: number[] = new Array<number>(12)\r\n    //calendarArray: number[] = new Array<number>(31)\r\n    calendarArray: string[] = new Array<string>()\r\n    semanas: string[] = new Array<string>('D', 'S', 'T', 'Q', 'Q', 'S', 'S')\r\n    previsaoTermino = \"Previsão de início 1: 01/05/2021\"\r\n    BaseUrl = environment.baseUrl\r\n    ativo = true;\r\n    constructor(\r\n        private _http: HttpClient,\r\n        //private service: AdmService,\r\n        public dialog: MatDialog,\r\n        public dialogRef: MatDialogRef<CalendarioModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n    //@Output() newItemEvent = new EventEmitter<string>();\r\n\r\n\r\n    ngOnInit() {\r\n        // this.prototipoCalendario\r\n        this.ativo = true;\r\n        console.log(this.data['turma'])\r\n        //this.getAlunosDaTurma(this.data['turma'].cursoId)\r\n        //  Object.assign(this.editedColaborador, this.data['colaborador'])\r\n        // console.log(\"on init\")\r\n        //this.getTasks(1, this.pageSize);\r\n\r\n        // this.grids[0].materia = \"Enfermagem nas Intercorrências Clínicas\"\r\n        // this.grids[1].estilo = this.styles2\r\n        // this.grids[1].materia = \"Enfermagem nas Intercorrências Clínicas\"\r\n        this.calendarArray.push('1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17',\r\n            '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30')\r\n        this.calendarArray.unshift('', '', '')\r\n        this.calendarArray.push('', '')\r\n        // console.\r\n        this.construir()\r\n    }\r\n\r\n    construir() {\r\n        this.grids = new Array<Grids>()\r\n        let grid = new Grids(this.styles2,\r\n            \"Enfermagem nas Intercorrências Clínicas\")\r\n        let grid2 = new Grids(this.styles2,\r\n            \"Enfermagem nas Intercorrências Clínicas\")\r\n        this.grids.push(grid)\r\n        this.grids.push(grid2)\r\n    }\r\n\r\n    getAlunosDaTurma(turmaId) {\r\n        console.log(turmaId)\r\n        // alunosturma\r\n        this._http.get(`${this.BaseUrl}/cursos/alunosturma/?turmaId=${turmaId}`)\r\n            .subscribe(\r\n                (response) => { console.log(response) },\r\n                (error) => { },\r\n                () => { }\r\n            )\r\n    }\r\n\r\n    openAddProfModal(): void {\r\n        const dialogRef = this.dialog\r\n            .open(AddProfessorModalComponent, {\r\n                height: 'auto',\r\n                width: '1030px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                maxWidth: '400vh',\r\n\r\n                data: {},\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            //console.log('The dialog was closed');\r\n            // console.log(result);\r\n            // console.log(this.templateTasks);\r\n            //console.log(this.templateTasks);\r\n            //this.newtasks. = this.templateTasks\r\n            // this.templateTasks = result;\r\n        });\r\n    }\r\n\r\n\r\n    submitForm(form: NgForm) {\r\n        if (form.valid) {\r\n            console.log('form valid')\r\n            // this.model.saveProduct(this.product);\r\n            // //this.product = new Product();\r\n            // //form.reset();\r\n            // this.originalProduct = this.product;\r\n            // this.router.navigateByUrl(\"/\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ProtoCalendar {\r\n    constructor(\r\n        public mes?: string,\r\n        public visibility?: string,\r\n        public totalDias?: number[],\r\n        public dias?: number[],\r\n    ) {\r\n\r\n    }\r\n}\r\n\r\nexport class DiasMes {\r\n    constructor(\r\n        public totaldias?: number[],\r\n        public dia?: number[],\r\n    ) {\r\n\r\n    }\r\n}","<div class=\"container\" style=\"margin-bottom: 10px;\">\r\n    <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 43%;\">\r\n        <mat-label>Turma</mat-label>\r\n        <input disabled name=\"templateName\" matInput value=\"Turma CGI 000001 (Curso Técnico em Enfermagem)\">\r\n    </mat-form-field>\r\n    <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 15%;\">\r\n        <mat-label>Turno</mat-label>\r\n        <input disabled name=\"templateName\" matInput value=\"Manhã\">\r\n    </mat-form-field>\r\n    <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 15%;\">\r\n        <mat-label>Horário</mat-label>\r\n        <input disabled name=\"templateName\" matInput value=\"08:00 às 13:00\">\r\n    </mat-form-field>\r\n    <br>\r\n    <div class=\"\" style=\"justify-content: center; padding-left: 20px;\">\r\n\r\n\r\n        <div style=\"justify-content: center; display: inline-block;margin-top: 10px;margin-left: 5px;\"\r\n            *ngFor=\"let proto of prototipoCalendario;let x = index;\">\r\n\r\n            <mat-card class=\"example-card\"\r\n                style=\"border: 1px solid rgb(104, 93, 99);;padding: 0px;width: 144px;height: 180px;\">\r\n                <mat-card-header style=\"padding: 0px;justify-content: center;\">\r\n                    <!-- <div mat-card-avatar class=\"example-header-image\" style=\"border: 1px solid red;\">x</div> -->\r\n                    <mat-card-title style=\"margin-top: 5px;\">\r\n                        {{proto.mes}}/{{proto.ano}}</mat-card-title>\r\n                    <!-- <mat-card-subtitle style=\"border: 1px solid red;padding: 0px;margin: 0px;\">Fev/02</mat-card-subtitle> -->\r\n                </mat-card-header>\r\n                <!-- <img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\"> -->\r\n                <mat-card-content style=\"border: 1px solid rgb(93, 93, 104);\">\r\n                    <span *ngFor=\"let semana of semanas; let i = index;\" style=\"border: 1px solid rgb(93, 93, 104);\r\n                    font-weight:800;\r\n                    display: flex;float: left;\r\n                    margin-bottom: 3px;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    height: 20px;\r\n                    width: 20px;\">{{semana}}</span>\r\n            \r\n                    <span *ngFor=\"let item of proto.dias; let i = index;\" id=\"day{{item}}-{{proto.mes}}\"\r\n                        [ngStyle]=\"{background:item.cor,visibility:proto.visibility }\"\r\n                        style=\"border: 1px solid rgb(93, 93, 104);\r\n                    display: flex;\r\n                    float: left;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    height: 20px;\r\n                    width: 20px\">\r\n                        {{item.dia}}\r\n                    </span>\r\n\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </div>\r\n\r\n\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n<mat-grid-list cols=\"2\" rowHeight=\"20px\" style=\"margin-left: 30px;margin-top: 15px;\">\r\n    <mat-grid-tile *ngFor=\"let item of grids\" style=\"margin-bottom: 10px;\">\r\n\r\n        <div id=\"main\" style=\"width: 600px;\r\n        height: 40px;\r\n        display: flex;\r\n        align-items: center;\">\r\n            <div [ngStyle]=\"item.estilo\">\r\n            </div>\r\n            <div style=\"flex: 21;margin-left: 5px;font-size: 0.9em;\">{{item.materia}}</div>\r\n            <!-- [ngStyle]=\"styles\" -->\r\n        </div>\r\n\r\n    </mat-grid-tile>\r\n\r\n    <!-- <mat-grid-tile style=\"\">\r\n        <div id=\"main\" style=\"height: 40px;width: 600px;\r\n        \r\n        display: flex;\r\n        align-items: center;\r\n        \">\r\n            <div style=\"height:30px;width: 40px;border-radius: 2px; flex: 1;background-color:coral;\"></div>\r\n            <div style=\"flex: 21;margin-left: 5px;\">Enfermagem nas Intercorrências Clínicas</div>\r\n            \r\n\r\n        </div>\r\n    </mat-grid-tile> -->\r\n\r\n</mat-grid-list>\r\n\r\n\r\n<div style=\"margin-top: 20px;\">\r\n    <button type=\"submit\" mat-raised-button disabled=\"false\" style=\"float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n        Salvar\r\n    </button>\r\n    <button style=\"float:right;margin-bottom: 10px;\" mat-raised-button\r\n        [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button>\r\n</div>","import { Component, Inject, OnChanges, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n//import { GenericTask } from 'src/app/shared/models/generictask.model';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n//import { AdmService } from '../../adm.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { FormBuilder, FormGroup, NgForm, Validators } from \"@angular/forms\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'editprofessormodal',\r\n    templateUrl: './editprofessor.component.html',\r\n    styleUrls: ['./editprofessor.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class EditProfessorComponent implements OnInit {\r\n\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n    // pageEvent: PageEvent;\r\n    baseUrl = environment.baseUrl;\r\n    public initProgressBar = 'visible'\r\n    editedColaborador: any;\r\n    originalColaborador: any;//ProfessorTeste = new ProfessorTeste();\r\n    unidades = Unidades;\r\n    showMensagem = false\r\n    mensagem = ''\r\n    cpf = ''\r\n    showForm = false\r\n    public saveBar = 'hidden'\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    cargos = Cargos;\r\n    ativo = true;\r\n    public professorForm: FormGroup\r\n    constructor(\r\n        // private _snackBar: MatSnackBar,\r\n        private _admService: AdmService,\r\n        private _fb: FormBuilder,\r\n        private _helper: HelpersService,\r\n        private http: HttpClient,\r\n        public dialogRef: MatDialogRef<EditProfessorComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.professorForm = _fb.group({\r\n            id: [''],\r\n            nome: ['', [Validators.required, Validators.minLength(5)]],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n            cnpj: ['', [Validators.required, Validators.minLength(14)]],\r\n            celular: [null, [Validators.required, Validators.minLength(5)]],\r\n            telefoneContato: [null, [Validators.minLength(10)]],\r\n            nomeContato: ['', [Validators.required, Validators.minLength(3)]],\r\n            dataEntrada:[''],\r\n            dataSaida:[],\r\n            cargoId: [0, [Validators.required]],\r\n            ativo: [true, [Validators.required]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            complemento: [''],\r\n            numero: ['', [Validators.required]],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            agencia: [''],\r\n            bancoNumero: [''],\r\n            conta: [''],\r\n            tipoConta: [''],\r\n            unidadeId: ['']\r\n        })\r\n    }\r\n\r\n\r\n    //@Output() newItemEvent = new EventEmitter<string>();\r\n\r\n\r\n    ngOnInit() {\r\n        this.ativo = true;\r\n        // console.log(this.data['prof'])\r\n        // Object.assign(this.editedColaborador, this.data['colaborador'])\r\n        // console.log(this.data['colaborador'].id)\r\n        this.GetProfessor()\r\n\r\n    }\r\n\r\n    GetProfessor() {\r\n\r\n        this.http.get(`${this.baseUrl}/professor/${this.data['prof'].id}`)\r\n            .subscribe(response => {\r\n\r\n                console.log(response['result'])\r\n                                \r\n                this.professorForm.patchValue(response['result']);\r\n                this.originalColaborador = JSON.parse(JSON.stringify(this.professorForm.value))\r\n\r\n                //this.professorForm.patchValue(response['result']);\r\n                // this.originalColaborador = response['result'] \r\n                // this.professorForm.patchValue(this.originalColaborador);\r\n\r\n            }, err => {\r\n                this.initProgressBar = 'hidden'\r\n                //console.log(err)\r\n            },\r\n                () => {\r\n                    console.log(this.originalColaborador)\r\n                    this.dialogRef.addPanelClass('myeditprof-class')\r\n                    this.showForm = true\r\n                    this.initProgressBar = 'hidden'\r\n                });\r\n    }\r\n\r\n\r\n\r\n    submitForm(form: NgForm) {\r\n\r\n        //console.log(form.value)\r\n\r\n        // console.log(this.editedColaborador)\r\n\r\n        if (form.valid) {\r\n            this.saveBar = 'visible'\r\n            this.disabledSpinner = true\r\n            //console.log('form valid')\r\n\r\n            this.http.put(`${this.baseUrl}/professor`, this.professorForm.value, {})\r\n                .subscribe(response => {\r\n                    //console.log(response)\r\n                }, err => {\r\n                    // console.log(err)\r\n                    this.saveBar = 'hidden'\r\n                },\r\n                    () => {\r\n                        this.saveBar = 'hidden'\r\n                        //this.openSnackBar()\r\n                        this._helper.openSnackBarSucesso('Professor editado com sucesso!')\r\n                        this.dialogRef.close();\r\n\r\n                    });\r\n        }\r\n    }\r\n\r\n    disabledSpinner = false\r\n    // edit(form: any) {\r\n    //     //const novoColaborador = JSON.stringify(form.value);\r\n    //     console.log(form.valid)\r\n    //     if (form.valid) {\r\n\r\n    //         //this.redi([\"./adm/colaboradores\"]);\r\n    //         this.http.put(`${this.baseUrl}/professor`, this.editedColaborador, {})\r\n    //             .subscribe(response => {\r\n    //                 console.log(response)\r\n    //             }, err => { console.log(err) },\r\n    //                 () => {\r\n    //                     this.openSnackBar()\r\n    //                     this.dialogRef.close();\r\n\r\n    //                 });\r\n    //     }\r\n    // }\r\n\r\n\r\n    // openSnackBar() {\r\n    //     this.openSnackBar()\r\n    // }\r\n\r\n    isEqual = true\r\n    get formIsValid() {\r\n\r\n        if (JSON.stringify(this.editedColaborador) === JSON.stringify(this.originalColaborador)) {\r\n            this.isEqual = true\r\n        } else {\r\n            this.isEqual = false\r\n        }\r\n        return this.isEqual\r\n    }\r\n\r\n    get desabilitar() {\r\n          \r\n        if (this.professorForm.valid &&\r\n            JSON.stringify(this.originalColaborador) !=\r\n            JSON.stringify(this.professorForm.value)) {\r\n\r\n            return this.saveBar != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n}\r\n\r\n\r\n    consultaCEP(CEP: string) {\r\n        //console.log(CEP);\r\n\r\n        if (this.professorForm.get('cep').valid) {\r\n\r\n            CEP = CEP.replace('-', '');\r\n            CEP = CEP.replace('.', '');\r\n\r\n            this._admService.CepConsulta(this.professorForm.get('cep').value)\r\n                .subscribe(response => {\r\n\r\n                    this.professorForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase())\r\n                    this.professorForm.get('bairro').setValue(response[\"bairro\"].toUpperCase())\r\n                    this.professorForm.get('cidade').setValue(response[\"localidade\"].toUpperCase())\r\n                    this.professorForm.get('uf').setValue(response[\"uf\"].toUpperCase())\r\n\r\n                }, err => {  },\r\n                    () => {  });\r\n            }\r\n    }\r\n\r\n}\r\n\r\nexport class ProfessorTeste{\r\n    constructor(\r\n        public id?: string,\r\n        public nome?: string,\r\n        public email?: string,\r\n        public cpf?: string,\r\n        public cnpj?: string,\r\n        public celular?: string,\r\n        public telefoneContato?: string,\r\n        public nomeContato?: string,\r\n        public dataEntrada?:Date,\r\n        public dataSaida?:Date,\r\n        public cargoId?: string,\r\n        public ativo?: Boolean,\r\n        public cep?: string,\r\n        public logradouro?: string,\r\n        public complemento?: string,\r\n        public numero?: string,\r\n        public cidade?: string,\r\n        public uf?: string,\r\n        public bairro?: string,\r\n        public agencia?: string,\r\n        public bancoNumero?: string,\r\n        public conta?: string,\r\n        public tipoConta?: string,\r\n        public unidadeId?: string,\r\n    ){}\r\n}","<div style=\"font-size: 1.2em;\">\r\n    Visualizar/Editar Professor\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n\r\n<div *ngIf=\"showForm\">\r\n\r\n    <hr>\r\n\r\n    <form novalidate [formGroup]=\"professorForm\" (ngSubmit)=\"submitForm(professorForm)\">\r\n        <!-- <div class=\"card-body\"> -->\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 55%;\">\r\n                <mat-label>Nome</mat-label>\r\n                <input selected oninput=\"this.value = this.value.toUpperCase()\" \r\n                formControlName=\"nome\" required matInput placeholder=\"Nome\">\r\n            </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 40%; margin-left: 2%;\">\r\n            <mat-label>Email</mat-label>\r\n            <input selected disabled matInput [value]=\"professorForm.get('email').value\" >\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 18%;\">\r\n            <mat-label>CPF</mat-label>\r\n            <input disabled matInput [value]=\"professorForm.get('cpf').value | cpf\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 23%; margin-left: 2%;\">\r\n            <mat-label>CNPJ</mat-label>\r\n            <input disabled matInput [value]=\"professorForm.get('cnpj').value | cnpj\">            \r\n        </mat-form-field>        \r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n            <mat-label>Inicio</mat-label>\r\n            <input matInput [matDatepicker]=\"dp3\" formControlName=\"dataEntrada\" disabled>\r\n            <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>  \r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n            <mat-label>Saída</mat-label>\r\n            <input matInput [matDatepicker]=\"dp4\" formControlName=\"dataSaida\" disabled>\r\n            <mat-datepicker-toggle matSuffix [for]=\"dp4\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp4 disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>  \r\n\r\n      \r\n        <mat-slide-toggle style=\"width: 10%; margin-left: 3%\" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n            formControlName=\"ativo\" [required]=\"false\" matTooltip=\"ativo/inativo\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"250\" color=\"primary\">\r\n        </mat-slide-toggle>\r\n\r\n        <br>\r\n\r\n        <mat-form-field style=\"width: 20%;\" appearance=\"standard\">\r\n            <mat-label>Celular</mat-label>\r\n            <input formControlName=\"celular\" mask=\"(00) 00000-0000\" matInput \r\n            minlength=\"10\" maxlength=\"15\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n            <mat-label>Tel contato</mat-label>\r\n            <input selected onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n            mask=\"(00) 00000-0000\"\r\n            minlength=\"10\" maxlength=\"15\"\r\n            formControlName=\"telefoneContato\" required matInput placeholder=\"\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 2%;\">\r\n            <mat-label>Nome contato</mat-label>\r\n            <input selected oninput=\"this.value = this.value.toUpperCase()\" \r\n            formControlName=\"nomeContato\" required matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n       \r\n\r\n        <br>\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 15%;\">\r\n            <mat-label>CEP</mat-label>\r\n            <input selected matInput mask=\"00000-000\" formControlName=\"cep\" minlength=\"8\" maxlength=\"10\">\r\n        </mat-form-field>\r\n\r\n        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <span type=\"button\" (click)=\"consultaCEP(professorForm.get('cep').value)\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </span>\r\n        </i>\r\n        <br>\r\n        <div>\r\n            <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n                <mat-label>Logradouro</mat-label>\r\n                <input disabled [value]=\"professorForm.get('logradouro').value\" selected matInput>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 80px;margin-left: 10px;\">\r\n                <mat-label>Nº</mat-label>\r\n                <input oninput=\"this.value = this.value.toUpperCase()\"  formControlName=\"numero\" selected matInput\r\n                    placeholder=\"ex: rua tal...\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n                <mat-label>Complemento</mat-label>\r\n                <input selected matInput oninput=\"this.value = this.value.toUpperCase()\"  formControlName=\"complemento\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n                <mat-label>Cidade</mat-label>\r\n                <input disabled selected matInput [value]=\"professorForm.get('cidade').value\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 40px; margin-left: 10px;\">\r\n                <mat-label>UF</mat-label>\r\n                <input disabled selected [value]=\"professorForm.get('uf').value\" matInput>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n                <mat-label>Bairro</mat-label>\r\n                <input disabled oninput=\"this.value = this.value.toUpperCase()\"  selected matInput formControlName=\"bairro\">\r\n            </mat-form-field>\r\n\r\n        </div>\r\n\r\n        <mat-progress-bar [style.visibility]=\"saveBar\" @rowHighlight mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <div style=\"float: right;margin-top: 15px;\">\r\n            <button [disabled]=\"desabilitar\" color=\"primary\" type=\"submit\" mat-raised-button>\r\n                Salvar\r\n            </button>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import { Component, Inject, OnChanges, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n//import { GenericTask } from 'src/app/shared/models/generictask.model';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n//import { AdmService } from '../../adm.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'conferenciamodal',\r\n    templateUrl: './conferencia.component.html',\r\n    styleUrls: ['./conferencia.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ConferenciaComponent implements OnInit {\r\n\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n    // pageEvent: PageEvent;\r\n    baseUrl = environment.baseUrl;\r\n    tabs = ['Recebimentos/Pagamentos', 'Recebimentos com cartão'];\r\n\r\n    editedColaborador: Colaborador = new Colaborador();\r\n    originalColaborador: Colaborador = new Colaborador();\r\n    unidades = Unidades;\r\n    showMensagem = false\r\n    mensagem = ''\r\n    cpf = ''\r\n    indexTab: number = 0\r\n\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    cargos = Cargos;\r\n    ativo = true;\r\n    constructor(\r\n        private _snackBar: MatSnackBar,\r\n        private http: HttpClient,\r\n        public dialogRef: MatDialogRef<ConferenciaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n\r\n    //@Output() newItemEvent = new EventEmitter<string>();\r\n\r\n\r\n    ngOnInit() {\r\n        this.ativo = true;\r\n        //console.log(this.data['colaborador'])\r\n        //Object.assign(this.editedColaborador, this.data['colaborador'])\r\n        //this.cpf =  this.onInputChange(this.editedColaborador.cpf)\r\n        // console.log(\"on init\")\r\n        //this.getTasks(1, this.pageSize);\r\n    }\r\n\r\n    onInputChange(event) {\r\n        console.log(event)\r\n        let newVal =  event.replace(/\\D/g, '');\r\n        // if (backspace && newVal.length <= 6) {\r\n        //   newVal = newVal.substring(0, newVal.length - 1);\r\n        // }\r\n        if (newVal.length === 0) {\r\n          newVal = '';\r\n        } else if (newVal.length <= 3) {\r\n          newVal = newVal.replace(/^(\\d{0,3})/, '$1');\r\n        } else if (newVal.length <= 6) {\r\n          newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})/, '$1.$2');\r\n        } else if (newVal.length <= 9) {\r\n          newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})/, '$1.$2.$3');\r\n        } else if (newVal.length <= 11) {\r\n          newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})(\\d{0,2})/, '$1.$2.$3-$4');\r\n        } else {\r\n          newVal = newVal.substring(0, 11);\r\n          newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})(\\d{0,2})/, '$1.$2.$3-$4');\r\n        }\r\n        return newVal;\r\n      }\r\n\r\n      fechar() {\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    } \r\n\r\n    submitForm(form: NgForm) {\r\n        console.log(form.value)\r\n        console.log(this.editedColaborador)\r\n        if (form.valid) {\r\n            console.log('form valid')\r\n            /// const novoColaborador = JSON.stringify(form.value);\r\n            this.edit(JSON.stringify(this.editedColaborador))\r\n            // this.model.saveProduct(this.product);\r\n            // //this.product = new Product();\r\n            // //form.reset();\r\n            // this.originalProduct = this.product;\r\n            // this.router.navigateByUrl(\"/\");\r\n        }\r\n    }\r\n\r\n    edit(form: any) {\r\n        //const novoColaborador = JSON.stringify(form.value);\r\n        console.log(form)\r\n\r\n        //this.redi([\"./adm/colaboradores\"]);\r\n        this.http.put(`${this.baseUrl}/colaboradores`, form, {\r\n            //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bear \"\r\n            })\r\n        }).subscribe(response => {\r\n\r\n            console.log(response)\r\n\r\n\r\n\r\n        }, err => { console.log(err) },\r\n            () => {\r\n                this.openSnackBar()\r\n                this.dialogRef.close();\r\n\r\n            });\r\n    }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Colaborador editado com sucesso.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n    isEqual = true\r\n    get formIsValid() {\r\n\r\n        if (JSON.stringify(this.editedColaborador) === JSON.stringify(this.originalColaborador)) {\r\n            this.isEqual = true\r\n        } else {\r\n            this.isEqual = false\r\n        }\r\n        return this.isEqual\r\n    }\r\n\r\n\r\n    consultaCEP(CEP: string) {\r\n        //console.log(CEP);\r\n\r\n        this.http.get(`https://viacep.com.br/ws/${CEP}/json/`)\r\n            .subscribe(response => {\r\n\r\n                console.log(\"success\")\r\n                this.cepReturn = new CepReturn(\r\n                    response[\"logradouro\"],\r\n                    response[\"bairro\"],\r\n                    response[\"localidade\"],\r\n                    response[\"uf\"]);\r\n                console.log(this.cepReturn)\r\n\r\n                this.editedColaborador.logradouro = this.cepReturn.logradouro;\r\n                this.editedColaborador.bairro = this.cepReturn.bairro\r\n                this.editedColaborador.cidade = this.cepReturn.localidade\r\n                this.editedColaborador.uf = this.cepReturn.uf\r\n\r\n                // this.colaboradorForm.get('logradouro').setValue(response[\"logradouro\"]);\r\n                // this.colaboradorForm.get('bairro').setValue(response[\"bairro\"]);\r\n                // this.colaboradorForm.get('cidade').setValue(response[\"localidade\"]);\r\n                // this.colaboradorForm.get('uf').setValue(response[\"uf\"]);\r\n                //this.bairro = this.cepReturn.bairro\r\n                // const token = (<any>response).accessToken;\r\n                // console.log(response)\r\n                // localStorage.setItem(\"jwt\", token);\r\n                // this.invalidLogin = false;\r\n                // this.router.navigate([\"/main\"]);\r\n            }, err => { console.log(\"erros\") },\r\n                () => { console.log('finaly') });\r\n    }\r\n\r\n}","<div style=\"font-size: 1.2em;\">Conferência de Caixa\r\n\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button (click)=\"fechar()\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n<hr>\r\n\r\n<div>Valor Total Recebido:</div>\r\n<div></div>\r\n<div></div>\r\n<br>\r\n\r\n\r\n<!--                  STEPPERS TABS                           -->\r\n\r\n\r\n<mat-tab-group  [selectedIndex]=\"indexTab\" mat-align-tabs=\"start\">\r\n\r\n\r\n\r\n    <!--                  CADASTRO            -->\r\n\r\n\r\n    <mat-tab  [label]=\"tabs[0]\">\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 8%; \r\n                    text-align:left; \r\n                    font-size:0.8em;\r\n                    vertical-align: middle;font-weight: 400;\r\n                    border-top: 0px;\">Nº Lanc.</th>\r\n\r\n                            <th style=\"width: 8%;font-size:0.8em;\r\n                                    vertical-align: middle;\r\n                                    text-align:left;\r\n                    border-top: 0px; font-weight: 400;\">Nº Doc.</th>\r\n\r\n                            <th style=\"width: 17%;font-size:0.8em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">Aluno<br>Fornecedor</th>\r\n\r\n                            <th style=\"width: 23%;font-size:0.8em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Nome</th>\r\n\r\n                            <th style=\"width: 6%;font-size:0.8em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Forma de<br>Pagamento</th>\r\n\r\n                            <th style=\"width: 6%;font-size:0.8em;font-weight: 400;\r\n                    border-top: 0px;\">Vencimento</th>\r\n\r\n                            <th style=\"width: 6%;font-size:0.8em;font-weight: 400;\r\n                    border-top: 0px;\">Data Pagamento\r\n                            </th>\r\n                            <th style=\"width: 26%;font-size:0.8em;font-weight: 400;\r\n                            border-top: 0px;\">Valor Pago\r\n                                    </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr @rowHighlight>\r\n\r\n                            <td style=\"text-align:center;vertical-align: middle;font-weight: 400;font-size:0.8em;\">\r\n                                999999\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;font-weight: 400;font-size:0.8em;\">\r\n                            999999\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;font-weight: 400;font-size:0.8em;\">\r\n                            999999<br>98.987.987/9879-98\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;font-weight: 400;font-size:0.8em;\">\r\n                            Álvaro Carlos Camargo Ximenes Júnior\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;font-weight: 400;font-size:0.8em;\">\r\n                                Crédito à vista\r\n                            </td>\r\n\r\n                            <td style=\"position: relative;font-weight: 400;font-size:0.8em;\">\r\n                                12/10/2021\r\n                            </td>\r\n                            <td style=\"position: relative;font-weight: 400;font-size:0.8em;\">\r\n                                12/10/2021\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"deletar\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"deleteColaborador(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>delete_outline</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n                            </td>\r\n                            <td style=\"position: relative;font-weight: 400;font-size:0.8em;\">\r\n                                R$ 9.999,99\r\n                            </td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <!-- <mat-paginator *ngIf=\"length > 5\" style=\"\r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" [length]=\"length\" [pageSize]=\"5\" hidePageSize=\"true\" (page)=\"pageEvent = $event\"\r\n                (click)=\"changePage(pageEvent)\">\r\n            </mat-paginator> -->\r\n\r\n        </div>\r\n\r\n    </mat-tab>\r\n\r\n\r\n\r\n    <!--                  RESP FINANCEIRO          -->\r\n\r\n\r\n\r\n    <mat-tab  [label]=\"tabs[1]\">\r\n\r\n        <!-- <form novalidate [formGroup]=\"responsavelFinancForm\">\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                <mat-label>Nome completo</mat-label>\r\n                <input selected formControlName=\"nome\" required name=\"nome\" matInput placeholder=\"Nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>CPF</mat-label>\r\n                <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                    formControlName=\"cpf\" minlength=\"11\" maxlength=\"11\" selected name=\"cpf\" matInput\r\n                    placeholder=\"digite o CPF\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>RG</mat-label>\r\n                <input formControlName=\"rg\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" selected name=\"rg\"\r\n                    matInput placeholder=\"digite o RG\">\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 17%; margin-left: 5%;\">\r\n                <mat-label>Nascimento</mat-label>\r\n                <date-input formControlName=\"nascimento\" name=\"nascimento\" matInput required></date-input>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 20%;\">\r\n                <mat-label>Grau de parentesco</mat-label>\r\n                <input formControlName=\"parentesco\" required name=\"naturalidadeUF\" matInput\r\n                    placeholder=\"Grau de parentesco\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n                <mat-label>Naturalidade</mat-label>\r\n                <input selected formControlName=\"naturalidade\" required name=\"naturalidade\" matInput placeholder=\"Nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                <mat-label>UF</mat-label>\r\n                <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\"\r\n                    minlength=\"2\" maxlength=\"2\" selected formControlName=\"naturalidadeUF\" required name=\"naturalidadeUF\"\r\n                    matInput placeholder=\"UF\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n            <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                <mat-label>Email</mat-label>\r\n                <input selected formControlName=\"email\" name=\"email\" matInput placeholder=\"Email\">\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                <mat-label>Celular</mat-label>\r\n                <example-tel-input #cel name=\"telCelular\" formControlName=\"telCelular\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                </example-tel-input>\r\n                \r\n                <mat-hint>telefone com DDD</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                <mat-label>WhatsApp</mat-label>\r\n                <example-tel-input name=\"telWhatsapp\" formControlName=\"telWhatsapp\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                </example-tel-input>\r\n                <mat-hint>telefone com DDD</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                <mat-label>Residencial</mat-label>\r\n                <example-tel-input name=\"telResidencial\" formControlName=\"telResidencial\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                </example-tel-input>\r\n                <mat-hint>telefone com DDD</mat-hint>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n                <mat-label>CEP</mat-label>\r\n                <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" #cep\r\n                    formControlName=\"cep\" minlength=\"8\" maxlength=\"8\" required name=\"templateName\" matInput\r\n                    placeholder=\"apenas números\">\r\n            </mat-form-field>\r\n            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\"\r\n                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                <button (click)=\"consultaCEPFin(cep.value)\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                    <mat-icon>search</mat-icon>\r\n                </button>\r\n            </i>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 5%;\">\r\n                <mat-label>Logradouro</mat-label>\r\n                <input selected [(value)]=\"cepReturn2.logradouro\" name=\"templateName\" matInput\r\n                    placeholder=\"ex: rua tal...\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 45%; margin-left: 5%;\">\r\n                <mat-label>Complemento</mat-label>\r\n                <input selected formControlName=\"complemento\" name=\"templateName\" matInput\r\n                    placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                <mat-label>Cidade</mat-label>\r\n                <input disabled selected [(value)]=\"cepReturn2.localidade\" name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 5%;\">\r\n                <mat-label>UF</mat-label>\r\n                <input disabled selected [(value)]=\"cepReturn2.uf\" name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 5%;\">\r\n                <mat-label>Bairro</mat-label>\r\n                <input selected [(value)]=\"cepReturn2.bairro\" name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n            <br>\r\n\r\n\r\n            <div style=\"font-size: 0.9em;\">\r\n                <i style=\"margin-left: 5px; position: relative;top: 5px;\" #tooltip=\"matTooltip\"\r\n                    matTooltip=\"anexar comp. de residência\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    \r\n                    <mat-icon style=\"color: green; margin-left: 0px; font-size: 20px;\">done</mat-icon>\r\n                    \r\n                </i>\r\n                comprovante de residência\r\n                <i style=\"margin-left: 5px; position: relative;top: 5px;\" #tooltip=\"matTooltip\"\r\n                    matTooltip=\"anexar comp. de residência\" matTooltipPosition=\"above\" type=\"button\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    \r\n                    <mat-icon style=\"margin-left: 0px; font-size: 20px;\">attach_file</mat-icon>\r\n                    \r\n                </i>\r\n                <span>\r\n                    \"arquivotal.pdf\"\r\n                </span>\r\n            </div>\r\n\r\n            <div style=\"font-size: 0.8em;\">\r\n                <i style=\"margin-left: 5px;position: relative;top: 5px;\" #tooltip=\"matTooltip\"\r\n                    matTooltip=\"anexar comp. de residência\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    \r\n                    <mat-icon style=\"color: red; margin-left: 0px; font-size: 20px;\">close</mat-icon>\r\n                    \r\n                </i>\r\n                CPF\r\n                <i style=\"margin-left: 5px;position: relative;top: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\"\r\n                    matTooltipPosition=\"above\" type=\"button\" matTooltipHideDelay=\"100\">\r\n                    \r\n                    <mat-icon style=\"margin-left: 0px; font-size: 20px;\">attach_file</mat-icon>\r\n                    \r\n                </i>\r\n                <span>\r\n                    \"arquivotal.pdf\"\r\n                </span>\r\n            </div>\r\n\r\n            <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n                <mat-label>Observações gerais</mat-label>\r\n                <textarea formControlName=\"observacoes\" name=\"observacoes\" matInput></textarea>\r\n            </mat-form-field>\r\n\r\n\r\n           \r\n\r\n        </form> -->\r\n\r\n\r\n\r\n    </mat-tab>\r\n\r\n\r\n    <!--                  RESP MENOR          -->\r\n\r\n\r\n    <!-- <mat-tab  [label]=\"tabs[2]\"> -->\r\n\r\n\r\n        <!-- <form novalidate [formGroup]=\"responsavelMenorForm\">\r\n            <br>\r\n\r\n            <section style=\"margin-left: 1%;\" class=\"example-section\">\r\n                <label class=\"example-margin\">O responsável do menor também é o responsável financeiro:</label>\r\n                <mat-radio-group>\r\n                    <mat-radio-button color=\"primary\" [checked]=\"checkedRespMenor.sim\" class=\"example-margin\"\r\n                        (click)=\"eHRespMenorEFinan(true)\" value=\"Sim\">Sim</mat-radio-button>\r\n                    <mat-radio-button color=\"primary\" [checked]=\"checkedRespMenor.nao\" class=\"example-margin\"\r\n                        (click)=\"eHRespMenorEFinan(false)\" value=\"Não\">Não</mat-radio-button>\r\n                </mat-radio-group>\r\n            </section>\r\n\r\n            <div class=\"card-body\">\r\n                <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                    <mat-label>Nome completo</mat-label>\r\n                    <input selected formControlName=\"nome\" required name=\"nome\" matInput placeholder=\"Nome\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                    <mat-label>CPF</mat-label>\r\n                    <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                        formControlName=\"cpf\" minlength=\"11\" maxlength=\"11\" selected name=\"cpf\" matInput\r\n                        placeholder=\"digite o CPF\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                    <mat-label>RG</mat-label>\r\n                    <input formControlName=\"rg\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" selected\r\n                        name=\"rg\" matInput placeholder=\"digite o RG\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%; margin-left: 5%;\">\r\n                    <mat-label>Nascimento</mat-label>\r\n                    <date-input formControlName=\"nascimento\" name=\"nascimento\" matInput required></date-input>\r\n                </mat-form-field>\r\n\r\n                <br>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 2%;\">\r\n                    <mat-label>Grau de parentesco</mat-label>\r\n                    <input formControlName=\"parentesco\" required name=\"naturalidadeUF\" matInput\r\n                        placeholder=\"Grau de parentesco\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n                    <mat-label>Naturalidade</mat-label>\r\n                    <input selected formControlName=\"naturalidade\" required name=\"naturalidade\" matInput\r\n                        placeholder=\"Nome\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                    <mat-label>UF</mat-label>\r\n                    <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\"\r\n                        minlength=\"2\" maxlength=\"2\" selected formControlName=\"naturalidadeUF\" required\r\n                        name=\"naturalidadeUF\" matInput placeholder=\"UF\">\r\n                </mat-form-field>\r\n\r\n                <span type=\"button\" (click)=\"uploadDoc('compRes')\">juntar doc</span>\r\n\r\n                <br>\r\n                <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input selected formControlName=\"email\" name=\"email\" matInput placeholder=\"Email\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>Celular</mat-label>\r\n                    <example-tel-input #cel name=\"telCelular\" formControlName=\"telCelular\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </example-tel-input>\r\n                    \r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>WhatsApp</mat-label>\r\n                    <example-tel-input name=\"telWhatsapp\" formControlName=\"telWhatsapp\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </example-tel-input>\r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>Residencial</mat-label>\r\n                    <example-tel-input name=\"telResidencial\" formControlName=\"telResidencial\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </example-tel-input>\r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <br>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n                    <mat-label>CEP</mat-label>\r\n                    <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" #cep\r\n                        formControlName=\"cep\" minlength=\"8\" maxlength=\"8\" required name=\"templateName\" matInput\r\n                        placeholder=\"apenas números\">\r\n                </mat-form-field>\r\n                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"consultaCEPMen(cep.value)\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n                <br>\r\n                <mat-form-field appearance=\"standard\" style=\"width: 40%;\">\r\n                    <mat-label>Logradouro</mat-label>\r\n                    <input selected [(value)]=\"cepReturn3.logradouro\" name=\"templateName\" matInput\r\n                        placeholder=\"ex: rua tal...\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 55%; margin-left: 5%;\">\r\n                    <mat-label>Complemento</mat-label>\r\n                    <input selected formControlName=\"complemento\" name=\"templateName\" matInput\r\n                        placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                    <mat-label>Cidade</mat-label>\r\n                    <input selected required [(value)]=\"cepReturn3.localidade\" name=\"templateName\" matInput\r\n                        placeholder=\"digite o bairro\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 15%;\">\r\n                    <mat-label>UF</mat-label>\r\n                    <input selected required [(value)]=\"cepReturn3.uf\" name=\"templateName\" matInput\r\n                        placeholder=\"digite o bairro\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 15%;\">\r\n                    <mat-label>Bairro</mat-label>\r\n                    <input selected [(value)]=\"cepReturn3.bairro\" name=\"templateName\" matInput\r\n                        placeholder=\"digite o bairro\">\r\n                </mat-form-field>\r\n                <br>\r\n\r\n\r\n                <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n                    <mat-label>Observações gerais</mat-label>\r\n                    <textarea formControlName=\"observacoes\" name=\"observacoes\" matInput></textarea>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n            \r\n\r\n        </form> -->\r\n\r\n\r\n    <!-- </mat-tab> -->\r\n\r\n\r\n    <!--                             TAB MATRICULA CONFIRM             -->\r\n\r\n\r\n\r\n    <!-- <mat-tab  [label]=\"tabs[3]\"> -->\r\n\r\n        <!-- <br>\r\n\r\n        <div>\r\n            <ng-container *ngIf=\"hideCursoSearchAndMessage\">\r\n                <div *ngIf=\"showSelectCursoSearch; else message\">\r\n                    Selecione o curso disponível nesta unidade:\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 2%;\">\r\n                        <mat-label>Curso</mat-label>\r\n                        <mat-select selected name=\"cargo\" required>\r\n                            <mat-option></mat-option>\r\n                            <mat-option (click)=\"consultarCursos(item.descricao)\" *ngFor=\"let item of cursosDisponiveis\"\r\n                                [value]=\"item.descricao\">\r\n                                {{item.descricao}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <ng-template #message>\r\n                    Não há turmas com matrículas abertas nesta unidade!\r\n                </ng-template>\r\n            </ng-container>\r\n\r\n\r\n            <div *ngIf=\"showTableCursosAndamento\" class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%;height: 20px;\r\n                    text-align:left; border: 1px solid red;\r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 27%;font-size:0.9em;\r\n                                    vertical-align: middle; border: 1px solid red;\r\n                                    text-align:left;\r\n                    border-top: 0px; font-weight: 400;\">Descrição</th>\r\n\r\n                            <th style=\"width: 24%;font-size:0.9em;\r\n                            vertical-align: middle; border: 1px solid red;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">Horário</th>\r\n\r\n                            <th style=\"width: 15%;font-size:0.9em;\r\n                    text-align:center;  border: 1px solid red;\r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Início</th>\r\n\r\n                            <th style=\"width: 15%;font-size:0.9em;\r\n                    text-align:center;  border: 1px solid red;\r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Término</th>\r\n\r\n                            <th style=\"width: 6%;\r\n                    border-top: 0px;\"></th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of turmasParaMatricular;let i = index;\">\r\n                            <td style=\"text-align:center;vertical-align: middle;\"></td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;font-size:0.9em;\">\r\n                                {{item.descricao}}<br>Turma\r\n                                {{item.identificador}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;font-size:0.9em;\">\r\n                                {{item.weekDayOne}} - {{item.initialHourOne}} às {{item.finalHourOne}}<br>\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;font-size:0.9em;\">\r\n                                {{ item.previsaoAtual | date: 'dd/MM/yyyy' }}\r\n\r\n                                <br>\r\n\r\n                                <span *ngIf=\"item.iniciada\" style=\"color:red; font-size: 0.8em;\">\r\n                                    * turma\r\n                                    iniciada!\r\n                                </span>\r\n\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;font-size:0.9em;\">{{\r\n                                item.previsaoTerminoAtual |\r\n                                date: 'dd/MM/yyyy' }}\r\n                            </td>\r\n\r\n                            <td style=\"position: relative;text-align: center;vertical-align: middle;\">\r\n                                <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"ativo\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"selecionarTurma(item)\" style=\"\" mat-icon-button>\r\n                                        <mat-icon style=\"\">note_add</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n                            </td>\r\n                        </tr>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <form *ngIf=\"showFormFinal\" novalidate [formGroup]=\"matriculaTurmaForm\"\r\n            (ngSubmit)=\"submitMatricula(matriculaTurmaForm)\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 17%;margin-left: 2%;\">\r\n                <mat-label>Código do contrato:</mat-label>\r\n                <input disabled name=\"templateName\" matInput value=\"CGI-34534634\">\r\n            </mat-form-field>\r\n\r\n            <div style=\"float: right; width: 50px;\">\r\n                <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"voltar\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"voltar()\" style=\"\" mat-icon-button>\r\n                        <mat-icon>undo</mat-icon>\r\n                    </button>\r\n                </i>\r\n\r\n            </div>\r\n\r\n\r\n            <br>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 29%; ;margin-left: 2%;\">\r\n                <mat-label>Curso</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.descricao\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 13%; margin-left: 2%;\">\r\n                <mat-label>Turma</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.identificador\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>Investimento</mat-label>\r\n                <input disabled name=\"templateName\" matInput value=\"R$ 4.190,00\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 10%; margin-left: 1%;\">\r\n                <mat-label>código </mat-label>\r\n                <input disabled selected name=\"templateName\" matInput placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 13%; margin-left: 2%;\">\r\n                <mat-label>Dia</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.weekDayOne\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 18%; margin-left: 2%;\">\r\n                <mat-label>Horário</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"horarioTurma\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>Previsão início </mat-label>\r\n                <input selected name=\"templateName\" matInput disabled [(value)]=\"previAtual\"\r\n                    placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 1%;\">\r\n                <mat-label>Previsão término </mat-label>\r\n                <input selected name=\"templateName\" matInput disabled [(value)]=\"previTerminoAtual\"\r\n                    placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n\r\n\r\n\r\n            <mat-form-field appearance=\"fill\" style=\"width: 38%;margin-left: 2%;margin-top: 20px;\">\r\n                <mat-label>Como ficou sabendo dos nossos cursos?</mat-label>\r\n                <mat-select formControlName=\"cienciaCurso\" selected name=\"cargo\" required>\r\n                    <mat-option></mat-option>\r\n                    <mat-option *ngFor=\"let item of cienciaCurso\" [value]=\"item.type\">\r\n                        {{item.value}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <br>\r\n\r\n            <br>\r\n\r\n            <span style=\"margin-left: 2%;\">Escolha a forma de pagamento:</span>\r\n            <mat-tab-group style=\"\">\r\n                <mat-tab label=\"Cartão de Crédito\"> </mat-tab>\r\n                <mat-tab label=\"Boleto\"> </mat-tab>\r\n                <mat-tab label=\"Carnê\"></mat-tab>\r\n            </mat-tab-group>\r\n\r\n\r\n            <br>\r\n            <button type=\"submit\" mat-raised-button disabled=\"false\"\r\n                style=\"bottom: 0; float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n                Confirmar matrícula\r\n            </button>\r\n\r\n        </form> -->\r\n\r\n    <!-- </mat-tab> -->\r\n</mat-tab-group>","\r\n\r\nexport const PerfilEnum: string[] = [\r\n    \"MasterAdm\",\r\n    \"SuperAdm\",\r\n    \"Professor\",\r\n    \"Administrador\"\r\n]\r\n\r\n\r\nexport enum Perfil {\r\n    \"Super Adm\",\r\n    \"Professor\",\r\n    \"Administrador\"\r\n}\r\nexport const Perfis = [\r\n    { value: 'SuperAdm', viewValue: 'SuperAdm' },\r\n    { value: 'Professor', viewValue: 'Professor' },\r\n    { value: 'Administrador', viewValue: 'Administrador' }\r\n];\r\n\r\nexport const Cargos = [\r\n    { value: 'Professor', viewValue: 'Professor' },\r\n    { value: 'Administrador', viewValue: 'Administrador(a)' },\r\n    { value: 'Gerente', viewValue: 'Gerente' },\r\n    { value: 'Pedagogo', viewValue: 'Pedagogo(a)' }\r\n];\r\n\r\nexport const MeioPagamento = [\r\n    { value: 'dinheiro', viewValue: 'Dinheiro' },\r\n    { value: 'debito', viewValue: 'Débito' },\r\n    { value: 'credito', viewValue: 'Crédito' },\r\n    { value: 'pix', viewValue: 'Pix' },\r\n\r\n];\r\n\r\nexport const Unidades = [\r\n    { value: 'Campo Grande', viewValue: 'Campo Grande' },\r\n    { value: 'Santa Cruz', viewValue: 'Santa Cruz' },\r\n    { value: 'Irajá', viewValue: 'Irajá' }\r\n];\r\n\r\nexport const Cursos = [\r\n    { value: 'Curso Técnico em Enfermagem', viewValue: 'Curso Técnico em Enfermagem' },\r\n    { value: 'Auxiliar de Necropsia', viewValue: 'Auxiliar de Necropsia' }\r\n]\r\n\r\nexport const Turnos = [\r\n    { value: '', viewValue: '' },\r\n    { value: 'manha', viewValue: 'Manhã' },\r\n    { value: 'tarde', viewValue: 'Tarde' },\r\n    { value: 'noite', viewValue: 'Noite' },\r\n    { value: 'sabado', viewValue: 'Sábado' },\r\n    { value: 'domingo', viewValue: 'Domingo' }\r\n]\r\n\r\nexport const DiasSemana = [\r\n    { value: 'segunda', viewValue: '2ª feira' },\r\n    { value: 'terca', viewValue: '3ª feira' },\r\n    { value: 'quarta', viewValue: '4ª feira' },\r\n    { value: 'quinta', viewValue: '5ª feira' },\r\n    { value: 'sexta', viewValue: '6ª feira' }\r\n]\r\n\r\nexport const Modalidade = [\r\n    { value: 'On-line', viewValue: 'On-line' },\r\n    { value: 'Presencial', viewValue: 'Presencial' },\r\n    { value: 'Estágio', viewValue: 'Estágio' }\r\n];\r\n\r\nexport const TitularDoc = [\r\n    { value: 'Aluno', viewValue: 'On-line' },\r\n    { value: 'Responsável menor', viewValue: 'Responsável menor' },\r\n    { value: 'Responsável financeiro', viewValue: 'Responsável financeiro' }\r\n];\r\n\r\n\r\nexport const DiaSemana = [\r\n    { value: 'Segunda-feira' },\r\n    { value: 'Terça-feira' },\r\n    { value: 'Quarta-feira' },\r\n    { value: 'Quinta-feira' },\r\n    { value: 'Sexta-feira' },\r\n    { value: 'Sábado' },\r\n    { value: 'Domingo' }\r\n]\r\n\r\n\r\n\r\n","import { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Estagio } from \"src/app/_shared/models/estagio.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { InscricaoEstComponent } from \"./inscestagio/inscricaoest.component\";\r\n\r\n\r\n@Component({\r\n    selector: \"alunoest-app\",\r\n    templateUrl: './alunoest.component.html',\r\n    //styleUrls: ['./colaboradores.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class AlunoEstagioComponent implements OnInit {\r\n\r\n\r\n    baseUrl = environment.baseUrl;\r\n    estagios: Estagio[] = new Array<Estagio>();\r\n    private jwtHelper = new JwtHelperService();\r\n    public semVagasMessage = false\r\n    public showMatriculaButton = false\r\n    public showVagas = false\r\n    public showTableVagas = false\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n    responseMessage: any;\r\n    message: any\r\n    showMessage = false\r\n\r\n    constructor(\r\n        private _snackBar: MatSnackBar,\r\n        private _inscricaoModal: MatDialog,\r\n        private http: HttpClient\r\n    ) { }\r\n    ngOnInit() {\r\n        // console.log('init matricula')\r\n        // const token = localStorage.getItem('jwt')\r\n        // this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        // console.log(this.jwtHelper.decodeToken(token));\r\n        // console.log(this.tokenInfo.Name);\r\n        this.getEstagios();\r\n        // this.getDocs();\r\n        // this.file();\r\n    }\r\n\r\n    getEstagios() {\r\n\r\n        //console.log('get estagios')\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        const Bearer = `Bearer ${token}`;\r\n\r\n        this.http.get(`${this.baseUrl}/estagios`, {\r\n\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": Bearer\r\n            })\r\n        }).subscribe(response => {\r\n\r\n\r\n            //Object.assign(this.estagios, response)\r\n            console.log(response)\r\n            // console.log(this.estagios)\r\n            this.responseMessage = response\r\n\r\n        }, (err) => {\r\n            console.log(err)\r\n            //this.mensagem = \"Ocorreu um erro! Contate o Administrador!\"            \r\n\r\n        },\r\n            () => {\r\n\r\n                if (this.responseMessage['documentacaoEnviada'] == false) {\r\n                    this.message = this.responseMessage['message']\r\n                    this.showMatriculaButton = true\r\n                    this.showMessage = true\r\n                    //this.showTableVagas = false\r\n                } else {\r\n                    if (this.responseMessage['documentosAnalisados'] == false) {\r\n                        this.message = this.responseMessage['message']\r\n                        this.showMessage = true\r\n                    } else {\r\n                        Object.assign(this.estagios, this.responseMessage['data'])\r\n\r\n                        if (this.estagios.length > 0) {\r\n                            this.showTableVagas = true\r\n                            this.showVagas = true\r\n                            this.semVagasMessage = false\r\n                        } else {\r\n\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                // if (this.estagios.length > 0) {\r\n                //     this.showTableVagas = true\r\n                //     this.semVagasMessage = false\r\n                //     this.showVagas = true\r\n                // } else {\r\n                //     this.showTableVagas = true\r\n                //     this.semVagasMessage = true\r\n                //     this.showVagas = false\r\n                // }\r\n            });\r\n\r\n    }\r\n\r\n    matricular(estagio) {\r\n        console.log(estagio)\r\n\r\n        this.http.post(`${this.baseUrl}/estagios/matriculas/?estagioId=${estagio.id}`, {})\r\n            .subscribe(resp => {\r\n\r\n            }, (error) => {\r\n                console.log(error)\r\n            },\r\n                () => {\r\n                    this.estagios = new Array<any>()\r\n                })\r\n\r\n    }\r\n\r\n    // getDocs() {\r\n    //     this.http.get(`${this.baseUrl}/estagios/arquivos`, {\r\n\r\n    //         headers: new HttpHeaders({\r\n    //             \"Content-Type\": \"application/json\",\r\n    //             \"Authorization\": \"Bear \"\r\n    //         })\r\n    //     }).subscribe(response => {\r\n\r\n    //         console.log(response)\r\n\r\n    //     }, (err) => {\r\n    //         console.log(err)\r\n    //         //this.mensagem = \"Ocorreu um erro! Contate o Administrador!\"\r\n    //     },\r\n    //         () => {\r\n\r\n    //         });\r\n    // }\r\n    createFileName() {\r\n        var date = new Date().getDate();\r\n        var month = new Date().getMonth();\r\n        var filename = `arquivo.jpeg`;;\r\n        // switch (fileType) {\r\n        //     case \"EXCEL\":\r\n        //       //  console.log('file name excel')\r\n        //         filename = `arquivo.jpeg`;\r\n        //         break;\r\n        //     case \"PDF\":\r\n        //        // console.log('file name pdf')\r\n        //         filename = `Relatorio${this.infoPageParam.painel}-${date}-${month + 1}.pdf`;\r\n        //         break;\r\n        // }\r\n        return filename;\r\n    }\r\n\r\n    imagem: any\r\n\r\n    file() {\r\n        //https://localhost:44370\r\n        var file = this.createFileName();\r\n\r\n        this.download()\r\n            .subscribe(data => {\r\n                switch (data.type) {\r\n                    case HttpEventType.Response:\r\n                        console.log(data)\r\n                        //  this.showSpinner = false;\r\n                        //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n                        const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n                        console.log(downloadedFile)\r\n                        const a = document.createElement('a');\r\n                        a.setAttribute('style', 'display:none;');\r\n                        document.body.appendChild(a);\r\n                        a.download = file;\r\n                        this.imagem = downloadedFile\r\n                        a.href = URL.createObjectURL(downloadedFile);\r\n                        a.target = '_blank';\r\n                        a.click();\r\n                        document.body.removeChild(a);\r\n                        //window.open(a.href, this.filePdf, '',true);\r\n                        break;\r\n                }\r\n            },\r\n                (err) => {\r\n                    //this.showSpinner = false; \r\n                },\r\n                () => {\r\n                    //this.showSpinner = false; \r\n                }\r\n            );\r\n    }\r\n\r\n    public download(): Observable<HttpEvent<Blob>> {\r\n        // console.log(parametros)\r\n        var apiDownloadUrl = `${this.baseUrl}/estagios/file`\r\n        return this.http.request(new HttpRequest(\r\n            'GET',\r\n            `${apiDownloadUrl}`,\r\n            null,\r\n            {\r\n                reportProgress: true,\r\n                responseType: 'blob'\r\n            }));\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    inscricao() {\r\n        const dialogRef = this._inscricaoModal\r\n            .open(InscricaoEstComponent, {\r\n                height: 'auto',\r\n                width: '1000px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n\r\n                data: {},\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            console.log(data)\r\n            if (data.clicked === \"Ok\") {\r\n                // this.openSnackBar()\r\n                this.message = \"Aguarde a análise da documentação!\"\r\n                this.showMatriculaButton = false\r\n                console.log('afte close ok')\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\n","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n\r\n    <br>\r\n\r\n\r\n\r\n    <div *ngIf=\"showMatriculaButton\" style=\"margin-top: 20px;\">\r\n        <!-- <button (click)=\"inscricao()\" mat-raised-button style=\"background-color: green;\">inscricao</button> -->\r\n\r\n        <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"enviar documentação\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"inscricao()\" mat-icon-button>\r\n                <mat-icon>insert_drive_file</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n\r\n    <div *ngIf=\"showMessage\" style=\"margin-top: 20px;\">\r\n        <mat-icon style=\"vertical-align: middle; \r\n        \r\n                    margin-bottom: 5px;\">warning\r\n        </mat-icon>\r\n        {{message}}\r\n    </div>\r\n\r\n    <div *ngIf=\"showTableVagas\" @rowHighlight>\r\n        <div style=\"margin-top: 20px; font-style: italic;font-size: 0.8em;\">Vagas estágios disponíveis:</div>\r\n        <hr>\r\n        <div class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n                position: relative;\r\n                margin-top: 20px;\r\n                box-shadow: 0 0 1em rgb(172, 170, 170);\r\n                background-color: rgb(227, 240, 227);\">\r\n            <div class=\"card-header\">\r\n                <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                    Estágios</h4>\r\n                <p class=\"card-category\">Vagas disponíveis: </p>\r\n            </div>\r\n            <div class=\"card-body\">\r\n\r\n                <ng-container *ngIf=\"showVagas\">\r\n\r\n                    <div *ngFor=\"let estagio of estagios \" style=\"margin-bottom: 10px;\">\r\n\r\n                        <div style=\"font-size: 1.2em;\">\r\n                            <button #tooltip=\"matTooltip\" matTooltip=\"Matricular-se\" matTooltipPosition=\"above\"\r\n                            matTooltipHideDelay=\"100\" \r\n                            (click)=\"matricular(estagio)\" style=\"\" mat-icon-button>\r\n                                <mat-icon style=\"vertical-align: middle; \r\n                    margin: 0px; margin: 0px;\">local_hospital</mat-icon>\r\n                            </button>{{estagio.nome}}\r\n                        </div>\r\n                        <div style=\"font-size: 0.9em;color: red;\">início: 20/07/2021</div>\r\n                        <span style=\"font-size: 0.9em;\">{{estagio.logradouro}}, {{estagio.complemento || 'N/A'}},\r\n                            {{estagio.bairro}}</span>\r\n                        <!-- <mat-icon style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">local_hospital</mat-icon> -->\r\n                        <hr>\r\n                    </div>\r\n\r\n                </ng-container>\r\n\r\n                <div *ngIf=\"semVagasMessage\" style=\"\">Não há vagas disponíveis no momento. Consulte\r\n                    novamente mais tarde.\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <!-- <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n                top: 46.5%; \r\n                position: absolute;\">\r\n            </mat-spinner> -->\r\n        </div>\r\n\r\n    </div>\r\n    <br>\r\n\r\n    <!-- <div>\r\n        <img  [src]=\"file()\"\r\n            >\r\n    </div> -->\r\n\r\n\r\n\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { SpinnerParams } from \"src/app/_shared/models/spinner.model\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\n\r\n@Component({\r\n    selector: 'editacessomodal',\r\n    templateUrl: './editacesso.component.html',\r\n    styleUrls: ['./editacesso.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class EditAcessoComponent implements OnInit {\r\n\r\n\r\n    public myrForm: FormGroup;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public mostrarModalPrincipal = true\r\n    public initProgressBar = 'visible'\r\n    public saveProgressBar = 'hidden'\r\n    public disabledEnvio = false\r\n    public showContent = false\r\n\r\n    acessoView: any[] = new Array<any>()\r\n    editedAcessoView: any[] = new Array<any>()\r\n\r\n    constructor(\r\n        private _admService: AdmService,\r\n        private _helper: HelpersService,\r\n        private _fb: FormBuilder,\r\n        public dialogRef: MatDialogRef<EditAcessoComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.myrForm = _fb.group({\r\n            nome: ['', [Validators.required, Validators.minLength(5)]],\r\n\r\n        })\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        console.log(this.data['usuario'])\r\n        this.getAcessos()\r\n    }\r\n\r\n    getAcessos() {\r\n\r\n        this._admService.GetUsuarioAcessos(this.data['usuario'].id)\r\n            .subscribe(\r\n                sucesso => { this.getAcessosSucesso(sucesso) },\r\n                falha => { this.getAcessosFalha(falha) }\r\n            )\r\n    }\r\n\r\n    enviarLogin(){\r\n\r\n        this.disabledEnvio = true\r\n        this._admService.envioAcesso(this.data['usuario'].email)\r\n            .subscribe(\r\n                sucesso => { this.enviarLoginSucesso(sucesso) },\r\n                falha => { this.enviarLoginFalha(falha) }\r\n            )\r\n\r\n    }\r\n\r\n    enviarLoginSucesso(resp){\r\n        this._helper.openSnackBarSucesso(\"E-mail com informações de acesso enviado com sucesso.\")\r\n        this.disabledEnvio = false\r\n    }\r\n\r\n    enviarLoginFalha(error){\r\n        this._helper.openSnackBarErrorDefault()\r\n        this.disabledEnvio = false\r\n    }\r\n\r\n    varJson\r\n    getAcessosSucesso(sucesso) {\r\n        Object.assign(this.acessoView, sucesso['acessos'])\r\n        this.varJson = JSON.parse(JSON.stringify(sucesso['acessos']))\r\n        Object.assign(this.editedAcessoView, sucesso['acessos'])\r\n        this.dialogRef.addPanelClass('editacesso-class')\r\n        this.initProgressBar = 'hidden'\r\n        this.showContent = true\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    getAcessosFalha(error) {\r\n\r\n\r\n    }\r\n\r\n    saveAcesso() {\r\n        this.saveProgressBar = 'visible'\r\n        this._admService.editAcessos(this.editedAcessoView)\r\n            .subscribe(\r\n                sucesso => { this.saveAcessoSucesso(sucesso) },\r\n                falha => { this.saveAcessoError(falha) }\r\n            )\r\n    }\r\n\r\n    saveAcessoSucesso(sucesso) {\r\n        this.saveProgressBar = 'hidden'\r\n        this.dialogRef.close({ close: true })\r\n    }\r\n\r\n    saveAcessoError(falha) {\r\n        this.saveProgressBar = 'hidden'\r\n    }\r\n\r\n    disabledSaveButton = false\r\n    get disabledButton() {\r\n\r\n        // console.log(JSON.stringify(this.varJson))\r\n        // console.log(JSON.stringify(this.editedAcessoView))\r\n        if (this.saveProgressBar == 'visible') return true\r\n\r\n        if (JSON.stringify(this.varJson) ===\r\n            JSON.stringify(this.editedAcessoView)) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n\r\n\r\n\r\n        // if (this.myrForm.valid) {\r\n        //     return this.disabledSaveButton\r\n        // } else {\r\n        //     return true\r\n        // }\r\n    }\r\n\r\n\r\n}\r\n// export class UnidadesAcessoViewModel{\r\n//     constructor(\r\n//         public id?: string,\r\n//         public descricao?: string,\r\n//         public sigla?: string,\r\n//         public unidadeId?: string,\r\n//         public acesso?: Boolean\r\n//     ){}\r\n// }","<div style=\"font-size: 1.2em;\">Editar Acesso\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n<div @rowHighlight *ngIf=\"showContent\">\r\n    <mat-form-field appearance=\"standard\" style=\"width: 350px;\">\r\n        <mat-label>Nome</mat-label>\r\n        <input selected [value]=\"this.data['usuario'].nome\" disabled matInput\r\n            placeholder=\"semestre\">\r\n    </mat-form-field>\r\n\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"enviar login e senha para o e-mail usuário\"\r\n        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n        <button style=\"\" [disabled]=\"disabledEnvio\" (click)=\"enviarLogin()\" mat-icon-button>\r\n            <mat-icon>send</mat-icon>\r\n        </button>\r\n    </i>\r\n    <br>\r\n    <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n        <mat-label>Email</mat-label>\r\n        <input selected disabled matInput [value]=\"this.data['usuario'].email\"\r\n            placeholder=\"semestre\">\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"standard\" style=\"width: 120px;margin-left: 10px;\">\r\n        <mat-label>Perfil</mat-label>\r\n        <input selected disabled matInput [value]=\"this.data['usuario'].roleName\"\r\n            placeholder=\"semestre\">\r\n    </mat-form-field>\r\n    \r\n    <hr>\r\n    <div style=\"position: relative;\">\r\n\r\n        <!-- <form  novalidate #form=\"ngForm\" (ngSubmit)=\"saveAcesso(form)\"> -->\r\n            \r\n            <div class=\"table-responsive\" style=\"height: 250px;position: relative;\">\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">                    \r\n                    <thead>\r\n                        <tr>   \r\n                            <th style=\"width: 40%;font-size:0.9em;\r\n                        vertical-align: middle; \r\n                        text-align:left;\r\n                         border-top: 0px; font-weight: 400;\">UNIDADE</th>\r\n\r\n                            <th style=\"width: 30%;font-size:0.9em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">SIGLA</th>\r\n\r\n                            <th style=\"width: 30%;font-size:0.9em;\r\n                        text-align:right; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">ACESSO</th>\r\n\r\n                          \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let uni of editedAcessoView; let i = index;\">\r\n                            <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                            {{ uni.descricao }}\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">\r\n                                {{ uni.sigla }}\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align: right;vertical-align: middle;\">\r\n                                <mat-checkbox style=\"margin-right: 5px;\"  type=\"checkbox\"\r\n                                  [disabled]=\"!uni.podeAlterar\"  [(ngModel)]=\"uni.acesso\" color=\"primary\" class=\"example-margin\" name=\"checked\">\r\n                                </mat-checkbox>\r\n                            </td>\r\n\r\n                           \r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n            <mat-progress-bar [style.visibility]=\"saveProgressBar\" @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n            </mat-progress-bar>\r\n            <div style=\"float: right;margin-top: 15px;\">\r\n\r\n                <button (click)=\"saveAcesso()\" type=\"submit\" mat-raised-button color=\"primary\" \r\n                [disabled]=\"disabledButton\" \r\n                style=\"width: 100px; position: relative; float:right;margin-bottom: 10px;\r\n                margin-left: 10px;\">\r\n                    Salvar\r\n                </button>\r\n            </div>\r\n\r\n        <!-- </form>        -->\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { PedagogicoService } from \"../../service/pedagogico.service\";\r\n\r\n@Component({\r\n    selector: 'infosFinancmodal',\r\n    templateUrl: './infofinanc.component.html',\r\n    styleUrls: ['./infofinanc.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class InfoFinancPedagComponent implements OnInit {\r\n\r\n    public initProgressBar = 'visible'\r\n    public showContent = false\r\n    public debitos: any[] = new Array<any>()// Debito[] = new Array<Debito>();\r\n    public turma: any;\r\n\r\n\r\n    constructor(\r\n        private _pedagService: PedagogicoService,\r\n        private _modal: MatDialog,\r\n        public dialogRef: MatDialogRef<InfoFinancPedagComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {        \r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n       // console.log(this.data['aluno'])\r\n        this.getInfoFinancAlunos(this.data['aluno'].matriculaId)\r\n    }\r\n\r\n    showNaoMatriculadoMsg = true\r\n    getInfoFinancAlunos(matriculaId: any){\r\n\r\n        this._pedagService.getInfoDebitos(matriculaId)\r\n            .subscribe(\r\n                sucesso => { this.getInfoFinancAlunosSucesso(sucesso)},\r\n                falha => { this.getInfoFinancAlunosError(falha) })       \r\n    }\r\n\r\n    getInfoFinancAlunosSucesso(response){\r\n        this.debitos = Object.assign([], response['debitos']);\r\n       // console.log(this.debitos)\r\n        this.turma = response['turma'];\r\n        this.initProgressBar = 'hidden'\r\n        this.dialogRef.addPanelClass('myminfofinanc-class')\r\n        this.showContent = true\r\n    }\r\n\r\n    getInfoFinancAlunosError(error){\r\n       // console.log(error)\r\n        this.showNaoMatriculadoMsg = false\r\n    }\r\n\r\n}","<div style=\"font-size: 1.2em;\">Informações\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n<div @rowHighlight *ngIf=\"showContent\">\r\n\r\n    <hr>\r\n\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n        <mat-label>Aluno</mat-label>\r\n        <input [value]=\"data['aluno'].nome\" selected disabled matInput >\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 12%; margin-left: 5%; \">\r\n        <mat-label>Nº matrícula</mat-label>\r\n        <input [value]=\"data['aluno'].numeroMatricula\" selected disabled  matInput>\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n\r\n    <mat-tab-group>\r\n\r\n        <mat-tab label=\"Financeiro\" style=\"border: 1px solid red\">\r\n\r\n\r\n            <div class=\"table-responsive\" *ngIf=\"debitos.length > 0\">\r\n                <table color=\"primary\"  class=\"table\">\r\n\r\n                    <thead style=\"z-index: 9;\r\n                top: 0;\r\n                position: sticky;\r\n                background-color: aliceblue;\">\r\n                        <tr>\r\n\r\n                            <th style=\"width: 8%;font-size:0.8em;\r\n                    vertical-align: middle; \r\n                    text-align:left;\r\n                     border-top: 0px; font-weight: 400;\">Compet.</th>\r\n\r\n                            <th style=\"width: 24%;font-size:0.8em;\r\n                    vertical-align: middle;\r\n                    text-align:center;\r\n                    border-top: 0px; font-weight: 400;\">Curso/Turma</th>\r\n\r\n                            <th style=\"width: 10%;font-size:0.8em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Vencimento</th>\r\n\r\n                            <th style=\"width: 12%;font-size:0.8em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">Val. Título</th>\r\n\r\n                            <th style=\"width: 13%;font-size:0.8em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">Data Pagto.</th>\r\n\r\n                            <th style=\"width: 12%;font-size:0.8em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">Val. Pago</th>\r\n\r\n                            <th style=\"width: 21%;font-size:0.8em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\"></th>\r\n                            <!--<th style=\"width: 12%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Matriculados</th>\r\n    \r\n                    <th style=\"width: 13%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Status</th> -->\r\n\r\n                            <!-- <th style=\"width: 34%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">\r\n    \r\n                    </th> -->\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let debs of debitos;let i = index;\">\r\n                            <td style=\"font-size:0.8em;font-weight: 400;text-align:left;vertical-align: middle;\">\r\n                                {{debs.vencimento | date:'MM/yyyy' }}\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.8em;font-weight: 400;text-align:left;vertical-align: middle;\">\r\n                                {{turma.descricao}}<br>\r\n                                {{turma.identificador}}\r\n                            </td>\r\n\r\n                            <td [style.color]=\"debs.statusBoleto == 'Vencido' ? 'red': ''\"\r\n                                style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                                {{debs.vencimento | date:'dd/MM/y' }}\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                                {{debs.valor | currency:'BRL':'R$ ' }}\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.8em;font-weight: 400;;text-align: center;vertical-align: middle;\">\r\n                                <ng-container *ngIf=\"debs.statusBoleto == 'Pago'\">\r\n                                    {{debs.dataPagamento | date:'dd/MM/y' }}\r\n                                </ng-container>\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                                {{debs.valorPago | currency:'BRL':'R$ ' || '-' }}\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                                <ng-container *ngIf=\"debs.statusBoleto == 'Pago'\">\r\n\r\n                                    Pago\r\n\r\n                                </ng-container>\r\n                                <ng-container *ngIf=\"debs.statusBoleto == 'Vencido'\">\r\n\r\n                                    <span style=\"color: red;\">Vencido</span>\r\n\r\n                                </ng-container>\r\n                                <!-- <i style=\"float: right;\" #tooltip=\"matTooltip\" matTooltip=\"visualizar\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button  style=\"\" mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.2em;\">edit</mat-icon>\r\n                                </button>\r\n                            </i> -->\r\n                            </td>\r\n\r\n                            <!-- <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\" >\r\n                       \r\n                        \r\n                        </td> -->\r\n\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            \r\n\r\n        </mat-tab>\r\n\r\n\r\n\r\n    </mat-tab-group>\r\n    \r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n//import { Cargo } from \"../../Adm-Models/cargos.model\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\n\r\n@Component({\r\n    selector: 'createprofessormodal',\r\n    templateUrl: './createprofessor.component.html',\r\n    styleUrls: ['./createprofessor.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class CreateProfessorComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    public colaboradorForm: FormGroup;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public validadeEmailMsg = false\r\n    public validadeCPFMsg = false\r\n    public disabledSpinner = false\r\n    public showMensagem = 'hidden'\r\n    public disabledSaveButton = 'hidden'\r\n    public msgErros: any\r\n    //cargos = Cargos;\r\n    mensagem = \"\";\r\n    // public showMensagem = 'hidden'\r\n    //public bairro: string = null;\r\n    //@Input() disabled = true;\r\n    unidades = Unidades;//: string[] = new Array(\"Campo Grande II\", \"Jacarepaguá\");\r\n    constructor(\r\n        //private service: AdmService,\r\n        //private _snackBar: MatSnackBar,\r\n        private _helper: HelpersService,\r\n        private _admService: AdmService,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private http: HttpClient,\r\n        public dialogRef: MatDialogRef<CreateProfessorComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.colaboradorForm = _fb.group({\r\n            // templateName: ['', [Validators.required, Validators.minLength(5)]],\r\n            // newCat: [,[Validators.required, Validators.minLength(3)]],\r\n            // newFunc: [, [Validators.required, Validators.minLength(3)]]\r\n            nome: ['', [Validators.required, Validators.minLength(5)]],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n            cnpj: ['', [Validators.required, Validators.minLength(14)]],\r\n            celular: [null, [Validators.required, Validators.minLength(11)]],\r\n            telefoneContato: [null, [Validators.minLength(10)]],\r\n            nomeContato: ['', [Validators.required, Validators.minLength(3)]],\r\n            dataEntrada:[''],\r\n            cargoId: [0, [Validators.required]],\r\n            ativo: [true, [Validators.required]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            complemento: [''],\r\n            numero: ['', [Validators.required]],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]]//,\r\n            //celular: [new MyTel('', '', ''), [Validators.required, Validators.minLength(1)]]\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        // console.log(this.tokenInfo.Unidade);\r\n        // console.log(this.tokenInfo.Codigo);\r\n        // console.log(this.tokenInfo);\r\n    }\r\n    showForm = false\r\n    // showForm = false\r\n    cargos: any[] = new Array<any>()\r\n    getCargos() {\r\n\r\n        this.http.get(`${this.baseUrl}/unidade/cargo`)\r\n            .subscribe(response => {\r\n                this.cargos = Object.assign([], response)\r\n            }, (err) => {\r\n                // console.log(err)\r\n            },\r\n                () => {\r\n                    //  console.log(this.cargos)\r\n                    // this.showForm = true\r\n                });\r\n    }\r\n\r\n    // OnKeyOnlyNumbers(char: HTMLInputElement){\r\n\r\n    //    return String.fromCharCode(char..value).match(/[^0-9]/g) === null\r\n\r\n    // }\r\n    //disabledSaveButton = false\r\n    get disabledButton() {\r\n        if (this.colaboradorForm.valid) {\r\n            return this.disabledSaveButton != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    onSubmit(form: FormGroup) {\r\n        // this.showMensagem = false\r\n        // console.log(form)\r\n        //console.log(form.value)\r\n        // console.log(form.valid)\r\n        this.showMensagem = 'hidden'\r\n        //var cel = `${form['celular'].value}`\r\n        //console.log(cel)\r\n        // this.dialogRef.close();\r\n        if (this.colaboradorForm.valid) {\r\n            //  this.disabledSpinner = true\r\n            // console.log('form valid')\r\n            // const novoColaborador = JSON.stringify(form.value);\r\n            //this.save(novoColaborador)\r\n            // let newTemplate = this.mapForm(tempForm)\r\n            this.disabledSaveButton = 'visible'\r\n            this.http.post(`${this.baseUrl}/professor`, this.colaboradorForm.value, {})\r\n                .subscribe(response => {\r\n\r\n                    console.log(response)\r\n                    // this.colaboradores = Object.assign([], response['data'])\r\n                    // console.log(this.colaboradores)\r\n                    // this.dialogRef.close();\r\n                }, (err) => {\r\n\r\n                    if (err['status'] == 409) {\r\n                        this.msgErros = err['error'].msg\r\n                        this.showMensagem = 'visible'\r\n                        this.disabledSaveButton = 'hidden'\r\n                    } else {\r\n                        this.disabledSaveButton = 'hidden'\r\n                        this._helper.openSnackBarErrorDefault()\r\n                        console.log(err)\r\n                        //this.dialogRef.close();\r\n                    }\r\n                },\r\n                    () => {\r\n                        //console.log(response)\r\n                        this._helper.openSnackBarSucesso('Professor salvo com sucesso.')\r\n                        //this.openSnackBar()\r\n\r\n                        //this.showMensagem = false\r\n                        this.dialogRef.close({ clicked: true });\r\n                        this.disabledSaveButton = 'hidden'\r\n                    });\r\n        }\r\n    }\r\n\r\n    // openSnackBar() {\r\n    //     this._snackBar.open('Professor salvo com sucesso.', '', {\r\n    //         horizontalPosition: 'center',\r\n    //         verticalPosition: 'top',\r\n    //         panelClass: 'green-snackbar',\r\n    //         duration: 3 * 1000,\r\n    //     });\r\n    // }\r\n\r\n    // buscarEmail(event: any) {\r\n    //     if (this.colaboradorForm.get('email').valid) {\r\n    //         this.validadeEmailMsg = false\r\n    //         this.http.get(`${this.baseUrl}/adm/aluno/email/${event.target.value}`, {\r\n    //             headers: new HttpHeaders({\r\n    //                 \"Content-Type\": \"application/json\",\r\n    //                 \"Authorization\": \"Bear \"\r\n    //             })\r\n    //         }).subscribe(response => {\r\n\r\n    //         }, (err) => {\r\n    //             if (err['status'] == 409) {\r\n    //                 this.validadeEmailMsg = true\r\n    //                 this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n    //             }\r\n    //         },\r\n    //             () => {\r\n    //                 this.colaboradorForm.get('email').setErrors(null);\r\n    //             });\r\n\r\n    //         //this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n\r\n    //     }\r\n    // }\r\n\r\n    // buscarCPF(event: any) {\r\n    //     // console.log(event.target.value)\r\n    //     console.log(this.colaboradorForm.get('cpf').value)\r\n    //     console.log(this.colaboradorForm.get('cpf').valid)\r\n    //     console.log(this.colaboradorForm.get('cpf').value.length)\r\n    //     if (this.colaboradorForm.get('cpf').valid) {\r\n    //         this.validadeCPFMsg = false\r\n    //         let cpf = this.colaboradorForm.get('cpf').value\r\n    //         //this.http.get(`${this.baseUrl}/adm/aluno/cpf/${event.target.value}`, {\r\n    //         this.http.get(`${this.baseUrl}/adm/aluno/cpf/${cpf}`, {\r\n    //             headers: new HttpHeaders({\r\n    //                 \"Content-Type\": \"application/json\",\r\n    //                 \"Authorization\": \"Bear \"\r\n    //             })\r\n    //         }).subscribe(response => {\r\n\r\n    //         }, (err) => {\r\n    //             if (err['status'] == 409) {\r\n    //                 this.validadeCPFMsg = true\r\n    //                 this.colaboradorForm.get('cpf').setErrors({ 'incorrect': true });\r\n    //             }\r\n    //         },\r\n    //             () => {\r\n    //                 this.colaboradorForm.get('cpf').setErrors(null);\r\n    //             });\r\n\r\n    //         //this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n\r\n    //     }\r\n    // }\r\n    // https://viacep.com.br/ws/01001000/json/\r\n    showEndereco = 'hidden'\r\n    consultaCEP(CEP: string) {\r\n\r\n        if (this.colaboradorForm.get('cep').valid) {\r\n\r\n            this._admService.CepConsulta(this.colaboradorForm.get('cep').value)\r\n                .subscribe(response => {\r\n                    this.colaboradorForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n                    this.colaboradorForm.get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n                    this.colaboradorForm.get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n                    this.colaboradorForm.get('uf').setValue(response[\"uf\"].toUpperCase());\r\n                }, err => { },\r\n                    () => {\r\n                        this.showEndereco = 'visible'\r\n                    });\r\n        }\r\n    }\r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n}","<div style=\"font-size: 1.2em;\">Cadastrar Professor\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<div style=\"font-size: 0.9em;margin-top: 5px;\">* O professor será salvo na unidade de {{tokenInfo.Unidade}}</div>\r\n<hr>\r\n<div style=\"position: relative;\">\r\n\r\n    <form  novalidate [formGroup]=\"colaboradorForm\" \r\n        (ngSubmit)=\"onSubmit(colaboradorForm)\">\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 55%;\">\r\n            <mat-label>Nome</mat-label>\r\n            <input selected oninput=\"this.value = this.value.toUpperCase()\" \r\n            formControlName=\"nome\" required matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 40%; margin-left: 2%;\">\r\n            <mat-label>Email</mat-label>\r\n            <input  selected formControlName=\"email\" oninput=\"this.value = this.value.toLowerCase()\" \r\n            matInput\r\n                placeholder=\"Email\">            \r\n        </mat-form-field>\r\n       \r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 18%\">\r\n            <mat-label>CPF</mat-label>\r\n            <input  mask=\"000.000.000-00\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" formControlName=\"cpf\"\r\n                minlength=\"11\" maxlength=\"14\" selected matInput placeholder=\"digite o CPF\">\r\n            <!-- <mat-hint @rowHighlight *ngIf=\"validadeCPFMsg\" style=\"color: red;\">\r\n                O CPF informado já existe\r\n            </mat-hint> -->\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 23%; margin-left: 2%;\">\r\n            <mat-label>CNPJ</mat-label>\r\n            <input  mask=\"00.000.000/0000-00\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" formControlName=\"cnpj\"\r\n                minlength=\"14\" maxlength=\"18\" selected matInput placeholder=\"digite o CNPJ\">\r\n            <!-- <mat-hint @rowHighlight *ngIf=\"validadeCPFMsg\" style=\"color: red;\">\r\n                O CPF informado já existe\r\n            </mat-hint> -->\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n            <mat-label>Inicio</mat-label>\r\n            <input matInput [matDatepicker]=\"dp3\" formControlName=\"dataEntrada\" disabled>\r\n            <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>       \r\n      \r\n\r\n        <mat-slide-toggle style=\"width: 10%; margin-left: 25%;\" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n            formControlName=\"ativo\" required matTooltip=\"ativo/inativo\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"250\" color=\"primary\" [required]=\"false\" >\r\n        </mat-slide-toggle>\r\n      \r\n\r\n        <br>      \r\n\r\n        <mat-form-field style=\"width: 20%;\" appearance=\"standard\">\r\n            <mat-label>Celular</mat-label>\r\n            <input formControlName=\"celular\" mask=\"(00) 00000-0000\" matInput \r\n            minlength=\"10\" maxlength=\"15\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n            <mat-label>Tel contato</mat-label>\r\n            <input selected onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n            mask=\"(00) 00000-0000\"\r\n            minlength=\"10\" maxlength=\"15\"\r\n            formControlName=\"telefoneContato\" required matInput placeholder=\"\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 2%;\">\r\n            <mat-label>Nome contato</mat-label>\r\n            <input selected oninput=\"this.value = this.value.toUpperCase()\" \r\n            formControlName=\"nomeContato\" required matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n       \r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 90px;\">\r\n            <mat-label>CEP</mat-label>\r\n            <input mask=\"00.000-000\" \r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" \r\n                formControlName=\"cep\" minlength=\"8\" maxlength=\"10\" required matInput\r\n                placeholder=\"apenas números\">\r\n        </mat-form-field>\r\n\r\n        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button type=\"button\" (click)=\"consultaCEP(colaboradorForm.get('cep').value)\" \r\n            style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <div [style.visibility]=\"showEndereco\" @rowHighlight>\r\n            <mat-form-field appearance=\"standard\" style=\"width: 35%\">\r\n                <mat-label>Logradouro</mat-label>\r\n                <input selected formControlName=\"logradouro\" oninput=\"this.value = this.value.toUpperCase()\" matInput placeholder=\"ex: rua tal...\">\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 10%;margin-left: 5%;\">\r\n                <mat-label>Nº</mat-label>\r\n                <input formControlName=\"numero\" oninput=\"this.value = this.value.toUpperCase()\" selected matInput placeholder=\"ex: rua tal...\">\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 45%; margin-left: 5%;\">\r\n                <mat-label>Complemento</mat-label>\r\n                <input selected formControlName=\"complemento\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                    placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                <mat-label>Cidade</mat-label>\r\n                <input disabled selected [value]=\"colaboradorForm.get('cidade').value\" \r\n                matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 5%; margin-left: 5%\">\r\n                <mat-label>UF</mat-label>\r\n                <input disabled selected [value]=\"colaboradorForm.get('uf').value\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 35%; margin-left: 5%;\">\r\n                <mat-label>Bairro</mat-label>\r\n                <input selected formControlName=\"bairro\" oninput=\"this.value = this.value.toUpperCase()\" matInput placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <mat-progress-bar [style.visibility]=\"disabledSaveButton\" @rowHighlight mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <span [style.visibility]=\"showMensagem\"  \r\n            style=\"width: 480px; text-align: left; vertical-align: middle;\r\n            float:left;margin-top: 15px;\r\n                padding: 0px;\">\r\n                <div *ngFor=\"let erro of msgErros; \" style=\"font-size: 0.8em;color: red;\">\r\n                    * {{ erro }}\r\n                </div>\r\n            </span>\r\n       \r\n        <span style=\"float: right;margin-top: 15px;\">\r\n\r\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"disabledButton\" \r\n            style=\"position: relative; float:right;margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n\r\n        </span>\r\n\r\n    </form>\r\n   \r\n</div>","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthInterceptor implements HttpInterceptor {\n\n    private baseUrl = environment.baseUrl\n    constructor(private router: Router) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        \n        if (req.url.includes(this.baseUrl)) {\n            if (localStorage.getItem('jwt') !== null) {\n                const cloneReq = req.clone({\n                    headers: req.headers.set('Authorization', `Bearer ${localStorage.getItem('jwt')}`)\n                    \n                });\n                return next.handle(cloneReq).pipe(\n                    tap(\n                        succ => { },\n                        err => {\n                            if (err.status === 401) {\n                                this.router.navigateByUrl('user/login');\n                            }\n                        }\n                    )\n                );\n            } else {\n                return next.handle(req.clone());\n            }\n        }else{\n            const cloneReq = req.clone()\n            return next.handle(cloneReq).pipe(\n                tap(\n                    succ => { },\n                    err => {\n                        if (err.status === 401) {\n                            this.router.navigateByUrl('user/login');\n                        }\n                    }\n                )\n            );\n        }\n    }\n}\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { TitularDoc } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Component({\r\n    selector: 'modulocreatemodal',\r\n    templateUrl: './modulo-create.component.html',\r\n    styleUrls: ['./modulo-create.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ModuloCreateComponent implements OnInit {\r\n\r\n\r\n    baseUrl = environment.baseUrl;\r\n    public initProgressBar = 'visible'\r\n    public saveProgressBar = 'hidden'\r\n    \r\n    public showContent = false\r\n    public addMateriasForm = false\r\n\r\n    public moduloForm: FormGroup;\r\n    public addMateriaForm: FormGroup;\r\n    public addDocForm: FormGroup;\r\n    \r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n   \r\n    public errorMsg: any[] = new Array<any>()\r\n    public unidadesAutorizadas: any[] = new Array<any>();\r\n    public materiasTemplate: any[] = new Array<any>();\r\n    public documentosTemplate: any[] = new Array<any>();\r\n    \r\n    public typePacotes: any\r\n    public docTemplates: any\r\n    \r\n    public titularDoc = TitularDoc\r\n\r\n    constructor(\r\n        private _admService: AdmService,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<ModuloCreateComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.addMateriaForm = _fb.group({\r\n            pacote: ['', [Validators.required]]\r\n        })\r\n\r\n        this.addDocForm = _fb.group({\r\n            documento: ['', [Validators.required]]\r\n        })\r\n\r\n        this.moduloForm = _fb.group({\r\n            descricao: ['', [Validators.required]],\r\n            totalHoras: [''],\r\n            typePacoteId: ['', [Validators.required]],\r\n            unidadeId: ['', [Validators.required]],\r\n            ativo: [true],\r\n\r\n            materias: this._fb.array([], [Validators.required]),\r\n            documentosExigidos: this._fb.array([])\r\n\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.unidadesAutorizadas = JSON.parse(this.tokenInfo.UnidadesAutorizadas)\r\n        this.GetViewModels()\r\n        // TEMP\r\n        this.GetUnidadeBySigla()\r\n    }\r\n\r\n    GetUnidadeBySigla(){\r\n\r\n        this._http.get(`${this.baseUrl}/unidade/sigla/${this.tokenInfo.Unidade}`)\r\n            .subscribe(\r\n                sucesso => {\r\n                    this.moduloForm.get('unidadeId').setValue(sucesso['unidade'])\r\n                }\r\n            )\r\n    }\r\n\r\n    get materias() {\r\n        return this.moduloForm.controls[\"materias\"] as FormArray;\r\n    }\r\n    get documentos() {\r\n        return this.moduloForm.controls[\"documentosExigidos\"] as FormArray;\r\n    }\r\n\r\n\r\n    addMateria(form: any) {\r\n\r\n        let pacote = form.value['pacote']\r\n\r\n        if (form.valid) {\r\n            let pacotId = this.materias.value.find(element => // get materias()\r\n                element.materiaId == pacote.id);\r\n\r\n            if (pacotId != undefined) return;\r\n\r\n            const matForm = this._fb.group({\r\n\r\n                materiaId: [pacote.id],\r\n                nome: [pacote.nome],\r\n                descricao: [pacote.descricao],\r\n                modalidade: [pacote.modalidade],\r\n                cargaHoraria: [pacote.cargaHoraria],\r\n                typePacoteId: [pacote.typePacoteId],\r\n\r\n            });\r\n\r\n            this.materias.push(matForm);// get materias()\r\n        }\r\n    }\r\n    addDocumentos(form: any) {\r\n\r\n        let documento = form.value['documento']\r\n\r\n        if (form.valid) {\r\n            // let documentoId = this.documentos.value.find(element =>\r\n            //     element.documentoId == documento.id);\r\n\r\n            // if (documentoId != undefined) return;\r\n\r\n            const docsForm = this._fb.group({\r\n                obrigatorioParaMatricula: [false],\r\n                descricao: [documento.nome],\r\n                comentario: ['', [Validators.required]],\r\n                titular: ['', [Validators.required]],\r\n                validadeDias: [documento.validadeDias]\r\n\r\n            });\r\n\r\n            this.documentos.push(docsForm);\r\n        }\r\n    }\r\n\r\n    deleteLesson(index: number) {\r\n        this.materias.removeAt(index);\r\n    }\r\n    deleteDocumento(index: number) {\r\n        this.documentos.removeAt(index);\r\n    }\r\n\r\n    get totalHoras() {\r\n        let total = 0\r\n\r\n        if (this.moduloForm.get('materias').value.length > 0) {\r\n            const sum = this.moduloForm.get('materias').value.reduce((horas, a) => ({\r\n                cargaHoraria: horas.cargaHoraria + a.cargaHoraria\r\n            }));\r\n\r\n            if (sum != null) {\r\n                total = sum['cargaHoraria']\r\n            } else {\r\n                total = 0\r\n            }\r\n        }\r\n\r\n        this.moduloForm.get('totalHoras').setValue(total)\r\n\r\n        return total\r\n    }\r\n\r\n    \r\n    get disabledSaveButton() {\r\n\r\n        if (this.saveProgressBar == 'visible') return true\r\n\r\n        if (this.moduloForm.valid) return false\r\n\r\n        return true\r\n    }\r\n\r\n    GetViewModels() {\r\n\r\n        this._admService.GetCreateModuleViewModel()\r\n            .subscribe(\r\n                sucesso => { this.GetViewModelsSucesso(sucesso) },\r\n                erro => { this.GetViewModelsErro(erro) })\r\n    }\r\n\r\n    GetViewModelsSucesso(response: any) {\r\n        this.typePacotes = response['typePacotes']\r\n        this.docTemplates = response['documentos']\r\n        this.initProgressBar = 'hidden'\r\n        this.dialogRef.addPanelClass('mymodulocreate-class')\r\n        this.showContent = true\r\n\r\n    }\r\n\r\n    GetViewModelsErro(error) {\r\n        this.initProgressBar = 'hidden'\r\n       // console.log(error)\r\n    }\r\n\r\n    buscarMaterias(typePacoteId) {\r\n        this.materias.clear()\r\n        this.initProgressBar = 'visible'\r\n        console.log('buscar')\r\n        this._admService.getMateriasByTypeId(typePacoteId)\r\n            .subscribe(\r\n                sucesso => { this.buscarMateriasSucesso(sucesso) },\r\n                erro => { this.buscarMateriasErro(erro) })\r\n    }\r\n\r\n    buscarMateriasSucesso(resposta) {\r\n        this.materiasTemplate = resposta['materias']\r\n        this.initProgressBar = 'hidden'\r\n        this.addMateriasForm = true\r\n    }\r\n\r\n    buscarMateriasErro(error) {\r\n        this.initProgressBar = 'hidden'\r\n        console.log(error)\r\n    }\r\n\r\n    onSubmit(form: any) {\r\n        console.log(this.moduloForm.value)\r\n        if (form.valid) {\r\n            this.saveProgressBar = 'visible'\r\n            this._admService.savePacote(this.moduloForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.onSubmitSucesso(sucesso) },\r\n                    erro => { this.onSubmitErro(erro) })\r\n        }\r\n    }\r\n\r\n    onSubmitSucesso(resposta) {\r\n        this.dialogRef.close({ clicked: true });\r\n        this.saveProgressBar = 'hidden'\r\n    }\r\n    \r\n    onSubmitErro(error) {\r\n        console.log(error)\r\n        if (error['status'] == 409) {\r\n            this.errorMsg = error['error'].erros\r\n        }\r\n        this.saveProgressBar = 'hidden'\r\n\r\n    }\r\n\r\n}","<div style=\"font-size: 1.2em;\">Criar Pacote\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n<div @rowHighlight *ngIf=\"showContent\">\r\n\r\n    <hr>\r\n\r\n    <form novalidate [formGroup]=\"moduloForm\">\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 80px;\">\r\n            <mat-label>Unidade</mat-label>\r\n            <mat-select formControlName=\"unidadeId\" placeholder=\"type pacote\">\r\n                <mat-option></mat-option>\r\n                <mat-option *ngFor=\"let uni of unidadesAutorizadas\" [value]=\"uni.unidadeId\">{{uni.unidade}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 350px;\">\r\n            <mat-label>Tipo</mat-label>\r\n            <mat-select formControlName=\"typePacoteId\" placeholder=\"\">\r\n                <mat-option></mat-option>\r\n                <mat-option (click)=\"buscarMaterias(type.id)\" [value]=\"type.id\" *ngFor=\"let type of typePacotes\">\r\n                    {{type.nome}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 280px; \">\r\n            <mat-label>Descrição</mat-label>\r\n            <input selected formControlName=\"descricao\" matInput placeholder=\"dica: Curso Técnico de Enfermagem\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 80px;margin-left: 10px; \">\r\n            <mat-label>Total horas</mat-label>\r\n            <input selected disabled [value]=\"totalHoras\" matInput placeholder=\"curso tal...\">\r\n        </mat-form-field>\r\n\r\n    </form>\r\n\r\n    <mat-tab-group class=\"matcreatemodulo\">\r\n\r\n        <mat-tab label=\"Matérias\">\r\n\r\n            <ng-container *ngIf=\"addMateriasForm;else showEscolhaMateriasMsg\">\r\n\r\n                <div style=\"font-size: 0.9em;font-style: italic;margin-top: 20px;\">\r\n                    Adicione ao menos uma matéria ao curso:\r\n                </div>\r\n\r\n                <form novalidate [formGroup]=\"addMateriaForm\" (ngSubmit)=\"addMateria(addMateriaForm)\">\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n                        <mat-label>Matéria</mat-label>\r\n                        <mat-select formControlName=\"pacote\" placeholder=\"\">\r\n                            <mat-option></mat-option>\r\n                            <mat-option [value]=\"type\" *ngFor=\"let type of materiasTemplate\">\r\n                                {{type.nome}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n\r\n                    </mat-form-field>\r\n                    <button mat-icon-button type=\"submit\" #tooltip=\"matTooltip\" matTooltip=\"adicionar matéria\"\r\n                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <mat-icon>add</mat-icon>\r\n                    </button>\r\n                </form>\r\n\r\n\r\n                <form novalidate [formGroup]=\"moduloForm\">\r\n\r\n                    <ng-container formArrayName=\"materias\">\r\n\r\n                        <ng-container *ngFor=\"let matForm of materias.controls; let i = index;\">\r\n                            <div [formGroup]=\"matForm\">\r\n\r\n                                <mat-form-field appearance=\"standard\" style=\"width: 245px;\">\r\n                                    <mat-label>Nome</mat-label>\r\n                                    <input selected [value]=\"matForm.value.nome\" disabled matInput\r\n                                        placeholder=\"Descrição\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"standard\" style=\"width: 150px;margin-left: 20px;\">\r\n                                    <mat-label>Descrição</mat-label>\r\n                                    <input selected [value]=\"matForm.value.descricao || ' '\" disabled matInput\r\n                                        placeholder=\"Descrição\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"standard\" style=\"width: 85px;margin-left: 20px;\">\r\n                                    <mat-label>Modalidade</mat-label>\r\n                                    <input selected [value]=\"matForm.value.modalidade\" disabled matInput\r\n                                        placeholder=\"Descrição\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"standard\" style=\"width: 70px;margin-left: 20px;\">\r\n                                    <mat-label>Carga Horária</mat-label>\r\n                                    <input selected [value]=\"matForm.value.cargaHoraria\" disabled matInput\r\n                                        placeholder=\"semestre\">\r\n                                </mat-form-field>\r\n\r\n                                <button mat-icon-button (click)=\"deleteLesson(i)\" style=\"margin-left:10px ;\"\r\n                                    #tooltip=\"matTooltip\" matTooltip=\"remover\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n\r\n                                    <mat-icon style=\"vertical-align: middle;\" class=\"delete-btn\">\r\n                                        delete_forever</mat-icon>\r\n                                </button>\r\n\r\n                            </div>\r\n                        </ng-container>\r\n\r\n                    </ng-container>\r\n\r\n                </form>\r\n            </ng-container>\r\n\r\n            <ng-template #showEscolhaMateriasMsg>\r\n                <span style=\"font-style: italic; margin-top: 10px; font-size: 0.9em;\">\r\n                    * escolha o tipo para poder adicionar as matérias\r\n                </span>\r\n                \r\n            </ng-template>\r\n            \r\n\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"Documentos\">\r\n\r\n\r\n            <div div style=\"font-size: 0.9em;font-style: italic;margin-top: 20px;\">\r\n                Adicione a documentação exigida (opcional):\r\n            </div>\r\n\r\n            <form novalidate [formGroup]=\"addDocForm\" (ngSubmit)=\"addDocumentos(addDocForm)\">\r\n                <mat-form-field appearance=\"standard\" style=\"width: 175px;\">\r\n                    <mat-label>Documento</mat-label>\r\n                    <mat-select formControlName=\"documento\" placeholder=\"\">\r\n                        <mat-option></mat-option>\r\n                        <mat-option [value]=\"type\" *ngFor=\"let type of docTemplates\">\r\n                            {{type.nome}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n\r\n                </mat-form-field>\r\n                <button mat-icon-button type=\"submit\" #tooltip=\"matTooltip\" matTooltip=\"adicionar documentos\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n            </form>\r\n\r\n\r\n            <form novalidate [formGroup]=\"moduloForm\">\r\n\r\n                <ng-container formArrayName=\"documentosExigidos\">\r\n\r\n                    <ng-container *ngFor=\"let docsForm of documentos.controls; let i = index;\">\r\n                        <div [formGroup]=\"docsForm\">\r\n\r\n                            <mat-form-field appearance=\"standard\" style=\"width: 180px;\">\r\n                                <mat-label>Descrição</mat-label>\r\n                                <input selected [value]=\"docsForm.value.descricao\" disabled matInput\r\n                                    placeholder=\"Descrição\">\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field appearance=\"standard\" style=\"width: 210px;margin-left: 20px;\">\r\n                                <mat-label>Comentário</mat-label>\r\n                                <input selected formControlName=\"comentario\" matInput placeholder=\"Descrição\">\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field appearance=\"standard\" style=\"width: 175px;;margin-left: 20px;\">\r\n                                <mat-label>Titular</mat-label>\r\n                                <mat-select formControlName=\"titular\" placeholder=\"\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option [value]=\"doc.value\" *ngFor=\"let doc of titularDoc\">\r\n                                        {{doc.value}}\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n\r\n                            <button mat-icon-button (click)=\"deleteDocumento(i)\" style=\"margin-left:10px ;\"\r\n                                #tooltip=\"matTooltip\" matTooltip=\"remover\" matTooltipPosition=\"above\"\r\n                                matTooltipHideDelay=\"100\">\r\n\r\n                                <mat-icon style=\"vertical-align: middle;\" class=\"delete-btn\">\r\n                                    delete_forever</mat-icon>\r\n                            </button>\r\n\r\n                            <br>\r\n\r\n                            <mat-form-field appearance=\"standard\" style=\"width: 90px;\">\r\n                                <mat-label>Validade (dias)</mat-label>\r\n                                <input selected [value]=\"docsForm.value.validadeDias\" disabled matInput\r\n                                    placeholder=\"semestre\">\r\n                            </mat-form-field>\r\n\r\n                            <mat-checkbox color=\"primary\" style=\"margin-left:10px ;\"\r\n                                formControlName=\"obrigatorioParaMatricula\">\r\n                                Documento obrigatório para matrícula</mat-checkbox>\r\n\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                </ng-container>\r\n\r\n            </form>\r\n\r\n        </mat-tab>\r\n\r\n    </mat-tab-group>\r\n\r\n    <mat-progress-bar [style.visibility]=\"saveProgressBar\" mode=\"query\"></mat-progress-bar>\r\n\r\n    <span *ngFor=\"let msg of errorMsg\" style=\"margin-top: 20px; font-size: 0.8em;color: red;width: 350px;\">\r\n        {{ msg }}\r\n\r\n    </span>\r\n\r\n\r\n    <span  >\r\n        <form novalidate [formGroup]=\"moduloForm\" (ngSubmit)=\"onSubmit(moduloForm)\" style=\"width: 200px; float: right;\">\r\n            <button type=\"submit\" [disabled]=\"disabledSaveButton\" mat-raised-button color=\"primary\"\r\n                style=\"float:right;margin-top: 10px\">\r\n\r\n                salvar\r\n            </button>\r\n        </form>\r\n    </span>\r\n\r\n\r\n    <!-- <form novalidate [formGroup]=\"moduloForm\" (ngSubmit)=\"onSubmit(moduloForm)\">\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 80px;\">\r\n            <mat-label>Unidade</mat-label>\r\n            <mat-select formControlName=\"unidadeId\" placeholder=\"type pacote\">\r\n                <mat-option></mat-option>\r\n                <mat-option *ngFor=\"let uni of unidadesAutorizadas\" [value]=\"uni.unidadeId\">{{uni.unidade}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 350px;margin-left: 10px;\">\r\n            <mat-label>Tipo</mat-label>\r\n            <mat-select formControlName=\"typePacoteId\" placeholder=\"\">\r\n                <mat-option></mat-option>\r\n                <mat-option (click)=\"buscarMaterias(type.id)\" [value]=\"type.id\" *ngFor=\"let type of typePacotes\">\r\n                    {{type.nome}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 280px; \">\r\n            <mat-label>Descrição</mat-label>\r\n            <input selected formControlName=\"descricao\" matInput placeholder=\"dica: Curso Técnico de Enfermagem\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 80px;margin-left: 10px; \">\r\n            <mat-label>Total horas</mat-label>\r\n            <input selected disabled [value]=\"totalHoras\" matInput placeholder=\"curso tal...\">\r\n        </mat-form-field>\r\n\r\n        <br> -->\r\n\r\n    <!--     MATERIAS        -->\r\n\r\n    <!-- <div style=\"font-size: 0.9em;font-style: italic;\">\r\n            Adicione ao menos uma matéria ao curso:\r\n        </div>\r\n\r\n        <form novalidate [formGroup]=\"addMateriaForm\" (ngSubmit)=\"addMateria(addMateriaForm)\">\r\n            <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n                <mat-label>Matéria</mat-label>\r\n                <mat-select formControlName=\"pacote\" placeholder=\"\">\r\n                    <mat-option></mat-option>\r\n                    <mat-option [value]=\"type\" *ngFor=\"let type of materiasTemplate\">\r\n                        {{type.nome}}\r\n                    </mat-option>\r\n                </mat-select>\r\n\r\n            </mat-form-field>\r\n            <button mat-icon-button type=\"submit\" #tooltip=\"matTooltip\" matTooltip=\"adicionar matéria\"\r\n                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                <mat-icon>add</mat-icon>\r\n            </button>\r\n        </form>\r\n\r\n        <ng-container formArrayName=\"materias\">\r\n\r\n            <ng-container *ngFor=\"let matForm of materias.controls; let i = index;\">\r\n                <div [formGroup]=\"matForm\">\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 245px;\">\r\n                        <mat-label>Nome</mat-label>\r\n                        <input selected [value]=\"matForm.value.nome\" disabled matInput placeholder=\"Descrição\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 150px;margin-left: 20px;\">\r\n                        <mat-label>Descrição</mat-label>\r\n                        <input selected [value]=\"matForm.value.descricao || ' '\" disabled matInput\r\n                            placeholder=\"Descrição\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 85px;margin-left: 20px;\">\r\n                        <mat-label>Modalidade</mat-label>\r\n                        <input selected [value]=\"matForm.value.modalidade\" disabled matInput placeholder=\"Descrição\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 70px;margin-left: 20px;\">\r\n                        <mat-label>Carga Horária</mat-label>\r\n                        <input selected [value]=\"matForm.value.cargaHoraria\" disabled matInput placeholder=\"semestre\">\r\n                    </mat-form-field>\r\n\r\n                    <button mat-icon-button (click)=\"deleteLesson(i)\" style=\"margin-left:10px ;\" #tooltip=\"matTooltip\"\r\n                        matTooltip=\"remover\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n\r\n                        <mat-icon style=\"vertical-align: middle;\" class=\"delete-btn\">\r\n                            delete_forever</mat-icon>\r\n                    </button>\r\n\r\n                </div>\r\n            </ng-container>\r\n\r\n        </ng-container> -->\r\n\r\n    <!--     DOCUMENTOS        -->\r\n\r\n    <!-- <div div style=\"font-size: 0.9em;font-style: italic;\">\r\n            Adicione a documentação exigida (opcional):\r\n        </div>\r\n\r\n        <form novalidate [formGroup]=\"addDocForm\" (ngSubmit)=\"addDocumentos(addDocForm)\">\r\n            <mat-form-field appearance=\"standard\" style=\"width: 175px;\">\r\n                <mat-label>Documento</mat-label>\r\n                <mat-select formControlName=\"documento\" placeholder=\"\">\r\n                    <mat-option></mat-option>\r\n                    <mat-option [value]=\"type\" *ngFor=\"let type of docTemplates\">\r\n                        {{type.nome}}\r\n                    </mat-option>\r\n                </mat-select>\r\n\r\n            </mat-form-field>\r\n            <button mat-icon-button type=\"submit\" #tooltip=\"matTooltip\" matTooltip=\"adicionar documentos\"\r\n                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                <mat-icon>add</mat-icon>\r\n            </button>\r\n        </form>\r\n\r\n        <ng-container formArrayName=\"documentosExigidos\">\r\n\r\n            <ng-container *ngFor=\"let docsForm of documentos.controls; let i = index;\">\r\n                <div [formGroup]=\"docsForm\">\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 180px;\">\r\n                        <mat-label>Descrição</mat-label>\r\n                        <input selected [value]=\"docsForm.value.descricao\" disabled matInput placeholder=\"Descrição\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 210px;margin-left: 20px;\">\r\n                        <mat-label>Comentário</mat-label>\r\n                        <input selected formControlName=\"comentario\" matInput placeholder=\"Descrição\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 175px;;margin-left: 20px;\">\r\n                        <mat-label>Titular</mat-label>\r\n                        <mat-select formControlName=\"titular\" placeholder=\"\">\r\n                            <mat-option></mat-option>\r\n                            <mat-option [value]=\"doc.value\" *ngFor=\"let doc of titularDoc\">\r\n                                {{doc.value}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n\r\n                    <button mat-icon-button (click)=\"deleteDocumento(i)\" style=\"margin-left:10px ;\"\r\n                        #tooltip=\"matTooltip\" matTooltip=\"remover\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n\r\n                        <mat-icon style=\"vertical-align: middle;\" class=\"delete-btn\">\r\n                            delete_forever</mat-icon>\r\n                    </button>\r\n\r\n                    <br>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 90px;\">\r\n                        <mat-label>Validade (dias)</mat-label>\r\n                        <input selected [value]=\"docsForm.value.validadeDias\" disabled matInput placeholder=\"semestre\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-checkbox color=\"primary\" style=\"margin-left:10px ;\" formControlName=\"obrigatorioParaMatricula\">\r\n                        Documento obrigatório para matrícula</mat-checkbox>\r\n\r\n                </div>\r\n            </ng-container>\r\n\r\n        </ng-container> -->\r\n    <!-- \r\n        <div style=\"float: right;margin-top: 15px;\">\r\n            <button color=\"primary\" type=\"submit\" [disabled]=\"!moduloForm.valid\" mat-raised-button style=\"width: 100px; position: relative; float:right;margin-bottom: 10px;\r\n        margin-left: 10px;\">\r\n                <mat-spinner *ngIf=\"disabledSpinner\" [diameter]=\"33\" style=\"margin-left: 18px;\r\n                \r\n        margin-top: 2px; position: absolute;\">\r\n                </mat-spinner>\r\n                Salvar\r\n            </button>\r\n        </div> -->\r\n    <!-- </form> -->\r\n\r\n</div>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { Debito, InfoFinanceiras } from \"src/app/_shared/models/InfoFinanceiras.model\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\n\r\n@Component({\r\n    selector: 'boletimalunomodal',\r\n    templateUrl: './boletimaluno.component.html',\r\n    styleUrls: ['./boletimaluno.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class BoletimAlunoComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    // tabs = ['Financeiro', 'Responsável Financeiro', 'Responsável (menor)'\r\n    //     , 'Financeiro', 'Documentação'];\r\n    public initProgressBar = 'visible'\r\n    public showForm = false\r\n    public showAluno: boolean = false\r\n    public showRespFinanc: boolean = false\r\n    public showRespMenor: boolean = false\r\n    public nome: string = ''\r\n    public aluno: Aluno = new Aluno();\r\n    public debitos: Debito[] = new Array<Debito>();\r\n    public notasBoletim: any[] = new Array<any>();\r\n    public turma: any;\r\n    public originalAluno: any\r\n    public originalRespFin: any\r\n    public originalRespMenor: any\r\n\r\n    private respFinId: number = 0;\r\n    private respMenorId: number = 0;\r\n\r\n    public alunoForm: FormGroup;\r\n    public respFinancForm: FormGroup;\r\n    public respMenorForm: FormGroup;\r\n\r\n    constructor(\r\n        private _helper: HelpersService,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog,\r\n        // private _service: PedagService,\r\n        public dialogRef: MatDialogRef<BoletimAlunoComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        //console.log(this.data['aluno'])\r\n        this.aluno = this.data['aluno']\r\n        this.GetBoletim(this.data['aluno'].matriculaId)\r\n    }\r\n\r\n    \r\n    private GetBoletim(alunoId) {\r\n\r\n        this._http.get(`${this.baseUrl}/pedag/aluno/nota/${alunoId}`)\r\n            .subscribe(resp => {\r\n               // console.log(resp)\r\n                this.notasBoletim = resp['notas']\r\n                this.turma = resp['turma']\r\n            },\r\n                (error) => { \r\n                    //console.log(error) \r\n                    this.initProgressBar = 'hidden'\r\n                    this._helper.openSnackBarErrorDefault();\r\n                    this.dialogRef.close({clicked: false})    \r\n                },\r\n                () => {\r\n                    this.dialogRef.addPanelClass('boletimaluno-class')\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showForm = true\r\n                })\r\n    }\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Boletim Escolar\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<div *ngIf=\"showForm\">\r\n\r\n    <hr>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Nome</mat-label>\r\n        <input [(ngModel)]=\"aluno.nome\" disabled required name=\"nome\" matInput >\r\n    </mat-form-field>\r\n    \r\n    <br>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Turma</mat-label>\r\n        <input [(ngModel)]=\"turma.descricao\"disabled required matInput >\r\n    </mat-form-field>\r\n\r\n    <br>\r\n    <table class=\"table table-bordered table-boletim\">\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\" rowspan=\"2\" style=\"font-size: 0.9em; width: 40%;text-align:center;\r\n                font-weight: 400; vertical-align: middle;\">\r\n                    DISCIPLINAS\r\n                </th>\r\n                <th scope=\"col\" colspan=\"3\" style=\"font-weight: 400;font-size: 0.9em;width: 35%;text-align:center;vertical-align: middle;\">NOTAS</th>\r\n                <th scope=\"col\" rowspan=\"2\" style=\"font-weight: 400;font-size: 0.9em;width: 10%;text-align:center;vertical-align: middle;\">FALTAS</th>\r\n                <th scope=\"col\" rowspan=\"2\" style=\"font-weight: 400;font-size: 0.9em;width: 15%;text-align:center;vertical-align: middle;\">RESULTADO FINAL\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <!-- <th scope=\"col\">#</th> -->\r\n                <th scope=\"col\" style=\"font-weight: 400;font-size: 0.9em;text-align:center;vertical-align: middle;\">1ª AV.</th>\r\n                <th scope=\"col\" style=\"font-weight: 400;font-size: 0.9em;text-align:center;vertical-align: middle;\">2ª AV.</th>\r\n                <th scope=\"col\" style=\"font-weight: 400;font-size: 0.9em;text-align:center;vertical-align: middle;\">REC.</th>\r\n\r\n                <!-- <th scope=\"col\">Last</th>\r\n        <th scope=\"col\">Handle</th> -->\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let bol of notasBoletim; let i =index;\">\r\n                <td scope=\"row\">{{bol.materiaDescricao}}</td>\r\n                <td style=\"text-align:center;vertical-align: middle;\">{{bol.avaliacaoUm || '-'}}</td>\r\n                <td style=\"text-align:center;vertical-align: middle;\">{{bol.avaliacaoDois || '-'}}</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td style=\"text-align:center;vertical-align: middle;\">{{bol.resultado}}</td>\r\n            </tr>\r\n\r\n        </tbody>\r\n    </table>\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\n\r\n@Component({\r\n    selector: 'createbolsamodal',\r\n    template: `<div style=\"font-size: 0.9em;\">\r\n    Senha: <br>\r\n    {{ data['senha'] }}\r\n    </div>`,\r\n   // styleUrls: ['./createbolsa.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ShowSenhaComponent implements OnInit {\r\n    \r\n    public initProgressBar = 'visible'\r\n    public showContent = false\r\n    public typesPacotes: any[] = new Array<any>()\r\n    public bolsaForm: FormGroup\r\n\r\n    constructor(\r\n        private _admService: AdmService,\r\n        private _fb: FormBuilder,\r\n        public dialogRef: MatDialogRef<ShowSenhaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        \r\n    }\r\n\r\n   \r\n    \r\n\r\n}\r\n\r\n\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnChanges, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { AgendaProvas } from \"src/app/_shared/models/agenda.modal\";\r\nimport { Materia } from \"src/app/_shared/models/materia.model\";\r\nimport { AlunosNotas, Materias, NotasViewModel } from \"src/app/_shared/models/Turma.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { NotasDisciplinas } from \"../../Pedag-Models/notasdisciplinas.model\";\r\n\r\n\r\n@Component({\r\n    selector: 'notas-app',\r\n    templateUrl: './notas.component.html',\r\n    styleUrls: ['./notas.component.scss'],\r\n    animations: [HighlightTrigger]\r\n\r\n})\r\n\r\nexport class NotasComponent implements OnInit {\r\n\r\n    public initProgressBar = 'visible'\r\n    public saveProgressBar = 'hidden'\r\n    public showMateriaEscolha = false\r\n    public showNotas = false\r\n    public messageNoMateria = false\r\n    teste: any;\r\n    materias: any[] = new Array<any>();\r\n    agendaProvas: AgendaProvas = new AgendaProvas();\r\n    public notasDisciplinas: NotasDisciplinas[] = new Array<NotasDisciplinas>()\r\n    public notasDisciplinasOriginal: any\r\n\r\n    private BaseUrl = environment.baseUrl\r\n    showTable = false\r\n    materiaFilter: NotasViewModel = new NotasViewModel();\r\n\r\n\r\n    public searchForm: FormGroup;\r\n\r\n    constructor(\r\n        private _helper: HelpersService,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.searchForm = _fb.group({\r\n            materiaId: ['', [Validators.required]]\r\n        })\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        console.log('notas component')\r\n        console.log(this.data)\r\n\r\n        this.getMaterias(this.data['turma'].id);\r\n\r\n    }\r\n\r\n    getMaterias(turmaId) {\r\n\r\n        this.atualModuloId = turmaId\r\n        this._http.get(`${this.BaseUrl}/turma/materias-notas-v2/${turmaId}`)\r\n            .subscribe(\r\n                response => {\r\n                    this.materias = Object.assign([], response['materias'])\r\n                },\r\n                (error) => {\r\n                    this.initProgressBar = 'hidden'\r\n                    if(error['status'] == 404){\r\n                        this.messageNoMateria = true\r\n                    }else{\r\n                        this._helper.openSnackBarErrorDefault();\r\n                    }\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showMateriaEscolha = true\r\n                    console.log(this.materias)\r\n                }\r\n\r\n            )\r\n    }\r\n\r\n    atualMateria: any;\r\n    buscarNotas(materia) {\r\n\r\n        console.log(materia)\r\n        if (this.atualMateria == materia) {\r\n            return\r\n        }\r\n        this.initProgressBar = 'visible'\r\n        this.showNotas = false\r\n        //materia.preventDefault();\r\n        // if(this.searchForm.valid && materia == 'buscar'){\r\n\r\n        this.atualMateria = materia\r\n\r\n        this._http.get(`${this.BaseUrl}/pedag/turma/notas/${this.data['turma'].id}/${materia.id}`)\r\n            .subscribe(resp => {\r\n                console.log(resp)\r\n                this.notasDisciplinas = Object.assign([], resp['notas']);\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                    this._helper.openSnackBarErrorDefault();\r\n                    this.initProgressBar = 'hidden'\r\n                },\r\n                () => {\r\n                    this.showNotas = true\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showTable = true\r\n\r\n                    this.notasDisciplinasOriginal = JSON.stringify(this.notasDisciplinas)\r\n                    //var discJson = JSON.stringify(this.notasDisciplinas)\r\n\r\n                })\r\n\r\n        // }\r\n\r\n    }\r\n    clickado() {\r\n        console.log('click')\r\n    }\r\n\r\n    salvar() {\r\n\r\n        this.saveProgressBar = 'visible'\r\n        console.log(this.notasDisciplinas)\r\n        this._http.put(`${this.BaseUrl}/pedag/turma/notas`, this.notasDisciplinas, {})\r\n            .subscribe(response => {\r\n\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                    this.saveProgressBar = 'hidden'\r\n                },\r\n                () => {\r\n                    this.saveProgressBar = 'hidden'\r\n                    this.Atualizar()\r\n                }\r\n            )\r\n    }\r\n\r\n    private Atualizar() { //this.atualMateria\r\n        \r\n        this.initProgressBar = 'visible'\r\n        //this.showNotas = false\r\n        //materia.preventDefault();\r\n        // if(this.searchForm.valid && materia == 'buscar'){\r\n\r\n        \r\n\r\n        this._http.get(`${this.BaseUrl}/pedag/turma/notas/${this.data['turma'].id}/${this.atualMateria.id}`)\r\n            .subscribe(resp => {\r\n                console.log(resp)\r\n                this.notasDisciplinas = Object.assign([], resp['notas']);\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                    this._helper.openSnackBarErrorDefault();\r\n                    this.initProgressBar = 'hidden'\r\n                },\r\n                () => {\r\n                    this.showNotas = true\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showTable = true\r\n\r\n                    this.notasDisciplinasOriginal = JSON.stringify(this.notasDisciplinas)\r\n                    //var discJson = JSON.stringify(this.notasDisciplinas)\r\n\r\n                })\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    get disableSaveButton() {\r\n\r\n        if (this.notasDisciplinasOriginal !=\r\n            JSON.stringify(this.notasDisciplinas)) {\r\n\r\n            return this.saveProgressBar != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n\r\n    atualModuloId = 0\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<div style=\"font-size: 1.2em;\">Lançar notas\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<ng-container *ngIf=\"messageNoMateria\">\r\n    <hr>\r\n\r\n\r\n    <span style=\"font-size: 0.9;font-style: italic;\">Aguarde! Espere a conclusão das aulas de cada matérias para poder lançar as  notas.</span>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"showMateriaEscolha\">\r\n    <hr>\r\n\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 55%;\">\r\n        <mat-label>Turma</mat-label>\r\n        <input matInput disabled value=\"{{data.turma.descricao}} - {{data.turma.identificador}}\">\r\n    </mat-form-field>\r\n\r\n    <!-- <div>{{data.turma.descricao}} - {{ data.turma.identificador }}\r\n</div> -->\r\n\r\n    <div>\r\n\r\n        <mat-form-field style=\"width: 40%;\">\r\n            <mat-label>Matéria</mat-label>\r\n            <mat-select selected>\r\n                <mat-option></mat-option>\r\n                <mat-option (click)=\"buscarNotas(mat)\" *ngFor=\"let mat of materias\" [value]=\"mat.id\">\r\n                    {{mat.nome}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"showNotas\">\r\n\r\n\r\n    <!-- <div *ngIf=\"showTable\" class=\"table-responsive\" style=\"height: 430px;position: relative;\"> -->\r\n    <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n        <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width: 2%; \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n\r\n                    <th style=\"width: 33%;font-size:1em;\r\n                    vertical-align: middle; \r\n                    text-align:left;\r\n                     border-top: 0px; font-weight: 400;\">ALUNO</th>\r\n\r\n\r\n\r\n                    <th style=\"width: 15%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">1ª Av.<br>\r\n                        <span *ngIf=\"showTable\" style=\"font-size: 0.8em;\">{{ agendaProvas.avaliacaoUm }}</span>\r\n                    </th>\r\n\r\n                    <th style=\"width: 15%;font-size:1em;\r\n                    text-align:center;\r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">2ª Av.<br>\r\n                        <span *ngIf=\"showTable\" style=\"font-size: 0.8em;\">{{agendaProvas.avaliacaoDois }}</span>\r\n                    </th>\r\n\r\n                    <th style=\"width: 15%;font-size:1em;\r\n                    text-align:center;\r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">3ª Av.<br>\r\n                        <span *ngIf=\"showTable\" style=\"font-size: 0.8em;\">{{agendaProvas.avaliacaoTres }}</span>\r\n                    </th>\r\n\r\n                    <th style=\"width: 20%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Status</th>\r\n\r\n\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n                <tr *ngFor=\"let aluno of notasDisciplinas;let i = index;\">\r\n                    <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                    <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                        {{aluno.nome}}\r\n                    </td>\r\n\r\n\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                        <div style=\"\">\r\n                            <input type=\"text\" style=\"margin-right: auto;\r\n                            margin-left: auto;font-size:0.9em;width: 60px;\" class=\"form-control\"\r\n                                [(ngModel)]=\"aluno.avaliacaoUm\" [value]=\"aluno.avaliacaoUm || ''\" aria-label=\"Small\"\r\n                                name=\"avaliacaoUm\" aria-describedby=\"inputGroup-sizing-sm\">\r\n                        </div>\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                        <div style=\"text-align: center;vertical-align: middle;\">\r\n                            <input type=\"text\" style=\"margin-right: auto;\r\n                            margin-left: auto;font-size:0.9em;width: 60px;\" class=\"form-control\"\r\n                                [(ngModel)]=\"aluno.avaliacaoDois\" [value]=\"aluno.avaliacaoDois || ''\"\r\n                                name=\"avaliacaoDois\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\r\n                        </div>\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                        <div style=\"text-align: center;vertical-align: middle;\">\r\n                            <input type=\"text\" style=\"margin-right: auto;\r\n                            margin-left: auto;font-size:0.9em;width: 60px;\" class=\"form-control\"\r\n                                [(ngModel)]=\"aluno.avaliacaoTres\" [value]=\"aluno.avaliacaoTres || ''\"\r\n                                name=\"avaliacaoTres\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\r\n                        </div>\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;\">\r\n                        {{aluno.resultado}}\r\n\r\n                    </td>\r\n\r\n                </tr>\r\n\r\n\r\n\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <mat-progress-bar style=\"margin-top: 10px;\" [style.visibility]=\"saveProgressBar\" \r\n    @rowHighlight mode=\"query\">\r\n    </mat-progress-bar>\r\n    <div *ngIf=\"showTable\" style=\"margin-top: 10px;\">\r\n        <button type=\"button\" color=\"primary\" \r\n        [disabled]=\"disableSaveButton\"\r\n        (click)=\"salvar()\" mat-raised-button\r\n            style=\"float:right;margin-bottom: 5px;margin-left: 10px;\">\r\n            Salvar\r\n        </button>\r\n    </div>\r\n\r\n</ng-container>","import { Component, Inject, Input, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { MyTel } from \"src/app/_shared/customMasks/maskTelBr/mytel.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { Turma } from \"src/app/_shared/models/Turma.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\n\r\n\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'transfinternamodal',\r\n    templateUrl: './transfinterna.component.html',\r\n    styleUrls: ['./transfinterna.component.scss'],\r\n    animations: [HighlightTrigger] //@rowHighlight\r\n})\r\n\r\nexport class TransferenciaInternaComponent implements OnInit {\r\n\r\n\r\n    baseUrl = environment.baseUrl;\r\n    //public cepReturn: CepReturn = new CepReturn();\r\n    public pesquisaForm: FormGroup;\r\n    public aluno: Aluno = new Aluno()\r\n    public turmas: Turma[] = new Array<Turma>();\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n    temDebito = false;\r\n    //cargos = Cargos;\r\n    mensagem = \"\";\r\n    showMensagem = false\r\n    showAluno = false\r\n    showSearch = true\r\n\r\n    constructor(\r\n        //private service: AdmService,\r\n        //private router: Router,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<TransferenciaInternaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.pesquisaForm = _fb.group({\r\n            cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        // console.log(\"on init\")\r\n        //this.getTasks(1, this.pageSize);\r\n        //this.colaboradorForm.get('logradouro').disable()\r\n\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n    }\r\n\r\n    fechar() {\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n    resposta: any\r\n    HasMessage: any\r\n    nascimento: any\r\n    consulta(form: FormGroup) {\r\n\r\n        console.log(this.pesquisaForm.get('cpf').value)\r\n\r\n        this.showMensagem = false\r\n\r\n        if (form.valid) {\r\n            let cpf = this.pesquisaForm.get('cpf').value\r\n            console.log(cpf)\r\n            this._http.get(`${this.baseUrl}/pedag/transfinterna/?cpf=${cpf}`)\r\n                .subscribe(response => {\r\n                    console.log(response)\r\n                    this.aluno = Object.assign({}, response['aluno'])\r\n                    this.turmas = Object.assign([], response['turmas'])\r\n                    this.temDebito = response['debitos']\r\n                    this.nascimento = { dia: 10, mes: 5, ano: 2021 }\r\n                    this.showAluno = true\r\n                    this.showSearch = false\r\n                  \r\n                }, err => { \r\n                    console.log(err)\r\n                    this.mensagem = err['error'].message\r\n                    this.showMensagem = true\r\n                },\r\n                    () => {\r\n                        \r\n                     });\r\n        }\r\n    }\r\n\r\n    turmaTransId = 0\r\n    selectTurma(turmaId: number) {\r\n        this.turmaTransId = turmaId;\r\n        // this._http.post(`${this.baseUrl}/pedag/transfinterna/?alunoId=${this.aluno.id}&turmaId=${turmaId}`, {\r\n\r\n        // }).subscribe(resp => {\r\n\r\n        //     }\r\n\r\n        //     ,\r\n        //     (error) => { console.log(error) },\r\n        //     () => { })\r\n\r\n    }\r\n\r\n    salvar() {\r\n\r\n        if (this.turmaTransId > 0) {\r\n            this._http.post(`${this.baseUrl}/pedag/transfinterna/?alunoId=${this.aluno.id}&turmaId=${this.turmaTransId}`, {\r\n\r\n            }).subscribe(resp => {\r\n\r\n            },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    onSubmit(form: FormGroup) {\r\n        this.showMensagem = false\r\n        console.log(form)\r\n        console.log(form.value)\r\n        console.log(form.valid)\r\n        //var cel = `${form['celular'].value}`\r\n        //console.log(cel)\r\n        // this.dialogRef.close();\r\n        if (form.valid) {\r\n            console.log('form valid')\r\n            const novoColaborador = JSON.stringify(form.value);\r\n            //this.save(novoColaborador)\r\n            // let newTemplate = this.mapForm(tempForm)\r\n\r\n            this._http.post(`${this.baseUrl}/colaboradores`, novoColaborador, {\r\n                //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n                headers: new HttpHeaders({\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bear \"\r\n                })\r\n            }).subscribe(response => {\r\n\r\n                console.log(response)\r\n                // this.colaboradores = Object.assign([], response['data'])\r\n                // console.log(this.colaboradores)\r\n                // this.dialogRef.close();\r\n            }, (err) => {\r\n                console.log(err)\r\n                console.log(err['error'].mensagem)\r\n                this.mensagem = err['error'].mensagem\r\n                this.showMensagem = true\r\n            },\r\n                () => {\r\n                    //console.log(response)\r\n                    this.showMensagem = false\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    // https://viacep.com.br/ws/01001000/json/\r\n\r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n}","<div class=\"container\">\r\n    <!-- Transferência Interna\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button (click)=\"fechar()\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i> -->\r\n\r\n    <div style=\"font-size: 1.2em;\">\r\n        Transferência Interna (Unidade {{ tokenInfo.Unidade }})\r\n\r\n        <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"fechar()\" style=\"\" mat-icon-button>\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n    <hr>\r\n\r\n    <div *ngIf=\"showSearch\">\r\n        <div style=\"margin-top: 20px;font-size: 0.9em;font-style: italic;\">\r\n            Digite o CPF do aluno para colalizá-lo no sistema:\r\n        </div>\r\n        <form novalidate [formGroup]=\"pesquisaForm\" (ngSubmit)=\"consulta(pesquisaForm)\">\r\n           \r\n            <mat-form-field appearance=\"standard\" style=\"width: 135px; \">\r\n                <mat-label>CPF</mat-label>\r\n                <input mask=\"000.000.000-00\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" minlength=\"11\"\r\n                    formControlName=\"cpf\" required name=\"cpf\" matInput placeholder=\"CPF\">\r\n            </mat-form-field>\r\n\r\n            <button type=\"submit\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n\r\n        </form>\r\n\r\n        <br>\r\n        <div @rowHighlight class=\"card-header \" style=\"background-color: rgb(227, 240, 227);margin-left: 0px;\r\n       width: 350px; font-size: 0.9em;box-shadow: 0 0 0.5em rgb(172, 170, 170);\" unselectable=\"on\"\r\n            *ngIf=\"showMensagem\">{{mensagem}}</div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n    <div *ngIf=\"showAluno\">\r\n\r\n\r\n        <div style=\"position: relative;\">\r\n\r\n            <div style=\"position: absolute;  display:flex;padding: 0px; margin-left: 88%; display: inline-block;\r\n            overflow: hidden;margin-top: 5px; width: 100px; height: 133px; border: 1px solid black; \">\r\n\r\n                <img src=\"\" style=\"display: block;\r\n            margin-left: auto;\r\n            margin-right: auto;width:50%\r\n            \">\r\n\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                <mat-label>Nome completo</mat-label>\r\n                <input [(ngModel)]=\"aluno.nome\" disabled selected required name=\"nome\" matInput placeholder=\"Nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>CPF</mat-label>\r\n                <input [(ngModel)]=\"aluno.cpf\" disabled\r\n                mask=\"000.000.000-00\"\r\n                    selected name=\"cpf\" matInput placeholder=\"digite o CPF\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 12%; margin-left: 2%;\">\r\n                <mat-label>RG</mat-label>\r\n                <input [(ngModel)]=\"aluno.rg\" disabled\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" selected name=\"rg\"\r\n                    minlength=\"9\" maxlength=\"11\" matInput placeholder=\"digite o RG\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 17%; margin-left: 2%;\">\r\n                <mat-label>Nascimento</mat-label>\r\n                <date-input disabled [(ngModel)]=\"nascimento\" disabled name=\"nascimento\" matInput required></date-input>\r\n            </mat-form-field>\r\n\r\n\r\n            <br>\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 25%; \">\r\n                <mat-label>Nome Social</mat-label>\r\n                <input [(ngModel)]=\"aluno.nomeSocial\" disabled selected name=\"nome\" matInput placeholder=\"Nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%; \">\r\n                <mat-label>Naturalidade</mat-label>\r\n                <input [(ngModel)]=\"aluno.naturalidade\" disabled selected required name=\"naturalidade\" matInput\r\n                    placeholder=\"Nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                <mat-label>UF</mat-label>\r\n                <input [(ngModel)]=\"aluno.uf\" disabled\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\" minlength=\"2\"\r\n                    maxlength=\"2\" selected required name=\"naturalidadeUF\" matInput placeholder=\"UF\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field #tooltip=\"matTooltip\" [matTooltip]=\"aluno.email\" matTooltipPosition=\"above\"\r\n                matTooltipHideDelay=\"100\" appearance=\"standard\" style=\"width: auto; margin-left: 2%;\">\r\n                <mat-label>Email</mat-label>\r\n                <input [(ngModel)]=\"aluno.email\" disabled selected name=\"email\" matInput placeholder=\"Email\">\r\n            </mat-form-field>\r\n\r\n            <!-- <div style=\"font-style: italic;margin-top: 10px;\">Selecione o curso em que o Aluno está matriculado e para o qual deseja transferência:</div>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                <mat-label>Curso</mat-label>\r\n                <mat-select  selected name=\"cargo\" required>\r\n                    <mat-option value=\"\"></mat-option>\r\n                    <mat-option (click)=\"select()\" >Curso Técnico em Enfermagem</mat-option>\r\n                </mat-select>\r\n            </mat-form-field> -->\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 28%;\">\r\n                <mat-label>Curso</mat-label>\r\n                <input disabled value=\"Curso Técnico em Enfermagem\" selected required name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n                <mat-label>Turma atual</mat-label>\r\n                <input disabled value=\"\" selected required name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n                <mat-label>Unidade atual</mat-label>\r\n                <input disabled value=\"\" selected required name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <!-- <mat-form-field appearance=\"standard\" style=\"width: 14%; margin-left: 2%;\">\r\n                <mat-label>Semestre atual</mat-label>\r\n                <input disabled value=\"2º semestre\" selected required name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field> -->\r\n\r\n            <br>\r\n\r\n            <!-- <div style=\"font-style: italic;margin-bottom: 10px;\">Disciplinas faltantes:</div>\r\n\r\n            <div>Fundamentos de Enfermagem I\r\n                <i style=\"margin-left: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button style=\"color: green\" mat-icon-button>\r\n                        <mat-icon>done</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </div> -->\r\n\r\n            <div style=\"font-style: italic;margin-top: 10px; margin-bottom: 10px;\">\r\n                Turmas com vagas (unidade {{tokenInfo.Unidade}}):</div>\r\n\r\n            <ng-container *ngIf=\"turmas.length > 0; else semturmas\">\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                    <mat-label>Curso</mat-label>\r\n                    <mat-select selected name=\"cargo\" required>\r\n                        <mat-option value=\"\"></mat-option>\r\n                        <mat-option (click)=\"selectTurma(turma.id)\" *ngFor=\"let turma of turmas\" [value]=\"turma.id\">\r\n                            Turma {{turma.identificador}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </ng-container>\r\n            <ng-template #semturmas>\r\n                <span style=\"font-size: 0.8em; font-style: italic;\">\r\n                Não turmas disponíveis ou com vagas para transferência.\r\n                </span>\r\n            </ng-template>\r\n\r\n            <span *ngIf=\"temDebito\" style=\"font-size: 0.8em; font-style: italic;\">\r\n                O aluno possui débitos em aberto, favor procurar a sua unidade responsável e regularizar.\r\n                </span>\r\n            \r\n\r\n        </div>\r\n\r\n        <button type=\"submit\" color=\"primary\" (click)=\"salvar()\" mat-raised-button \r\n        [disabled]=\"turmas.length == 0\"\r\n            style=\"float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n            Salvar\r\n        </button>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: `./app.component.html`,\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}","<navbar></navbar>\n<div>\n  <router-outlet></router-outlet>\n</div>\n<footer></footer>\n\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { AdmService } from \"../services/adm.services\";\r\nimport { CreateBolsaModalConfig, EditBolsaModalConfig, ShowSenhaModalConfig } from \"../services/modal.config\";\r\nimport { CreateBolsaComponent } from \"./create/createbolsa.component\";\r\nimport { EditBolsaComponent } from \"./edit/edit-bolsa.component\";\r\nimport { ShowSenhaComponent } from \"./show/showsenha.component\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: \"bolsas-app\",\r\n    templateUrl: './bolsas.component.html',\r\n    styleUrls: ['./bolsas.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class BolsasComponent {\r\n\r\n    public initProgressBar = 'hidden'\r\n    public typesPacotes: any[] = new Array<any>();\r\n    public bolsas: any[] = new Array<any>()\r\n    public showMessageNoBolsas = false\r\n\r\n    public pesquisarForm: FormGroup\r\n\r\n    constructor(\r\n        private _admService: AdmService,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog\r\n    ) {\r\n        this.pesquisarForm = _fb.group({\r\n            typePacoteId: ['', [Validators.required]]\r\n        })\r\n    }\r\n\r\n    returnOnSelect(){\r\n        return false\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.GetTypePacotes();\r\n    }\r\n\r\n    GetTypePacotes() {\r\n        this.initProgressBar = 'visible'\r\n        this._admService.getTypePacotes()\r\n            .subscribe(\r\n                sucesso => { this.GetTypePacotesSucesso(sucesso) },\r\n                falha => { this.GetTypePacotesErro(falha) }\r\n            )\r\n\r\n    }\r\n\r\n    GetTypePacotesSucesso(resposta) {\r\n        this.typesPacotes = Object.assign([], resposta['typePacotes']);\r\n        this.initProgressBar = 'hidden'\r\n    }\r\n\r\n    GetTypePacotesErro(error) {\r\n        this.initProgressBar = 'hidden'\r\n    }\r\n\r\n    Pesquisar() {\r\n        this.showMessageNoBolsas = false\r\n        if (this.pesquisarForm.valid) {\r\n            this.initProgressBar = 'visible'\r\n            this._admService.GetBolsas(this.pesquisarForm.get('typePacoteId').value)\r\n                .subscribe(\r\n                    resposta => { this.PesquisarSucesso(resposta) },\r\n                    falha => { this.PesquisarFalha(falha) }\r\n                )\r\n        }\r\n    }\r\n\r\n    PesquisarSucesso(resp) {\r\n        this.bolsas = Object.assign([], resp['bolsas'])\r\n        this.initProgressBar = 'hidden'\r\n    }\r\n\r\n    PesquisarFalha(Error) {\r\n        this.initProgressBar = 'hidden'\r\n        this.showMessageNoBolsas = true\r\n    }\r\n\r\n    openCreateBolsaModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(CreateBolsaComponent, CreateBolsaModalConfig());\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n\r\n        });\r\n    }\r\n\r\n    get disabledCodigo() {\r\n        return false\r\n    }\r\n\r\n    EditarBolsa(bolsaId){\r\n        const dialogRef = this._modal\r\n        .open(EditBolsaComponent, EditBolsaModalConfig(bolsaId));\r\n    dialogRef.afterClosed().subscribe((data) => {\r\n\r\n    });\r\n    }\r\n\r\n    public VerCodigoBolsa(bolsaId) {\r\n        this._admService.GetBolsaSenha(bolsaId)\r\n            .subscribe(\r\n                resposta => { this.showSenha(resposta) },\r\n                falha => { }\r\n            )\r\n    }\r\n\r\n    showSenha(resp): void {\r\n\r\n        // openCreateBolsaModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(ShowSenhaComponent, ShowSenhaModalConfig(resp['senha']));\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <div>\r\n        <i style=\"margin-left: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"criar bolsa\" disabled matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button mat-icon-button (click)=\"openCreateBolsaModal()\">\r\n                <mat-icon>description</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n\r\n    <br>\r\n\r\n    <form [formGroup]=\"pesquisarForm\" (ngSubmit)=\"Pesquisar()\" class=\"form-inline siteForm\"\r\n        style=\"margin-top: 5px;display: inline-block\">\r\n\r\n        <span style=\"font-size: 0.9em;font-style: italic;\">\r\n            Selecione o tipo do pacote para pesquisar pela bolsa:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center divSiteForm\">\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n\r\n                <mat-label></mat-label>\r\n                <mat-select [disabled]=\"typesPacotes.length == 0\" formControlName=\"typePacoteId\">\r\n                    <mat-option></mat-option>\r\n                    <mat-option *ngFor=\"let pac of typesPacotes\" [value]=\"pac.id\">{{pac.nome}}</mat-option>\r\n                </mat-select>\r\n\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n\r\n    <mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n    <div class=\"card-header card-msg-response\" unselectable=\"on\" onselectstart=\"returnOnSelect()\" style=\"margin-left: 0px;\"\r\n        *ngIf=\"showMessageNoBolsas\">Não foram localizadas bolsas cadastradas para esse tipo ou unidade.</div>\r\n\r\n\r\n    <div @rowHighlight *ngIf=\"bolsas.length > 0\" class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n        position: relative;\r\n       \r\n        box-shadow: 0 0 1em rgb(172, 170, 170);\r\n        background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Bolsas</h4>\r\n            <p class=\"card-category\">Bolsas cadastrados no sistema:</p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                text-align:left; \r\n                vertical-align: middle;\r\n                border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 20%;font-size:1em;\r\n                                vertical-align: middle;\r\n                                text-align:left;\r\n                border-top: 0px; font-weight: 400;\">NOME</th>\r\n\r\n                            <th style=\"width: 10%;font-size:1em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">DESCONTO</th>\r\n\r\n                            <th style=\"width: 15%;font-size:1em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">CRIAÇÃO</th>\r\n\r\n                            <th style=\"width: 15%;font-size:1em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">DATA EXPIRAÇÃO</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">CÓDIGO</th>\r\n\r\n                            <th style=\"width: 18%;font-size:1em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\"></th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of bolsas;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{i + 1}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.percentualDesconto }} %</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                {{item.dataCriacao |\r\n                                date:'dd/M/yyyy'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.dataExpiracao |\r\n                                date:'dd/M/yyyy'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                <i style=\"margin: 0px; margin: 0px;\"  #tooltip=\"matTooltip\"\r\n                                matTooltip=\"visualizar código\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button (click)=\"VerCodigoBolsa(item.id)\" [disabled]=\"disabledCodigo\"\r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>visibility</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                            </td>\r\n\r\n                            <td style=\"position: relative;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\"  #tooltip=\"matTooltip\"\r\n                                matTooltip=\"visualizar código\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button (click)=\"EditarBolsa(item.id)\" [disabled]=\"disabledCodigo\"\r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>settings</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" *ngIf=\"item.podeEditar\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openEditContratoModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n                            </td>\r\n\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n</div>","import { Materia } from \"./materia.model\";\r\n\r\nexport class Modulo {\r\n    constructor(\r\n    public id?: number,\r\n    public descricao?: string,\r\n    public duracaoMeses?: number,\r\n    public preco?: string,\r\n    public unidadeId?: number,\r\n    public typePacoteId?: number,\r\n    public materias?: Materia[]\r\n    ){}\r\n}","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, MeioPagamento, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { CompraProdutoCommand, Produto, ProdutosCommand } from \"src/app/_shared/models/produto.model\";\r\nimport { Parcelas } from \"src/app/_shared/models/utils.model\";\r\nimport { VendaPesquisaComponent } from \"../venda/venda-pesquisa.component.ts/venda-pesquisa.component\";\r\n\r\n\r\n@Component({\r\n    selector: 'vendaunidademodal',\r\n    templateUrl: './vendaunidade.component.html',\r\n    styleUrls: ['./vendaunidade.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\n\r\nexport class VendaUnidadeComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public meioPagamento = MeioPagamento\r\n    public showParcelas = false;\r\n    public msg = \"\"\r\n    public showMgs = false\r\n    public produtosCesta: Produto[] = new Array<Produto>();\r\n    public totalParcelas: number\r\n    parcelas = Parcelas\r\n    public unidades: any;\r\n    public unidadeId: number = 0;\r\n    public produtos: Produto[] = new Array<Produto>();\r\n    constructor(\r\n        //private service: AdmService,\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog,\r\n        public dialogRef: MatDialogRef<VendaUnidadeComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        //this.colaboradorForm = _fb.group({\r\n        // templateName: ['', [Validators.required, Validators.minLength(5)]],\r\n\r\n        //})\r\n    }\r\n\r\n\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        console.log(this.tokenInfo.Unidade);\r\n        console.log(this.tokenInfo.Codigo);\r\n        console.log(this.tokenInfo);\r\n        this.GetOutrasUnidades();\r\n    }\r\n\r\n    GetOutrasUnidades(){\r\n\r\n            this._http.get(`${this.baseUrl}/unidade/outras`)\r\n            .subscribe(resp => {\r\n                this.unidades = Object.assign([], resp['unidades'])\r\n            },\r\n            (err) => { console.log(err)},\r\n            () => { \r\n\r\n            })\r\n    }\r\n\r\n\r\n    onSubmit(form: FormGroup) {\r\n        // this.showMensagem = false\r\n        console.log(form)\r\n        console.log(form.value)\r\n        console.log(form.valid)\r\n        //var cel = `${form['celular'].value}`\r\n        //console.log(cel)\r\n        // this.dialogRef.close();\r\n        if (form.valid) {\r\n            console.log('form valid')\r\n            const novoColaborador = JSON.stringify(form.value);\r\n            //this.save(novoColaborador)\r\n            // let newTemplate = this.mapForm(tempForm)\r\n\r\n            this._http.post(`${this.baseUrl}/colaboradores`, novoColaborador, {\r\n                //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n                headers: new HttpHeaders({\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bear \"\r\n                })\r\n            }).subscribe(response => {\r\n\r\n                console.log(response)\r\n                // this.colaboradores = Object.assign([], response['data'])\r\n                // console.log(this.colaboradores)\r\n                // this.dialogRef.close();\r\n            }, (err) => {\r\n                console.log(err)\r\n                console.log(err['error'].mensagem)\r\n                //this.mensagem = err['error'].mensagem\r\n                //this.showMensagem = true\r\n            },\r\n                () => {\r\n                    //console.log(response)\r\n                    this.openSnackBar()\r\n                    //this.showMensagem = false\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                });\r\n        }\r\n    }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Colaborador salvo com sucesso.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    meioPagamentoSelect(meioPag) {\r\n\r\n        this.compraProdutoCommand.meioPagamento = meioPag\r\n\r\n        console.log(meioPag)\r\n\r\n        if (meioPag != \"credito\") {\r\n            this.showParcelas = false\r\n        } else {\r\n            this.showParcelas = true\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onOkClick() {\r\n\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n\r\n    }\r\n\r\n    fechar() {\r\n\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n\r\n    }\r\n\r\n    pesquisaItem(nome: string) {\r\n        this.showMgs = false\r\n        if (nome == \"\") return\r\n\r\n        console.log(nome)\r\n\r\n        this._http.get(`${this.baseUrl}/financeiro/produtos-buscar/${nome}`)\r\n            .subscribe(resp => {\r\n                this.produtos = Object.assign([], resp)\r\n            },\r\n                (erro) => { console.log(erro) },\r\n                () => {\r\n\r\n                    if (this.produtos.length == 0) {\r\n\r\n                        this.msg = \"nenhum produto com esse nome foi localizado\"\r\n                        this.showMgs = true\r\n                    } else {\r\n\r\n                        this.openPesquisaResult()\r\n\r\n                    }\r\n\r\n                })\r\n    }\r\n\r\n    add(product: Produto) {\r\n        var index = this.compraProdutoCommand.produtos.indexOf(product)\r\n        var qntAtual = this.compraProdutoCommand.produtos[index].quantidadeComprada\r\n        this.compraProdutoCommand.produtos[index].quantidadeComprada = qntAtual + 1\r\n    }\r\n\r\n    remove(product: Produto) {\r\n        var index = this.compraProdutoCommand.produtos.indexOf(product)\r\n        var qntAtual = this.compraProdutoCommand.produtos[index].quantidadeComprada\r\n        if (qntAtual == 1) {\r\n\r\n        } else {\r\n            this.compraProdutoCommand.produtos[index].quantidadeComprada = qntAtual - 1\r\n        }\r\n\r\n    }\r\n\r\n    get valorTotalVenda() {\r\n\r\n        /*\r\n                var preco = parseFloat(form.value[\"preco\"])\r\n                var precoFloat = preco.toFixed(2)\r\n                console.log(precoFloat)\r\n                produto.preco =  parseFloat(preco.toFixed(2))\r\n                console.log(produto)\r\n                */\r\n        //var array = [1, 2, 3, 4, 5];\r\n        var sum = 0\r\n        this.compraProdutoCommand.produtos.forEach(element => {\r\n            sum += element.quantidadeComprada * element.precoCusto\r\n        });\r\n\r\n        this.compraProdutoCommand.valorTotal = sum\r\n\r\n        // console.log(sum);\r\n        // console.log(this.compraProdutoCommand.valorTotal)\r\n\r\n        var sum2 = sum.toFixed(2)\r\n\r\n        return `R$ ${sum2}`\r\n    }\r\n\r\n    deletar(product: Produto) {\r\n\r\n        var index = this.compraProdutoCommand.produtos.indexOf(product)\r\n        this.compraProdutoCommand.produtos[index]\r\n        this.compraProdutoCommand.produtos.splice(index, 1);\r\n\r\n    }\r\n\r\n\r\n    private productCommand: ProdutosCommand = new ProdutosCommand();\r\n\r\n    public compraProdutoCommand: CompraProdutoCommand = new CompraProdutoCommand();\r\n\r\n\r\n    openPesquisaResult(): void {\r\n        const dialogRef = this._modal\r\n            .open(VendaPesquisaComponent, {\r\n                height: 'auto',\r\n                width: '700px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                maxWidth: '400vh',\r\n\r\n                data: { produtos: this.produtos },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                // Reset form here\r\n                console.log('afte close ok')\r\n                //this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Ok-ADD\") {\r\n\r\n                //this.produtosCesta.push(data.produto)\r\n                console.log(data.produto)\r\n                this.productCommand = Object.assign({}, data.produto)\r\n                this.productCommand.quantidadeComprada = 1;\r\n                this.compraProdutoCommand.produtos.push(this.productCommand)\r\n\r\n                console.log(this.compraProdutoCommand)\r\n\r\n            }\r\n        });\r\n    }\r\n    parcelasTotais: any\r\n    saveEdit(form: any) {\r\n        console.log(form.value['totalParcelas'])\r\n        console.log(this.compraProdutoCommand)\r\n\r\n        this.compraProdutoCommand.parcelas = this.parcelasTotais\r\n        //this.compraProdutoCommand.cpf_comprador = \r\n        console.log(this.compraProdutoCommand.meioPagamento)\r\n        if (this.compraProdutoCommand.meioPagamento == undefined ||\r\n            this.compraProdutoCommand.meioPagamento == \"\") return\r\n        console.log(this.meioPagamento)\r\n        if (this.compraProdutoCommand.produtos.length == 0) return\r\n\r\n        if (this.compraProdutoCommand.meioPagamento != \"dinherio\") {\r\n            if (form.valid && form.value['totalParcelas'] != 0) {\r\n                console.log()\r\n\r\n            }\r\n        }\r\n\r\n        // this.compraProdutoCommand.parcelas = form.value['totalParcelas']\r\n\r\n        var sendForm = JSON.stringify(this.compraProdutoCommand)\r\n        console.log(sendForm)\r\n\r\n        this._http.post(`${this.baseUrl}/financeiro/produto-venda-unidades/${this.unidadeId}`,\r\n            this.compraProdutoCommand, {\r\n        })\r\n            .subscribe(resp => { },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                })\r\n\r\n        console.log(this.compraProdutoCommand)\r\n\r\n    }\r\n\r\n}","<div style=\"font-size: 1.2em;\">Venda entre Unidades - produtos\r\n\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button (click)=\"fechar()\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<hr>\r\n\r\n\r\n<div>\r\n    <mat-form-field style=\"width: 21%; margin-bottom: 10px; \r\n    transform: scale(0.85);\" appearance=\"outline\">\r\n        <mat-label>Pesquise pelo item</mat-label>\r\n        <input name=\"nome\" #item selected matInput>\r\n    </mat-form-field>\r\n    <span>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"pesquisaItem(item.value)\" style=\"\" mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n        </i>\r\n    </span>\r\n    <span *ngIf=\"showMgs\">* {{msg}}</span>\r\n</div>\r\n\r\n<br>\r\n\r\n\r\n<div *ngIf=\"compraProdutoCommand.produtos.length > 0\" class=\"table-responsive\" style=\"position: relative;\">\r\n\r\n    <form novalidate #form=\"ngForm\" (ngSubmit)=\"saveEdit(form)\">\r\n        <table style=\"margin-bottom: 0px;\" class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"text-align: left;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Produto</th>\r\n                    <th style=\"text-align: center;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Quantidade</th>\r\n                    <th style=\"text-align: center;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Preço</th>\r\n                    <th style=\"text-align: center;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Total</th>\r\n                    <th style=\"width: 10%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\"></th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                <tr *ngFor=\"let product of compraProdutoCommand.produtos\">\r\n                    <td style=\"vertical-align: middle;width: 6%;font-size:1em;font-weight: 400;\r\n                border-top: 0px;\">{{product.nome}}</td>\r\n\r\n\r\n                    <td style=\"vertical-align: middle;text-align: center;width: 6%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">\r\n\r\n                        <span style=\"vertical-align: middle;margin-top: 5px;\">\r\n                            <span style=\"vertical-align: middle;\" mat-icon-button>\r\n                                <mat-icon type=\"button\" (click)=\"add(product)\">\r\n                                    add\r\n                                </mat-icon>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span style=\"margin-right: 5px;margin-left: 5px; vertical-align: middle;width: 6%;font-size:1.4em;font-weight: 400;\r\n            border-top: 0px;\">{{product.quantidadeComprada}}</span>\r\n\r\n                        <span style=\"vertical-align: middle;\">\r\n                            <span style=\"vertical-align: middle;\" mat-icon-button>\r\n                                <mat-icon type=\"button\" (click)=\"remove(product)\">remove</mat-icon>\r\n                            </span>\r\n                        </span>\r\n\r\n                    </td>\r\n\r\n                    <td style=\"vertical-align: middle;text-align: center;width: 6%;font-size:1em;font-weight: 400;\r\n                    border-top: 0px;\">\r\n                        <div><del>{{product.preco | currency:'BRL':true:'1.2-2'}}</del></div>\r\n                        <div>{{product.precoCusto | currency:'BRL':true:'1.2-2'}}</div>\r\n\r\n                    </td>\r\n\r\n                    <td style=\"vertical-align: middle;text-align: center;width: 6%;font-size:1em;font-weight: 400;\r\n                border-top: 0px;\">\r\n                        <span #valorTotal>{{product.precoCusto * product.quantidadeComprada |\r\n                            currency:'BRL':true:'1.2-2'}}</span>\r\n\r\n                    </td>\r\n                    <td style=\"width: 6%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">\r\n                        <span style=\"\">\r\n                            <button style=\"\" mat-icon-button>\r\n                                <mat-icon (click)=\"deletar(product)\">\r\n                                    delete\r\n                                </mat-icon>\r\n                            </button>\r\n                        </span>\r\n                    </td>\r\n\r\n                </tr>\r\n\r\n            </tbody>\r\n\r\n\r\n\r\n        </table>\r\n        <!-- <div>Blusa Invictus xpto + 1 - <span style=\"\">remover</span> R$ 20,00</div> -->\r\n\r\n\r\n\r\n        <mat-form-field style=\"width: 21%;margin-top: 20px; \" appearance=\"outline\">\r\n            <mat-label>Valor total:</mat-label>\r\n            <input disabled name=\"CPF\" matInput [value]=\"valorTotalVenda\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 15%;\">\r\n            <mat-label>Unidade compradora:</mat-label>\r\n            <mat-select [(ngModel)]=\"unidadeId\" selected name=\"unidadeId\" required>\r\n                <mat-option value=\"\"></mat-option>\r\n                <mat-option [value]=\"uni.id\" *ngFor=\"let uni of unidades\">{{uni.sigla}}</mat-option>\r\n\r\n            </mat-select>\r\n        </mat-form-field>\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 15%;\">\r\n        <mat-label>CPF Comprador</mat-label>\r\n        <input [(ngModel)]=\"compraProdutoCommand.cpf_comprador\"\r\n        mask=\"000.000.000-00\"\r\n            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n             \r\n            minlength=\"11\" maxlength=\"14\" selected name=\"templateName\" matInput placeholder=\"digite o CPF\">\r\n       \r\n    </mat-form-field> -->\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"outline\" style=\"width: 15%;\">\r\n            <mat-label>Adicione o pagamento</mat-label>\r\n            <mat-select selected name=\"cargo\" required>\r\n                <mat-option (click)=\"meioPagamentoSelect('')\" value=\"\"></mat-option>\r\n                <mat-option (click)=\"meioPagamentoSelect(meioPag.value)\" *ngFor=\"let meioPag of meioPagamento\"\r\n                    [value]=\"meioPag.value\">{{meioPag.viewValue}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field *ngIf=\"showParcelas\" style=\"width: 8%; margin-bottom: 20px; \r\n            margin-left: 2%;\" appearance=\"standard\">\r\n            <mat-label>Parcelas</mat-label>\r\n            <input [(ngModel)]=\"totalParcelas\" name=\"totalParcelas\" matInput type=\"number\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field *ngIf=\"showParcelas\" appearance=\"outline\" style=\"width: 25%;margin-left: 2%;margin-top: 20px;\">\r\n            <mat-label>Número de parcelas</mat-label>\r\n            <mat-select [(ngModel)]=\"parcelasTotais\" selected name=\"noparcelas\" required>\r\n                <!-- <mat-option ></mat-option> -->\r\n                <mat-option *ngFor=\"let item of parcelas\" [value]=\"item.type\">\r\n                    {{item.value}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n        <mat-label>Observações gerais</mat-label>\r\n        <textarea name=\"observacoes\" matInput></textarea>\r\n    </mat-form-field> -->\r\n        <br>\r\n\r\n        <button type=\"submit\" color=\"primary\" mat-raised-button disabled=\"false\"\r\n            style=\"float:right;margin-bottom: 0px;margin-left: 10px;\">\r\n            Concluir Venda\r\n        </button>\r\n\r\n    </form>\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { SpinnerParams } from \"src/app/_shared/models/spinner.model\";\r\nimport { AddDispoComponent } from \"./AddDisponibilidade/add-dispo.component\";\r\nimport { MatChipInputEvent } from \"@angular/material/chips\";\r\nimport { AddMatComponent } from \"./AddMateria/add-mat.component\";\r\nimport { EditDispoComponent } from \"./EditDisponibilidade/edit-dispo.component\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\n@Component({\r\n    selector: 'profmateriasmodal',\r\n    templateUrl: './prof-materias.component.html',\r\n    styleUrls: ['./prof-materias.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ProfMateriasComponent implements OnInit {\r\n\r\n    hide = true;\r\n\r\n\r\n    SpinnerParam: SpinnerParams = {\r\n        diameter: 30,\r\n        marginleft: 10,\r\n        margintop: 0\r\n    }\r\n    baseUrl = environment.baseUrl;\r\n    mostrarModalPrincipal = true\r\n    public unidades: any[] = new Array<any>()\r\n    public typePacotes: any[] = new Array<any>()\r\n    public profMaterias: any[] = new Array<any>()\r\n    public materias: any[] = new Array<any>()\r\n    public disponibilidades: any[] = new Array<any>()\r\n    public initProgressBar = 'visible'\r\n    public editAndSaveBar = 'hidden'\r\n    public showForm = false\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public disponibilidadeForm: FormGroup\r\n    public materiaForm: FormGroup\r\n    public unidadeForm: FormGroup\r\n\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _helpers: HelpersService,\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog,\r\n        public dialogRef: MatDialogRef<ProfMateriasComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.unidadeForm = _fb.group({\r\n            unidadeId: ['', [Validators.required]],\r\n\r\n            //dias\r\n\r\n        })\r\n        this.disponibilidadeForm = _fb.group({\r\n            //unidadeId: ['', [Validators.required]],\r\n\r\n            //dias\r\n\r\n        })\r\n        this.materiaForm = _fb.group({\r\n            materiaId: ['', [Validators.required]],\r\n\r\n            //dias\r\n\r\n        })\r\n        this.disponibilidadeForm = _fb.group({\r\n            unidadeId: ['', [Validators.required]],\r\n\r\n            //dias\r\n\r\n        })\r\n    }\r\n\r\n    // keywords = new Set(['Domingo', 'Segunda-feira', 'Terça-feira',\r\n    //     'Quarta-feira',\r\n    //     'Quinta-feira',\r\n    //     'Sexta-feira',\r\n    //     'Sábado']);\r\n    //formControl = new FormControl(['angular']);\r\n\r\n    //   addKeywordFromInput(event: MatChipInputEvent) {\r\n    //     if (event.value) {\r\n    //       this.keywords.add(event.value);\r\n    //       event.chipInput!.clear();\r\n    //     }\r\n    //   }\r\n\r\n    //   removeKeyword(keyword: string) {\r\n    //     this.keywords.delete(keyword);\r\n    //   }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        //this.dialogRef.removePanelClass('my-class')\r\n        //this.dialogRef.addPanelClass('my-class')\r\n       // console.log(this.data['prof'])\r\n        this.GetInfos()\r\n\r\n\r\n    }\r\n\r\n    GetInfos() {\r\n\r\n        this._http.get(`${this.baseUrl}/professor/materias/${this.data['prof'].id}`)\r\n            .subscribe(resp => {\r\n                this.unidades = resp['unidades']\r\n                this.typePacotes = resp['typePacotes']\r\n                this.profMaterias = resp['profMaterias']\r\n                this.disponibilidades = resp['disponibilidades']\r\n                this.length = this.profMaterias.length\r\n            },\r\n                (error) => { \r\n                    this.editAndSaveBar = 'hidden'\r\n                    this.showDeleteSpinner = false\r\n                },\r\n                () => {\r\n                   // console.log(this.disponibilidades)\r\n                   this.editAndSaveBar = 'hidden'\r\n                   this.initProgressBar = 'hidden'\r\n                   this.dialogRef.addPanelClass('myprofmateria-class')\r\n                    this.showDeleteSpinner = false\r\n                    this.mostrarModalPrincipal = false\r\n\r\n                    this.disabledDelete = false\r\n                    \r\n                    this.showForm = true\r\n                })\r\n\r\n    }\r\n\r\n    showAddIcon = false\r\n    clearFilter(typeId) {\r\n\r\n        if (typeId == '') {\r\n            this.materias = new Array<any>()\r\n            this.showAddIcon = false\r\n            this.materiaForm.get('materiaId').setValue('')\r\n            return;\r\n        }\r\n        this.materias = new Array<any>()\r\n        //.log(typeId)\r\n        this.materiaForm.get('materiaId').setValue('')\r\n        this._http.get(`${this.baseUrl}/materia-template/filtro/${typeId}`)\r\n            .subscribe(resp => {\r\n                this.materias = resp['materias']\r\n\r\n            },\r\n                (error) => { },\r\n                () => {\r\n\r\n\r\n                    // console.log(this.unidades)\r\n                    // this.mostrarModalPrincipal = false\r\n                    // this.dialogRef.addPanelClass('my-class')\r\n                })\r\n\r\n\r\n    }\r\n\r\n    addMateria(mat) {\r\n        if (mat == '') {\r\n            //this.materias = new Array<any>()\r\n            this.showAddIcon = false\r\n            return;\r\n        }\r\n        this.showAddIcon = true\r\n\r\n\r\n    }\r\n\r\n    adicionar() {\r\n\r\n        var mat = this.profMaterias.find(element => element.pacoteMateriaId == this.materiaForm.get('materiaId').value)\r\n       // console.log(mat)\r\n\r\n        if (mat == undefined) {\r\n            this._http.post(`${this.baseUrl}/professor/materia/${this.data['prof'].id}/${this.materiaForm.get('materiaId').value}`, {})\r\n                .subscribe(resp => {\r\n\r\n                },\r\n                    (error) => { },\r\n                    () => {\r\n                        this.GetProfessorMaterias();\r\n                    })\r\n        }\r\n    }\r\n\r\n    adicionarUnidade() {\r\n      //  console.log()\r\n    }\r\n\r\n\r\n\r\n    removeMateria(profMateriaId) {\r\n        this.showDeleteSpinner = true\r\n        this.editAndSaveBar = 'visible'\r\n        this._http.delete(`${this.baseUrl}/professor/materia/${profMateriaId}`, {})\r\n            .subscribe(resp => {\r\n                //  this.unidades = resp['unidades']\r\n                // this.typePacotes = resp['typePacotes']\r\n            },\r\n                (error) => { \r\n                    this.editAndSaveBar = 'hidden'\r\n                },\r\n                () => {\r\n                    this.GetProfessorMaterias();\r\n                    //console.log(this.unidades)\r\n                    //  this.mostrarModalPrincipal = false\r\n                    // this.dialogRef.addPanelClass('my-class')\r\n                })\r\n\r\n    }\r\n\r\n    GetProfessorMaterias() {\r\n        this._http.get(`${this.baseUrl}/professor/materias-professor/${this.data['prof'].id}`)\r\n            .subscribe(resp => {\r\n                //  this.unidades = resp['unidades']\r\n                // this.typePacotes = resp['typePacotes']\r\n                this.profMaterias = resp['profMaterias']\r\n                this.length = this.profMaterias.length\r\n            },\r\n                (error) => { \r\n                    this.editAndSaveBar = 'hidden'\r\n                    this.showDeleteSpinner = false\r\n                },\r\n                () => {\r\n                    this.editAndSaveBar = 'hidden'\r\n                    this.showDeleteSpinner = false\r\n                    //  console.log(this.unidades)\r\n                    //  this.mostrarModalPrincipal = false\r\n                    //  this.dialogRef.addPanelClass('my-class')\r\n                })\r\n    }\r\n\r\n    openAddDispoModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(AddDispoComponent, {\r\n                minHeight: '400px',\r\n                width: '480px',\r\n                //  panelClass: 'my-class',\r\n                data: { unidades: this.unidades, profId: this.data['prof'].id },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n\r\n                //this.atualizarUnidadesDisponiveis();\r\n                \r\n                this.GetInfos()\r\n                //  this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showDeleteSpinner=false\r\n    get disableDeleteButton(){\r\n\r\n        if(this.showDeleteSpinner) return true\r\n\r\n\r\n        return false\r\n    }\r\n\r\n    opeEditDispoModal(dispo): void {\r\n        const dialogRef = this._modal\r\n            .open(EditDispoComponent, {\r\n                minHeight: '400px',\r\n                width: '480px',\r\n                //  panelClass: 'my-class',\r\n                data: { dispo: dispo, profId: this.data['prof'].id },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === true) {\r\n                this._helpers.openSnackBarSucesso(\"Disponibilidade editada com sucesso\")\r\n                //this.atualizarUnidadesDisponiveis();\r\n                this.GetInfos()\r\n                //  this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === false) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    changePage(event) {\r\n       // console.log(event.pageIndex)\r\n        this.pageIndex = event.pageIndex\r\n    }\r\n\r\n    get profMateriasSlice(): any[] {\r\n        let pageIndex = ((this.pageIndex + 1) - 1) * this.pageSize\r\n        return this.profMaterias.slice(pageIndex, pageIndex + 5);\r\n    }\r\n\r\n    disabledDelete = false\r\n    length = 0\r\n    pageSize = 5\r\n    pageIndex = 0\r\n    openAddMatModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(AddMatComponent, {\r\n                // minHeight: '400px',\r\n                width: '550px',\r\n                //  panelClass: 'my-class',\r\n                data: { profId: this.data['prof'].id, materias: this.profMaterias },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === true) {\r\n                // this.disabledDelete = false\r\n                //this.atualizarUnidadesDisponiveis();\r\n                this.disabledDelete = true\r\n                this.showDeleteSpinner = true\r\n                this.editAndSaveBar = 'visible'\r\n                this.GetInfos()\r\n                //  this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    atualizarUnidadesDisponiveis() {\r\n\r\n        this._http.get(`${this.baseUrl}/professor/unidades-disponibilidades/${this.data['prof'].id}`)\r\n            .subscribe(resp => {\r\n                this.unidades = resp['unidades']\r\n            },\r\n                (error) => { },\r\n                () => {\r\n\r\n                })\r\n    }\r\n\r\n}","<div style=\"font-size: 1.2em;\">Matérias habilitadas\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\"\r\n        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight\r\n    mode=\"query\"></mat-progress-bar>\r\n\r\n<ng-container *ngIf=\"showForm\">\r\n    <hr>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 350px;\">\r\n        <mat-label>Nome</mat-label>\r\n        <input [value]=\"data['prof'].nome\"  disabled selected matInput >\r\n    </mat-form-field>\r\n\r\n    <mat-form-field style=\"width: 350px; margin-left: 15px\" appearance=\"standard\">\r\n        <mat-label>Email</mat-label>\r\n        <input [value]=\"data['prof'].email\" selected matInput disabled >\r\n    </mat-form-field>\r\n\r\n    <br>\r\n   \r\n    <div @rowHighlight>\r\n\r\n        <mat-tab-group class=\"profmaterias\">\r\n            <mat-tab label=\"Matérias\" >\r\n                    <div>\r\n\r\n                  \r\n                    <br>\r\n                    <mat-progress-bar [style.visibility]=\"editAndSaveBar\" @rowHighlight  style=\"margin:0px\"  mode=\"query\"></mat-progress-bar>\r\n                    <div class=\"table-responsive\" style=\"position: relative;height: 350px;\">\r\n\r\n                        <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style=\"width: 2%; \r\n                        text-align:left; \r\n                        vertical-align: middle;\r\n                        border-top: 0px;\"></th>\r\n\r\n\r\n                                    <th style=\"width: 40%;font-size:0.9em;\r\n                        vertical-align: middle; \r\n                        text-align:left;\r\n                         border-top: 0px; font-weight: 400;\">MATÉRIA</th>\r\n\r\n                                    <th style=\"width: 29%;font-size:0.9em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">PACOTE</th>\r\n\r\n                                    <th style=\"width: 29%;font-size:1em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">\r\n                                        <i style=\"float: right;\" #tooltip=\"matTooltip\" matTooltip=\"adicionar matéria\"\r\n                                            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                            <button color=\"primary\" (click)=\"openAddMatModal()\" style=\"\" mat-icon-button>\r\n                                                <mat-icon>add_circle_outline</mat-icon>\r\n                                            </button>\r\n                                        </i>\r\n                                    </th>\r\n\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody  >\r\n                                <tr  @rowHighlight *ngFor=\"let mat of profMateriasSlice;let i = index;\">\r\n                                    <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">\r\n                                        {{(i + 1)+(pageIndex * pageSize)}}\r\n                                    </td>\r\n\r\n                                    <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                                        {{ mat.nome }}\r\n                                    </td>\r\n\r\n                                    <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                                        {{ mat.nomePacote }}\r\n                                    </td>\r\n\r\n                                    <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                                     \r\n                                        <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"excluir\"\r\n                                            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                            <button color=\"primary\" (click)=\"removeMateria(mat.id)\" type=\"button\" \r\n                                            style=\"position: relative;\" [disabled]=\"disableDeleteButton\" mat-icon-button>\r\n                                                <mat-icon>delete_forever</mat-icon>                                                \r\n                                                \r\n                                            </button>\r\n                                        </i>\r\n\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <mat-paginator \r\n                    *ngIf=\"profMaterias.length > 5\"\r\n                    style=\"\r\n                       \r\n                        bottom: 0px;\r\n                        right: 0px;\" [length]=\"length\" [pageSize]=\"pageSize\" hidePageSize=\"true\"\r\n                        (page)=\"pageEvent = changePage($event)\">\r\n                    </mat-paginator>\r\n                </div>\r\n            </mat-tab>\r\n\r\n            <mat-tab label=\"Disponibilidades\">\r\n                <div >\r\n                    <br>\r\n                    <i #tooltip=\"matTooltip\" matTooltip=\"adicionar\" matTooltipPosition=\"above\"\r\n                        matTooltipHideDelay=\"100\">\r\n                        <button [disabled]=\"unidades.length == 0\" (click)=\"openAddDispoModal()\" style=\"position:relative\"\r\n                            mat-icon-button>\r\n                            <mat-icon>add</mat-icon>\r\n                        </button>\r\n                    </i>\r\n                   \r\n\r\n                    <ng-container *ngIf=\"disponibilidades.length > 0\">\r\n                        \r\n                        <br>\r\n                        <mat-form-field *ngFor=\"let item of disponibilidades\"\r\n                            style=\"width: 100%;\" appearance=\"fill\">\r\n                            <mat-label>{{ item.descricao }}</mat-label>\r\n                            <mat-chip-list disalbed multiple [formControl]=\"formControl\">\r\n                                <mat-chip *ngIf=\"item.domingo\">Domingo</mat-chip>\r\n                                <mat-chip *ngIf=\"item.segunda\">Segunda-feira</mat-chip>\r\n                                <mat-chip *ngIf=\"item.terca\">Terça-feira</mat-chip>\r\n                                <mat-chip *ngIf=\"item.quarta\">Quarta-feira</mat-chip>\r\n                                <mat-chip *ngIf=\"item.quinta\">Quinta-feira</mat-chip>\r\n                                <mat-chip *ngIf=\"item.sexta\">Sexta-feira</mat-chip>\r\n                                <mat-chip *ngIf=\"item.sabado\">Sábado</mat-chip>\r\n                            </mat-chip-list>\r\n                            <button mat-icon-button matSuffix #tooltip=\"matTooltip\" matTooltip=\"editar\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\" (click)=\"opeEditDispoModal(item)\">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </button>\r\n                        </mat-form-field>\r\n\r\n                    </ng-container>\r\n                    <br>\r\n\r\n                </div>\r\n\r\n            </mat-tab>\r\n         \r\n        </mat-tab-group>\r\n\r\n\r\n    </div>\r\n\r\n</ng-container>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TokenInfos } from '../_shared/models/token.model';\r\n\r\ndeclare interface RouteInfo {\r\n    path: string;\r\n    title: string;\r\n    class: string;\r\n    typeIcon: string;\r\n}\r\n\r\nexport const ROUTES: RouteInfo[] = [\r\n     { path: '/newmat/novamatricula', title: 'Matrícula', class: '', typeIcon: 'manage_accounts' }\r\n    // { path: '/adm/calendario', title: 'Calendário', class: '', typeIcon: 'calendar_today' },\r\n    // { path: '/adm/admcursos', title: 'Turmas', class: '', typeIcon: 'house' },\r\n    // { path: '/adm/colaboradores', title: 'Colaboradores', class: '', typeIcon: 'engineering' },\r\n    // { path: '/adm/produtos', title: 'Produtos', class: '', typeIcon: 'fact_check' },\r\n    // { path: '/adm/unidades', title: 'Unidade', class: '', typeIcon: 'home' },\r\n    // { path: '/adm/config', title: 'Configurações', class: '', typeIcon: 'settings' },\r\n    // { path: '/adm/teste', title: 'TESTE', class: '', typeIcon: 'fact_check' },\r\n]\r\n\r\n@Component({\r\n    selector: 'newmatricula-app',\r\n    templateUrl: './newmatricula.component.html',\r\n    styleUrls: ['./newmatricula.component.scss']\r\n})\r\n\r\nexport class NewMatriculaComponent implements OnInit {\r\n    menu: any;\r\n    data: string = \"\";\r\n    private baseUrl = environment.baseUrl;\r\n    mensagem: any;\r\n    public htmlContent: any;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    \r\n    constructor(\r\n        //private jwtHelper: JwtHelperService, \r\n        private _router: Router,\r\n        private _modal: MatDialog,\r\n        private _http: HttpClient) {\r\n        const navigation = this._router.getCurrentNavigation();\r\n       // console.log(navigation.extras['state'])\r\n        if (navigation.extras['state'] != undefined) {\r\n            const state = navigation.extras.state as { data: string };\r\n            this.data = state.data;\r\n        }\r\n\r\n    }\r\n    ngOnInit() {\r\n        // this.isUserAuthenticated();\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        //console.log(this.data != \"\")        \r\n        this.menu = ROUTES.filter(menu => menu);\r\n    }\r\n\r\n    \r\n\r\n    openMessageModal(): void {\r\n        // const dialogRef = this._modal\r\n        //     .open(MessageModalComponent, {\r\n        //         height: 'auto',\r\n        //         width: '800px',\r\n\r\n        //         data: { message: this.htmlContent },\r\n        //         hasBackdrop: true,\r\n        //         disableClose: true\r\n        //     });\r\n\r\n\r\n        // dialogRef.afterClosed().subscribe((data) => {\r\n        //     if (data.clicked === \"Ok\") {\r\n        //         // Reset form here\r\n        //         console.log('afte close ok')\r\n        //         //this.getColaboradores(1, this.pageSize);\r\n        //     } else if (data.clicked === \"Cancel\") {\r\n        //         // Do nothing. Cancel any events that navigate away from the\r\n        //         // component.\r\n        //     }\r\n        // });\r\n    }\r\n   \r\n\r\n    logOut() {\r\n        localStorage.removeItem(\"jwt\");\r\n        this._router.navigate([\"/login\"]);\r\n\r\n    }\r\n\r\n}","newMat\r\n<ng-container>\r\n\r\n\r\n    <mat-sidenav-container class=\"example-container\" style=\"\r\n    background-color: rgba(250, 245, 245, 0); \">\r\n        <mat-sidenav style=\"\" #sidenav mode=\"side\" opened class=\"example-sidenav mat-elevation-z8\">\r\n            <div class=\"d-flex flex-column text-white \" style=\"position: absolute;\r\n            width: auto;\r\n            top: 0px;\r\n            bottom: 0px;\r\n            left: 0;\r\n            background-color: rgb(109, 218, 109);\r\n            right: 0;\">\r\n                <a class=\"d-flex align-items-center  mb-md-0 me-md-auto text-white text-decoration-none\">\r\n                    <!-- <svg class=\"bi\" width=\"40\" height=\"32\"><use xlink:href=\"#bootstrap\"></use></svg> -->\r\n                    <span style=\"width: 190px;\r\n                    text-align: center;margin-top: 15px;font-size: 1em;\">\r\n                        MATRÍCULA<br>Unidade {{tokenInfo.Unidade}}\r\n                    </span>\r\n                </a>\r\n                <hr>\r\n                <ul class=\"nav nav-pills flex-column mb-auto\">\r\n\r\n                    <li *ngFor=\"let item of menu\" routerLinkActive=\"active\" class=\"nav-item {{item.class}}\"\r\n                        style=\"overflow: auto;\">\r\n\r\n                        <a [routerLink]=\"[item.path]\" class=\"nav-link text-white\">\r\n                            <mat-icon style=\"top: -3px;\r\n                                        position:relative;\r\n                                        overflow: auto;\r\n                                        color:rgb(245, 243, 243); \r\n                                        vertical-align: middle;\r\n                                        \">\r\n                                {{item.typeIcon}}\r\n                            </mat-icon>\r\n                            {{item.title}}\r\n                        </a>\r\n                    </li>\r\n\r\n\r\n\r\n                    <!-- <li class=\"nav-item\">\r\n\r\n                        <a routerLink=\"/adm/usuarios\" class=\"nav-link active\">\r\n                            \r\n                            <mat-icon style=\"top: -3px;\r\n                                        position:relative; \r\n                                        color:rgb(245, 243, 243); \r\n                                        vertical-align: middle;\r\n                                        margin-left: 5px;\">\r\n                                        manage_accounts\r\n                            </mat-icon>\r\n                            Usuários\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a routerLink=\"/adm/unidades\" class=\"nav-link text-white\">\r\n                            \r\n                            Unidades\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a routerLink=\"/adm/colaboradores\" class=\"nav-link text-white\">\r\n                            <svg class=\"bi me-2\" width=\"16\" height=\"16\">\r\n                                <use xlink:href=\"#people-circle\"></use>\r\n                            </svg>\r\n                            Colaboradores\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a routerLink=\"/adm/produtos\" class=\"nav-link text-white\">\r\n                            <svg class=\"bi me-2\" width=\"16\" height=\"16\">\r\n                                <use xlink:href=\"#people-circle\"></use>\r\n                            </svg>\r\n                            Produtos\r\n                        </a>\r\n                    </li> -->\r\n                </ul>\r\n                <!-- <hr>\r\n                <div class=\"dropdown\">\r\n                    <a href=\"#\" class=\"d-flex align-items-center text-white text-decoration-none dropdown-toggle\"\r\n                        id=\"dropdownUser1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <img src=\"https://github.com/mdo.png\" alt=\"mdo\" width=\"32\" height=\"32\"\r\n                            class=\"rounded-circle me-2\">\r\n                        <strong>conta</strong>\r\n                    </a>\r\n                    <ul id=\"menu\" class=\"dropdown-menu dropdown-menu text-small shadow\" aria-labelledby=\"dropdownUser1\"\r\n                        style=\"background-color: rgb(73, 168, 73);\">\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">New project...</a></li>\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">Settings</a></li>\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">Profile</a></li>\r\n                        <li>\r\n                            <hr style=\"color: white;\" class=\"dropdown-divider\">\r\n                        </li>\r\n                        <li><a type=\"button\"\r\n                            (click)=\"logOut()\"\r\n                            style=\"color: white;\" class=\"dropdown-item\">Sign out</a></li>\r\n                    </ul>\r\n                </div> -->\r\n            </div>\r\n            <!-- <div class=\"sidenav\">\r\n\r\n              \r\n                <a routerLink=\"/adm1/child1\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">manage_accounts</mat-icon>\r\n                    Usuários\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/unidades\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">apartment</mat-icon>\r\n                    Unidades\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/professores\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">person</mat-icon>\r\n                    professores\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/produtos\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">production_quantity_limits</mat-icon>\r\n                    produtos\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/cursos\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">assignment</mat-icon>\r\n                    cursos\r\n                </a>\r\n\r\n            </div> -->\r\n\r\n        </mat-sidenav>\r\n        <router-outlet></router-outlet>\r\n\r\n    </mat-sidenav-container>\r\n\r\n\r\n</ng-container>\r\n\r\n<!-- \r\n\r\n<div class=\"row mainpage\">\r\n    <div class=\" sidenavBar mat-elevation-z8\"\r\n    style=\"border-radius: 10.5px;\r\n    box-shadow: 0 0 8px 5px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\">\r\n        <div class=\"sidenav\">\r\n            <a routerLink=\"/adm1/child1\" >Usuários</a>\r\n            <a routerLink=\"/adm1/unidades\">Unidades</a>\r\n            <a routerLink=\"/adm1/professores\">professores</a>\r\n            <a routerLink=\"/adm1/produtos\">produtos</a>\r\n            <a routerLink=\"/adm1/cursos\">cursos</a>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\" mainBar\" >\r\n        \r\n        \r\n<router-outlet></router-outlet>\r\n   \r\n\r\n\r\n</div> -->\r\n<!-- <form *ngIf=\"!isUserAuthenticated()\" class=\"form-signin\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\r\n    <div class=\"container-fluid\">\r\n        <h2 class=\"form-signin-heading\">Login</h2>\r\n        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">Invalid username or password.</div>\r\n        <br />\r\n        <label for=\"email\" class=\"sr-only\">Email address</label>\r\n        <input type=\"email\" id=\"username\" name=\"email\" ngModel class=\"form-control\" placeholder=\"User Name\" required\r\n            autofocus>\r\n        <br />\r\n        <label for=\"senha\" class=\"sr-only\">Password</label>\r\n        <input type=\"password\" id=\"password\" name=\"senha\" ngModel class=\"form-control\" placeholder=\"Password\"\r\n            required>\r\n        <br />\r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n    </div>\r\n</form> -->","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { PedagogicoService } from \"src/app/Pedagogico/service/pedagogico.service\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n@Component({\r\n    selector: 'obsturmamodaldialog',\r\n    templateUrl: './obsturmamodal-edit.component.html',\r\n    styleUrls:['./obsturmamodal-edit.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\nexport class ObservacoesTurmaEditModal implements OnInit{\r\n\r\n    //private _baseUrl = environment.baseUrl\r\n    public initProgressBar = 'visible'\r\n    public showContent = false\r\n    public aula: any\r\n    constructor(\r\n        //private _http: HttpClient,\r\n        private _pedagService: PedagogicoService,\r\n        public dialogRef: MatDialogRef<ObservacoesTurmaEditModal>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n        ngOnInit() {\r\n            //this.dialogRef.addPanelClass('auladetalhe-class')\r\n            this.GetAulaInfos()\r\n            //console.log(this.data['caled'])\r\n        }\r\n\r\n        private GetAulaInfos(){\r\n\r\n            this._pedagService.GetAulaViewModel(this.data['caled'].id)\r\n                .subscribe(\r\n                    sucesso => { this.GetAulaInfosSucesso(sucesso)},\r\n                    falha => { this.GetAulaInfosFalha(falha)}\r\n                )\r\n        }\r\n\r\n        private GetAulaInfosSucesso(resp){\r\n            this.aula = resp['aula']\r\n            //console.log(this.aula)\r\n            this.dialogRef.addPanelClass('auladetalheedit-class')\r\n            this.initProgressBar = 'hidden'\r\n            this.showContent = true\r\n        }\r\n\r\n        private GetAulaInfosFalha(error){\r\n\r\n        }\r\n}\r\n\r\n","<div style=\"font-size: 1.2em;\">Observação (Editar)\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" style=\"margin-top: 20px;\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n\r\n\r\n<div *ngIf=\"showContent\">\r\n    <hr>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 50%;\">\r\n        <mat-label>Turma</mat-label>\r\n        <input selected matInput disabled value=\"{{aula.descricao}} - {{aula.identificador}}\"\r\n            oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 10px;\">\r\n        <mat-label>Sala</mat-label>\r\n        <input selected matInput disabled value=\"{{aula.titulo}}\"\r\n            oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 70%;\">\r\n        <mat-label>Professor</mat-label>\r\n        <input selected matInput [value]=\"aula.nome || 'Sem professor'\" disabled oninput=\"this.value = this.value.toLowerCase()\"\r\n            placeholder=\"Email\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 70%;\">\r\n        <mat-label>Matéria</mat-label>\r\n        <input selected value=\"Ética\" disabled [value]=\"aula.materiaDescricao\" matInput\r\n            oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n        <mat-label>Dia/Horário Aula</mat-label>\r\n        <input selected disabled\r\n            value=\"{{aula.diaAula | date: 'dd/MM/yyyy'}} {{aula.horaInicial}} às {{aula.horaFinal}}\" matInput\r\n            oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n    </mat-form-field>\r\n\r\n    <ng-container *ngIf=\"aula.aulaIniciada;else naoIniciada\">\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n            <mat-label>Aula iniciada em</mat-label>\r\n            <input disabled selected value=\"{{aula.dateAulaIniciada | date:'d/MM/yyyy h:mm'}}\" matInput \r\n                placeholder=\"Email\">\r\n        </mat-form-field>\r\n    </ng-container>\r\n    <ng-template #naoIniciada>\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n            <mat-label>Aula iniciada em</mat-label>\r\n            <input disabled selected value=\"Aula não iniciada\" matInput \r\n                placeholder=\"Email\">\r\n        </mat-form-field>\r\n    </ng-template>\r\n\r\n\r\n\r\n    <ng-container *ngIf=\"aula.aulaConcluida;else naoConcluida\">\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n            <mat-label>Aula concluída em</mat-label>\r\n            <input disabled selected matInput value=\"{{aula.dateAulaConcluida | date:'d/MM/yyyy h:mm'}}\" \r\n                placeholder=\"Email\">\r\n        </mat-form-field>\r\n    </ng-container>\r\n    <ng-template #naoConcluida>\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n            <mat-label>Aula iniciada em</mat-label>\r\n            <input disabled selected value=\"Aula não concluída\" matInput \r\n                placeholder=\"Email\">\r\n        </mat-form-field>\r\n    </ng-template>\r\n\r\n\r\n    <div style=\"position: relative;\">\r\n        <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n            <mat-label>Nota da aula</mat-label>\r\n            <textarea disabled placeholder=\"\" [value]=\"aula.observacoes\" matInput></textarea>\r\n        </mat-form-field>\r\n\r\n    </div>\r\n\r\n    <!-- <mat-progress-bar @rowHighlight style=\"margin-top:10px\" mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n  \r\n        <button style=\"float: right;margin-top: 10px;\" mat-raised-button type=\"submit\" color=\"primary\">\r\n            Salvar\r\n        </button>\r\n  -->\r\n\r\n</div>","import { Materias } from \"./Turma.model\";\r\n\r\nexport class Colaborador {\r\n\r\n    constructor(\r\n        public id?:string,\r\n        public nome: string = null,\r\n        public email?: string,\r\n        public cpf?: string,\r\n        public celular?: string,\r\n        public cargo?: string,\r\n        public unidade?: string,\r\n        public perfil?: string,\r\n        public perfilAtivo?: boolean,\r\n        public ativo?: boolean,\r\n        public cep?: string,\r\n        public logradouro: string = null,\r\n        public complemento?: string,\r\n        public numero?: string,\r\n        public bairro: string = null,\r\n        public cidade: string= null,\r\n        public uf: string= null\r\n        ) { }\r\n\r\n}\r\n\r\n\r\nexport class Professor {\r\n\r\n    constructor(\r\n        public id?:string,\r\n        public nome?: string,\r\n        public email?: string,\r\n        public materias?: Materias[]\r\n        ) { }\r\n\r\n}","// Aluno-docs\r\n\r\n\r\n// AlunosAcesso\r\n\r\n\r\n// Analise-docs\r\n\r\n\r\n// estagios\r\n\r\nexport function CreateEstagioModalConfig(data?) {\r\n    return {        \r\n        height: '520px',\r\n        width: '700px',        \r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function EditEstagioModalConfig(estagio) {\r\n    return {               \r\n        width: '700px',  \r\n        data: { estagio: estagio },        \r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\n// estagiodocs\r\n\r\n\r\n// matricula\r\n\r\n\r\n// pedag-alunos\r\n\r\n\r\n//pedag-models\r\n\r\n\r\n// relatorios\r\n\r\n\r\n// reposicoes\r\n\r\n\r\n// transferencia\r\n\r\n\r\n// turmapedag\r\n\r\n\r\n//turmaInfos\r\n\r\n\r\n\r\nexport function InfoFinancComponentModal(data?:any){\r\n    return {      \r\n        width: '1050px',\r\n        data: { aluno: data },        \r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\n\r\nexport function OpenInfoComponentModal(aluno?){\r\n    return {      \r\n        width: '1000px',\r\n        data: { aluno: aluno },        \r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function ConfirmMatriculaModalConfig(matriculaId?){\r\n    return {  \r\n        height: '180px',    \r\n        width: '500px',\r\n        data: { matriculaId: matriculaId },        \r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function DetalheAcessoModalConfig(aluno){\r\n    return {      \r\n        width: '700px',\r\n        data: { aluno: aluno },        \r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\n// TurmasInfos\r\n\r\nexport function ObsTurmaModalConfig(caled){\r\n    return {      \r\n        width: '700px',\r\n        data: { caled: caled },        \r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function AulaEditModalConfig(caled){\r\n    return {      \r\n        width: '700px',\r\n        data: { caled: caled },        \r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function OpenCertificadoComponentModal(matricula?){\r\n    return {      \r\n        width: '500px',\r\n        data: { matricula: matricula },        \r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\n\r\nexport function OpenCalendarioPresencaomponentModal(calendario?){\r\n    return {      \r\n        width: '1030px',\r\n        data: { calendario: calendario },        \r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\n// Diario de Claase\r\n\r\nexport function OpenPresencaComponentModal(turma?){\r\n    return {      \r\n        width: '1030px',\r\n        data: { turma: turma },        \r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\n\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { NavigationExtras, Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { SpinnerParams } from \"src/app/_shared/models/spinner.model\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { AuthService } from \"src/app/_Auth/auth.service\";\r\n\r\n@Component({\r\n    selector: 'selectunidade-modal',\r\n    templateUrl: './selectunidade.component.html',\r\n    styleUrls: ['./selectunidade.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class SelectUnidadeComponent implements OnInit {\r\n\r\n    mostrarModalPrincipal = true\r\n    public unidades: any[] = new Array<any>()\r\n    public disableDropDown = false\r\n    public initProgressBar = 'hidden'\r\n    //baseUrl = environment.baseUrl;\r\n   // public cepReturn: CepReturn = new CepReturn();\r\n    public colaboradorForm: FormGroup;\r\n   // private jwtHelper = new JwtHelperService();\r\n   // public tokenInfo: TokenInfos = new TokenInfos();\r\n    //public validadeEmailMsg = false\r\n   // public validadeCPFMsg = false\r\n    //public disabledSpinner = false\r\n   // showForm = false\r\n   // cargos: any[] = new Array<any>()\r\n   // mensagem = \"\";\r\n   // showMensagem = false\r\n   // msgErros: any\r\n\r\n    constructor(\r\n        //private _snackBar: MatSnackBar,\r\n       // private _helper: HelpersService,\r\n       public router: Router,\r\n        private _fb: FormBuilder,\r\n        private authService: AuthService,\r\n        //private http: HttpClient,\r\n        public dialogRef: MatDialogRef<SelectUnidadeComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        // this.colaboradorForm = _fb.group({\r\n        \r\n        // })\r\n    }\r\n\r\n   \r\n\r\n    ngOnInit() {\r\n       \r\n        this.unidades = this.data['unidades']\r\n    }\r\n\r\n    unidadeSelected(id){\r\n        \r\n        this.disableDropDown = true\r\n        this.initProgressBar = 'visible'\r\n\r\n\r\n        this.login(id)\r\n\r\n      //  this.dialogRef.close({ clicked: true, unidadeId: id });\r\n    }\r\n\r\n    login(unidadeId) {\r\n       // console.log(this.authForm.value)\r\n        //console.log(unidadeId)\r\n        \r\n    \r\n        //if (this.authForm.valid) {\r\n          this.authService.login(this.data['form'], unidadeId)\r\n            .subscribe(\r\n              sucesso => { this.loginSucesso(sucesso) },\r\n              falha => { this.loginError(falha) });\r\n        //}\r\n      }\r\n\r\n      loginSucesso(resposta){\r\n        const navigationExtras: NavigationExtras = { state: { data: 'From Login' } };\r\n        this.router.navigate(['/adm'], navigationExtras);\r\n        this.dialogRef.close();\r\n      }\r\n\r\n      loginError(erro){\r\n        this.dialogRef.close();\r\n      }\r\n\r\n    \r\n\r\n\r\n}","<div style=\"font-size: 1em;\">\r\n\r\n    <span>\r\n        Selecione a unidade que deseja acessar:\r\n    </span>\r\n\r\n    <hr>\r\n\r\n\r\n    <mat-form-field appearance=\"outline\" style=\"width: 100%; font-size: 0.9em;\">\r\n        <mat-label>Unidade</mat-label>\r\n        <mat-select [disabled]=\"disableDropDown\" selected required>\r\n            <mat-option (click)=\"unidadeSelected(uni.unidadeId)\" *ngFor=\"let uni of unidades\" [value]=\"uni.sigla\">\r\n            {{ uni.sigla }} - {{ uni.value }}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n</div>","import { DEFAULT_CURRENCY_CODE, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//import { CustomersComponent } from './customers/customers.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CommonModule, CurrencyPipe, DatePipe } from '@angular/common';\r\n//import { HomeComponent } from './home.component';\r\nimport { SharedModule } from '../_shared/shared.module';\r\n\r\nimport { MaterialModule } from '../_shared/material/material.module';\r\nimport { AlunoComponent } from './aluno.component';\r\nimport { AlunoEstagioComponent } from './alunoestagios/alunoest.component';\r\nimport { InscricaoEstComponent } from './alunoestagios/inscestagio/inscricaoest.component';\r\nimport { AlunoDocsComponent } from './alunodocs/alunodocs.component';\r\n\r\n\r\nexport function tokenGetter() {\r\n    return localStorage.getItem(\"jwt\");\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AlunoComponent,\r\n        AlunoEstagioComponent,\r\n        InscricaoEstComponent,\r\n        AlunoDocsComponent\r\n           ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,       \r\n        SharedModule,\r\n        MaterialModule\r\n        \r\n    ],\r\n    //providers: [AuthGuard],\r\n    providers: [CurrencyPipe, DatePipe,{provide: DEFAULT_CURRENCY_CODE, useValue: 'BRL'}],    \r\n    exports: [\r\n        AlunoComponent,\r\n        AlunoEstagioComponent        \r\n    ],\r\n    entryComponents: [  \r\n        InscricaoEstComponent,\r\n        AlunoDocsComponent\r\n    ]\r\n})\r\nexport class AlunoModule { }\r\n\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { Debito, InfoFinanceiras } from \"src/app/_shared/models/InfoFinanceiras.model\";\r\nimport { EditFinancComponent } from \"./EditFinanc/edit-financ.component\";\r\nimport { ReceberComponent } from \"./Receber/receber.component\";\r\nimport { ReceberComponentModal } from \"../../models/financ-modal.config\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\n@Component({\r\n    selector: 'infosFinancmodal',\r\n    templateUrl: './infofinanc.component.html',\r\n    styleUrls: ['./infofinanc.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class InfoFinancComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    tabs = ['Financeiro', 'Responsável Financeiro', 'Responsável (menor)'\r\n        , 'Financeiro', 'Documentação'];\r\n\r\n    public showAluno: boolean = false\r\n    public showRespFinanc: boolean = false\r\n    public showRespMenor: boolean = false\r\n    public nome: string = ''\r\n    public aluno: any;// = new any Aluno = new Aluno();\r\n    public debitos: any[] = new Array<any>();// Debito[] = new Array<Debito>();\r\n    public turma: any;\r\n    public initialSpinner = 'visible'\r\npublic showcontent = false\r\n    public originalAluno: any\r\n    public originalRespFin: any\r\n    public originalRespMenor: any\r\n\r\n    private respFinId: number = 0;\r\n    private respMenorId: number = 0;\r\n\r\n    // public alunoForm: FormGroup;\r\n    // public respFinancForm: FormGroup;\r\n    // public respMenorForm: FormGroup;\r\n\r\n    constructor(\r\n        private _helper: HelpersService,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog,\r\n        // private _service: PedagService,\r\n        public dialogRef: MatDialogRef<InfoFinancComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.nome = this.data['aluno'].nome\r\n       // console.log(this.data['aluno'])\r\n        this.aluno = Object.assign({}, this.data['aluno'])\r\n        this.GetInfoFinancAlunos(this.data['aluno'].matriculaId)\r\n    }\r\n\r\n    private GetInfoFinancAlunos(matriculaId) {\r\n        this.initialSpinner = 'visible'\r\n        this._http.get(`${this.baseUrl}/financeiro/debitos/${matriculaId}`)\r\n            .subscribe(resp => {\r\n                this.debitos = Object.assign([], resp['debitos']);\r\n                this.turma = Object.assign({}, resp['turma']);\r\n                //console.log(this.debitos)\r\n            },\r\n                (error) => { \r\n                    this._helper.openSnackBarErrorDefault()\r\n                    this.showcontent = false\r\n                    this.initialSpinner = 'hidden'\r\n                    //console.log(error)\r\n                 },\r\n                () => {\r\n                    this.dialogRef.addPanelClass('infofinanc-class')\r\n                    this.showcontent = true\r\n                    this.initialSpinner = 'hidden'\r\n                  //  console.log(this.debitos);\r\n                })\r\n    }\r\n\r\n    public boletoUrl = \"\"\r\n\r\n    getBoleto(debs: any) {\r\n\r\n\r\n        window.open(debs.linkBoleto);\r\n\r\n\r\n        // this._http.get(`${this.baseUrl}/financeiro/aluno-debitos/aluno-getboletomoq/${debs.boletoId}`)\r\n        // .subscribe(resp => {\r\n        //     console.log(resp['boletoUrl'])\r\n        //     this.boletoUrl = resp['boletoUrl']\r\n        // },\r\n        // (error)=> { console.log(error)},\r\n        // () => {\r\n\r\n        //      window.open(this.boletoUrl);\r\n        // })\r\n\r\n    }\r\n\r\n    sendByEmail(debs) {\r\n\r\n    }\r\n\r\n    openEdit(debs): void {\r\n        const dialogRef = this._modal\r\n            .open(EditFinancComponent, {\r\n                height: 'auto',\r\n                width: '1000px',\r\n                //autoFocus: false,\r\n                //maxHeight: '90vh',\r\n               // maxWidth: '115vh',\r\n\r\n                data: { debito: debs, aluno: this.data['aluno'], turma: this.turma },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe(data => {\r\n           // console.log(data)\r\n            if (data.clicked === \"PAGO\") {\r\n               // this.GetInfoFinancAlunos(this.data['aluno'].id)\r\n                //this.openSnackBar()\r\n              //  console.log('afte close ok')\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    receber(debs): void {\r\n        const dialogRef = this._modal\r\n            .open(ReceberComponent, ReceberComponentModal(debs, this.aluno));\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n\r\n            if(data.clicked == true){\r\n                this.GetInfoFinancAlunos(this.data['aluno'].matriculaId)\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Informações\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initialSpinner\" @rowHighlight mode=\"query\"></mat-progress-bar>\r\n\r\n\r\n<ng-container *ngIf=\"showcontent\">\r\n\r\n    <hr>\r\n\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n        <mat-label>Aluno</mat-label>\r\n        <input [value]=\"aluno.nome\" selected disabled required name=\"nome\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 12%; margin-left: 5%; \">\r\n        <mat-label>Nº matrícula</mat-label>\r\n        <input [value]=\"aluno.numeroMatricula\" selected disabled required name=\"nome\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n    <br>\r\n    <!-- <div style=\"color:red; margin-bottom: 10px; font-size: 0.8em; font-style: italic;\">* O aluno não se encontra matriculado\r\n    em nenhuma\r\n    turma.</div> -->\r\n\r\n\r\n\r\n    <mat-tab-group mat-align-tabs=\"start\">\r\n\r\n        <!--                  CADASTRO            -->\r\n\r\n\r\n\r\n\r\n        <mat-tab [label]=\"tabs[0]\">\r\n\r\n\r\n            <div class=\"table-responsive\" *ngIf=\"debitos.length > 0\">\r\n                <table color=\"primary\" class=\"table\">\r\n                    <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n                    <thead style=\"z-index: 9;\r\n                top: 0;\r\n                position: sticky;\r\n                background-color: aliceblue;\">\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n\r\n                            <!-- <th style=\"width: 8%;font-size:0.8em;\r\n                    vertical-align: middle; \r\n                    text-align:left;\r\n                     border-top: 0px; font-weight: 400;\">Compet.</th> -->\r\n\r\n                            <th style=\"width: 22%;font-size:0.8em;\r\n                    vertical-align: middle;\r\n                    text-align:left;\r\n                    border-top: 0px; font-weight: 400;\">Curso/Turma</th>\r\n\r\n                            <th style=\"width: 10%;font-size:0.8em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Vencimento</th>\r\n\r\n                            <th style=\"width: 12%;font-size:0.8em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">Val. Título</th>\r\n\r\n                            <th style=\"width: 10%;font-size:0.8em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">Data Pagto.</th>\r\n\r\n                            <th style=\"width: 12%;font-size:0.8em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">Val. Pago</th>\r\n\r\n                            <th style=\"width: 24%;font-size:0.8em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">\r\n                                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"adicionar parcela\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button disabled mat-icon-button>\r\n                                        <mat-icon>add</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n\r\n                            </th>\r\n                            <!--<th style=\"width: 12%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Matriculados</th>\r\n    \r\n                    <th style=\"width: 13%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Status</th> -->\r\n\r\n                            <!-- <th style=\"width: 34%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">\r\n    \r\n                    </th> -->\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let debs of debitos;let i = index;\">\r\n                            <td style=\"font-size:0.8em;font-weight: 400;text-align:center;vertical-align: middle;\">\r\n                                {{ i+1 }}\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.8em;font-weight: 400;text-align:left;vertical-align: middle;\">\r\n                                {{turma.descricao}}<br>\r\n                                {{turma.identificador}}\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                                <span [style.color]=\"debs.statusBoleto == 'Vencido' ? 'red':'black'\">{{debs.vencimento |\r\n                                    date:'dd/MM/y' }}</span> <br>\r\n                                <span *ngIf=\"debs.statusBoleto == 'Vencido'\"\r\n                                    style=\"font-size: 0.7em;color: red;\">Vencido</span>\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                                {{debs.valor | currency:'BRL':'R$ ' }}\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.8em;font-weight: 400;;text-align: center;vertical-align: middle;\">\r\n                                <ng-container *ngIf=\"debs.statusBoleto == 'Pago';else semData\">\r\n                                    {{debs.dataPagamento | date:'dd/MM/y' }}\r\n                                </ng-container>\r\n                                <ng-template #semData>\r\n                                    -\r\n                                </ng-template>\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                                <ng-container *ngIf=\"debs.valorPago != 0;else semValorPago\">\r\n                                    {{ debs.valorPago | currency:'BRL':'R$ ' }}\r\n                                </ng-container>\r\n                                <ng-template #semValorPago>\r\n                                    -\r\n                                </ng-template>\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n\r\n                                <ng-container *ngIf=\"debs.statusBoleto == 'Pago'\">\r\n\r\n                                    <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"ver\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openEdit(debs)\" style=\"\" mat-icon-button>\r\n                                            <mat-icon style=\"font-size: 1.2em;\">search</mat-icon>\r\n                                        </button>\r\n                                    </i>                                  \r\n\r\n                                </ng-container>\r\n\r\n                                <ng-container *ngIf=\"debs.statusBoleto == 'Vencido'\">\r\n\r\n                                    <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"ver\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openEdit(debs)\" style=\"\" mat-icon-button>\r\n                                            <mat-icon style=\"font-size: 1.2em;\">search</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i style=\"margin-right: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"receber\"\r\n                                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"receber(debs)\" mat-icon-button>\r\n                                            <mat-icon style=\"font-size: 1.2em;\">paid</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                </ng-container>\r\n\r\n                                <ng-container *ngIf=\"debs.statusBoleto == 'Em aberto'\">\r\n\r\n                                    <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"ver\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openEdit(debs)\" style=\"\" mat-icon-button>\r\n                                            <mat-icon style=\"font-size: 1.2em;\">search</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i style=\"margin-right: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"enviar por email\"\r\n                                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"sendByEmail(debs)\" disabled mat-icon-button>\r\n                                            <mat-icon style=\"font-size: 1.2em;\">send</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i style=\"margin-right: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"imprimir boleto\"\r\n                                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"getBoleto(debs)\" mat-icon-button>\r\n                                            <mat-icon style=\"font-size: 1.2em;\">description</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i style=\"margin-right: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"receber\"\r\n                                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"receber(debs)\" mat-icon-button>\r\n                                            <mat-icon style=\"font-size: 1.2em;\">paid</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                </ng-container>\r\n\r\n\r\n                            </td>\r\n\r\n                            <!-- <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\" >\r\n                       \r\n                        \r\n                        </td> -->\r\n\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <!-- <br>\r\n\r\n        <div>\r\n            <ng-container *ngIf=\"hideCursoSearchAndMessage\">\r\n                <div *ngIf=\"showSelectCursoSearch; else message\">\r\n                    Selecione o curso disponível nesta unidade:\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 2%;\">\r\n                        <mat-label>Curso</mat-label>\r\n                        <mat-select selected name=\"cargo\" required>\r\n                            <mat-option></mat-option>\r\n                            <mat-option (click)=\"consultarCursos(item.descricao)\" *ngFor=\"let item of cursosDisponiveis\"\r\n                                [value]=\"item.descricao\">\r\n                                {{item.descricao}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <ng-template #message>\r\n                    Não há turmas com matrículas abertas nesta unidade!\r\n                </ng-template>\r\n            </ng-container>\r\n\r\n\r\n            <div *ngIf=\"showTableCursosAndamento\" class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%;height: 20px;;  \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 32%;font-size:1em;\r\n                                    vertical-align: middle;\r\n                                    text-align:left;\r\n                    border-top: 0px; font-weight: 400;\">Descrição</th>\r\n\r\n                            <th style=\"width: 19%;font-size:1em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">Turno</th>\r\n\r\n                            <th style=\"width: 15%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Prev. início</th>\r\n\r\n                            <th style=\"width: 15%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Prev. término</th>\r\n\r\n                            <th style=\"width: 6%;\r\n                    border-top: 0px;\"></th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of turmasParaMatricular;let i = index;\">\r\n                            <td style=\"text-align:center;vertical-align: middle;\"></td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.descricao}}<br>Turma\r\n                                {{item.identificador}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\"></td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                {{ item.previsaoAtual | date: 'dd/MM/yyyy' }}\r\n\r\n                                <br>\r\n\r\n                                <span *ngIf=\"item.iniciada\" style=\"color:red; font-size: 0.8em;\">\r\n                                    * turma\r\n                                    iniciada!\r\n                                </span>\r\n\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{ item.previsaoTerminoAtual |\r\n                                date: 'dd/MM/yyyy' }}\r\n                            </td>\r\n\r\n                            <td style=\"position: relative;text-align: center;vertical-align: middle;\">\r\n                                <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"ativo\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"selecionarTurma(item)\" style=\"\" mat-icon-button>\r\n                                        <mat-icon style=\"\">note_add</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n                            </td>\r\n                        </tr>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <form *ngIf=\"showFormFinal\" novalidate [formGroup]=\"matriculaTurmaForm\"\r\n            (ngSubmit)=\"submitMatricula(matriculaTurmaForm)\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 17%;margin-left: 2%;\">\r\n                <mat-label>Código do contrato:</mat-label>\r\n                <input disabled name=\"templateName\" matInput value=\"CGI-34534634\">\r\n            </mat-form-field>\r\n\r\n            <div style=\"float: right; width: 50px;\">\r\n                <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"voltar\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"voltar()\" style=\"\" mat-icon-button>\r\n                        <mat-icon>undo</mat-icon>\r\n                    </button>\r\n                </i>\r\n\r\n            </div>\r\n\r\n\r\n            <br>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 29%; ;margin-left: 2%;\">\r\n                <mat-label>Curso</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.descricao\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 13%; margin-left: 2%;\">\r\n                <mat-label>Turma</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.identificador\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>Investimento</mat-label>\r\n                <input disabled name=\"templateName\" matInput value=\"R$ 4.190,00\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 10%; margin-left: 1%;\">\r\n                <mat-label>código </mat-label>\r\n                <input disabled selected name=\"templateName\" matInput placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 13%; margin-left: 2%;\">\r\n                <mat-label>Turno</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.turno\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 18%; margin-left: 2%;\">\r\n                <mat-label>Horário</mat-label>\r\n                <input disabled name=\"templateName\" matInput value=\"10:00 às 16:00\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>Previsão início </mat-label>\r\n                <input selected name=\"templateName\" matInput disabled [(value)]=\"previAtual\" placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 1%;\">\r\n                <mat-label>Previsão término </mat-label>\r\n                <input selected name=\"templateName\" matInput disabled [(value)]=\"previTerminoAtual\" placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n\r\n\r\n\r\n            <mat-form-field appearance=\"fill\" style=\"width: 38%;margin-left: 2%;margin-top: 20px;\">\r\n                <mat-label>Como ficou sabendo dos nossos cursos?</mat-label>\r\n                <mat-select formControlName=\"cienciaCurso\" selected name=\"cargo\" required>\r\n                    <mat-option></mat-option>\r\n                    <mat-option *ngFor=\"let item of cienciaCurso\" [value]=\"item.type\">\r\n                        {{item.value}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <br>\r\n\r\n            <br>\r\n\r\n            <span style=\"margin-left: 2%;\">Escolha a forma de pagamento:</span>\r\n            <mat-tab-group style=\"\">\r\n                <mat-tab label=\"Cartão de Crédito\"> </mat-tab>\r\n                <mat-tab label=\"Boleto\"> </mat-tab>\r\n                <mat-tab label=\"Carnê\"></mat-tab>\r\n            </mat-tab-group>\r\n\r\n\r\n            <br>\r\n            <button type=\"submit\" mat-raised-button disabled=\"false\"\r\n                style=\"bottom: 0; float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n                Confirmar matrícula\r\n            </button>\r\n\r\n        </form> -->\r\n\r\n        </mat-tab>\r\n\r\n\r\n\r\n    </mat-tab-group>\r\n\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'pdfteste-app',\r\n    templateUrl: './pdfteste.component.html',\r\n    styleUrls: ['./pdfteste.component.scss']\r\n})\r\nexport class PDFTesteComponent implements OnInit {\r\n\r\n\r\n\r\n    constructor(\r\n    ) {\r\n\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n}","\r\n<!-- \r\n<div style='position: relative;'>\r\n\r\n    <div class='imagediv'>\r\n        <img class='image' src='../../../assets/img/logo4a.png'\r\n        height='110'>\r\n\r\n    </div>\r\n\r\n\r\n    <div style='text-align: center;font-size: 1.3em;margin-bottom: 15px;color: rgb(6, 6, 177);'>SISTEMA DE\r\n        ENSINO<br>INVICTUS</div>\r\n\r\n    <div style='text-align: center;font-size: 1.3em;margin-bottom: 15px;color: rgb(6, 6, 177);'>FICHA DE\r\n        MATRÍCULA<br>Ano 2021</div>\r\n\r\n\r\n\r\n\r\n    <div class='titulo'>CURSO:</div>\r\n    <div style='padding: 10px; font-size: 1em;color: rgb(6, 6, 177);border: 1px solid blue'>TÉCNICO EM ENFERMAGEM</div>\r\n\r\n    <div class='titulo'>DATA DE INÍCIO:</div>\r\n    <div style='padding: 10px; font-size: 1em;color: rgb(6, 6, 177);border: 1px solid blue'>10/01/2021</div>\r\n\r\n    \r\n    <div class='titulo'>DADOS PESSOAIS:</div>\r\n\r\n    <div style='padding: 10px;color: rgb(6, 6, 177);border: 1px solid blue'>\r\n       \r\n        <div class='subtitulo'>Nome Completo:\r\n            <span class='inputs'>THAIS FERREIRA NISHIO</span>\r\n        </div>\r\n       \r\n        <div class='subtitulo'>Data de Nascimento:\r\n            <span class='inputs'>30/01/2004</span>\r\n            Local de Nascimento:\r\n            <span class='inputs'>RIO DE\r\n                JANEIRO</span>\r\n        </div>\r\n\r\n       \r\n        <div class='subtitulo'>\r\n            Etnia: \r\n            <span class='inputs'>Pardo</span>\r\n            RG: \r\n            <span class='inputs'>313397572</span>\r\n            Órgão Emissor: \r\n            <span class='inputs'>DETRAN</span>\r\n        </div>\r\n        \r\n        <div class='subtitulo'>\r\n            Data de Expedição: \r\n            <span class='inputs'>01/01/2000</span>\r\n            CPF: \r\n            <span class='inputs'>095.521.287-14</span>\r\n        </div>\r\n\r\n        \r\n        <div class='subtitulo'>\r\n            Endereço:\r\n            <span class='inputs'>01/01/2000</span>\r\n        </div>\r\n        \r\n        <div class='subtitulo'>\r\n            Telefones de Contato: Fixo: \r\n            <span class='inputs'>(21) 2493-5251</span>,\r\n            Cel: \r\n            <span class='inputs'>(21) 98733-3442</span>\r\n            Órgão Emissor: \r\n            <span class='inputs'>DETRAN</span>\r\n        </div>\r\n        \r\n        <div class='subtitulo'>\r\n            E-mail:\r\n            <span class='inputs'>teste@gmail.com</span>\r\n        </div>\r\n\r\n        \r\n        <div class='subtitulo'>\r\n            Filiação: \r\n            <span class='inputs'>Pai fulano</span>\r\n            e \r\n            <span class='inputs'>Mãe Ciclana</span>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    \r\n\r\n    <div class='titulo'>ENSINO MÉDIO:</div>\r\n\r\n    <div style='padding: 10px;color: rgb(6, 6, 177);border: 1px solid blue'>\r\n       \r\n        <div class='subtitulo'>\r\n            Público:\r\n            <span >(&nbsp;&nbsp;&nbsp;&nbsp;)</span>\r\n            Privada: \r\n            <span class='inputs'>(&nbsp;&nbsp;&nbsp;&nbsp;)</span>\r\n            Escola: \r\n            <span class='inputs'>Escola Vicente Januzi</span>\r\n        </div>\r\n       \r\n        <div class='subtitulo'>\r\n            Local: \r\n            <span class='inputs'>30/01/2004</span>\r\n            Data de Conclusão do Ensino Médio: \r\n            <span class='inputs'>RIO DE JANEIRO</span>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class='titulo'>DOCUMENTOS APRESENTADOS NO ATO DA MATRÍCULA:</div>\r\n\r\n    <div style='padding: 10px;color: rgb(6, 6, 177);border: 1px solid blue'>\r\n\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) Xerox RG</div>\r\n        <div class='doc'>(&nbsp;X&nbsp;) Xerox CPF</div>\r\n        <div class='doc'>( ) Xerox Comprovante de residência</div>\r\n        <div class='doc'>( ) Xerox Certidão de Nascimento ou Casamento</div>\r\n        <div class='doc'>( ) Foto 3x4</div>\r\n        <div class='doc'>( ) Xerox Título de Eleitor</div>\r\n        <div class='doc'>( ) Xerox do Histórico Escolar do Ensino Médio</div>\r\n        <div class='doc'>( ) Certificado Autentivado</div>\r\n        <div class='doc'>( ) Cópia do Diário Oficial</div>\r\n        <div class='doc'>( ) Certificado de Reservista</div>\r\n        <div class='doc'>( ) Xerox do COREN</div>\r\n        <br>\r\n        <br>\r\n\r\n        <div style='text-align: center;'>______________________________________<br>\r\n            <span style='font-weight: bold;' >ASSINATURA DO ALUNO (A)</span></div>\r\n\r\n    </div>\r\n\r\n    \r\n    <br>\r\n\r\n    <div style='padding: 10px;color: rgb(6, 6, 177);border: 1px solid blue'>\r\n       \r\n        <div class='subtitulo'>\r\n            RESPONSÁVEL PELA MATRÍCULA:\r\n            <span class='inputs'>Fulano</span>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>  -->\r\n\r\n\r\n\r\n\r\n\r\n<!-- ONLY LINESSSS-->\r\n\r\n\r\n\r\n\r\n<!-- <div style='position: relative;'>\r\n\r\n    <div class='imagediv'>\r\n        <img class='image' src='../../../assets/img/logo4a.png'\r\n        height='110'>\r\n\r\n    </div>\r\n\r\n\r\n    <div style='text-align: center;font-size: 1.3em;margin-bottom: 15px;color: rgb(6, 6, 177);'>SISTEMA DE\r\n        ENSINO<br>INVICTUS</div>\r\n\r\n    <div style='text-align: center;font-size: 1.3em;margin-bottom: 15px;color: rgb(6, 6, 177);'>FICHA DE\r\n        MATRÍCULA<br>Ano 2021</div>\r\n\r\n\r\n\r\n\r\n    <div class='titulo'>CURSO:</div>\r\n    <div style='padding: 10px; font-size: 1em;color: rgb(6, 6, 177);border: 1px solid blue'>TÉCNICO EM ENFERMAGEM</div>\r\n\r\n    <div class='titulo'>DATA DE INÍCIO:</div>\r\n    <div style='padding: 10px; font-size: 1em;color: rgb(6, 6, 177);border: 1px solid blue'>10/01/2021</div>\r\n\r\n    \r\n    <div class='titulo'>DADOS PESSOAIS:</div>\r\n\r\n    <div style='padding: 10px;color: rgb(6, 6, 177);border: 1px solid blue'>\r\n       \r\n        <div class='subtitulo'>Nome Completo:\r\n            <span class='clean'>___________________________________________________________________</span>\r\n        </div>\r\n       \r\n        <div class='subtitulo' >Data de Nascimento:\r\n            <span class='clean'>_____________</span>\r\n            Local de Nascimento:\r\n            <span class='clean'>_____________________</span>\r\n        </div>\r\n\r\n       \r\n        <div class='subtitulo'>\r\n            Etnia: \r\n            <span class='clean'>________</span>\r\n            RG: \r\n            <span class='clean'>________________</span>\r\n            Órgão Emissor: \r\n            <span class='clean'>________________</span>\r\n        </div>\r\n        \r\n        <div class='subtitulo'>\r\n            Data de Expedição: \r\n            <span class='clean'>______________</span>\r\n            CPF: \r\n            <span class='clean'>____________________</span>\r\n        </div>\r\n\r\n        \r\n        <div class='subtitulo'>\r\n            Endereço:\r\n            <span class='clean'>________________</span>\r\n        </div>\r\n        \r\n        <div class='subtitulo'>\r\n            Telefones de Contato: Fixo: \r\n            <span class='clean'>____________________</span>,\r\n            Cel: \r\n            <span class='clean'>_____________________</span>           \r\n        </div>\r\n        \r\n        <div class='subtitulo'>\r\n            E-mail:\r\n            <span class='clean'>__________________________________</span>\r\n        </div>\r\n\r\n        \r\n        <div class='subtitulo'>\r\n            Filiação: \r\n            <span class='clean'>__________________________________________</span>\r\n            e \r\n            <span class='clean'>__________________________________________</span>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    \r\n\r\n    <div class='titulo'>ENSINO MÉDIO:</div>\r\n\r\n    <div style='padding: 10px;color: rgb(6, 6, 177);border: 1px solid blue'>\r\n       \r\n        <div class='subtitulo'>\r\n            Público:\r\n            <span class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp;)</span>\r\n            Privada: \r\n            <span class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp;)</span>\r\n            Escola: \r\n            <span class='clean'>______________________________________________________</span>\r\n        </div>\r\n       \r\n        <div class='subtitulo'>\r\n            Local: \r\n            <span class='clean'>_______________________________________</span>\r\n            Data de Conclusão do Ensino Médio: \r\n            <span class='clean'>_______________________</span>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div class='titulo'>DOCUMENTOS APRESENTADOS NO ATO DA MATRÍCULA:</div>\r\n\r\n    <div style='padding: 10px;color: rgb(6, 6, 177);border: 1px solid blue'>\r\n\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) Xerox RG</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) Xerox CPF</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) Xerox Comprovante de residência</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) Xerox Certidão de Nascimento ou Casamento</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) Foto 3x4</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) Xerox Título de Eleitor</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) Xerox do Histórico Escolar do Ensino Médio</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) Certificado Autentivado</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) Cópia do Diário Oficial</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) Certificado de Reservista</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) Xerox do COREN</div>\r\n        <br>\r\n        <br>\r\n\r\n        <div style='text-align: center;'>______________________________________<br>\r\n            <span style='font-weight: bold;' >ASSINATURA DO ALUNO (A)</span></div>\r\n\r\n    </div>\r\n\r\n    \r\n    <br>\r\n\r\n    <div style='padding: 10px;color: rgb(6, 6, 177);border: 1px solid blue'>\r\n       \r\n        <div class='subtitulo'>\r\n            RESPONSÁVEL PELA MATRÍCULA:\r\n            <span class='clean'>__________________________________________</span>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div> -->\r\n\r\n\r\n<!--                                       -->\r\n\r\n\r\n\r\n\r\n\r\n<div style='position: relative;'>\r\n\r\n   \r\n    <div style=\"font-size: 1.2em;font-weight: 600; text-align: center;vertical-align: middle;\">TERMO DE PENDÊNCIA DE DOCUMENTOS</div>\r\n    \r\n\r\n    <br>\r\n    <div style=\"margin-top: 50px;\">\r\n    Eu, Fulano de Tal  matriculado (a) no curso de Enfermagem, nesta Instituição de Ensino, declaro estar ciente da Pendência dos documentos abaixo para regularização da minha matrícula e me responsabilizo pela entrega dos mesmos no prazo de 45 dias.\r\n</div>\r\n    <br>\r\n        <div>DOCUMENTOS PENDENTES:</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) XEROX RG</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) XEROX CPF</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) XEROX CERTIDÃO NASCIMENTO OU CASAMENTO</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) XEROX COREN</div>\r\n        <div class='doc'>(&nbsp;&nbsp;&nbsp;&nbsp; ) OUTROS _______________________________________________________</div>\r\n        \r\n\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { PedagService } from \"../../service/pedag.service\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { InfoFinanceiras } from \"src/app/_shared/models/InfoFinanceiras.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { DocumentoAlunoDto } from \"../../Pedag-Models/documentoaluno.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AddAnotacaoComponent } from \"./Anotacao/add-anotacao.component\";\r\nimport { SpinnerParams } from \"src/app/_shared/models/spinner.model\";\r\nimport { ConfirmModalComponent } from \"src/app/_shared/components/ConfirmModal/confirm-modal.component\";\r\nimport { PedagogicoService } from \"../../service/pedagogico.service\";\r\nimport { OpenCertificadoComponentModal } from \"../../service/modal.config\";\r\nimport { CertificadoComponent } from \"./Certificado/certificado.component\";\r\n\r\n@Component({\r\n    selector: 'infosmodal',\r\n    templateUrl: './infos.component.html',\r\n    styleUrls: ['./infos.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class InfosComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n\r\n\r\n    public initProgressBar = 'visible'\r\n    public downloadTabProgressBar = 'hidden'\r\n    public showtablePrinciple = false\r\n    public showAluno: boolean = false\r\n    public showRespFinanc: boolean = false\r\n    public showRespMenor: boolean = false\r\n    public nome: string = ''\r\n    public aluno: Aluno = new Aluno();\r\n    public debitos: InfoFinanceiras = new InfoFinanceiras();\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n    public documentoAluno: DocumentoAlunoDto[] = new Array<DocumentoAlunoDto>();\r\n\r\n    public originalAluno: any\r\n    public originalRespFin: any\r\n    public originalRespMenor: any\r\n    public turma: any\r\n    public documentos: any\r\n\r\n    public documentoForm: FormGroup\r\n    public anotacaoForm: FormGroup\r\n    private respFinId: number = 0;\r\n    private respMenorId: number = 0;\r\n\r\n    public alunoForm: FormGroup;\r\n    public respFinancForm: FormGroup;\r\n    public respMenorForm: FormGroup;\r\n\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _service: PedagogicoService,\r\n        private _modal: MatDialog,\r\n        public dialogRef: MatDialogRef<InfosComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.documentoForm = _fb.group({\r\n            descricao: ['', [Validators.required]],\r\n            comentario: ['', [Validators.required]],\r\n        })\r\n\r\n        this.anotacaoForm = _fb.group({\r\n            comentario: ['', [Validators.required]],\r\n            matriculaId: ['']\r\n        })\r\n\r\n        this.alunoForm = _fb.group({\r\n            id: [''],\r\n            nomeSocial: [''],\r\n            nome: ['', [Validators.required]],\r\n            cpf: [''],\r\n            rg: [''],\r\n            nomePai: [''],   \r\n            nomeMae: [''],\r\n            nascimento: ['', [Validators.required]],\r\n            naturalidade: [''],\r\n            naturalidadeUF: [''],\r\n            email: [''],\r\n            telReferencia: ['', [Validators.required]],\r\n            nomeContatoReferencia: ['', [Validators.required]],\r\n            telCelular: [''],\r\n            telWhatsapp: [''],\r\n            telResidencial: [''],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required]],\r\n            numero: ['', [Validators.required]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            \r\n            dataCadastro: [''],\r\n            ativo: [''],\r\n            unidadeId: [''],\r\n        })\r\n\r\n        this.respFinancForm = _fb.group({\r\n            id: [''],\r\n            tipo: [''],\r\n            nome: [''],\r\n            cpf: [''],\r\n            rg: [''],\r\n            nascimento: [''],\r\n            parentesco:[''],\r\n            naturalidade: [''],\r\n            naturalidadeUF: [''],\r\n            email: [''],\r\n            telCelular: [''],\r\n            telWhatsapp: [''],\r\n            telResidencial: [''],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            numero: ['', [Validators.required]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            matriculaId: ['']\r\n        })\r\n\r\n        this.respMenorForm = _fb.group({\r\n            id: [''],\r\n            nome: [''],\r\n            tipo: [''],\r\n            cpf: [''],\r\n            rg: [''],\r\n            nascimento: [''],\r\n            parentesco:[''],\r\n            naturalidade: [''],\r\n            naturalidadeUF: [''],\r\n            email: [''],\r\n            telCelular: [''],\r\n            telWhatsapp: [''],\r\n            telResidencial: [''],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            numero: ['', [Validators.required]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            matriculaId: ['']\r\n        })\r\n\r\n\r\n        //this.alunoForm.get('logradouro').disable()\r\n        //this.alunoForm.get('cidade').disable()\r\n        //this.alunoForm.get('uf').disable()\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        //console.log(this.data['aluno'])\r\n        this.anotacaoForm.get('matriculaId').setValue(this.data['aluno'].matriculaId)\r\n\r\n        this.GetInformacoesMatricula(this.data['aluno'].matriculaId)\r\n    }\r\n\r\n    // alunoInfo: any;\r\n    respFin: any;\r\n    respMenor: any;\r\n    anotacoes: any[] = new Array<any>()\r\n    private alunoOriginal: any;\r\n    private respFinOriginal: any;\r\n    private respMenorOriginal: any;\r\n\r\n    GetInformacoesMatricula(matriculaId) {\r\n\r\n        this._http.get(`${this.baseUrl}/pedag/aluno/${matriculaId}`)\r\n            .subscribe(resp => {\r\n                //console.log(resp)\r\n                this.turma = resp['turma'];\r\n                //this.respFin = resp['respFin'];\r\n                //this.respMenor = resp['respMenor'];\r\n                this.anotacoes = resp['anotacoes'];\r\n                this.documentoAluno = resp['docs'];\r\n                // this.alunoOriginal = JSON.parse(JSON.stringify(resp['aluno']))\r\n                // Aluno\r\n                this.alunoForm.patchValue(resp['aluno']);\r\n                this.alunoOriginal = JSON.parse(JSON.stringify(this.alunoForm.value))\r\n                // RespFin\r\n                this.respFin = resp['respFin']\r\n                this.respFinancForm.patchValue(resp['respFin'])\r\n                this.respFinOriginal = JSON.parse(JSON.stringify(this.respFinancForm.value))\r\n                // respMenor\r\n                this.respMenorForm.patchValue(resp['respMenor'])\r\n                this.respMenor = resp['respMenor']\r\n                this.respMenorOriginal = JSON.parse(JSON.stringify(this.respMenorForm.value))\r\n            },\r\n                (error) => { \r\n                    // console.log(error) \r\n                },\r\n                () => {\r\n                    this.showAluno = true\r\n                    this.showtablePrinciple = true\r\n                    this.initProgressBar = 'hidden'\r\n                    //  console.log(this.turma)\r\n                })\r\n\r\n    }\r\n\r\n    //#region Saves\r\n\r\n    // ALUNO SAVE\r\n    saveAluno(form: any) {\r\n\r\n        if (this.alunoForm.valid) {\r\n            this.saveAlunoProgressBar = 'visible'\r\n\r\n            this._service.saveAluno(this.alunoForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.saveAlunoSucesso(sucesso) },\r\n                    falha => { this.saveAlunoFalha(falha) }\r\n                )\r\n        }\r\n    }\r\n\r\n    getListaPendenciaDocs(){\r\n        this.downloadTabProgressBar = 'visible'\r\n        var file = \"lista_penencia\";\r\n\r\n        this.downloadListPendencia(this.data['aluno'].matriculaId)\r\n            .subscribe(data => {\r\n\r\n            switch (data.type) {\r\n                case HttpEventType.Response:\r\n                    // this.showSpinner = false;\r\n                    //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n                    const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n                    const a = document.createElement('a');\r\n                    a.setAttribute('style', 'display:none;');\r\n                    document.body.appendChild(a);\r\n                    a.download = file;\r\n                    a.href = URL.createObjectURL(downloadedFile);\r\n                    a.target = '_blank';\r\n                    a.click();\r\n                    document.body.removeChild(a);\r\n                    break;\r\n            }\r\n        },\r\n            (err) => { \r\n                this.downloadTabProgressBar = 'hidden'\r\n            },\r\n            () => { \r\n                this.downloadTabProgressBar = 'hidden'\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    public downloadListPendencia(matriculaId: any): Observable<HttpEvent<Blob>> {\r\n        return this._http.request(new HttpRequest(\r\n            'GET', `${this.baseUrl}/pedag/doc/getpendencia/${matriculaId}`, null, {\r\n            reportProgress: true,\r\n            responseType: 'blob'\r\n        }));\r\n    }\r\n\r\n    saveAlunoSucesso(resposta) {\r\n        //this.saveAlunoProgressBar = 'hidden'\r\n        this.GetAluno(this.alunoForm.get('id').value);\r\n    }\r\n\r\n    saveAlunoFalha(erro) {\r\n        console.log(erro)\r\n        this.saveAlunoProgressBar = 'hidden'\r\n    }\r\n\r\n    GetAluno(alunoId) {\r\n\r\n        this._service.getAlunobyId(alunoId)\r\n            .subscribe(\r\n                sucesso => { this.getAlunoSucesso(sucesso) },\r\n                falha => { this.getAlunoFalha(falha) }\r\n                )\r\n    }\r\n\r\n    getAlunoSucesso(resposta){\r\n        this.alunoForm.patchValue(resposta['aluno']);\r\n        this.alunoOriginal = JSON.parse(JSON.stringify(this.alunoForm.value))\r\n        this.saveAlunoProgressBar = 'hidden'\r\n    }\r\n\r\n    getAlunoFalha(erro){\r\n        this.saveAlunoProgressBar = 'hidden'\r\n    }\r\n\r\n    // RESP FIN SAVE\r\n\r\n    saveRespFin(form: any) {\r\n\r\n        if (this.respFinancForm.valid) {\r\n            this.saveRespFinProgressBar = 'visible'\r\n\r\n            this._service.saveResponsavel(this.respFinancForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.saveRespFinSucesso(sucesso) },\r\n                    falha => { this.saveRespFinFalha(falha) }\r\n                )\r\n        }\r\n    }\r\n\r\n    saveRespFinSucesso(resposta) {\r\n        this.GetResponsavel(this.respFinancForm.get('id').value);\r\n    }\r\n\r\n    saveRespFinFalha(erro) {\r\n        console.log(erro)\r\n        this.saveRespFinProgressBar = 'hidden'\r\n    }\r\n\r\n    GetResponsavel(respId) {\r\n\r\n        this._service.GetResponsavelById(respId)\r\n            .subscribe(\r\n                sucesso => { this.GetResponsavelSucesso(sucesso) },\r\n                falha => { this.GetResponsavelFalha(falha) }\r\n                )\r\n    }\r\n\r\n    GetResponsavelSucesso(resposta){\r\n        this.respFinancForm.patchValue(resposta['resp']);\r\n        this.respFinOriginal = JSON.parse(JSON.stringify(this.respFinancForm.value))\r\n        this.saveRespFinProgressBar = 'hidden'\r\n    }\r\n\r\n    GetResponsavelFalha(erro){\r\n        this.saveRespFinProgressBar = 'hidden'\r\n    }\r\n\r\n     // RESP MENOR SAVE\r\n\r\n     saveRespMenor(form: any) {\r\n\r\n        if (this.respMenorForm.valid) {\r\n            this.saveRespMenorProgressBar = 'visible'\r\n\r\n            this._service.saveResponsavel(this.respMenorForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.saveRespMenorSucesso(sucesso) },\r\n                    falha => { this.saveRespMenorFalha(falha) }\r\n                )\r\n        }\r\n    }\r\n\r\n    saveRespMenorSucesso(resposta) {\r\n        this.GetResponsavelMenor(this.respMenorForm.get('id').value);\r\n    }\r\n\r\n    saveRespMenorFalha(erro) {\r\n        console.log(erro)\r\n        this.saveRespMenorProgressBar = 'hidden'\r\n    }\r\n\r\n    GetResponsavelMenor(respId) {\r\n\r\n        this._service.GetResponsavelById(respId)\r\n            .subscribe(\r\n                sucesso => { this.GetResponsavelMenorSucesso(sucesso) },\r\n                falha => { this.GetResponsavelMenorlFalha(falha) }\r\n                )\r\n    }\r\n\r\n    GetResponsavelMenorSucesso(resposta){\r\n        this.respMenorForm.patchValue(resposta['resp']);\r\n        this.respMenorOriginal = JSON.parse(JSON.stringify(this.respMenorForm.value))\r\n        this.saveRespMenorProgressBar = 'hidden'\r\n    }\r\n\r\n    GetResponsavelMenorlFalha(erro){\r\n        this.saveRespMenorProgressBar = 'hidden'\r\n    }\r\n\r\n\r\n    //#endregion\r\n\r\n    //#region SAVE BUTTONS\r\n    saveAlunoProgressBar = 'hidden'\r\n    get saveAlunoButton() {\r\n\r\n        console.log(this.alunoForm.valid)\r\n\r\n        if (this.alunoForm.valid &&\r\n            JSON.stringify(this.alunoOriginal) !=\r\n            JSON.stringify(this.alunoForm.value)) {\r\n\r\n            return this.saveAlunoProgressBar != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    saveRespFinProgressBar = 'hidden'\r\n    get saveRespFinButton() {\r\n\r\n        if (this.respFinancForm.valid &&\r\n            JSON.stringify(this.respFinOriginal) !=\r\n            JSON.stringify(this.respFinancForm.value)) {\r\n\r\n            return this.saveRespFinProgressBar != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    saveRespMenorProgressBar = 'hidden'\r\n    get saveRespMenorButton() {\r\n\r\n        if (this.respMenorForm.valid &&\r\n            JSON.stringify(this.respMenorOriginal) !=\r\n            JSON.stringify(this.respMenorForm.value)) {\r\n\r\n            return this.saveRespMenorProgressBar != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n   \r\n\r\n    consultaCEP(CEP: string, form) {\r\n\r\n        this._http.get(`https://viacep.com.br/ws/${CEP}/json/`, {})\r\n            .subscribe(response => {\r\n\r\n                form.get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n                form.get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n                form.get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n                form.get('uf').setValue(response[\"uf\"].toUpperCase());\r\n\r\n            }, err => { console.log(err) },\r\n                () => { });\r\n\r\n\r\n    }\r\n\r\n    submitAnotacao() {\r\n\r\n        console.log(this.anotacaoForm.valid)\r\n        console.log(this.anotacaoForm.value)\r\n        if (this.anotacaoForm.valid) {\r\n\r\n            this._http.post(`${this.baseUrl}/pedag/matricula/anotacao`, this.anotacaoForm.value, {})\r\n                .subscribe(response => {\r\n\r\n                }, err => { console.log(err) },\r\n                    () => {\r\n                        this.GetAnotacoes();\r\n                        \r\n                    });\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    ShowAnotSpinner = 'hidden'\r\n    openAddComentarioModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(AddAnotacaoComponent, {\r\n                height: '310px',\r\n                width: '500px',\r\n                autoFocus: false,\r\n\r\n\r\n                data: {},\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"OK\") {\r\n                console.log('afte close ok')\r\n                this.anotacaoForm.get('comentario').setValue(data.comentario)\r\n                this.ShowAnotSpinner = 'visible'\r\n                this.submitAnotacao();\r\n\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    GetAnotacoes() {\r\n\r\n        this._http.get(`${this.baseUrl}/pedag/matricula/anotacao/${this.data['aluno'].matriculaId}`)\r\n            .subscribe(resp => {\r\n                console.log(resp)\r\n\r\n                this.anotacoes = resp['anotacoes'];\r\n\r\n                console.log(this.respMenor)\r\n\r\n            },\r\n                (error) => { console.log(error) \r\n                    this.ShowAnotSpinner = 'hidden'\r\n                },\r\n                () => {\r\n                    this.ShowAnotSpinner = 'hidden'\r\n                })\r\n\r\n    }\r\n\r\n    excluirArquivo(doc) {\r\n        const dialogRef = this._modal\r\n            .open(ConfirmModalComponent, {\r\n                minHeight: '150px',\r\n                width: '400px',\r\n\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"sim\") {\r\n                doc.salvando = true\r\n                this.remover(doc)\r\n            } else {\r\n                console.log('nao deletar')\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    remover(doc) {\r\n        doc.salvando = true\r\n        this._http.put(`${this.baseUrl}/pedag/doc/excluir/${doc.id}`, {},)\r\n            .subscribe(resp => {\r\n                \r\n            },\r\n                (error) => { console.log(error)\r\n                    doc.salvando = false\r\n                },\r\n                () => {\r\n                    \r\n                    this.getInfoDocs(doc);\r\n                })\r\n    }\r\n\r\n    public GetCertificado(): void {\r\n        const dialogRef = this._modal\r\n            .open(CertificadoComponent, OpenCertificadoComponentModal(this.data['aluno']));\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    getInfoFinancAlunos(alunoId: number) {\r\n\r\n        this._http.get(`${this.baseUrl}/financeiro/aluno-debitos/${alunoId}`)\r\n            .subscribe(resp => {\r\n                this.debitos = Object.assign({}, resp);\r\n            },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                    console.log(this.debitos);\r\n                })\r\n    }\r\n\r\n    addDocumentos(form: any) {  // pendencia-criar/{alunoId}\r\n        console.log(form.value)\r\n\r\n        if (form.valid) {\r\n            this._http.post(`${this.baseUrl}/document/pendencia-criar/${this.data['aluno'].id}`, form.value, {\r\n\r\n            })\r\n                .subscribe(resp => {\r\n                    // this.debitos = Object.assign({}, resp);\r\n                },\r\n                    (error) => { console.log(error) },\r\n                    () => {\r\n                        //console.log(this.debitos);\r\n                        this.documentoForm.reset()\r\n                    })\r\n        }\r\n    }\r\n\r\n\r\n    isMatriculado = true\r\n    getInfoDocs(doc) {\r\n\r\n        this._http.get(`${this.baseUrl}/pedag/doc/lista/${this.data['aluno'].matriculaId}`)\r\n            .subscribe(resp => {\r\n                //this.debitos = Object.assign({}, resp);\r\n                this.documentoAluno = Object.assign([], resp['docs'])\r\n                //this.isMatriculado = resp['matriculado']\r\n            },\r\n                (error) => { console.log(error)\r\n                    doc.salvando = false\r\n                },\r\n                () => {\r\n                    doc.salvando = false\r\n                    console.log(this.documentoAluno);\r\n                })\r\n    }\r\n\r\n\r\n\r\n    get Equals() {\r\n        return JSON.stringify(this.alunoForm.value) === JSON.stringify(this.originalAluno)\r\n    }\r\n\r\n    get EqualsFin() {\r\n        return JSON.stringify(this.respFinancForm.value) === JSON.stringify(this.originalRespFin)\r\n    }\r\n\r\n    get EqualsMenor() {\r\n        return JSON.stringify(this.respMenorForm.value) === JSON.stringify(this.originalRespMenor)\r\n    }\r\n\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    //public logradouro = ''\r\n    //public bairro = ''\r\n    public localidade = ''\r\n    public uf = ''\r\n\r\n\r\n\r\n    saveEditAluno() {\r\n\r\n        console.log(this.aluno)\r\n\r\n        //this.alunoForm.value\r\n\r\n\r\n\r\n    }\r\n\r\n    onSubmit(form: FormGroup) {\r\n        let alunoUpdate = JSON.stringify(this.alunoForm.value)\r\n        console.log(alunoUpdate)\r\n        this._http.put(`${this.baseUrl}/adm/aluno/1`, alunoUpdate, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bear \"\r\n            })\r\n\r\n        }).subscribe(resp => {\r\n\r\n        },\r\n            (error) => { console.log(error) },\r\n            () => {\r\n                this.originalAluno = this.alunoForm.value\r\n            })\r\n    }\r\n\r\n    onSubmitMenor(form: FormGroup) {\r\n\r\n    }\r\n\r\n\r\n\r\n    clicou() {\r\n        console.log('clicou')\r\n\r\n\r\n    }\r\n\r\n    /*                           DOCS                   */\r\n\r\n\r\n\r\n    formDatas = new FormData();\r\n\r\n    fileAP: File[] = []\r\n    fileAPName: string = null\r\n    fileAPViewName: string = null\r\n\r\n    fileCartaoVac: File[] = []\r\n    fileCartaoVacName: string = null\r\n    fileCartaoVacViewName: string = null\r\n\r\n    fileTipoSang: File[] = []\r\n    fileTipoSangName: string = null\r\n    fileTipoSangViewName: string = null\r\n\r\n    fileHCG: File[] = []\r\n    fileHCGName: string = null\r\n    fileHCGViewName: string = null\r\n    public progress: number;\r\n    public message: string;\r\n    @Output() public onUploadFinished = new EventEmitter();\r\n\r\n    apendFileAP(file) {\r\n        this.fileAP = new Array<File>()\r\n        let fileToUpload = <File>file[0];\r\n        this.fileAPName = `AP${fileToUpload.name}`\r\n        this.fileAPViewName = `${fileToUpload.name}`\r\n        this.fileAP.push(fileToUpload)\r\n    }\r\n\r\n    apendFileCartaoVac(file) {\r\n        this.fileCartaoVac = new Array<File>()\r\n        let fileToUpload = <File>file[0];\r\n        this.fileCartaoVacName = `CV${fileToUpload.name}`\r\n        this.fileCartaoVacViewName = `${fileToUpload.name}`\r\n        this.fileCartaoVac.push(fileToUpload)\r\n    }\r\n\r\n    apendFileTipoSang(file) {\r\n        this.fileTipoSang = new Array<File>()\r\n        let fileToUpload = <File>file[0];\r\n        this.fileTipoSangName = `TP${fileToUpload.name}`\r\n        this.fileTipoSangViewName = `${fileToUpload.name}`\r\n        this.fileTipoSang.push(fileToUpload)\r\n    }\r\n\r\n    apendFileHCG(file) {\r\n        this.fileHCG = new Array<File>()\r\n        let fileToUpload = <File>file[0];\r\n        this.fileHCGName = `HC${fileToUpload.name}`\r\n        this.fileHCGViewName = `${fileToUpload.name}`\r\n        this.fileHCG.push(fileToUpload)\r\n    }\r\n\r\n\r\n    verificar() {\r\n\r\n        console.log(this.fileAP)\r\n        console.log(this.fileCartaoVac)\r\n\r\n        console.log(this.fileTipoSang)\r\n        console.log(this.fileHCG)\r\n\r\n    }\r\n\r\n\r\n    uploadFile() {\r\n\r\n        this.formDatas.append('file', this.fileAP[0], this.fileAPName);\r\n        this.formDatas.append('file', this.fileCartaoVac[0], this.fileCartaoVacName);\r\n        this.formDatas.append('file', this.fileTipoSang[0], this.fileTipoSangName);\r\n        this.formDatas.append('file', this.fileHCG[0], this.fileHCGName);\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        const Bearer = `Bearer ${token}`;\r\n        this._http.post(`${this.baseUrl}/estagios/arquivos`, this.formDatas, {\r\n            reportProgress: true, observe: 'events',\r\n            headers: new HttpHeaders({\r\n\r\n                \"Authorization\": Bearer\r\n            })\r\n        })\r\n            .subscribe(event => {\r\n                if (event.type === HttpEventType.UploadProgress)\r\n                    this.progress = Math.round(100 * event.loaded / event.total);\r\n                else if (event.type === HttpEventType.Response) {\r\n                    this.message = 'Upload success.';\r\n                    this.onUploadFinished.emit(event.body);\r\n                }\r\n            },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                    console.log('finally')\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                    // this.refresh()\r\n                    //this.onUploadFinished.unsubscribe;\r\n                    //files = null\r\n                });\r\n    }\r\n\r\n\r\n    aprovar(doc: DocumentoAlunoDto) {\r\n\r\n        // var param = { alunoId: aluno.id, docId: doc.docId, validado: true }\r\n\r\n        // this._http.put(`${this.baseUrl}/estagios`, param, {\r\n\r\n        // }).subscribe(resp => { },\r\n        //     (error) => { console.log(error) },\r\n        //     () => {\r\n\r\n        //         var index1 = this.docsViewModel.findIndex(a => a.id == aluno.id)\r\n        //         var index2 = this.docsViewModel[index1].documentos.findIndex(a => a.docId == doc.docId)\r\n        //         this.docsViewModel[index1].documentos[index2].analisado = true\r\n        //         this.docsViewModel[index1].documentos[index2].validado = true\r\n\r\n\r\n        //     })\r\n\r\n\r\n    }\r\n\r\n    reprovar(doc: DocumentoAlunoDto) {\r\n\r\n\r\n        // var param = { alunoId: aluno.id, docId: doc.docId, validado: false }\r\n        // this._http.put(`${this.baseUrl}/estagios`, param, {\r\n\r\n        // }).subscribe(resp => { },\r\n        //     (error) => { console.log(error) },\r\n        //     () => {\r\n\r\n        //         var index1 = this.docsViewModel.findIndex(a => a.id == aluno.id)\r\n        //         var index2 = this.docsViewModel[index1].documentos.findIndex(a => a.docId == doc.docId)\r\n        //         this.docsViewModel[index1].documentos[index2].analisado = true\r\n        //         this.docsViewModel[index1].documentos[index2].validado = false\r\n\r\n        //     })\r\n    }\r\n\r\n    disabled(){\r\n\r\n    }\r\n\r\n    fileName = '';\r\n    exportar(event, doc) {\r\n\r\n\r\n\r\n        const file: File = event.target.files[0];\r\n\r\n        if (file) {\r\n\r\n            this.fileName = file.name;\r\n\r\n            const formData = new FormData();\r\n\r\n\r\n\r\n            formData.append(\"file\", file);\r\n            console.log(formData);\r\n\r\n            doc.salvando = true\r\n            const upload$ = this._http.put(`${this.baseUrl}/pedag/doc/${doc.id}`, formData, {\r\n                reportProgress: true, observe: 'events',\r\n\r\n            })\r\n                .subscribe(event => {\r\n                    if (event.type === HttpEventType.UploadProgress)\r\n                        this.progress = Math.round(100 * event.loaded / event.total);\r\n                    else if (event.type === HttpEventType.Response) {\r\n                        this.message = 'Upload success.';\r\n                        this.onUploadFinished.emit(event.body);\r\n                    }\r\n                },\r\n                    (error) => { console.log(error) },\r\n                    () => {\r\n                        console.log('finally')\r\n                        // this.dialogRef.close({ clicked: \"Ok\" });\r\n                        // this.refresh()\r\n                        //this.onUploadFinished.unsubscribe;\r\n                        //files = null\r\n                        this.getInfoDocs(doc);\r\n                    });\r\n\r\n        }\r\n    }\r\n\r\n    baixar(doc) {\r\n\r\n\r\n        var file = doc.nome;// \"Modelo LEAD.xlsx\";// this.createFileName(\"EXCEL\");\r\n\r\n\r\n        this.download(doc.id).subscribe(data => {\r\n\r\n            switch (data.type) {\r\n                case HttpEventType.Response:\r\n                    // this.showSpinner = false;\r\n                    //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n                    const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n                    const a = document.createElement('a');\r\n                    a.setAttribute('style', 'display:none;');\r\n                    document.body.appendChild(a);\r\n                    a.download = file;\r\n                    a.href = URL.createObjectURL(downloadedFile);\r\n                    a.target = '_blank';\r\n                    a.click();\r\n                    document.body.removeChild(a);\r\n                    break;\r\n            }\r\n        },\r\n            (err) => {\r\n\r\n            },\r\n            () => {\r\n\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    public download(docId: any): Observable<HttpEvent<Blob>> {\r\n        return this._http.request(new HttpRequest(\r\n            'GET', `${this.baseUrl}/pedag/doc/${docId}`, null, {\r\n            reportProgress: true,\r\n            responseType: 'blob'\r\n        }));\r\n    }\r\n\r\n    exportarCert() {\r\n\r\n        //..console.log(doc:Document)\r\n        var file = \"Certificado conclusão.pdf\";// this.createFileName(\"EXCEL\");\r\n        // this.showSpinner = true;\r\n        // this.testehabilitar = false\r\n\r\n        this.downloadCert().subscribe(data => {\r\n            //console.log(data)\r\n            switch (data.type) {\r\n                case HttpEventType.Response:\r\n                    // this.showSpinner = false;\r\n                    //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n                    const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n                    const a = document.createElement('a');\r\n                    a.setAttribute('style', 'display:none;');\r\n                    document.body.appendChild(a);\r\n                    a.download = file;\r\n                    a.href = URL.createObjectURL(downloadedFile);\r\n                    a.target = '_blank';\r\n                    a.click();\r\n                    document.body.removeChild(a);\r\n                    break;\r\n            }\r\n        },\r\n            (err) => {\r\n                //this.showSpinner = false;\r\n                //this.testehabilitar = true;\r\n            },\r\n            () => {\r\n                //this.showSpinner = false;\r\n                // this.testehabilitar = true;\r\n            }\r\n        );\r\n    }\r\n\r\n    \r\n\r\n    public downloadCert(): Observable<HttpEvent<Blob>> {\r\n        return this._http.request(new HttpRequest(\r\n            'GET', `${this.baseUrl}/document/documentacao-aluno-certconclusao`, null, {\r\n            reportProgress: true,\r\n            responseType: 'blob'\r\n        }));\r\n    }\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Informações\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n<div @rowHighlight style=\"position: relative;\" *ngIf=\"showtablePrinciple;\">\r\n\r\n    <hr>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n        <mat-label>Aluno</mat-label>\r\n        <input [value]=\"data['aluno'].nome\" disabled matInput>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 12%; margin-left: 2%; \">\r\n        <mat-label>Nº matrícula</mat-label>\r\n        <input [value]=\"data['aluno'].numeroMatricula\" disabled matInput >\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n        <mat-label>Turma</mat-label>\r\n        <input [value]=\"turma.identificador\" disabled matInput >\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 35%;margin-left: 2%;\">\r\n        <mat-label>Curso</mat-label>\r\n        <input [value]=\"turma.descricao\" disabled matInput >\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-tab-group class=\"infoscomponent\">\r\n\r\n        <!--                  CADASTRO            -->\r\n\r\n\r\n        <mat-tab label=\"Aluno\">\r\n\r\n            <div @rowHighlight class=\"myForm\" style=\" position: relative;height: 550px;\">\r\n\r\n                <form @rowHighlight novalidate [formGroup]=\"alunoForm\" (ngSubmit)=\"saveAluno(alunoForm)\">\r\n\r\n                    <div\r\n                        style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;margin-top: 5px;\">\r\n\r\n                        <div style=\"position: absolute;  display:flex;padding: 0px; margin-left: 83%; display: inline-block;\r\n                overflow: hidden;margin-top: 5px; width: 100px; height: 133px; border: 1px solid black; \">\r\n\r\n                            <img src=\"\" style=\"display: block;\r\n                margin-left: auto;\r\n                margin-right: auto;width:50%\">\r\n\r\n                        </div>\r\n\r\n\r\n                        <br>\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                            <mat-label>Nome Social</mat-label>\r\n                            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"nomeSocial\"\r\n                                matInput placeholder=\"Nome\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 14%; margin-left: 2%;\">\r\n                            <mat-label>CPF</mat-label>\r\n                            <input [value]=\"alunoForm.get('cpf').value  | cpf\" disabled matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 12%; margin-left: 2%;\">\r\n                            <mat-label>RG</mat-label>\r\n                            <input [value]=\"alunoForm.get('rg').value\" disabled matInput>\r\n                        </mat-form-field>\r\n\r\n\r\n                        <br>\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n                            <mat-label>Naturalidade</mat-label>\r\n                            <input [value]=\"alunoForm.get('naturalidade').value\" disabled \r\n                                matInput >\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                            <mat-label>UF</mat-label>\r\n                            <input [value]=\"alunoForm.get('naturalidadeUF').value\" disabled\r\n                                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\"\r\n                                minlength=\"2\" maxlength=\"2\" matInput\r\n                               >\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 2%;\">\r\n                            <mat-label>Email</mat-label>\r\n                            <input [value]=\"alunoForm.get('email').value\" disabled\r\n                            oninput=\"this.value = this.value.toLowerCase()\" matInput\r\n                                placeholder=\"Email\">\r\n                        </mat-form-field>\r\n\r\n\r\n                    </div>\r\n                    <div style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;\">\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 120px;\">\r\n                            <mat-label>Celular</mat-label>\r\n                            <input formControlName=\"telCelular\"\r\n                                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                                matInput mask=\"(00) 00000-0000\" placeholder=\"Email\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" class=\"what\" style=\"width: 120px;margin-left: 10px;\">\r\n                            <mat-label>WhatsApp</mat-label>\r\n                            <input formControlName=\"telWhatsapp\" mask=\"(00) 00000-0000\" matInput\r\n                                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">                          \r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 120px;margin-left: 10px;\">\r\n                            <mat-label>Residencial</mat-label>\r\n                            <input formControlName=\"telResidencial\" mask=\"(00) 00000-0000\" matInput\r\n                                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">                           \r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;\">\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 35%;\">\r\n                            <mat-label>Nome do contato</mat-label>\r\n                            <input formControlName=\"nomeContatoReferencia\"\r\n                                oninput=\"this.value = this.value.toUpperCase()\" matInput placeholder=\"Nome\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%; \">\r\n                            <mat-label>Tel referência</mat-label>\r\n                            <input formControlName=\"telReferencia\" mask=\"(00) 00000-0000\" matInput\r\n                                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                            <mat-hint>telefone com DDD</mat-hint>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n\r\n                    <div style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;\">\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n                            <mat-label>CEP</mat-label>\r\n                            <input formControlName=\"cep\" mask=\"00.000-000\"\r\n                                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                                matInput placeholder=\"12345678\">\r\n                        </mat-form-field>\r\n\r\n                        <i style=\"margin-left: 2%;vertical-align: middle;\" #tooltip=\"matTooltip\"\r\n                            matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                            <span type=\"button\" (click)=\"consultaCEP(alunoForm.get('cep').value,alunoForm)\"\r\n                                style=\"vertical-align: middle;\" mat-icon-button>\r\n                                <mat-icon>search</mat-icon>\r\n                            </span>\r\n                        </i>\r\n\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 2%;\">\r\n                            <mat-label>Logradouro</mat-label>\r\n                            <input formControlName=\"logradouro\"\r\n                                oninput=\"this.value = this.value.toUpperCase()\" matInput placeholder=\"ex: rua tal...\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 10%;margin-left: 2%;\">\r\n                            <mat-label>Número</mat-label>\r\n                            <input formControlName=\"numero\"\r\n                                oninput=\"this.value = this.value.toUpperCase()\" matInput placeholder=\"ex: rua tal...\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 25%; margin-left: 2%;\">\r\n                            <mat-label>Complemento</mat-label>\r\n                            <input formControlName=\"complemento\"\r\n                                oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                                placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n                        </mat-form-field>\r\n\r\n                        <br>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                            <mat-label>Cidade</mat-label>\r\n                            <input disabled [value]=\"alunoForm.get('cidade').value\" \r\n                                matInput >\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 2%;\">\r\n                            <mat-label>UF</mat-label>\r\n                            <input disabled [value]=\"alunoForm.get('uf').value\" matInput\r\n                               >\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 2%;\">\r\n                            <mat-label>Bairro</mat-label>\r\n                            <input formControlName=\"bairro\"\r\n                                oninput=\"this.value = this.value.toUpperCase()\" matInput placeholder=\"digite o bairro\">\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <mat-progress-bar [style.visibility]=\"saveAlunoProgressBar\" mode=\"query\"></mat-progress-bar>\r\n                    \r\n                    <div style=\"float:right\">\r\n                        <button type=\"submit\" \r\n                        [disabled]=\"saveAlunoButton\" mat-raised-button color=\"primary\">\r\n                            Salvar\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </mat-tab>\r\n\r\n\r\n\r\n        <!--                  RESP FINANCEIRO          -->\r\n\r\n\r\n\r\n        <mat-tab *ngIf=\"this.respFin != null\" label=\"Responsável financeiro\">\r\n\r\n            <div @rowHighlight class=\"myForm\" style=\" position: relative;height: 550px;\">\r\n\r\n                <form @rowHighlight novalidate [formGroup]=\"respFinancForm\" (ngSubmit)=\"saveRespFin(respFinancForm)\">\r\n\r\n                    <div\r\n                        style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;margin-top: 5px;\">\r\n\r\n\r\n                        <br>\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                            <mat-label>Nome completo</mat-label>\r\n                            <input [value]=\"respFinancForm.get('nome').value\" disabled matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                            <mat-label>CPF</mat-label>\r\n                            <input disabled [value]=\"respFinancForm.get('cpf').value  | cpf\" matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                            <mat-label>RG</mat-label>\r\n                            <input [value]=\"respFinancForm.get('rg').value\" disabled matInput>\r\n                        </mat-form-field>\r\n\r\n                        <br>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 20%;\">\r\n                            <mat-label>Naturalidade</mat-label>\r\n                            <input [value]=\"respFinancForm.get('naturalidade').value\" disabled matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                            <mat-label>UF</mat-label>\r\n                            <input disabled [value]=\"respFinancForm.get('naturalidadeUF').value\" matInput>\r\n                        </mat-form-field>\r\n\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 2%;\">\r\n                            <mat-label>Email</mat-label>\r\n                            <input [value]=\"respFinancForm.get('email').value\" disabled \r\n                            oninput=\"this.value = this.value.toLowerCase()\"\r\n                                matInput >\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n\r\n                    <div style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;\">\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 17%;\">\r\n                            <mat-label>Celular</mat-label>\r\n                            <input formControlName=\"telCelular\" mask=\"(00) 00000-0000\" matInput>\r\n                            <mat-hint>telefone com DDD</mat-hint>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                            <mat-label>WhatsApp</mat-label>\r\n                            <input formControlName=\"telWhatsapp\" mask=\"(00) 00000-0000\" matInput>\r\n                            <mat-hint>telefone com DDD</mat-hint>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                            <mat-label>Residencial</mat-label>\r\n                            <input formControlName=\"telResidencial\" mask=\"(00) 0000-0000\" matInput>\r\n                            <mat-hint>telefone com DDD</mat-hint>\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n\r\n                    <div style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;\">\r\n\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n                            <mat-label>CEP</mat-label>\r\n                            <input formControlName=\"cep\" mask=\"00.000-000\" matInput\r\n                                placeholder=\"apenas números\">\r\n                        </mat-form-field>\r\n\r\n                        <i style=\"margin-left: 2%;vertical-align: middle;\" #tooltip=\"matTooltip\"\r\n                            matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                            <span type=\"button\" (click)=\"consultaCEP(respFinancForm.get('cep').value,respFinancForm)\"\r\n                                style=\"vertical-align: middle;\" mat-icon-button>\r\n                                <mat-icon>search</mat-icon>\r\n                            </span>\r\n                        </i>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 2%;\">\r\n                            <mat-label>Logradouro</mat-label>\r\n                            <input [value]=\"respFinancForm.get('logradouro').value\" disabled matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 18%; margin-left: 2%;\">\r\n                            <mat-label>Número</mat-label>\r\n                            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"numero\" matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 25%; margin-left: 2%;\">\r\n                            <mat-label>Complemento</mat-label>\r\n                            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"complemento\"\r\n                                matInput>\r\n                        </mat-form-field>\r\n                        <br>\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                            <mat-label>Cidade</mat-label>\r\n                            <input disabled [value]=\"respFinancForm.get('cidade').value\" matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 18%; margin-left: 2%;\">\r\n                            <mat-label>UF</mat-label>\r\n                            <input disabled [value]=\"respFinancForm.get('uf').value\" matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 2%;\">\r\n                            <mat-label>Bairro</mat-label>\r\n                            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"bairro\"\r\n                                matInput placeholder=\"digite o bairro\">\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n\r\n                    <mat-progress-bar [style.visibility]=\"saveRespFinProgressBar\" mode=\"query\"></mat-progress-bar>\r\n                    <div style=\"float: right;\">\r\n                        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"saveRespFinButton\">\r\n                            Salvar\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </mat-tab>\r\n\r\n\r\n        <!--                  RESP MENOR          -->\r\n\r\n\r\n        <mat-tab *ngIf=\"respMenor != null\" label=\"Responsável do menor\">\r\n\r\n            <div @rowHighlight class=\"myForm\" style=\" position: relative;height: 550px;\">\r\n\r\n                <form @rowHighlight novalidate [formGroup]=\"respMenorForm\" (ngSubmit)=\"saveRespMenor(respMenorForm)\">\r\n\r\n                    <div\r\n                        style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;margin-top: 5px;\">\r\n\r\n                        <br>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                            <mat-label>Nome completo</mat-label>\r\n                            <input [value]=\"respMenorForm.get('nome').value\" disabled matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                            <mat-label>CPF</mat-label>\r\n                            <input disabled [value]=\"respMenorForm.get('cpf').value | cpf\" matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                            <mat-label>RG</mat-label>\r\n                            <input [value]=\"respMenorForm.get('rg').value\" disabled matInput>\r\n                        </mat-form-field>\r\n\r\n                        <br>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n                            <mat-label>Naturalidade</mat-label>\r\n                            <input [value]=\"respMenorForm.get('naturalidade').value\" disabled matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                            <mat-label>UF</mat-label>\r\n                            <input [value]=\"respMenorForm.get('naturalidadeUF').value\" disabled matInput>\r\n                        </mat-form-field>\r\n\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 2%;\">\r\n                            <mat-label>Email</mat-label>\r\n                            <input [value]=\"respMenorForm.get('email').value\" disabled\r\n                            oninput=\"this.value = this.value.toLowerCase()\"\r\n                                matInput placeholder=\"Email\">\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n\r\n                    <div style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;\">\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 17%;\">\r\n                            <mat-label>Celular</mat-label>\r\n                            <input formControlName=\"telCelular\" mask=\"(00) 00000-0000\" matInput>\r\n                            <mat-hint>telefone com DDD</mat-hint>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                            <mat-label>WhatsApp</mat-label>\r\n                            <input formControlName=\"telWhatsapp\" mask=\"(00) 00000-0000\" matInput>\r\n                            <mat-hint>telefone com DDD</mat-hint>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                            <mat-label>Residencial</mat-label>\r\n                            <input formControlName=\"telResidencial\" mask=\"(00) 0000-0000\" matInput>\r\n                            <mat-hint>telefone com DDD</mat-hint>\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n\r\n                    <div style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;\">\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n                            <mat-label>CEP</mat-label>\r\n                            <input formControlName=\"cep\" mask=\"00.000-000\" matInput\r\n                                placeholder=\"apenas números\">\r\n                        </mat-form-field>\r\n\r\n                        <i style=\"margin-left: 2%;vertical-align: middle;\" #tooltip=\"matTooltip\"\r\n                            matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                            <span type=\"button\" (click)=\"consultaCEP(respMenorForm.get('cep').value,respMenorForm)\"\r\n                                style=\"vertical-align: middle;\" mat-icon-button>\r\n                                <mat-icon>search</mat-icon>\r\n                            </span>\r\n                        </i>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 2%;\">\r\n                            <mat-label>Logradouro</mat-label>\r\n                            <input [value]=\"respMenorForm.get('logradouro').value\" disabled matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 18%; margin-left: 2%;\">\r\n                            <mat-label>Número</mat-label>\r\n                            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"numero\" matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 25%; margin-left: 2%;\">\r\n                            <mat-label>Complemento</mat-label>\r\n                            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"complemento\"\r\n                                matInput>\r\n                        </mat-form-field>\r\n\r\n                        <br>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                            <mat-label>Cidade</mat-label>\r\n                            <input disabled [value]=\"respMenorForm.get('cidade').value\" matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 2%;\">\r\n                            <mat-label>UF</mat-label>\r\n                            <input disabled [value]=\"respMenorForm.get('uf').value\" matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 2%;\">\r\n                            <mat-label>Bairro</mat-label>\r\n                            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"bairro\"\r\n                                matInput placeholder=\"digite o bairro\">\r\n                        </mat-form-field>\r\n\r\n                    </div>\r\n\r\n                    <mat-progress-bar [style.visibility]=\"saveRespMenorProgressBar\" mode=\"query\"></mat-progress-bar>\r\n                    <div style=\"float: right;\">\r\n                        <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"saveRespMenorButton\">\r\n                            Salvar\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </mat-tab>\r\n\r\n        <!--                             TAB DOCUMENTACAO             -->\r\n\r\n        <ng-container>\r\n\r\n            <mat-tab label=\"Documentação\">\r\n                <br>\r\n\r\n                <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"modelo ficha de matrícula\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button disabled  mat-icon-button>\r\n                        <mat-icon>assignment_ind</mat-icon>\r\n                    </button>\r\n                </i>               \r\n\r\n                <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"lista pendência de documentos\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button style=\"\" (click)=\"getListaPendenciaDocs()\" [disabled]=\"downloadTabProgressBar == 'visible'\" mat-icon-button>\r\n                        <mat-icon>assignment_turned_in</mat-icon>\r\n                    </button>\r\n                </i>\r\n\r\n\r\n                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"certificado de conclusão\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"GetCertificado()\" style=\"\" mat-icon-button>\r\n                        <mat-icon>school</mat-icon>\r\n                    </button>\r\n                </i>\r\n\r\n                <mat-progress-bar style=\"\" [style.visibility]=\"downloadTabProgressBar\" @rowHighlight mode=\"query\">\r\n                </mat-progress-bar>\r\n  \r\n\r\n                <hr>\r\n\r\n                <ng-container style=\"margin-top: 10px;\" *ngIf=\"documentoAluno.length > 0\">\r\n\r\n                    <div *ngFor=\"let doc of documentoAluno\">\r\n\r\n                        <div style=\"display: inline; font-size: 0.9em;\">\r\n\r\n                            <ng-container *ngIf=\"doc.docEnviado == true\">\r\n                                <mat-icon (click)=\"baixar(doc)\" type=\"button\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"download\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\" style=\"vertical-align: middle; \r\n                    margin: 0px; margin-bottom: 5px;\">save_alt</mat-icon>\r\n                            </ng-container>\r\n\r\n                            {{doc.nome}} ({{doc.comentario}})\r\n\r\n                        </div>\r\n\r\n                        <div style=\"display: inline; position: relative; font-size: 0.9em;margin-left: 5px;\"\r\n                            *ngIf=\"doc.docEnviado == true\">\r\n\r\n                            <ng-container *ngIf=\"doc.descricao != 'contrato' && doc.descricao != 'ficha de matrícula'\">\r\n                                <button (click)=\"remover(doc)\" type=\"button\" style=\"margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button [disabled]=\"doc.salvando\">\r\n                                    <mat-icon #tooltip=\"matTooltip\" matTooltip=\"excluir arquivo\"\r\n                                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\" style=\"vertical-align: middle; \r\n                    margin: 0px; margin-bottom: 0px;\">delete_forever\r\n\r\n                                    </mat-icon>\r\n                                </button>\r\n                            </ng-container>\r\n                            <div *ngIf=\"doc.salvando\" style=\"display: inline;left: 30%;top:5%; position: absolute;\">\r\n                                <mat-spinner [diameter]=\"18\"></mat-spinner>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <ng-container *ngIf=\"doc.docEnviado == true;else docNaoEnviado\">\r\n\r\n                        </ng-container>\r\n\r\n                        <ng-template #docNaoEnviado>\r\n\r\n                            <div style=\"font-size: 0.9em;display: inline;\">\r\n                                * documentação ainda não enviada\r\n                                <input type=\"file\" class=\"file-input\" (change)=\"exportar($event, doc)\"\r\n                                    [popper]=\"popover\" #fileUpload>\r\n\r\n                                <div class=\"file-upload\" style=\"display: inline;position: relative;\">\r\n\r\n\r\n\r\n                                    <button mat-icon-button class=\"upload-btn\" #tooltip=\"matTooltip\"\r\n                                        [disabled]=\"doc.salvando\" matTooltip=\"anexar arquivo\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\" (click)=\"fileUpload.click()\">\r\n                                        <mat-icon>link</mat-icon>\r\n                                    </button>\r\n\r\n                                    <div *ngIf=\"doc.salvando\"\r\n                                        style=\"display: inline;left: 30%;top:5%; position: absolute;\">\r\n                                        <mat-spinner [diameter]=\"18\"></mat-spinner>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n\r\n                        <br>\r\n\r\n                    </div>\r\n                </ng-container>\r\n\r\n            </mat-tab>\r\n        </ng-container>\r\n\r\n        <mat-tab label=\"Anotações\">\r\n\r\n\r\n            <div style=\"font-size: 1.0em;\">\r\n                <i style=\"float: left;\" #tooltip=\"matTooltip\" matTooltip=\"adicionar anotação\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button type=\"button\" (click)=\"openAddComentarioModal()\" style=\"\" mat-icon-button>\r\n                        <mat-icon>add_circle_outline</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </div>\r\n\r\n\r\n            <br>\r\n\r\n            <mat-progress-bar [style.visibility]=\"ShowAnotSpinner\" mode=\"query\"></mat-progress-bar>\r\n\r\n            <br>\r\n\r\n            <ng-container *ngIf=\"anotacoes.length > 0\">\r\n                <div *ngFor=\"let info of anotacoes\"\r\n                    style=\"border: 1px solid rgb(201, 198, 209); padding: 10px;margin-bottom: 10px;margin-top: 5px;\">\r\n                    <div style=\"font-size: 0.8em; font-style: italic;\">Autor: {{ info.titulo }}</div>\r\n                    <div style=\"font-size: 0.8em; font-style: italic;\">Data: {{ info.dataRegistro | date: 'dd/MM/yyy' }}\r\n                    </div>\r\n                    <div style=\"font-size: 0.8em; font-style: italic;\">* {{ info.comentario }}</div>\r\n\r\n                </div>\r\n            </ng-container>\r\n        </mat-tab>\r\n\r\n    </mat-tab-group>\r\n\r\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TokenInfos } from '../_shared/models/token.model';\r\nimport { MessageModalComponent } from './messagemodal/messagemodal.component';\r\n\r\ndeclare interface RouteInfo {\r\n    path: string;\r\n    title: string;\r\n    class: string;\r\n    typeIcon: string;\r\n}\r\n\r\nexport const ROUTES: RouteInfo[] = [\r\n    { path: '/adm/usuarios', title: 'Usuários', class: '', typeIcon: 'manage_accounts' },\r\n    //{ path: '/adm/calendario', title: 'Calendário', class: '', typeIcon: 'calendar_today' },\r\n    { path: '/adm/admcursos', title: 'Turmas', class: '', typeIcon: 'house' },\r\n    { path: '/adm/colaboradores', title: 'Colaboradores', class: '', typeIcon: 'engineering' },\r\n    { path: '/adm/professores', title: 'Professores', class: '', typeIcon: 'engineering' },\r\n    { path: '/adm/produtos', title: 'Produtos', class: '', typeIcon: 'fact_check' },\r\n    { path: '/adm/unidades', title: 'Unidade', class: '', typeIcon: 'home' },\r\n    { path: '/adm/config', title: 'Configurações', class: '', typeIcon: 'settings' },\r\n    { path: '/adm/modulo', title: 'Pacotes', class: '', typeIcon: 'school' },\r\n    { path: '/adm/planopgm', title: 'Planos', class: '', typeIcon: 'request_quote' },\r\n    { path: '/adm/contrato', title: 'Contratos', class: '', typeIcon: 'gavel' },\r\n    { path: '/adm/bolsas', title: 'Bolsas', class: '', typeIcon: 'local_offer' },\r\n    //{ path: '/adm/teste', title: 'TESTE', class: '', typeIcon: 'fact_check' },\r\n    //{ path: '/adm/pdf', title: 'PDF', class: '', typeIcon: 'gavel' }\r\n]\r\n\r\n@Component({\r\n    selector: 'adm-app',\r\n    templateUrl: './adm.component.html',\r\n    styleUrls: ['./adm.component.scss']\r\n})\r\n\r\nexport class AdmComponent implements OnInit {\r\n    menu: any;\r\n    data: string = \"\";\r\n    private baseUrl = environment.baseUrl;\r\n    mensagem: any;\r\n    public htmlContent: any;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    \r\n    constructor(\r\n        //private jwtHelper: JwtHelperService, \r\n        private _router: Router,\r\n        private _modal: MatDialog,\r\n        private _http: HttpClient) {\r\n        const navigation = this._router.getCurrentNavigation();\r\n      //  console.log(navigation.extras['state'])\r\n        if (navigation.extras['state'] != undefined) {\r\n            const state = navigation.extras.state as { data: string };\r\n            this.data = state.data;\r\n        }\r\n\r\n    }\r\n    ngOnInit() {\r\n        // this.isUserAuthenticated();\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        \r\n     //   console.log(this.data != \"\")\r\n        if(this.data != \"\"){ \r\n            this.getMessage();    \r\n           // console.log('show message') \r\n        \r\n        }\r\n        this.menu = ROUTES.filter(menu => menu);\r\n    }\r\n\r\n    getMessage(){\r\n\r\n        this._http.get(`${this.baseUrl}/mensagem`)\r\n        .subscribe(resp => { \r\n               // console.log(resp)\r\n                this.mensagem = resp['mensagem']\r\n                this.htmlContent = resp['mensagem']\r\n        }, (error) => { console.log(error)},\r\n        () => {\r\n            this.openMessageModal()\r\n        })\r\n    }\r\n\r\n    openMessageModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(MessageModalComponent, {\r\n                height: 'auto',\r\n                width: '800px',\r\n\r\n                data: { message: this.htmlContent },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                // Reset form here\r\n               // console.log('afte close ok')\r\n                //this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n    // isUserAuthenticated() {\r\n    //     const token: string = localStorage.getItem(\"jwt\");\r\n    //     if (token && !this.jwtHelper.isTokenExpired(token)) {\r\n    //         this.router.navigate([\"/customers\"]);\r\n    //         return true;\r\n    //     }\r\n    //     else {\r\n    //         return false;\r\n    //     }\r\n    // }\r\n    // public logOut = () => {\r\n    //     localStorage.removeItem(\"jwt\");\r\n    // }\r\n\r\n    invalidLogin: boolean;\r\n\r\n    //constructor(private router: Router, private http: HttpClient) { }\r\n\r\n    // login(form: NgForm) {\r\n    //     const credentials = JSON.stringify(form.value);\r\n    //     console.log(credentials)\r\n    //     this.http.post(\"https://localhost:44370/api/identity/login\", credentials, {\r\n    //         headers: new HttpHeaders({\r\n    //             \"Content-Type\": \"application/json\"\r\n    //         })\r\n    //     }).subscribe(response => {\r\n    //         const token = (<any>response).accessToken;\r\n    //         console.log(response)\r\n    //         localStorage.setItem(\"jwt\", token);\r\n    //         this.invalidLogin = false;\r\n    //         this.router.navigate([\"/\"]);\r\n    //     }, err => {\r\n    //         this.invalidLogin = true;\r\n    //     });\r\n    // }\r\n\r\n    logOut() {\r\n        localStorage.removeItem(\"jwt\");\r\n        this._router.navigate([\"/login\"]);\r\n\r\n    }\r\n\r\n}","<ng-container>\r\n\r\n    <mat-sidenav-container class=\"example-container\" style=\"\r\n    background-color: rgba(250, 245, 245, 0); \">\r\n        <mat-sidenav style=\"\" #sidenav mode=\"side\" opened class=\"example-sidenav mat-elevation-z8\">\r\n            <div class=\"d-flex flex-column text-white \" style=\"position: absolute;\r\n            width: auto;\r\n            top: 0px;\r\n            bottom: 0px;\r\n            left: 0;\r\n            background-color: rgb(109, 218, 109);\r\n            right: 0;\">\r\n                <a class=\"d-flex align-items-center  mb-md-0 me-md-auto text-white text-decoration-none\">\r\n                    <span style=\"width: 190px;\r\n                    text-align: center;margin-top: 15px;font-size: 1em;\">\r\n                        ADMINISTRATIVO<br>Unidade {{tokenInfo.Unidade}}\r\n                    </span>\r\n                </a>\r\n                <hr>\r\n                <ul class=\"nav nav-pills flex-column mb-auto\">\r\n\r\n                    <li *ngFor=\"let item of menu\" routerLinkActive=\"active\" class=\"nav-item {{item.class}}\"\r\n                        style=\"overflow: auto;\">\r\n\r\n                        <a [routerLink]=\"[item.path]\" class=\"nav-link text-white\">\r\n                            <mat-icon style=\"top: -3px;\r\n                                        position:relative;\r\n                                        overflow: auto;\r\n                                        color:rgb(245, 243, 243); \r\n                                        vertical-align: middle;\r\n                                        \">\r\n                                {{item.typeIcon}}\r\n                            </mat-icon>\r\n                            {{item.title}}\r\n                        </a>\r\n                    </li>\r\n\r\n\r\n\r\n                    <!-- <li class=\"nav-item\">\r\n\r\n                        <a routerLink=\"/adm/usuarios\" class=\"nav-link active\">\r\n                            \r\n                            <mat-icon style=\"top: -3px;\r\n                                        position:relative; \r\n                                        color:rgb(245, 243, 243); \r\n                                        vertical-align: middle;\r\n                                        margin-left: 5px;\">\r\n                                        manage_accounts\r\n                            </mat-icon>\r\n                            Usuários\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a routerLink=\"/adm/unidades\" class=\"nav-link text-white\">\r\n                            \r\n                            Unidades\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a routerLink=\"/adm/colaboradores\" class=\"nav-link text-white\">\r\n                            <svg class=\"bi me-2\" width=\"16\" height=\"16\">\r\n                                <use xlink:href=\"#people-circle\"></use>\r\n                            </svg>\r\n                            Colaboradores\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a routerLink=\"/adm/produtos\" class=\"nav-link text-white\">\r\n                            <svg class=\"bi me-2\" width=\"16\" height=\"16\">\r\n                                <use xlink:href=\"#people-circle\"></use>\r\n                            </svg>\r\n                            Produtos\r\n                        </a>\r\n                    </li> -->\r\n                </ul>\r\n                <!-- <hr>\r\n                <div class=\"dropdown\">\r\n                    <a href=\"#\" class=\"d-flex align-items-center text-white text-decoration-none dropdown-toggle\"\r\n                        id=\"dropdownUser1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <img src=\"https://github.com/mdo.png\" alt=\"mdo\" width=\"32\" height=\"32\"\r\n                            class=\"rounded-circle me-2\">\r\n                        <strong>conta</strong>\r\n                    </a>\r\n                    <ul id=\"menu\" class=\"dropdown-menu dropdown-menu text-small shadow\" aria-labelledby=\"dropdownUser1\"\r\n                        style=\"background-color: rgb(73, 168, 73);\">\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">New project...</a></li>\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">Settings</a></li>\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">Profile</a></li>\r\n                        <li>\r\n                            <hr style=\"color: white;\" class=\"dropdown-divider\">\r\n                        </li>\r\n                        <li><a type=\"button\"\r\n                            (click)=\"logOut()\"\r\n                            style=\"color: white;\" class=\"dropdown-item\">Sign out</a></li>\r\n                    </ul>\r\n                </div> -->\r\n            </div>\r\n            <!-- <div class=\"sidenav\">\r\n\r\n              \r\n                <a routerLink=\"/adm1/child1\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">manage_accounts</mat-icon>\r\n                    Usuários\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/unidades\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">apartment</mat-icon>\r\n                    Unidades\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/professores\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">person</mat-icon>\r\n                    professores\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/produtos\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">production_quantity_limits</mat-icon>\r\n                    produtos\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/cursos\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">assignment</mat-icon>\r\n                    cursos\r\n                </a>\r\n\r\n            </div> -->\r\n\r\n        </mat-sidenav>\r\n        <router-outlet></router-outlet>\r\n\r\n    </mat-sidenav-container>\r\n\r\n\r\n</ng-container>\r\n\r\n<!-- \r\n\r\n<div class=\"row mainpage\">\r\n    <div class=\" sidenavBar mat-elevation-z8\"\r\n    style=\"border-radius: 10.5px;\r\n    box-shadow: 0 0 8px 5px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\">\r\n        <div class=\"sidenav\">\r\n            <a routerLink=\"/adm1/child1\" >Usuários</a>\r\n            <a routerLink=\"/adm1/unidades\">Unidades</a>\r\n            <a routerLink=\"/adm1/professores\">professores</a>\r\n            <a routerLink=\"/adm1/produtos\">produtos</a>\r\n            <a routerLink=\"/adm1/cursos\">cursos</a>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\" mainBar\" >\r\n        \r\n        \r\n<router-outlet></router-outlet>\r\n   \r\n\r\n\r\n</div> -->\r\n<!-- <form *ngIf=\"!isUserAuthenticated()\" class=\"form-signin\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\r\n    <div class=\"container-fluid\">\r\n        <h2 class=\"form-signin-heading\">Login</h2>\r\n        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">Invalid username or password.</div>\r\n        <br />\r\n        <label for=\"email\" class=\"sr-only\">Email address</label>\r\n        <input type=\"email\" id=\"username\" name=\"email\" ngModel class=\"form-control\" placeholder=\"User Name\" required\r\n            autofocus>\r\n        <br />\r\n        <label for=\"senha\" class=\"sr-only\">Password</label>\r\n        <input type=\"password\" id=\"password\" name=\"senha\" ngModel class=\"form-control\" placeholder=\"Password\"\r\n            required>\r\n        <br />\r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n    </div>\r\n</form> -->","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\n@Component({\r\n    selector: 'cargocreatemodal',\r\n    templateUrl: './cargo-create.component.html',\r\n    styleUrls: ['./cargo-create.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class CargoCreateComponent implements OnInit {\r\n\r\n\r\n    baseUrl = environment.baseUrl;\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public cargoForm: FormGroup\r\n    public progress = false\r\n    constructor(\r\n        private _helpers: HelpersService,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<CargoCreateComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.cargoForm = _fb.group({\r\n            value: ['', [Validators.required]],\r\n            descricao: [''],\r\n            comentario: ['', [Validators.required]],\r\n            ativo:[true]\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n\r\n    }\r\n\r\n\r\n    onSubmit(form: FormGroup) {\r\n\r\n        if (this.cargoForm.valid) {\r\n            this.disabledSaveButton = 'visible'\r\n            this.progress = true\r\n            this._http.post(`${this.baseUrl}/parametro/value/Cargo`, this.cargoForm.value, {})\r\n                .subscribe(response => {\r\n\r\n                }, (err) => {\r\n                    //console.log(err)\r\n                    this.disabledSaveButton = 'hidden'\r\n                    this.progress = false\r\n                    this._helpers.openSnackBarErrorDefault()\r\n                },\r\n                    () => {\r\n                        this._helpers.openSnackBarSucesso(\"Cargo salvo com sucesso.\");\r\n                        this.progress = false\r\n                        this.dialogRef.close({ clicked: true });\r\n                    });\r\n        }\r\n    }\r\n\r\n    disabledSaveButton = 'hidden'\r\n\r\n    get disabledButton() {\r\n        if (this.cargoForm.valid) {\r\n            return this.disabledSaveButton != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Criar cargo\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<!-- <div style=\"font-size: 0.8em;margin-top: 5px;\">* O colaborador será salvo na unidade de {{tokenInfo.Unidade}}</div> -->\r\n<hr>\r\n\r\n\r\n    <form novalidate [formGroup]=\"cargoForm\" (ngSubmit)=\"onSubmit(cargoForm)\">\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n            <mat-label>Nome</mat-label>\r\n            <input selected oninput=\"this.value = this.value.toUpperCase()\"\r\n             formControlName=\"value\" required name=\"nome\" matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-slide-toggle style=\"margin-left: 30px; width: 10%;\" #tooltip=\"matTooltip\"\r\n            formControlName=\"ativo\" name=\"ativo\" matTooltip=\"ativo/inativo\" matTooltipPosition=\"above\"\r\n            [required]=\"false\"\r\n            matTooltipHideDelay=\"250\" color=\"primary\">\r\n        </mat-slide-toggle> -->\r\n\r\n   \r\n        <br>\r\n        <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n            <mat-label>Descrição do cargo</mat-label>\r\n            <textarea formControlName=\"comentario\" name=\"descricao\" matInput></textarea>\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-progress-bar [style.visibility]=\"disabledSaveButton\" @rowHighlight mode=\"query\">\r\n        </mat-progress-bar>\r\n     \r\n\r\n        <span style=\"float: right;margin-top: 15px;\">\r\n\r\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"disabledButton\" \r\n            style=\"position: relative; float:right;margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n        </span>\r\n\r\n\r\n\r\n    </form>\r\n","import { Component, EventEmitter, Inject,  OnInit, Output } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpEvent, HttpEventType,  HttpRequest } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Component({\r\n    selector: 'exportlead',\r\n    templateUrl: './exportar.component.html',\r\n    styleUrls: ['./exportar.component.scss']\r\n})\r\n\r\n\r\nexport class ExportLeadComponent implements OnInit {\r\n    public progress: number;\r\n    public message: string;\r\n    baseUrl = environment.baseUrl;\r\n\r\n    @Output() public onUploadFinished = new EventEmitter();\r\n    constructor(\r\n        private http: HttpClient,\r\n        private exportLeadModal: MatDialog,\r\n        public dialogRef: MatDialogRef<ExportLeadComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n    // \r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    jwtHelper = new JwtHelperService();\r\n    decodedToken: any;\r\n\r\n\r\n    uploadFile(files){\r\n\r\n        console.log(files)\r\n        if (files.length === 0) {\r\n\r\n            return;\r\n        }\r\n        this.decodedToken = this.jwtHelper.decodeToken(localStorage.getItem('jwt'));\r\n        let fileToUpload = <File>files[0];\r\n        const formData = new FormData();\r\n        formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n        this.http.post(`${this.baseUrl}/comercial/?userEmail=${this.decodedToken['email']}`, formData, {\r\n\r\n            reportProgress: true, observe: 'events',\r\n\r\n        })\r\n            .subscribe(event => {\r\n                if (event.type === HttpEventType.UploadProgress)\r\n                    this.progress = Math.round(100 * event.loaded / event.total);\r\n                else if (event.type === HttpEventType.Response) {\r\n                    this.message = 'Upload success.';\r\n                    this.onUploadFinished.emit(event.body);\r\n                }\r\n            },\r\n                (error) => { console.log(error) \r\n                },\r\n                () => {\r\n                    console.log('finally')\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                });\r\n    }\r\n\r\n    exportExcel() {\r\n\r\n        var file = \"Modelo LEAD.xlsx\";\r\n\r\n        this.download().subscribe(data => {\r\n           \r\n            switch (data.type) {\r\n                case HttpEventType.Response:\r\n                    // this.showSpinner = false;\r\n                    //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n                    const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n                    const a = document.createElement('a');\r\n                    a.setAttribute('style', 'display:none;');\r\n                    document.body.appendChild(a);\r\n                    a.download = file;\r\n                    a.href = URL.createObjectURL(downloadedFile);\r\n                    a.target = '_blank';\r\n                    a.click();\r\n                    document.body.removeChild(a);\r\n                    break;\r\n            }\r\n        },\r\n            (err) => {\r\n            },\r\n            () => {\r\n            }\r\n        );\r\n    }\r\n\r\n    public download(): Observable<HttpEvent<Blob>> {\r\n        return this.http.request(new HttpRequest(\r\n            'GET', `${this.baseUrl}/download`, null, {\r\n            reportProgress: true,\r\n            responseType: 'blob'\r\n        }));\r\n    }\r\n\r\n\r\n    onOkClick() {\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n}","<!-- <div class=\"row justify-content-center\">\r\n        <div class=\"col\"> -->\r\n\r\n<div class=\"card-header\">\r\n    <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n        LEADS</h4>\r\n    <p class=\"card-category\"> </p>\r\n</div>\r\n<div class=\"card-body\">\r\n\r\n    <!-- <div class=\"container\" style=\"width: 80%;margin-top: 30px; border: 1px solid red\"> -->\r\n\r\n    <!-- <div class=\"row\">\r\n                    <div style=\"border: 1px solid red\" class=\"col col1\">exportar lead</div>\r\n                    <div style=\"border: 1px solid red\" class=\"col\">colu</div>\r\n                </div> -->\r\n    <!-- </div> -->\r\n    <div class=\"row\" style=\"margin-bottom:15px;\">\r\n        <div class=\"\">\r\n            <input multiple type=\"file\" #file placeholder=\"Choose file\" (change)=\"uploadFile(file.files)\"\r\n                style=\"display:none;\">\r\n            <button style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\" (click)=\"file.click()\">Exportar\r\n                Lead</button>\r\n            <span style=\"font-size: 0.7em;\"><br>* formato aceito: excel (.xls)</span>\r\n        </div>\r\n        <div class=\"\">\r\n            <span class=\"upload\" *ngIf=\"progress > 0\">\r\n                {{progress}}%\r\n            </span>\r\n            <span class=\"upload\" *ngIf=\"message\">\r\n                {{message}}\r\n            </span>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"\">\r\n            <button style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\" (click)=\"exportExcel()\">modelo</button>\r\n        </div>\r\n    </div>\r\n\r\n    <button style=\"margin-left:30px;margin-top: 10px;\" mat-raised-button\r\n        [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button>","import { Component, Inject, OnChanges, OnInit, SimpleChanges } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n//import { GenericTask } from 'src/app/shared/models/generictask.model';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n//import { AdmService } from '../../adm.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'admrelatoriomodal',\r\n    templateUrl: './relatorio.component.html'\r\n    //styleUrls: ['./relatorio.component.scss']\r\n})\r\n\r\nexport class AdmRelatorioComponent implements OnInit {\r\n\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n    // pageEvent: PageEvent;\r\n    baseUrl = environment.baseUrl;\r\n\r\n    editedColaborador: Colaborador = new Colaborador();\r\n    originalColaborador: Colaborador = new Colaborador();\r\n    unidades = Unidades;\r\n    showMensagem = false\r\n    mensagem = ''\r\n    cpf = ''\r\n\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    cargos = Cargos;\r\n    ativo = true;\r\n    constructor(\r\n        private _snackBar: MatSnackBar,\r\n        private http: HttpClient,\r\n        public dialogRef: MatDialogRef<AdmRelatorioComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n\r\n    //@Output() newItemEvent = new EventEmitter<string>();\r\n\r\n\r\n    ngOnInit() {\r\n        this.ativo = true;\r\n        //console.log(this.data['colaborador'])\r\n        Object.assign(this.editedColaborador, this.data['colaborador'])\r\n        this.cpf =  this.onInputChange(this.editedColaborador.cpf)\r\n        // console.log(\"on init\")\r\n        //this.getTasks(1, this.pageSize);\r\n    }\r\n\r\n    onInputChange(event) {\r\n        console.log(event)\r\n        let newVal =  event.replace(/\\D/g, '');\r\n        // if (backspace && newVal.length <= 6) {\r\n        //   newVal = newVal.substring(0, newVal.length - 1);\r\n        // }\r\n        if (newVal.length === 0) {\r\n          newVal = '';\r\n        } else if (newVal.length <= 3) {\r\n          newVal = newVal.replace(/^(\\d{0,3})/, '$1');\r\n        } else if (newVal.length <= 6) {\r\n          newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})/, '$1.$2');\r\n        } else if (newVal.length <= 9) {\r\n          newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})/, '$1.$2.$3');\r\n        } else if (newVal.length <= 11) {\r\n          newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})(\\d{0,2})/, '$1.$2.$3-$4');\r\n        } else {\r\n          newVal = newVal.substring(0, 11);\r\n          newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})(\\d{0,2})/, '$1.$2.$3-$4');\r\n        }\r\n        return newVal;\r\n      }\r\n\r\n    submitForm(form: NgForm) {\r\n        console.log(form.value)\r\n        console.log(this.editedColaborador)\r\n        if (form.valid) {\r\n            console.log('form valid')\r\n            /// const novoColaborador = JSON.stringify(form.value);\r\n            this.edit(JSON.stringify(this.editedColaborador))\r\n            // this.model.saveProduct(this.product);\r\n            // //this.product = new Product();\r\n            // //form.reset();\r\n            // this.originalProduct = this.product;\r\n            // this.router.navigateByUrl(\"/\");\r\n        }\r\n    }\r\n\r\n    edit(form: any) {\r\n        //const novoColaborador = JSON.stringify(form.value);\r\n        console.log(form)\r\n\r\n        //this.redi([\"./adm/colaboradores\"]);\r\n        this.http.put(`${this.baseUrl}/colaboradores`, form, {\r\n            //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bear \"\r\n            })\r\n        }).subscribe(response => {\r\n\r\n            console.log(response)\r\n\r\n\r\n\r\n        }, err => { console.log(err) },\r\n            () => {\r\n                this.openSnackBar()\r\n                this.dialogRef.close();\r\n\r\n            });\r\n    }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Colaborador editado com sucesso.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n    isEqual = true\r\n    get formIsValid() {\r\n\r\n        if (JSON.stringify(this.editedColaborador) === JSON.stringify(this.originalColaborador)) {\r\n            this.isEqual = true\r\n        } else {\r\n            this.isEqual = false\r\n        }\r\n        return this.isEqual\r\n    }\r\n\r\n\r\n    consultaCEP(CEP: string) {\r\n        //console.log(CEP);\r\n\r\n        this.http.get(`https://viacep.com.br/ws/${CEP}/json/`)\r\n            .subscribe(response => {\r\n\r\n                console.log(\"success\")\r\n                this.cepReturn = new CepReturn(\r\n                    response[\"logradouro\"],\r\n                    response[\"bairro\"],\r\n                    response[\"localidade\"],\r\n                    response[\"uf\"]);\r\n                console.log(this.cepReturn)\r\n\r\n                this.editedColaborador.logradouro = this.cepReturn.logradouro;\r\n                this.editedColaborador.bairro = this.cepReturn.bairro\r\n                this.editedColaborador.cidade = this.cepReturn.localidade\r\n                this.editedColaborador.uf = this.cepReturn.uf\r\n\r\n                // this.colaboradorForm.get('logradouro').setValue(response[\"logradouro\"]);\r\n                // this.colaboradorForm.get('bairro').setValue(response[\"bairro\"]);\r\n                // this.colaboradorForm.get('cidade').setValue(response[\"localidade\"]);\r\n                // this.colaboradorForm.get('uf').setValue(response[\"uf\"]);\r\n                //this.bairro = this.cepReturn.bairro\r\n                // const token = (<any>response).accessToken;\r\n                // console.log(response)\r\n                // localStorage.setItem(\"jwt\", token);\r\n                // this.invalidLogin = false;\r\n                // this.router.navigate([\"/main\"]);\r\n            }, err => { console.log(\"erros\") },\r\n                () => { console.log('finaly') });\r\n    }\r\n\r\n}","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\n@Component({\r\n    selector: 'createplanopgmmodal',\r\n    templateUrl: './create-planopgm.component.html',\r\n    styleUrls: ['./create-planopgm.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class PlanoPgmCreateComponent implements OnInit {\r\n\r\n\r\n    baseUrl = environment.baseUrl;\r\n    public disabledContrato = true\r\n    public initProgressBar = 'visible'\r\n    public saveSpinner = 'hidden'\r\n    public typePacotes: any\r\n    public moduloForm: FormGroup;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public disabledSpinner = false\r\n    public contratos: any[] = new Array<any>();\r\n    constructor(\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _helper: HelpersService,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<PlanoPgmCreateComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.moduloForm = _fb.group({\r\n            typePacoteId: ['', [Validators.required]],\r\n            descricao: ['', [Validators.required]],\r\n            valor: ['', [Validators.required]],\r\n            taxaMatricula: [0.00],\r\n            materialGratuito: ['', [Validators.required]],\r\n            valorMaterial: [0.00],\r\n            bonusPontualidade: [0.00],\r\n            contratoId: ['', [Validators.required]],\r\n            ativo: [true]\r\n\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.GetTypes()\r\n    }\r\n\r\n    private GetTypes() {\r\n\r\n        this._http.get(`${this.baseUrl}/typepacote`)\r\n            .subscribe(resp => {\r\n                this.typePacotes = resp['typePacotes']\r\n            },\r\n                (error) => { \r\n                    //console.log(error) \r\n                },\r\n                () => {\r\n                    this.initProgressBar = 'hidden'\r\n                })\r\n    }\r\n\r\n    getContratos(typePacoteId) {\r\n        this.moduloForm.get('contratoId').setValue('')\r\n        this.initProgressBar = 'visible'\r\n        this.disabledContrato = true\r\n        this.contratos = new Array<any>();\r\n        this._http.get(`${this.baseUrl}/contrato/type-pacote/${typePacoteId}`)\r\n            .subscribe(resp => {\r\n                this.disabledContrato = false\r\n                this.contratos = resp['contratos']\r\n            },\r\n                (error) => {\r\n                    this.initProgressBar = 'hidden'\r\n                    //console.log(error)\r\n                },\r\n                () => {\r\n                    this.initProgressBar = 'hidden'\r\n                })\r\n\r\n    }\r\n\r\n    get disabledSaveButton() {\r\n\r\n        if (this.moduloForm.valid) {\r\n            return this.saveSpinner != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n\r\n    }\r\n\r\n    onSubmit(form: any) {\r\n      //  console.log(form.value)\r\n        if (this.moduloForm.valid) {\r\n            this.saveSpinner = 'visible'\r\n            this.disabledSpinner = true\r\n            this._http.post(`${this.baseUrl}/plano-pagamento`, form.value, {})\r\n                .subscribe(response => {\r\n                }, (err) => { console.log(err) },\r\n                    () => {\r\n                        this._helper.openSnackBarSucesso(\"Plano criado com sucesso.\")\r\n                        this.dialogRef.close({ clicked: \"Ok\" });\r\n                    });\r\n        }\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Criar Plano de Pagamento\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" mode=\"query\"></mat-progress-bar>\r\n\r\n<div @rowHighlight *ngIf=\"initProgressBar == 'hidden'\">\r\n\r\n    <div style=\"font-size: 0.8em;margin-top: 5px;\">* O plano de pagamento poderá ser visualizado, utilizado e editado\r\n        por todas as unidades.</div>\r\n\r\n    <hr>\r\n    <form novalidate [formGroup]=\"moduloForm\" (ngSubmit)=\"onSubmit(moduloForm)\">\r\n\r\n        <!-- <div class=\"card-body\"> -->\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 65%;\">\r\n                <mat-label>Tipo/Pacote</mat-label>\r\n                <mat-select formControlName=\"typePacoteId\" placeholder=\"\">\r\n                    <mat-option (click)=\"getContratos(type.id)\" [value]=\"type.id\" *ngFor=\"let type of typePacotes\">\r\n                        {{type.nome}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-slide-toggle style=\"width: 8%;margin-left: 27%; \" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n                name=\"ativo\" matTooltip=\"ativo/inativo\" matTooltipPosition=\"above\" matTooltipHideDelay=\"250\"\r\n                color=\"primary\" formControlName=\"ativo\">\r\n            </mat-slide-toggle>\r\n            <!-- <mat-slide-toggle style=\"width: 20%; margin-left: 5%;\" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n        formControlName=\"ativo\" required matTooltip=\"ativo/inativo\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"250\" color=\"primary\">\r\n        </mat-slide-toggle> -->\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 75%;\">\r\n                <mat-label>Descrição</mat-label>\r\n                <input selected formControlName=\"descricao\" matInput placeholder=\"Descrição\">\r\n            </mat-form-field>\r\n\r\n\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%; \">\r\n                <mat-label>Valor</mat-label>\r\n                <input formControlName=\"valor\" currencyMask\r\n                    [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" placeholder=\"R$ 00,00\" matInput>\r\n                <span matPrefix>R$&nbsp;</span>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 5% \">\r\n                <mat-label>Taxa Matrícula</mat-label>\r\n                <input currencyMask [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\"\r\n                    formControlName=\"taxaMatricula\" type=\"text\" required matInput placeholder=\"R$ 00,00\">\r\n                <span matPrefix>R$&nbsp;</span>\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 5%; \">\r\n                <mat-label>Bonus Pontualidade</mat-label>\r\n                <input currencyMask [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\"\r\n                    formControlName=\"bonusPontualidade\" type=\"text\" required matInput placeholder=\"R$ 00,00\">\r\n                <span matPrefix>R$&nbsp;</span>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 45%\">\r\n                <mat-label>Material Gratuito</mat-label>\r\n                <mat-select formControlName=\"materialGratuito\" placeholder=\"\">\r\n                    <mat-option [value]=\"true\">Sim</mat-option>\r\n                    <mat-option [value]=\"false\">Não</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 5%; \">\r\n                <mat-label>Valor Material</mat-label>\r\n                <input selected formControlName=\"valorMaterial\" currencyMask\r\n                    [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" placeholder=\"R$ 00,00\" matInput>\r\n                <span matPrefix>R$&nbsp;</span>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 55%;\">\r\n                <mat-label>Contrato</mat-label>\r\n                <mat-select [disabled]=\"disabledContrato\" formControlName=\"contratoId\" placeholder=\"temRecuperacao\">\r\n                    <mat-option [value]=\"cont.id\" *ngFor=\"let cont of contratos\">{{cont.titulo}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n        <!-- </div> -->\r\n\r\n        <mat-progress-bar [style.visibility]=\"saveSpinner\" mode=\"query\"></mat-progress-bar>\r\n\r\n        <!-- <div style=\"float: right;margin-top: 15px;\"> -->\r\n            <button color=\"primary\" type=\"submit\" [disabled]=\"disabledSaveButton\" mat-raised-button \r\n            style=\"float:right;margin-bottom: 10px;margin-top: 10px;\">\r\n                \r\n                Salvar\r\n           </button> \r\n        <!-- </div> -->\r\n    </form>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { AdmService } from \"../services/adm.services\";\r\nimport { ModuloCreateComponentModal, ModuloDetalheComponentModal, ModuloEditComponentModal } from \"../services/modal.config\";\r\nimport { ModuloCreateComponent } from \"./CreateModulo/modulo-create.component\";\r\nimport { DetailPacoteComponent } from \"./DetalhePacote/pacote-detalhe.component\";\r\nimport { VisualizarModuloComponent } from \"./VisualizarModulo/visualizar.component\";\r\n\r\n@Component({\r\n    selector: \"modulo-app\",\r\n    templateUrl: './modulo.component.html',\r\n    styleUrls: ['./modulo.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ModuloComponent implements OnInit {\r\n\r\n    public pacotes: any[] = new Array<any>()\r\n    public typesPacotes: any = new Array<any>();\r\n    public unidadesAutorizadas: any[] = new Array<any>();\r\n    public initProgressBar = 'visible'\r\n\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    private jwtHelper = new JwtHelperService();\r\n    public pesquisarForm: FormGroup\r\n\r\n    public showTeste = false\r\n\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _admService: AdmService,\r\n        private _modal: MatDialog) {\r\n        this.pesquisarForm = _fb.group({\r\n            typePacoteId: ['', [Validators.required]],\r\n            unidadeId: ['', [Validators.required]]\r\n        });\r\n    }\r\n    \r\n    ngOnInit() {\r\n        \r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.unidadesAutorizadas = JSON.parse(this.tokenInfo.UnidadesAutorizadas)\r\n\r\n        this.pesquisarForm.get('unidadeId').setValue(this.tokenInfo.UnidadeId)\r\n        this.getTypePacotes();\r\n    }\r\n\r\n    Pesquisar() {\r\n\r\n        if (this.pesquisarForm.valid) {\r\n\r\n            this._admService.pesquisarPacote(\r\n                this.pesquisarForm.get('typePacoteId').value,\r\n                this.pesquisarForm.get('unidadeId').value)\r\n                    .subscribe(\r\n                        sucesso => { this.pesquisarSucesso(sucesso) },\r\n                        falha => { this.pesquisarError(falha)})\r\n         }\r\n    }\r\n\r\n    pesquisarSucesso(resposta){\r\n        this.pacotes = Object.assign([], resposta['pacotes']);\r\n        \r\n    }\r\n\r\n    pesquisarError(error){\r\n       // console.log(error)\r\n    }\r\n\r\n    getTypePacotes() {\r\n\r\n        this._admService.getTypePacotes()\r\n            .subscribe(\r\n                sucesso => { this.getTypePacotesSucesso(sucesso) },\r\n                falha => { this.getTypePacotesError(falha) })\r\n    }\r\n\r\n    getTypePacotesSucesso(resposta){\r\n        this.initProgressBar = 'hidden'\r\n        this.typesPacotes = Object.assign([], resposta['typePacotes']);\r\n        this.showTeste = true\r\n    }\r\n\r\n    getTypePacotesError(error){\r\n        this.initProgressBar = 'hidden'\r\n        //console.log(error)\r\n    }    \r\n\r\n    createModulo(): void {\r\n        const dialogRef = this._modal\r\n            .open(ModuloCreateComponent, ModuloCreateComponentModal());\r\n        dialogRef.afterClosed().subscribe(\r\n            data => { });\r\n    }    \r\n\r\n    openEditModal(modulo: any): void {\r\n        const dialogRef = this._modal\r\n            .open(DetailPacoteComponent, ModuloEditComponentModal(modulo.id));\r\n        dialogRef.afterClosed().subscribe(\r\n            data => { });\r\n    }\r\n\r\n    openDetailModal(modulo): void {\r\n        const dialogRef = this._modal\r\n            .open(VisualizarModuloComponent, ModuloDetalheComponentModal(modulo));\r\n        dialogRef.afterClosed().subscribe(\r\n            data => { });\r\n    }    \r\n}","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <div>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"criar pacote\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"createModulo()\" mat-icon-button>\r\n                <mat-icon>assignment</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <!-- <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"criar módulo\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"planosPgm()\" mat-icon-button>\r\n                <mat-icon>request_quote</mat-icon>\r\n            </button>\r\n        </i> -->\r\n    </div>\r\n\r\n\r\n\r\n    <!-- <br> -->\r\n    <!-- <mat-form-field *ngIf=\"showTeste\" appearance=\"standard\" style=\"width: 200px;\">\r\n        <mat-label></mat-label>\r\n\r\n        <mat-select   placeholder=\"type pacote\">\r\n            <mat-option ></mat-option>\r\n            <mat-option *ngFor=\"let uni of unidadesAutorizadas\"\r\n            \r\n            >{{uni.unidade}}</mat-option>\r\n        </mat-select>\r\n\r\n    </mat-form-field> -->\r\n\r\n    <br>\r\n\r\n    <form [formGroup]=\"pesquisarForm\" (ngSubmit)=\"Pesquisar()\" class=\"form-inline siteForm\"\r\n        style=\"margin-top: 5px;display: inline-block\">\r\n\r\n        <span style=\"font-size: 0.9em;font-style: italic;\">\r\n            Selecione o tipo para pesquisar pelo pacote:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center divSiteForm\">\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n                <mat-label>Type Pacote</mat-label>\r\n                <mat-select [disabled]=\"typesPacotes.length == 0\" formControlName=\"typePacoteId\" placeholder=\"type pacote\">\r\n                    <mat-option></mat-option>\r\n                    <mat-option *ngFor=\"let pac of typesPacotes\" [value]=\"pac.id\">{{pac.nome}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <!-- <mat-form-field *ngIf=\"showTeste\" appearance=\"standard\" style=\"width: 80px;margin-left: 10px;\">\r\n                <mat-label>Unidade</mat-label>\r\n                <mat-select formControlName=\"unidadeId\" placeholder=\"type pacote\">\r\n                    <mat-option></mat-option>\r\n                    <mat-option *ngFor=\"let uni of unidadesAutorizadas\" [value]=\"uni.unidadeId\">{{uni.unidade}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field> -->\r\n\r\n            <span>\r\n                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button style=\"\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n    <mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n\r\n    <div @rowHighlight *ngIf=\"pacotes.length > 0\" class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n            position: relative;\r\n            margin-top: 50px;\r\n            box-shadow: 0 0 1em rgb(172, 170, 170);\r\n            background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Pacotes</h4>\r\n            <p class=\"card-category\"> Pacotes cadastrados no sistema </p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 30%;font-size:1em;\r\n                                    vertical-align: middle;\r\n                                    text-align:left;\r\n                    border-top: 0px; font-weight: 400;\">NOME</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">CARGA HORÁRIA</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">ATIVO</th>\r\n\r\n                            <th style=\"width: 6%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\"></th>\r\n                            <!-- \r\n                            <th style=\"width: 6%;\r\n                    border-top: 0px;\"></th> -->\r\n\r\n                            <th style=\"width: 22%;\r\n                    border-top: 0px;\">\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of pacotes;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{i + 1}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.descricao}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.totalHoras}} hrs</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.ativo? 'sim':'não'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                <!-- <div *ngIf=\"item.ativo == true;else inativo\">\r\n\r\n                                    <mat-icon style=\"margin: 0px; margin: 0px;\r\n                                        background-color: rgb(227, 240, 227);;color: green;\" style=\"color: green;\">\r\n                                        done_outline</mat-icon>\r\n\r\n\r\n                                </div>\r\n                                <ng-template #inativo>\r\n\r\n                                    <mat-icon style=\"background-color: rgb(227, 240, 227);\r\n                                            margin: 0px; margin: 0px;color: red; \">close</mat-icon>\r\n\r\n\r\n                                </ng-template> -->\r\n\r\n                            </td>\r\n\r\n                            <td style=\"position: relative;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openDetailModal(item)\" \r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>search</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin-left: 50px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openEditModal(item)\" disabled\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>mode_edit</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                            </td>\r\n                            <td style=\"position: relative;\">\r\n\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"deletar\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"deleteColaborador(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>delete_outline</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <!-- <mat-paginator *ngIf=\"length > 5\" style=\"\r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" [length]=\"length\" [pageSize]=\"5\" hidePageSize=\"true\" (page)=\"pageEvent = $event\"\r\n                (click)=\"changePage(pageEvent)\">\r\n            </mat-paginator> -->\r\n\r\n        </div>\r\n        <!-- \r\n        <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n            top: 46.5%; \r\n            position: absolute;\">\r\n        </mat-spinner> -->\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\n\r\n@Component({\r\n    selector: 'doctemplatemodal',\r\n    templateUrl: './doctemplate.component.html',\r\n    styleUrls: ['./doctemplate.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class DocTemplateComponent implements OnInit {\r\n\r\n\r\n    baseUrl = environment.baseUrl;\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public docForm: FormGroup\r\n    public progress = false\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<DocTemplateComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.docForm = _fb.group({\r\n            nome: ['', [Validators.required]],\r\n            descricao: [''],\r\n            validadeDias: ['', [Validators.required]]\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n\r\n    }\r\n\r\n\r\n    onSubmit(form: FormGroup) {\r\n\r\n        if (form.valid) {\r\n\r\n            this.progress = true\r\n            this._http.post(`${this.baseUrl}/documentacao`, this.docForm.value, {})\r\n                .subscribe(response => {\r\n\r\n                }, (err) => {\r\n                    console.log(err)\r\n                    this.progress = false\r\n                },\r\n                    () => {\r\n                        this.progress = false\r\n                        this.dialogRef.close({ clicked: \"Ok\" });\r\n                    });\r\n        }\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Criar documento\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<!-- <div style=\"font-size: 0.8em;margin-top: 5px;\">* O colaborador será salvo na unidade de {{tokenInfo.Unidade}}</div> -->\r\n<hr>\r\n<div style=\"position: relative;\">\r\n\r\n    <form novalidate [formGroup]=\"docForm\" (ngSubmit)=\"onSubmit(docForm)\">\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%; \">\r\n            <mat-label>Nome</mat-label>\r\n            <input selected formControlName=\"nome\" matInput placeholder=\"Ex: RG\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 5%;\">\r\n            <mat-label>Descrição</mat-label>\r\n            <input selected formControlName=\"descricao\" matInput placeholder=\"\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 5%;\">\r\n            <mat-label>Validade (dias)</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" selected\r\n                formControlName=\"validadeDias\" matInput placeholder=\"\">\r\n        </mat-form-field>\r\n\r\n\r\n        <ng-container>\r\n            <button type=\"submit\" mat-raised-button disabled=\"true\" color=\"primary\"\r\n                style=\"float:right;margin-bottom: 0px;margin-left: 10px;\" [disabled]=\"!docForm.valid || progress\">\r\n\r\n\r\n                <mat-spinner *ngIf=\"progress\" style=\"margin-left: 8px;margin-top: 5px; position: absolute;\"\r\n                    [diameter]=\"26\"></mat-spinner>Salvar\r\n            </button>\r\n        </ng-container>\r\n\r\n\r\n\r\n    </form>\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\n\r\n@Component({\r\n    selector: 'prof-relatoriomodal',\r\n    templateUrl: './prof-relatorio.component.html',\r\n    styleUrls: ['./prof-relatorio.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ProfRelatorioComponent implements OnInit {\r\n\r\n    public initProgressBar = 'hidden'\r\n    public showContent = false\r\n    public rangeForm: FormGroup \r\n    public relatorio: any\r\n\r\n    public nenhumDadoLocalizado = false\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n\r\n    constructor(\r\n        private _helper: HelpersService,\r\n        private _admService: AdmService,\r\n        private _fb: FormBuilder,\r\n        private http: HttpClient,\r\n        private _dialogRef: MatDialogRef<ProfRelatorioComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n            this.rangeForm = _fb.group({\r\n                rangeIni: ['',[Validators.required]],\r\n                rangeFinal: ['',[Validators.required]]\r\n            })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        console.log(this.data)\r\n    }\r\n\r\n    public Pesquisar(){\r\n\r\n        if(this.rangeForm.valid){\r\n            this.nenhumDadoLocalizado = false\r\n            this.initProgressBar = 'visible'\r\n            //console.log(this.rangeForm.value)\r\n            this._admService.GetRelatorioProfessor(this.rangeForm.get('rangeIni').value,\r\n                                                   this.rangeForm.get('rangeFinal').value,\r\n                                                   this.data['prof'].id)\r\n                .subscribe(\r\n                    sucesso => { this.PesquisarSucesso(sucesso) },\r\n                    falha => { this.PesquisarError(falha) }\r\n                )\r\n        }\r\n    }\r\n\r\n    private PesquisarSucesso(resp){\r\n        this.initProgressBar = 'hidden'\r\n        this.relatorio = resp['result']\r\n        this._dialogRef.addPanelClass('profrelatorio-class')\r\n        this.showContent = true\r\n    }\r\n\r\n    private PesquisarError(error){\r\n        this.initProgressBar = 'hidden'\r\n\r\n        if(error['status'] == 404){\r\n            this.nenhumDadoLocalizado = true\r\n        }else{\r\n            this._helper.openSnackBarErrorDefault()\r\n        }\r\n    }\r\n\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Relatório\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<hr>\r\n\r\n<form novalidate [formGroup]=\"rangeForm\" style=\"\" (ngSubmit)=\"Pesquisar()\">\r\n\r\n    <mat-form-field appearance=\"outline\">\r\n        <mat-label>Selecione o período</mat-label>\r\n        <mat-date-range-input [rangePicker]=\"picker\">\r\n            <input matStartDate formControlName=\"rangeIni\" disabled placeholder=\"Start date\">\r\n            <input matEndDate formControlName=\"rangeFinal\" disabled placeholder=\"End date\">\r\n        </mat-date-range-input>\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-date-range-picker #picker disabled=\"false\"></mat-date-range-picker>\r\n\r\n        <!-- <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n            <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error> -->\r\n    </mat-form-field>\r\n\r\n    <span style=\"vertical-align:middle;\">\r\n        <i #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" style=\"vertical-align:middle;\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button type=\"submit\" style=\"margin-bottom: 10px;vertical-align:middle;\" mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n        </i>\r\n    </span>\r\n\r\n</form>\r\n\r\n<div *ngIf=\"nenhumDadoLocalizado\" @rowHighlight style=\"font-size: 0.8em;font-style: italic;\">Nenhum dado localizado para o período informado</div>\r\n\r\n\r\n<div *ngIf=\"showContent\" @rowHighlight>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 60%;\">\r\n        <mat-label>Nome</mat-label>\r\n        <input [value]=\"data['prof'].nome\" disabled matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"margin-left: 5%; width: 30%;\">\r\n        <mat-label>Total horas trabalhadas no período</mat-label>\r\n        <input disabled [value]=\"relatorio.totalHoursToString\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n    <br>\r\n    <span style=\"font-size: 0.8em;color: red;\">* No cálculo das horas totais, apenas são consideras as aulas iniciadas e\r\n        concluídas!</span>\r\n\r\n    <div class=\"table-responsive table-calend\" style=\"position: relative;min-height: 100px;\">\r\n\r\n        <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width: 3%;\r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n\r\n                    <th style=\"width: 7%;\r\n                    vertical-align: middle; \r\n                    text-align:left;\r\n                     border-top: 0px; font-weight: 400;\">DIA</th>\r\n\r\n                    <th style=\"width: 10%;\r\n                    vertical-align: middle;\r\n                    text-align:center;\r\n                    border-top: 0px; font-weight: 400;\">HORÁRIO</th>\r\n\r\n                    <th style=\"width: 10%;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">INICIADA<br>CONCLUÍDA</th>\r\n\r\n                    <th style=\"width: 14%;\r\n    text-align:center; \r\n    vertical-align: middle;\r\n    border-top: 0px; font-weight: 400;\">UNIDADE<br>SALA</th>\r\n\r\n                    <th style=\"width: 30%;\r\n    text-align:center; \r\n    vertical-align: middle;\r\n    border-top: 0px; font-weight: 400;\">MATÉRIA</th>\r\n\r\n                    <th style=\"width: 26%;\r\n    text-align:center; \r\n    vertical-align: middle;\r\n    border-top: 0px; font-weight: 400;\">PROFESSOR</th>\r\n\r\n                    <!-- <th style=\"width: 12.5%;font-size: 1em;\r\n    text-align:center; \r\n    vertical-align: middle;\r\n    border-top: 0px; font-weight: 400;\">OBS</th> -->\r\n\r\n\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n                <tr *ngFor=\"let cale of relatorio.calendars;let i = index;\">\r\n\r\n                    <td style=\"text-align:left;vertical-align: middle; \">\r\n                        {{ i + 1}}\r\n                    </td>\r\n                    <td style=\"text-align:left;vertical-align: middle;\">\r\n                        {{cale.diaaula | date:'dd/MM/yyyy'}}\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;\">\r\n                        {{cale.diadasemana}}<br>{{cale.horainicial}} às {{cale.horafinal}}\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                        <ng-container *datePastCheck=\"cale.diaaula;\">\r\n\r\n\r\n                            <ng-container *ngIf=\"cale.aulainiciada;else naoiniciada\">\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"aula iniciada pelo professor\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <mat-icon style=\"color: green;\">done</mat-icon>\r\n\r\n                                </i>\r\n                            </ng-container>\r\n                            <ng-template #naoiniciada>\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"aula não iniciado pelo professor\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <mat-icon style=\"color: red;\">close</mat-icon>\r\n                                </i>\r\n                            </ng-template>\r\n\r\n\r\n\r\n                            <ng-container *ngIf=\"cale.aulaconcluida;else naoconcluida\">\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"aula concluída pelo professor\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <mat-icon style=\"color: green;\">done</mat-icon>\r\n\r\n                                </i>\r\n                            </ng-container>\r\n                            <ng-template #naoconcluida>\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"aula não concluída pelo professor\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <mat-icon style=\"color: red;\">close</mat-icon>\r\n                                </i>\r\n                            </ng-template>\r\n\r\n\r\n                        </ng-container>\r\n\r\n\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;\">\r\n                        {{ cale.unidadeDescricao }}<br>{{cale.titulo}}\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;\">\r\n                        {{cale.materiaDescricao || 'livre'}}\r\n                    </td>\r\n\r\n                    <td style=\"text-align: center;vertical-align: middle;\">\r\n                        <ng-container *ngIf=\"cale.aulainiciada\">\r\n\r\n                            <div *ngIf=\"cale.aulaconcluida;else naoConcluida\">\r\n                                {{ cale.dateAulaIniciada | date:' h:mm' }} às {{ cale.dateAulaConcluida | date:' h:mm' }}\r\n                                <br>\r\n                                total: {{ cale.totalClassroomMinutes}} minutos\r\n                            </div>\r\n                            <ng-template #naoConcluida>\r\n                                {{ cale.dateAulaIniciada | date:' h:mm' }} às (aula não concluída)\r\n                            </ng-template>\r\n\r\n\r\n                        </ng-container>\r\n                        \r\n                    </td>\r\n\r\n                    <!-- <td style=\"text-align: center;vertical-align: middle;width: 14%;\">\r\n    \r\n                        \r\n                        <ng-container *ngIf=\"cale.podeVerRelatorioAula;\">\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"nota da aula\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button [disabled]=\"showSpinner\" (click)=\"GetNotaAula(cale)\"\r\n                                    style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.3em;\">note_alt</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                        </ng-container>\r\n                      \r\n                        <ng-container *ngIf=\"cale.podeVerRelatorioAula == false\">\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"editar\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button (click)=\"EditAula(cale)\"  style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.3em;\">edit</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button disabled style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.3em;\">note_alt</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button disabled style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.3em;\">note_alt</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                        </ng-container>\r\n    \r\n                        <ng-container *ngIf=\"cale.podeVerRelatorioAula == null\">\r\n                            aguarde a conslusão da aula de hoje...\r\n                        </ng-container>\r\n                    </td> -->\r\n\r\n\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Fornecedor } from \"../../FinanceiroModels/fornecedor.model\";\r\nimport { MeioPagamento } from \"src/app/Pedagogico/Matricula/CreateModal/creatematricula.component\";\r\nimport { DatePipe } from \"@angular/common\";\r\n\r\n@Component({\r\n    selector: 'fornecedorcadvendamodal',\r\n    templateUrl: './fornecedorcadcompra.component.html',\r\n   // styleUrls: ['./createfornecedor.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class FornecedorCompraComponent implements OnInit {\r\n  \r\n    baseUrl = environment.baseUrl;\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    public fornecedorForm: FormGroup;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public fornecedor: Fornecedor = new Fornecedor();\r\n    public validadeEmailMsg = false\r\n    public validadeCPFMsg = false\r\n    cargos = Cargos;\r\n    mensagem = \"\";\r\n    showMensagem = false\r\n    meioPagamento = MeioPagamento\r\n    \r\n    unidades = Unidades;\r\n    constructor(\r\n        private _datepipe: DatePipe,\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private http: HttpClient,\r\n        public dialogRef: MatDialogRef<FornecedorCompraComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.fornecedorForm = _fb.group({\r\n            dataVencimento: ['', [Validators.required]],\r\n            valor: ['', [Validators.required]],\r\n            comentario: [''],\r\n            meioPagamento: ['',[Validators.required]],\r\n            descricaoTransacao: ['', [Validators.required]],\r\n            //comentario: [''],\r\n            // nomeContato: ['', [Validators.required]],\r\n            // cep: ['', [Validators.required, Validators.minLength(8),Validators.maxLength(8)]],\r\n            // logradouro: [''],\r\n            // complemento: [''],\r\n            // cidade: ['', [Validators.required]],\r\n            // uf: ['', [Validators.required, Validators.minLength(2),Validators.maxLength(2)]],//,\r\n            // bairro: ['', [Validators.required]],//,\r\n            // observacoes: ['']//,\r\n            \r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.fornecedor = Object.assign({}, this.data['fornecedor']);\r\n\r\n        // console.log(this.tokenInfo.Unidade);\r\n        // console.log(this.tokenInfo.Codigo);\r\n        // console.log(this.tokenInfo);\r\n       // this.fornecedorForm.get('email').setErrors({ 'incorrect': true });\r\n        //this.fornecedorForm.get('cnpj_cpf').setErrors({ 'incorrect': true });\r\n        \r\n    }\r\n    dataVencimento:any;\r\n    onFocusOutDateEvent(event: any) {\r\n        if (event.target.value.length == 10) {\r\n            var data = event.target.value.split('/')\r\n            var dataForm: Date = new Date(parseInt(data[2]), parseInt(data[1]) - 1,\r\n                parseInt(data[0]), 0, 0, 0)\r\n\r\n            this.dataVencimento = dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n\r\n            this.fornecedorForm.get('dataVencimento').setValue(dataForm.toJSON())\r\n        } else {\r\n            this.fornecedorForm.get('dataVencimento').setValue('')\r\n        }\r\n    }\r\n\r\n    onSubmit(form: FormGroup) {\r\n\r\n       \r\n       // console.log(form.value)\r\n        if (form.valid) {\r\n          \r\n            //const novofornecedor = JSON.stringify(form.value);\r\n\r\n           // console.log(novofornecedor)\r\n\r\n\r\n            this.http.post(`${this.baseUrl}/financeiro/fornecedor-contas-pagar/?fornecedorId=${this.data['fornecedor'].id}`, form.value, {\r\n            }).subscribe(response => {\r\n\r\n                //console.log(response)\r\n               \r\n            }, (err) => { \r\n               // console.log(err)\r\n             },\r\n                () => {\r\n                    \r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                });\r\n        }\r\n    }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Colaborador salvo com sucesso.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n   \r\n   \r\n\r\n    consultaCEP(CEP: string) {\r\n     \r\n\r\n        this.http.get(`https://viacep.com.br/ws/${CEP}/json/`, {})\r\n            .subscribe(response => {\r\n                this.fornecedorForm.get('logradouro').setValue(response[\"logradouro\"]);\r\n                this.fornecedorForm.get('bairro').setValue(response[\"bairro\"]);\r\n                this.fornecedorForm.get('cidade').setValue(response[\"localidade\"]);\r\n                this.fornecedorForm.get('uf').setValue(response[\"uf\"]);\r\n                \r\n            }, err => {\r\n                // console.log(err) \r\n                },\r\n                () => { });\r\n    }\r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n    \r\n}","<div style=\"font-size: 1.2em;\">Fornecedor - Cadastrar contas a pagar\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n<hr>\r\n\r\n<form novalidate [formGroup]=\"fornecedorForm\" (ngSubmit)=\"onSubmit(fornecedorForm)\">\r\n\r\n    <!-- <div class=\"card-body\"> -->\r\n    <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n        <mat-label>Nome/Razão Social</mat-label>\r\n        <input selected disabled [value]=\"fornecedor.razaoSocial\" required name=\"razaoSocial\" matInput\r\n            placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 45%; margin-left: 10%;\">\r\n            <mat-label>Email</mat-label>\r\n            <input selected formControlName=\"email\" name=\"templateName\" matInput placeholder=\"Email\">\r\n        </mat-form-field> -->\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 5%;\">\r\n        <mat-label>CPF/CNPJ</mat-label>\r\n        <input selected disabled [value]=\"fornecedor.cnpj_cpf\" name=\"cnpj_cpf\" matInput placeholder=\"cnpj_cpf\">\r\n        <!-- <mat-hint @rowHighlight *ngIf=\"validadeEmailMsg\" style=\"color: red;\">\r\n            O email informado já existe\r\n        </mat-hint> -->\r\n    </mat-form-field>\r\n    <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar \" matTooltipPosition=\"above\"\r\n                            matTooltipHideDelay=\"100\">\r\n                            <button style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon>search</mat-icon>\r\n                            </button>\r\n                        </i> -->\r\n    <br>\r\n    <mat-form-field (focusout)=\"onFocusOutDateEvent($event)\" appearance=\"standard\" style=\"width: 145px; \">\r\n        <mat-label>Vencimento</mat-label>\r\n        <input mask=\"00/00/0000\" required name=\"dataVencimento\" matInput \r\n        [value]=\"dataVencimento\"\r\n            \r\n            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n       \r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n        <mat-label>Valor</mat-label>\r\n        <input currencyMask [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" formControlName=\"valor\" type=\"text\"\r\n            selected required name=\"valor\" matInput placeholder=\"0,00\">\r\n        <span matPrefix>R$&nbsp;</span>\r\n    </mat-form-field>\r\n\r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 18%;margin: 5%;\">\r\n        <mat-label>Meio Pagamento</mat-label>\r\n        <input \r\n            formControlName=\"meioPagamento\"\r\n            selected name=\"meioPagamento\" matInput placeholder=\"digite o CPF\">\r\n       \r\n    </mat-form-field> -->\r\n    <mat-form-field appearance=\"standard\" style=\"width: 40%;margin-left: 5%;margin-top: 20px;\">\r\n        <mat-label>Forma de pagamento</mat-label>\r\n        <mat-select formControlName=\"meioPagamento\" selected name=\"cargo\" required>\r\n            <mat-option></mat-option>\r\n            <mat-option *ngFor=\"let item of meioPagamento\" [value]=\"item.type\">\r\n                {{item.value}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <br>\r\n    <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n        <mat-label>Descrição</mat-label>\r\n        <input formControlName=\"descricaoTransacao\" name=\"descricaoTransacao\" selected required matInput\r\n            placeholder=\"Nome\">\r\n    </mat-form-field>\r\n    <br>\r\n    <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n        <mat-label>Observação</mat-label>\r\n        <textarea formControlName=\"comentario\" name=\"comentario\" matInput></textarea>\r\n    </mat-form-field>\r\n\r\n\r\n    <div *ngIf=\"showMensagem\" class=\"alert alert-danger\" role=\"alert\"\r\n        style=\"text-align: center; vertical-align: middle; position:relative; height: 45px; float:left;margin-bottom: 20px;\">\r\n        {{mensagem}}\r\n    </div>\r\n\r\n    <button type=\"submit\" mat-raised-button disabled=\"false\" style=\"float:right;margin-bottom: 0px;margin-left: 10px;\"\r\n        [disabled]=\"!fornecedorForm.valid\">\r\n        Salvar\r\n    </button>\r\n\r\n\r\n</form>","import {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Self,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  NgControl,\r\n  Validators\r\n} from '@angular/forms';\r\nimport {MAT_FORM_FIELD, MatFormField, MatFormFieldControl} from '@angular/material/form-field';\r\nimport {Subject} from 'rxjs';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'currency-input',\r\n  templateUrl: 'currency-input.html',\r\n  styleUrls: ['currency-input.scss'],\r\n  providers: [{ provide: MatFormFieldControl, useExisting: MyCurrencyInput }],\r\n  host: {\r\n    '[class.example-floating]': 'shouldLabelFloat',\r\n    '[id]': 'id',\r\n  }\r\n})\r\n\r\n\r\nexport class MyCurrencyInput\r\n  implements ControlValueAccessor, MatFormFieldControl<number>, OnDestroy {\r\n  static nextId = 0;\r\n  @ViewChild('currency') currencyInput: HTMLInputElement;\r\n  //@ViewChild('exchange') exchangeInput: HTMLInputElement;\r\n  //@ViewChild('subscriber') subscriberInput: HTMLInputElement;\r\n\r\n  parts: FormGroup;\r\n  stateChanges = new Subject<void>();\r\n  focused = false;\r\n  controlType = 'currency-input';\r\n  id = `currency-input-${MyCurrencyInput.nextId++}`;\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  get empty() {\r\n    const {value: {currency}} = this.parts;\r\n\r\n    return currency// TODO       !area && !exchange && !subscriber;\r\n  }\r\n\r\n  get shouldLabelFloat() {\r\n    return this.focused || !this.empty;\r\n  }\r\n\r\n  @Input('aria-describedby') userAriaDescribedBy: string;\r\n\r\n  @Input()\r\n  get placeholder(): string {\r\n    return this._placeholder;\r\n  }\r\n  set placeholder(value: string) {\r\n    this._placeholder = value;\r\n    this.stateChanges.next();\r\n  }\r\n  private _placeholder: string;\r\n\r\n  @Input()\r\n  get required(): boolean {\r\n    return this._required;\r\n  }\r\n  set required(value: boolean) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n  private _required = false;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this._disabled ? this.parts.disable() : this.parts.enable();\r\n    this.stateChanges.next();\r\n  }\r\n  private _disabled = false;\r\n\r\n  @Input()\r\n  get value(): any | null {\r\n    //  console.log(this.parts.value)\r\n    if (this.parts.valid) {\r\n      const value  = `${this.parts} + s`;\r\n      return value;\r\n      //new MyTel(area, exchange, subscriber);\r\n    }\r\n    return null;\r\n  }\r\n  set value(tel: any | null) {\r\n    const value = tel || 0;\r\n    this.parts.setValue(value);\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  get errorState(): boolean {\r\n    return this.parts.invalid && this.parts.dirty;\r\n  }\r\n\r\n  constructor(\r\n    formBuilder: FormBuilder,\r\n    private _focusMonitor: FocusMonitor,\r\n    private _elementRef: ElementRef<HTMLElement>,\r\n    @Optional() @Inject(MAT_FORM_FIELD) public _formField: MatFormField,\r\n    @Optional() @Self() public ngControl: NgControl) {\r\n\r\n    this.parts = formBuilder.group({\r\n      currency: [\r\n        '',\r\n        [Validators.required, Validators.minLength(3)]\r\n      ]\r\n    });\r\n\r\n    _focusMonitor.monitor(_elementRef, true).subscribe(origin => {\r\n      if (this.focused && !origin) {\r\n        this.onTouched();\r\n      }\r\n      this.focused = !!origin;\r\n      this.stateChanges.next();\r\n    });\r\n\r\n    if (this.ngControl != null) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  autoFocusNext(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n    if (!control.errors && nextElement) {\r\n      this._focusMonitor.focusVia(nextElement, 'program');\r\n    }\r\n  }\r\n\r\n  autoFocusPrev(control: AbstractControl, prevElement: HTMLInputElement): void {\r\n    if (control.value.length < 1) {\r\n      this._focusMonitor.focusVia(prevElement, 'program');\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n    this._focusMonitor.stopMonitoring(this._elementRef);\r\n  }\r\n\r\n  setDescribedByIds(ids: string[]) {\r\n    const controlElement = this._elementRef.nativeElement\r\n      .querySelector('.currency-input-container')!;\r\n    controlElement.setAttribute('aria-describedby', ids.join(' '));\r\n  }\r\n\r\n  onContainerClick() {\r\n    // if (this.parts.controls.subscriber.valid) {\r\n    //   this._focusMonitor.focusVia(this.subscriberInput, 'program');\r\n    // } else if (this.parts.controls.exchange.valid) {\r\n    //   this._focusMonitor.focusVia(this.subscriberInput, 'program');\r\n    // } else if (this.parts.controls.area.valid) {\r\n    //   this._focusMonitor.focusVia(this.exchangeInput, 'program');\r\n    // } else {\r\n    //   this._focusMonitor.focusVia(this.areaInput, 'program');\r\n    // }\r\n  }\r\n\r\n  writeValue(currency: '' | null): void {\r\n    this.value = currency;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  _handleInput(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n   // this.autoFocusNext(control, nextElement);\r\n    this.onChange(this.value);\r\n  }\r\n\r\n  static ngAcceptInputType_disabled: BooleanInput;\r\n  static ngAcceptInputType_required: BooleanInput;\r\n}\r\n\r\n\r\n/**  Copyright 2021 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","<div role=\"group\" class=\"currency-input-container\"\r\n     [formGroup]=\"parts\"\r\n     [attr.aria-labelledby]=\"_formField?.getLabelId()\">\r\n  <input class=\"currency-input-element\"\r\n         formControlName=\"currency\" size=\"3\"\r\n         maxLength=\"10\"\r\n         aria-label=\"currency code\"\r\n         (input)=\"_handleInput(parts.controls.currency)\"\r\n         #currency>\r\n  <!-- <span class=\"example-tel-input-spacer\">&ndash;</span> -->\r\n  <!-- <input class=\"example-tel-input-element\"\r\n         formControlName=\"exchange\"\r\n         maxLength=\"3\"\r\n         size=\"3\"\r\n         aria-label=\"Exchange code\"\r\n         (input)=\"_handleInput(parts.controls.exchange, subscriber)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.exchange, area)\"\r\n         #exchange>\r\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\r\n  <input class=\"example-tel-input-element\"\r\n         formControlName=\"subscriber\"\r\n         maxLength=\"4\"\r\n         size=\"4\"\r\n         aria-label=\"Subscriber number\"\r\n         (i2000pxnput)=\"_handleInput(parts.controls.subscriber)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.subscriber, exchange)\"\r\n         #subscriber> -->\r\n</div>\r\n\r\n\r\n<!-- Copyright 2021 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license -->","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { SpinnerParams } from \"src/app/_shared/models/spinner.model\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\n\r\n@Component({\r\n    selector: 'createcolaboradoresrmodal',\r\n    templateUrl: './createcolaboradores.component.html',\r\n    styleUrls: ['./createcolaboradores.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class CreateColaboradoresComponent implements OnInit {\r\n\r\n    // infoSpinner: SpinnerParams = {\r\n    //     diameter: 100,\r\n    //     marginleft: 42.5,\r\n    //     margintop: 10\r\n    // }\r\n\r\n    //spinners\r\n    mostrarModalPrincipal = true\r\n\r\n\r\n    baseUrl = environment.baseUrl;\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    public colaboradorForm: FormGroup;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public validadeEmailMsg = false\r\n    public validadeCPFMsg = false\r\n    public disabledSpinner = false\r\n    public showContent = false\r\n    public disabledSaveButton = 'hidden'\r\n    public initProgressBar = 'visible'\r\n    showForm = false\r\n    cargos: any[] = new Array<any>()\r\n    mensagem = \"\";\r\n    public showMensagem = 'hidden'\r\n    public msgErros: any\r\n\r\n    constructor(\r\n        private _snackBar: MatSnackBar,\r\n        private _helper: HelpersService,\r\n        private _admService: AdmService,\r\n        private _fb: FormBuilder,\r\n        private http: HttpClient,\r\n        public dialogRef: MatDialogRef<CreateColaboradoresComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.colaboradorForm = _fb.group({\r\n            nome: ['', [Validators.required, Validators.minLength(5)]],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n            celular: [null, [Validators.required, Validators.minLength(5)]],\r\n            cargoId: ['', [Validators.required]],\r\n            ativo: [true, [Validators.required]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            complemento: [''],\r\n            numero: ['', [Validators.required]],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]]//,\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    ngOnInit() {\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.getCargos();\r\n    }\r\n\r\n    getCargos() {\r\n\r\n        this.http.get(`${this.baseUrl}/parametro/value/Cargo`)\r\n            .subscribe(response => {\r\n                this.cargos = Object.assign([], response['values'])\r\n            }, (err) => {\r\n                console.log(err)\r\n            },\r\n                () => {\r\n                    //this.dialogRef.updateSize('680px', '60vh')\r\n                    this.dialogRef.addPanelClass('mycreatecolab-class')\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showContent = true\r\n                    this.mostrarModalPrincipal = false\r\n                    this.showForm = true\r\n                    this.funcaoTestar()\r\n                });\r\n    }\r\n\r\n    onSubmit(form: FormGroup) {\r\n        this.showMensagem = 'hidden'\r\n\r\n        if (this.colaboradorForm.valid) {\r\n            this.disabledSpinner = true\r\n\r\n            this.disabledSaveButton = 'visible'\r\n            this.http.post(`${this.baseUrl}/colaboradores`, this.colaboradorForm.value, {\r\n            }).subscribe(response => {\r\n            }, (err) => {\r\n                if (err['status'] == 409) {\r\n                    this.msgErros = err['error'].msg\r\n                    this.showMensagem = 'visible'\r\n                    this.disabledSaveButton = 'hidden'\r\n                } else {\r\n                    this._helper.openSnackBarErrorDefault()\r\n\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                }\r\n\r\n\r\n\r\n            },\r\n                () => {\r\n\r\n                    this._helper.openSnackBarSucesso('Colaborador salvo com sucesso')\r\n                    // this._helper.CloseModalWithOK();\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                    this.disabledSaveButton = 'hidden'\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    cpfValidation = false\r\n    emailValidation = false\r\n    funcaoTestar() {\r\n        let cpf = false\r\n        this.cpfValidation = cpf\r\n    }\r\n\r\n\r\n    showEndereco = 'hidden'\r\n    consultaCEP(CEP: string) {\r\n        // console.log(CEP);\r\n        if (this.colaboradorForm.get('cep').valid) {\r\n\r\n\r\n            this._admService.CepConsulta(this.colaboradorForm.get('cep').value)\r\n                .subscribe(response => {\r\n\r\n                    this.colaboradorForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n                    this.colaboradorForm.get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n                    this.colaboradorForm.get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n                    this.colaboradorForm.get('uf').setValue(response[\"uf\"].toUpperCase());\r\n\r\n                }, err => { },\r\n                    () => {\r\n\r\n                        this.showEndereco = 'visible'\r\n                    });\r\n        }\r\n    }\r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n\r\n    get disabledButton() {\r\n        if (this.colaboradorForm.valid) {\r\n            return this.disabledSaveButton != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class VerOCPF {\r\n\r\n}","<div style=\"font-size: 1.2em;\">Cadastrar Colaborador\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\"></mat-progress-bar>\r\n\r\n<div *ngIf=\"showContent\" @rowHighlight>\r\n\r\n\r\n    <div style=\"font-size: 0.9em;margin-top: 5px;\">* O colaborador será salvo na unidade de {{tokenInfo.Unidade}}</div>\r\n    <hr>\r\n    <div style=\"\">\r\n\r\n        <form  novalidate [formGroup]=\"colaboradorForm\" style=\"\"\r\n            (ngSubmit)=\"onSubmit(colaboradorForm)\">\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 55%;\">\r\n                <mat-label>Nome</mat-label>\r\n                <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"nome\" matInput\r\n                    placeholder=\"Nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 40%; margin-left: 5%;\">\r\n                <mat-label>Email</mat-label>\r\n                <input selected formControlName=\"email\" matInput oninput=\"this.value = this.value.toLowerCase()\"\r\n                    placeholder=\"Email\">\r\n                    <mat-hint  *ngIf=\"emailValidation\" style=\"color:red\" >E-mail já cadastrado</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 18%;\">\r\n                <mat-label>CPF</mat-label>\r\n                <input mask=\"000.000.000-00\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                    formControlName=\"cpf\" minlength=\"11\" maxlength=\"14\" selected matInput placeholder=\"digite o CPF\">\r\n                    <mat-hint  *ngIf=\"cpfValidation\" style=\"color:red\" >CPF já cadastrado</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field style=\"width: 20%;margin-left: 5%;\" appearance=\"standard\">\r\n                <mat-label>Celular</mat-label>\r\n                <input formControlName=\"celular\" mask=\"(00) 00000-0000\" matInput\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 5%;\">\r\n                <mat-label>Cargo/Função</mat-label>\r\n                <mat-select formControlName=\"cargoId\" selected required>\r\n                    <mat-option></mat-option>\r\n                    <mat-option *ngFor=\"let cargo of cargos\" \r\n                    [value]=\"cargo.id\">{{cargo.value}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-slide-toggle style=\"width: 10%; margin-left: 17%;\" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n                formControlName=\"ativo\" name=\"ativo\" required matTooltip=\"ativo/inativo\" matTooltipPosition=\"above\"\r\n                matTooltipHideDelay=\"250\" color=\"primary\" [required]=\"false\">\r\n            </mat-slide-toggle>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 15%;\">\r\n                <mat-label>CEP</mat-label>\r\n                <input mask=\"00.000-000\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                    formControlName=\"cep\" minlength=\"8\" maxlength=\"10\" required matInput placeholder=\"apenas números\">\r\n            </mat-form-field>\r\n            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\"\r\n                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                <button type=\"button\" (click)=\"consultaCEP(colaboradorForm.get('cep').value)\" style=\"margin: 0px; margin: 0px;\"\r\n                    mat-icon-button>\r\n                    <mat-icon>search</mat-icon>\r\n                </button>\r\n            </i>\r\n\r\n            <br>\r\n\r\n            <div [style.visibility]=\"showEndereco\" @rowHighlight>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 35%;\">\r\n                    <mat-label>Logradouro</mat-label>\r\n                    <input selected formControlName=\"logradouro\" oninput=\"this.value = this.value.toUpperCase()\"\r\n                        name=\"templateName\" matInput placeholder=\"ex: rua tal...\">\r\n                </mat-form-field>\r\n\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 10%;margin-left: 5%;\">\r\n                    <mat-label>Nº</mat-label>\r\n                    <input formControlName=\"numero\" oninput=\"this.value = this.value.toUpperCase()\" selected\r\n                        name=\"templateName\" matInput placeholder=\"ex: rua tal...\">\r\n                </mat-form-field>\r\n\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 45%; margin-left: 5%;\">\r\n                    <mat-label>Complemento</mat-label>\r\n                    <input selected formControlName=\"complemento\" oninput=\"this.value = this.value.toUpperCase()\"\r\n                        name=\"templateName\" matInput placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n                </mat-form-field>\r\n\r\n                <br>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                    <mat-label>Cidade</mat-label>\r\n                    <input disabled selected [value]=\"colaboradorForm.get('cidade').value\" name=\"templateName\" matInput\r\n                        placeholder=\"digite o bairro\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 5%; margin-left: 5%;\">\r\n                    <mat-label>UF</mat-label>\r\n                    <input disabled selected [value]=\"colaboradorForm.get('uf').value\" name=\"templateName\" matInput\r\n                        placeholder=\"digite o bairro\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 35%; margin-left: 5%;\">\r\n                    <mat-label>Bairro</mat-label>\r\n                    <input selected formControlName=\"bairro\" oninput=\"this.value = this.value.toUpperCase()\"\r\n                        name=\"templateName\" matInput placeholder=\"digite o bairro\">\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <mat-progress-bar [style.visibility]=\"disabledSaveButton\" @rowHighlight mode=\"query\">\r\n            </mat-progress-bar>\r\n\r\n            <span [style.visibility]=\"showMensagem\"  \r\n            style=\"width: 480px; text-align: left; vertical-align: middle;\r\n            float:left;margin-top: 15px;\r\n                padding: 0px;\">\r\n                <div *ngFor=\"let erro of msgErros; \" style=\"font-size: 0.8em;color: red;\">\r\n                    * {{ erro }}\r\n                </div>\r\n            </span>\r\n\r\n            <span style=\"float: right;margin-top: 15px;\">\r\n\r\n                <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"disabledButton\" \r\n                style=\"float:right;margin-left: 10px;\">\r\n                    Salvar\r\n                </button>\r\n            </span>\r\n\r\n        </form>\r\n        \r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\n@Component({\r\n    selector: 'createbolsamodal',\r\n    templateUrl: './createbolsa.component.html',\r\n    styleUrls: ['./createbolsa.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class CreateBolsaComponent implements OnInit {\r\n    \r\n    public initProgressBar = 'visible'\r\n    public showContent = false\r\n    public typesPacotes: any[] = new Array<any>()\r\n    public bolsaForm: FormGroup\r\n\r\n    constructor(\r\n        private _admService: AdmService,\r\n        private _helper: HelpersService, \r\n        private _fb: FormBuilder,\r\n        public dialogRef: MatDialogRef<CreateBolsaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.bolsaForm = _fb.group({\r\n            nome:['',[Validators.required]],\r\n            percentualDesconto:['',[Validators.required,Validators.min(1), Validators.max(100)]],\r\n            typePacoteId:['',[Validators.required]],\r\n            dataExpiracao:['',[Validators.required]]\r\n        })        \r\n    }\r\n\r\n\r\n    \r\n\r\n    ngOnInit() {\r\n        this.GetTypePacotes();\r\n    }\r\n\r\n    GetTypePacotes() {\r\n        this.initProgressBar = 'visible'\r\n        this._admService.getTypePacotes()\r\n            .subscribe(\r\n                sucesso => { this.GetTypePacotesSucesso(sucesso) },\r\n                falha => { this.GetTypePacotesErro(falha) }\r\n            )\r\n\r\n    }\r\n\r\n    GetTypePacotesSucesso(resposta) {\r\n        this.typesPacotes = Object.assign([], resposta['typePacotes']);\r\n        this.initProgressBar = 'hidden'\r\n        this.dialogRef.addPanelClass('createbolsa-class')\r\n        this.showContent = true\r\n    }\r\n\r\n    GetTypePacotesErro(error) {\r\n        this.initProgressBar = 'hidden'\r\n    }\r\n\r\n    disabledSaveButton = 'hidden'\r\n    get disabledButton() {\r\n        if (this.bolsaForm.valid) {\r\n            return this.disabledSaveButton != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    onSubmit(form){\r\n\r\n        if(this.bolsaForm.valid){\r\n            this.disabledSaveButton = 'visible'\r\n            this._admService.SaveBolsa(this.bolsaForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.onSubmitSucesso(sucesso) },\r\n                    falha => { this.onSubmitErro(falha) }\r\n                )}\r\n    }\r\n\r\n    onSubmitSucesso(resp){\r\n        this.disabledSaveButton = 'hidden'\r\n        //console.log(resp['senha'])\r\n        this._helper.openSnackBarSucesso('Bolsa cadastrada com sucesso.')\r\n        this.dialogRef.close({ clicked: true})\r\n    }\r\n\r\n    onSubmitErro(error){\r\n        this.disabledSaveButton = 'hidden'\r\n       // console.log(error)\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\n","<div style=\"font-size: 1.1em;\">Criar Bolsa\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n<div @rowHighlight *ngIf=\"showContent\">\r\n    <hr>\r\n\r\n    <form novalidate [formGroup]=\"bolsaForm\" style=\"\" (ngSubmit)=\"onSubmit(bolsaForm)\">\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n            <mat-label></mat-label>\r\n            <mat-select [disabled]=\"typesPacotes.length == 0\" formControlName=\"typePacoteId\">\r\n                <mat-option></mat-option>\r\n                <mat-option *ngFor=\"let pac of typesPacotes\" [value]=\"pac.id\">{{pac.nome}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px;margin-left: 10px; \">\r\n            <mat-label>Nome</mat-label>\r\n            <input selected formControlName=\"nome\" matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 100px; \">\r\n            <mat-label>Percentual desconto</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" maxlength=\"3\"\r\n                selected formControlName=\"percentualDesconto\" matInput placeholder=\"Percentual\">\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 150px;margin-left: 10px;  \">\r\n            <mat-label>Data de expiração</mat-label>\r\n            <input selected formControlName=\"dataExpiracao\" matInput>\r\n        </mat-form-field> -->\r\n        <mat-form-field appearance=\"standard\" style=\"width: 160px;margin-left: 10px;  \">\r\n            <mat-label>Data de expiração</mat-label>\r\n            <input matInput formControlName=\"dataExpiracao\" [matDatepicker]=\"dp3\" disabled>\r\n            <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-progress-bar [style.visibility]=\"disabledSaveButton\" @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n        </mat-progress-bar>\r\n        <div style=\"float: right;margin-top: 15px;\">\r\n\r\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"disabledButton\" style=\"width: 100px; position: relative; float:right;margin-bottom: 10px;\r\n            margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n        </div>\r\n\r\n    </form>\r\n\r\n</div>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from './_shared/shared.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AdmModule } from './Adm/adm.module';\nimport { PedagogicoModule } from './Pedagogico/pedagogico.module';\nimport { ComercialModule } from './Comercial/comercial.module';\nimport { UserComponent } from './_Auth/user/user.component';\nimport { LoginComponent } from './_Auth/user/login/login.component';\nimport { AlunoModule } from './Aluno/aluno.module';\nimport { FinanceiroModule } from './Financeiro/financeiro.module';\nimport { NewMatriculaModule } from './NewMatricula/newmatricula.module';\nimport { GeralModule } from './Geral/geral.module';\nimport { TrocaSenhaComponent } from './_Auth/user/trocaSenha/troca-senha.component';\nimport { SelectUnidadeComponent } from './_Auth/user/login/selecionarUnidade/selectunidade.component';\n\n\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"jwt\");\n}\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    UserComponent,\n    TrocaSenhaComponent,\n    AppComponent,\n    SelectUnidadeComponent\n  ],\n  imports: [\n\n    HttpClientModule,\n    BrowserModule,\n    FormsModule,\n    SharedModule,\n    AdmModule,\n    PedagogicoModule,\n    ComercialModule,\n    AlunoModule,\n    FinanceiroModule,\n    GeralModule,\n    AppRoutingModule,\n    NewMatriculaModule\n  ],\n  providers: [\n ],\n entryComponents: [\n  TrocaSenhaComponent,\n  SelectUnidadeComponent  \n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { HighlightTrigger } from 'src/app/_shared/animation/item.animation';\r\nimport { AuthService } from '../../auth.service';\r\nimport { SelectUnidadeComponent } from './selecionarUnidade/selectunidade.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  animations: [HighlightTrigger]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  titulo = 'Login';\r\n  //model: any = {};\r\n  hide = true;\r\n  progress = false\r\n  showErrorMsg = 'hidden'\r\n  errorMsg = 'Ocorreu um erro desconhecido. Entre em contato com o administrador do sistema.'\r\n  unidades: any[] = new Array<any>()\r\n  public authForm: FormGroup\r\n  constructor(private authService: AuthService,\r\n    private _fb: FormBuilder,\r\n    public router: Router,\r\n    private _modal: MatDialog\r\n    //, private toastr: ToastrService\r\n  ) {\r\n    this.authForm = _fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      senha: ['', [Validators.required, Validators.minLength(8)]]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (localStorage.getItem('jwt') != null) {\r\n      this.router.navigate(['/adm']);\r\n    }\r\n  }\r\n\r\n  preLogin(form: any) {\r\n    this.showErrorMsg = 'hidden'\r\n    this.progress = true\r\n    if (this.authForm.valid) {\r\n      this.authService.preLogin(form)\r\n        .subscribe(\r\n          sucesso => { this.preLoginSucess(sucesso) },\r\n          falha => { this.preLoginError(falha) });\r\n    }\r\n\r\n  }\r\n\r\n  preLoginSucess(sucesso) {\r\n    //console.log(sucesso)\r\n    this.unidades = sucesso['unidades']\r\n    this.progress = false\r\n    if (this.unidades.length == 1) {\r\n\r\n      // this.authService.login(this.authForm.value)\r\n      //   .subscribe(\r\n      //     sucesso => { this.preLoginSucesso(sucesso) },\r\n      //     falha => { this.preLoginError(falha) });\r\n\r\n      this.login(this.unidades[0].unidadeId)\r\n\r\n    } else {\r\n\r\n      this.openSelectUnidadeModal()\r\n\r\n    }\r\n  }\r\n\r\n  openSelectUnidadeModal(): void {\r\n    const dialogRef = this._modal\r\n      .open(SelectUnidadeComponent, SelectUnidadeModalConfig(\r\n          this.authForm.value,\r\n          this.unidades));\r\n    dialogRef.afterClosed().subscribe((data) => {\r\n      // if(data.clicked == true){\r\n      //   this.login(data.unidadeId)\r\n      // } \r\n    });\r\n  }\r\n\r\n  \r\n\r\n  preLoginError(error) {\r\n    //console.log(error['status'])\r\n\r\n    if (error['status'] == 401) {\r\n      this.progress = false\r\n      this.errorMsg = 'Usuário não autorizado.'\r\n      this.showErrorMsg = 'visible'\r\n    } else {\r\n      this.progress = false\r\n      this.errorMsg = error['error'].errors.Mensagens[0]\r\n      this.showErrorMsg = 'visible'\r\n    }\r\n  }\r\n\r\n  login(unidadeId) {\r\n    //console.log(this.authForm.value)\r\n    //console.log(unidadeId)\r\n    this.showErrorMsg = 'hidden'\r\n    this.progress = true\r\n\r\n    if (this.authForm.valid) {\r\n      this.authService.login(this.authForm.value,unidadeId)\r\n        .subscribe(\r\n          sucesso => { this.loginSucesso(sucesso) },\r\n          falha => { this.loginError(falha) });\r\n    }\r\n  }\r\n\r\n  loginSucesso(resposta) {\r\n   \r\n    this.progress = false\r\n    const navigationExtras: NavigationExtras = { state: { data: 'From Login' } };\r\n    this.router.navigate(['/adm'], navigationExtras);\r\n  }\r\n\r\n  loginError(error) {\r\n\r\n   // console.log(error['status'])\r\n\r\n    if (error['status'] != 0) {\r\n      this.progress = false\r\n      this.errorMsg = error['error'].errors.Mensagens[0]\r\n      this.showErrorMsg = 'visible'\r\n    } else {\r\n      this.progress = false\r\n      this.errorMsg = 'Ocorreu um erro desconhecido. Entre em contato com o administrador do sistema.'\r\n      this.showErrorMsg = 'visible'\r\n    }\r\n  }\r\n\r\n  get disabledButton() {\r\n    // return true\r\n    if (this.authForm.valid) {\r\n      return this.progress\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport function SelectUnidadeModalConfig(form: any, unidades: any) {\r\n  return {\r\n    width: '400px',\r\n    height: '190px',\r\n    data: { form: form, unidades: unidades },\r\n    hasBackdrop: true,\r\n    disableClose: true\r\n  }\r\n}\r\n","<body class=\"text-center\" data-gr-c-s-loaded=\"true\">\r\n\r\n  <form class=\"form-signin\" [formGroup]=\"authForm\" (ngSubmit)=\"preLogin(authForm.value)\" style=\"margin-top: 150px;background-color: rgb(227, 240, 227);\r\n  border-radius: 10px\">\r\n\r\n    <h1 class=\"h3 mb-3 font-weight-normal\"></h1>\r\n\r\n    <label for=\"username\" class=\"sr-only\">Usuário</label>\r\n\r\n    <input type=\"email\" id=\"username\" class=\"form-control\" placeholder=\"Usuário\"\r\n      formControlName=\"email\">\r\n\r\n    <label for=\"password\" class=\"sr-only\">Senha</label>\r\n\r\n    <input type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Senha\" minlength=\"8\"\r\n      formControlName=\"senha\">\r\n\r\n    <div [style.visibility]=\"showErrorMsg\" @rowHighlight>\r\n      <span @rowHighlight style=\"color: red;font-size: 0.9em;\">{{ errorMsg }}\r\n      </span>\r\n    </div>\r\n\r\n    <div>\r\n      <button [disabled]=\"disabledButton\" mat-raised-button color=\"primary\" type=\"submit\">\r\n        <mat-spinner *ngIf=\"progress\" style=\"margin-left: 12px;margin-top: 5px; position: absolute;\" [diameter]=\"26\">\r\n        </mat-spinner>\r\n        Entrar\r\n      </button>\r\n\r\n    </div>\r\n\r\n  </form>  \r\n\r\n</body>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'testando-app',\r\n    template: '<div>testando</div>'\r\n})\r\n\r\nexport class TestandoComponent implements OnInit {\r\n    menu: any;\r\n    constructor(\r\n        //private jwtHelper: JwtHelperService, \r\n        private router: Router,\r\n        private http: HttpClient) { }\r\n    ngOnInit() {\r\n        console.log('testando 123')\r\n        \r\n    }\r\n\r\n\r\n\r\n}","export class TokenInfos {\r\n    constructor(\r\n        public Nome?: string,\r\n        public Unidade?: string,\r\n        public UnidadeId?: string,\r\n        public Codigo?: string,\r\n        public UnidadeBairro?: string,\r\n        public UnidadesAutorizadas?: string,\r\n        public Telas?:string[],\r\n        public role?: string,\r\n        public email?: string\r\n    ) { }\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { Produto } from \"src/app/_shared/models/produto.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { ProdutoCreateComponent } from \"./produto-create/produto-create.component\";\r\nimport { ProdutoDoacaoComponent } from \"./produto-doacao/produto-doacao.component\";\r\nimport { ProdutoEditComponent } from \"./produto-edit/produto-edit.component\";\r\n\r\n@Component({\r\n    selector: \"produtos-app\",\r\n    templateUrl: './produtos.component.html',\r\n    styleUrls: ['./produtos.component.scss']\r\n})\r\n\r\nexport class ProdutosComponent implements OnInit {\r\n\r\n    private baseUrl = environment.baseUrl;\r\n    public produtos: any[] = new Array<Produto>();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    private jwtHelper = new JwtHelperService();\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n\r\n        this.GetProdutos();\r\n    }\r\n\r\n    GetProdutos(){\r\n\r\n        this._http.get(`${this.baseUrl}/produto`)\r\n        .subscribe(resp => {\r\n            this.produtos = Object.assign([], resp['produtos'])\r\n            console.log(this.produtos)\r\n        }, (error) => { console.log(error) })\r\n\r\n    }\r\n\r\n    pesquisar(nome: string, cargo: string, unidade: string) {\r\n\r\n\r\n    }\r\n\r\n\r\n    openCreateProdutoModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(ProdutoCreateComponent, {\r\n                height: 'auto',\r\n                width: '600px',\r\n\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });       \r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result.clicked === \"Ok\") {\r\n\r\n                this.GetProdutos();\r\n               \r\n            } else if (result.clicked === \"Cancel\") {\r\n               \r\n            }\r\n        });\r\n    }\r\n\r\n    openEditProdutoModal(produto: Produto): void {\r\n        const dialogRef = this._modal\r\n            .open(ProdutoEditComponent, {\r\n                height: 'auto',\r\n                width: '600px',\r\n\r\n                data: { produto: produto },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        \r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result.clicked === \"Ok\") {\r\n\r\n                this.GetProdutos();\r\n               \r\n            } else if (result.clicked === \"Cancel\") {\r\n               \r\n            }\r\n        });\r\n    }\r\n\r\n    openDoacaoProdutoModal(produto: Produto): void{ //ProdutoDoacaoComponent\r\n        const dialogRef = this._modal\r\n        .open(ProdutoDoacaoComponent, {\r\n            height: 'auto',\r\n            width: '900px',\r\n            autoFocus: false,\r\n            maxHeight: '90vh',\r\n            maxWidth: '400vh',\r\n\r\n\r\n            data: { produto: produto },\r\n            hasBackdrop: true,\r\n            disableClose: true\r\n        });\r\n    \r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n        if (result.clicked === \"Ok\") {\r\n\r\n            this.GetProdutos();\r\n           \r\n        } else if (result.clicked === \"Cancel\") {\r\n           \r\n        }\r\n    });\r\n    }\r\n\r\n\r\n}","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <div>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"cadastrar produto\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button mat-icon-button (click)=\"openCreateProdutoModal()\">\r\n                <mat-icon>shopping_cart</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n\r\n    <br>\r\n\r\n    <!-- <form class=\"form-inline siteForm\" style=\"margin-top: 5px;display: inline-block\">\r\n\r\n        <span style=\"margin-left: 10px;font-size: 0.9em;font-style: italic;\">Digite um dos campos para pesquisar pelo Produto:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center divSiteForm\">\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"transform: scale(0.85);\">\r\n                <mat-label>Nome</mat-label>\r\n                <input #nome selected name=\"templateName\" matInput placeholder=\"digite o nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"margin-left: 2px;transform: scale(0.85);\">\r\n                <mat-label>E-mail</mat-label>\r\n                <input #email selected name=\"templateName\" matInput placeholder=\"digite o E-mail\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"margin-left: 2px;transform: scale(0.85);\">\r\n                <mat-label>CPF</mat-label>\r\n                <input #cpf selected name=\"templateName\" matInput placeholder=\"digite o CPF\">\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button style=\"\" (click)=\"pesquisar(nome.value, email.value,cpf.value)\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n        </div>\r\n\r\n    </form> -->\r\n\r\n    <div *ngIf=\"produtos.length > 0\" class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n            margin-top: 50px;\r\n            box-shadow: 0 0 1em rgb(172, 170, 170);\r\n            background-color: rgb(227, 240, 227);\">\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Produtos</h4>\r\n            <p class=\"card-category\">Produtos cadastrados no sistema</p>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 3%; border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 18%;font-size:1em;\r\n                                    vertical-align: middle;\r\n                                    text-align:left;\r\n                                    border-top: 0px; font-weight: 400;\">Descrição</th>\r\n\r\n                            <th style=\"width: 13%;font-size:1em;\r\n                                    vertical-align: middle;\r\n                                    text-align:center; font-weight: 400;\r\n                                    border-top: 0px;\">Preço</th>\r\n\r\n                            <th style=\"width: 6%;font-size:1em;\r\n                                    vertical-align: middle;\r\n                                    text-align:center; font-weight: 400;\r\n                                    border-top: 0px;\">med.</th>\r\n\r\n                            <th style=\"width: 11%;font-size:1em;\r\n                                    vertical-align: middle;\r\n                                    text-align:center;\r\n                                    border-top: 0px; font-weight: 400;\">Qnt.<br>atual</th>\r\n\r\n                            <th style=\"width: 8%;font-size:1em;\r\n                                    text-align:center; \r\n                                    vertical-align: middle;\r\n                                    border-top: 0px; font-weight: 400;\">mínimo<br>(qnt.)</th>\r\n\r\n                            <th style=\"width: 19%;font-size:1em;\r\n                                    text-align:center; \r\n                                    vertical-align: middle;\r\n                                    border-top: 0px; font-weight: 400;\">Unidade</th>\r\n\r\n                            <th style=\"width: 10%;font-size:1em;\r\n                                    text-align:center; \r\n                                    vertical-align: middle;\r\n                                    border-top: 0px; font-weight: 400;\">Status</th>\r\n\r\n                            <th style=\"width: 12%;border-top: 0px;\">\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"criar usuário\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>plus_one</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let product of produtos; let i = index;\">\r\n                            <td style=\"text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">\r\n                               {{product.nome}}\r\n                            </td>\r\n\r\n                            \r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                {{product.preco | currency:'BRL':true}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">Un.</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                <div *ngIf=\"product.quantidade < product.nivelMinimo;else arrowUp\">\r\n                                    <i style=\"text-align: center;vertical-align: middle; margin: 0px;\"\r\n                                        #tooltip=\"matTooltip\" matTooltip=\"ativo\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <span\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;color:red;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>arrow_downward</mat-icon>\r\n                                        </span>\r\n                                    </i>\r\n                                    {{product.quantidade}}\r\n                                </div>\r\n                                <ng-template #arrowUp>\r\n                                    <i style=\"text-align: center;vertical-align: middle; margin: 0px;\"\r\n                                    #tooltip=\"matTooltip\" matTooltip=\"ativo\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <span\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;color:green;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>arrow_upward</mat-icon>\r\n                                    </span>\r\n                                </i>\r\n\r\n                                {{product.quantidade}}\r\n                                </ng-template>\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                {{product.nivelMinimo}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                {{product.observacoes}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                                <div *ngIf=\"product.quantidade < product.nivelMinimo;else okMsg\">\r\n                                    Necessidade de reposição\r\n                                </div>\r\n                                <ng-template #okMsg>OK</ng-template>\r\n                                \r\n                                \r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"ativo\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;color: green;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>done</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n                            </td>\r\n\r\n                           \r\n\r\n                            <td style=\"position: relative;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"doação\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openDoacaoProdutoModal(product)\" style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>sync_alt</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openEditProdutoModal(product)\" style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>build</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n\r\n                            </td>\r\n\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit, Output } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { AdmService } from \"src/app/Adm/services/adm.services\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { PedagogicoService } from \"../../service/pedagogico.service\";\r\n\r\n@Component({\r\n    selector: \"estagiocadastro-app\",\r\n    templateUrl: './estagiocadastro.component.html',\r\n    styleUrls: ['./estagiocadastro.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class EstagioCadastroComponent implements OnInit {\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n    public disabledSaveButton = 'hidden'\r\n    public styleVisibilityEndereco = 'hidden'\r\n    public estagioForm: FormGroup\r\n\r\n    constructor(\r\n        private _helper: HelpersService,\r\n        private _admService: AdmService,\r\n        private _pedagService: PedagogicoService,\r\n        private _fb: FormBuilder,\r\n        public dialogRef: MatDialogRef<EstagioCadastroComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any\r\n    ) {\r\n        this.estagioForm = _fb.group({\r\n            nome: [\"\", [Validators.required]],\r\n            dataInicio: [\"\", [Validators.required]],\r\n            vagas: [\"\", [Validators.required]],\r\n            cnpj: [\"\", [Validators.required, Validators.minLength(14)]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            numero: ['', [Validators.required]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            ativo: [true]\r\n        })\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n    }\r\n\r\n\r\n    consultaCEP(CEP: string) {\r\n        if (this.estagioForm.get('cep').valid) {\r\n\r\n\r\n            this._admService.CepConsulta(this.estagioForm.get('cep').value)\r\n                .subscribe(response => {\r\n\r\n                    this.estagioForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n                    this.estagioForm.get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n                    this.estagioForm.get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n                    this.estagioForm.get('uf').setValue(response[\"uf\"].toUpperCase());\r\n\r\n                }, err => {\r\n                    this._helper.openSnackBarError('Ocorreu um erro ao pesquisas o CEP. Procure o administrador do sistema.')\r\n                },\r\n                    () => {\r\n\r\n                        this.styleVisibilityEndereco = 'visible'\r\n                    });\r\n        }\r\n    }\r\n\r\n    get saveButtom() {\r\n        if (this.estagioForm.valid) {\r\n            return this.disabledSaveButton != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    public Salvar(form: any) {\r\n       // console.log(this.estagioForm.value)\r\n        if (this.estagioForm.valid) {\r\n            this.disabledSaveButton = 'visible'\r\n            this._pedagService.AddEstagio(this.estagioForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.SalvarSucesso() },\r\n                    falha => { this.SalvarFalha(falha) }\r\n                )\r\n        }\r\n    }\r\n\r\n    private SalvarSucesso() {\r\n        this._helper.openSnackBarSucesso('Estágio salvo com sucesso')\r\n        this.dialogRef.close({ clicked: true });\r\n    }\r\n\r\n    private SalvarFalha(error) {\r\n        this.disabledSaveButton = 'hidden'\r\n        // if (err['status'] == 409) {\r\n        //     this.msgErros = err['error'].msg\r\n        //     this.showMensagem = 'visible'\r\n        //     this.disabledSaveButton = 'hidden'\r\n        // }else{\r\n        //     this._helper.openSnackBarErrorDefault()\r\n\r\n        //      this.dialogRef.close({ clicked: \"Ok\" });\r\n        // }\r\n    }\r\n\r\n    valor: any\r\n    onFocusOutDateEvent(event: any) {\r\n        var data;\r\n\r\n        if (event.target.value.length == 10) {\r\n            var data = event.target.value.split('/')\r\n            //console.log(data)\r\n            var dataForm: Date = new Date(parseInt(data[2]), parseInt(data[1]) - 1,\r\n                parseInt(data[0]))\r\n            this.estagioForm.get('dataInicio').setValue(dataForm)\r\n            this.valor = dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n            //this.valor = dataForm//.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n        }\r\n\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Cadastrar Estágio\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<!-- <div style=\"font-size: 0.8em;margin-top: 5px;\">* O Estágio estará disponível para a unidade de {{tokenInfo.Unidade}}\r\n</div> -->\r\n<hr>\r\n\r\n<div>\r\n\r\n    <form novalidate [formGroup]=\"estagioForm\" (ngSubmit)=\"Salvar(estagioForm)\">\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 250px; \">\r\n            <mat-label>Nome Instituição</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" \r\n            selected formControlName=\"nome\" matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 150px; margin-left: 5%; \">\r\n            <mat-label>CNPJ</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" \r\n            selected formControlName=\"cnpj\" minlength=\"14\" maxlength=\"18\" mask=\"00.000.000/0000-00\" matInput\r\n                placeholder=\"CNPJ\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n            <mat-label>Inicio</mat-label>\r\n            <input matInput [matDatepicker]=\"dp3\" formControlName=\"dataInicio\" disabled>\r\n            <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 25%; \">\r\n            <mat-label>Inicio</mat-label>\r\n            <input matInput formControlName=\"dataInicio\" placeholder=\"início\" \r\n            \r\n            [value]=\"valor\"\r\n                (focusout)=\"onFocusOutDateEvent($event)\"\r\n                onkeypress=\"String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field> -->\r\n\r\n        <!-- <mat-form-field (focusout)=\"onFocusOutDateEvent($event)\" appearance=\"standard\" style=\"width: 145px; \">\r\n            <mat-label>Previsão 1</mat-label>\r\n            <input mask=\"00/00/0000\" required name=\"prevInicio_1\" matInput [value]=\"previIniOne\"\r\n                formControlName=\"prevInicio_1\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n            <mat-hint>Previsão de início 1</mat-hint>\r\n        </mat-form-field>\r\n\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 150px;\">\r\n            <mat-label>Inicio</mat-label>\r\n            <date-input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                formControlName=\"dataInicio\" matInput required></date-input>\r\n            <mat-hint>Previsão de início</mat-hint>\r\n        </mat-form-field> -->\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 65px;margin-left: 5%;\">\r\n            <mat-label>nº vagas</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" formControlName=\"vagas\"\r\n                minlength=\"1\" maxlength=\"4\" required name=\"vagas\" matInput>\r\n            <!-- <mat-hint>nº vagas</mat-hint> -->\r\n        </mat-form-field>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 55px;margin-left: 15px;\">\r\n                \r\n                <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                    formControlName=\"trimestre\" minlength=\"1\" maxlength=\"4\" required name=\"vagas\" matInput>\r\n                <mat-hint>trimestre</mat-hint>\r\n            </mat-form-field> -->\r\n\r\n        <br>\r\n        <mat-form-field appearance=\"standard\" style=\"width: 100px;\">\r\n            <mat-label>CEP</mat-label>\r\n            <input mask=\"00.000-000\" onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                formControlName=\"cep\" minlength=\"8\" maxlength=\"10\" required matInput placeholder=\"apenas números\">\r\n        </mat-form-field>\r\n\r\n        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button type=\"button\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                <mat-icon (click)=\"consultaCEP(estagioForm.get('cep').value)\">search</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <br>\r\n\r\n        <div [style.visibility]=\"styleVisibilityEndereco\">\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 35%;\">\r\n                <mat-label>Logradouro</mat-label>\r\n                <input oninput=\"this.value = this.value.toUpperCase()\" \r\n                selected formControlName=\"logradouro\" name=\"templateName\" matInput placeholder=\"ex: rua tal...\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 10%;margin-left: 5%;\">\r\n                <mat-label>Nº</mat-label>\r\n                <input formControlName=\"numero\" oninput=\"this.value = this.value.toUpperCase()\" selected\r\n                    name=\"templateName\" matInput placeholder=\"ex: rua tal...\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 45%; margin-left: 5%;\">\r\n                <mat-label>Complemento</mat-label>\r\n                <input oninput=\"this.value = this.value.toUpperCase()\" \r\n                selected formControlName=\"complemento\" name=\"templateName\" matInput\r\n                    placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                <mat-label>Cidade</mat-label>\r\n                <input disabled selected [value]=\"estagioForm.get('cidade').value\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 5%; margin-left: 5%;\">\r\n                <mat-label>UF</mat-label>\r\n                <input disabled selected [value]=\"estagioForm.get('uf').value\" matInput placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 35%; margin-left: 5%;\">\r\n                <mat-label>Bairro</mat-label>\r\n                <input oninput=\"this.value = this.value.toUpperCase()\"\r\n                 selected formControlName=\"bairro\" matInput placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <mat-progress-bar [style.visibility]=\"disabledSaveButton\" @rowHighlight mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <span style=\"float: right;margin-top: 15px;\">\r\n            <button type=\"submit\" mat-raised-button [disabled]=\"saveButtom\" color=\"primary\">\r\n                Salvar\r\n            </button>\r\n        </span>\r\n\r\n\r\n    </form>\r\n\r\n</div>","import { Component, Inject, OnInit, Pipe, PipeTransform } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n//import { GenericTask } from 'src/app/shared/models/generictask.model';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n//import { AdmService } from '../../adm.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n\r\n@Component({\r\n    selector: 'sala-editarmodal',\r\n    templateUrl: './sala-editar.component.html',\r\n    styleUrls: ['./sala-editar.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class SalaEditarComponent implements OnInit {\r\n\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n    // pageEvent: PageEvent;\r\n    public initProgressBar = 'visible'\r\n    public buscaSalaSpinner = 'hidden'\r\n    public saveSpinner = 'hidden'\r\n\r\n    public showContent = false\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n    public salas: any[]\r\n    public sala: any;\r\n    private _baseUrl = environment.baseUrl\r\n    public showEditSalaForm: boolean = false\r\n    public originalSala: any\r\n    public salaForm: FormGroup;\r\n    constructor(\r\n        //private service: AdmService,\r\n        private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _helpers: HelpersService,\r\n        public dialogRef: MatDialogRef<SalaEditarComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.salaForm = this._fb.group({\r\n            id: [''],\r\n            titulo: [''],\r\n            descricao: ['', [Validators.required]],\r\n            capacidade: [''],\r\n            comentarios: ['', [Validators.required, Validators.maxLength(200)]],\r\n            ativo: [''],\r\n            dataCriacao: [''],\r\n            unidadeId: ['']\r\n\r\n\r\n        })\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        console.log(this.data['unidade'])\r\n        this.GetSalas();\r\n    }\r\n\r\n    GetSalas() {\r\n        this._http.get(`${this._baseUrl}/unidade/salas/${this.data[\"unidade\"].id}`)\r\n            .subscribe(resp => {\r\n                this.salas = resp['salas']\r\n            },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showContent = true\r\n                })\r\n    }\r\n\r\n    buscar(salaId) {\r\n        \r\n        this.buscaSalaSpinner = 'visible'\r\n        this.showEditSalaForm = false\r\n\r\n        this._http.get(`${this._baseUrl}/unidade/sala/${salaId}`)\r\n            .subscribe(resp => {\r\n                this.salaForm.patchValue(resp['sala']);\r\n                this.originalSala = JSON.parse(JSON.stringify(this.salaForm.value))\r\n                // this.sala = resp['sala']\r\n            },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                    this.buscaSalaSpinner = 'hidden'\r\n                    this.showEditSalaForm = true\r\n                })\r\n    }\r\n\r\n    get saveButton() {\r\n\r\n        if (this.salaForm.valid && \r\n        JSON.stringify(this.originalSala) !=\r\n        JSON.stringify(this.salaForm.value)) {\r\n            return this.saveSpinner != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    onSubmit(form: any) {\r\n\r\n        if (this.salaForm.valid) {\r\n            this.saveSpinner = 'visible'\r\n            this._http.put(`${this._baseUrl}/unidade/sala-editar`, this.salaForm.value, {})\r\n                .subscribe(resp => { },\r\n                    (error) => {\r\n                        this._helpers.openSnackBarErrorDefault()\r\n                        this.saveSpinner = 'hidden'\r\n                    },\r\n                    () => {\r\n                        this._helpers.openSnackBarSucesso('Sala editada com sucesso.')\r\n                        this.dialogRef.close({ clicked: \"OK\" })\r\n                    })\r\n\r\n        }\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Editar Sala\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<div *ngIf=\"showContent\" >\r\n    <div style=\"font-size: 0.9em;margin-top: 5px;\">Unidade {{ tokenInfo.Unidade }}</div>\r\n    <hr>\r\n    <div style=\"position: relative;\">\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px;margin-left: 10px;\">\r\n            <mat-label>Sala</mat-label>\r\n            <mat-select selected name=\"salaId\" required>\r\n                <mat-option value=\"\"></mat-option>\r\n                <mat-option (click)=\"buscar(sala.id)\" *ngFor=\"let sala of salas\" [value]=\"sala.id\">{{sala.descricao}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-progress-bar [style.visibility]=\"buscaSalaSpinner\" style=\"margin-top: 0px;\"  @rowHighlight mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <div *ngIf=\"showEditSalaForm\">\r\n            <hr>\r\n            <form [formGroup]=\"salaForm\" (ngSubmit)=\"onSubmit(salaForm)\">\r\n               \r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%; \">\r\n                        <mat-label>Sala</mat-label>\r\n                        <input selected [value]=\"salaForm.get('titulo').value\" disabled matInput>\r\n                    </mat-form-field>\r\n\r\n                    <br>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 40%; \">\r\n                        <mat-label>Descrição</mat-label>\r\n                        <input selected formControlName=\"descricao\" required matInput\r\n                            placeholder=\"Descrição\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 18%; margin-left: 5%;\">\r\n                        <mat-label>Capacidade</mat-label>\r\n                        <input selected ng-pattern=\"/^[a-z]*$/\" disabled [value]=\"salaForm.get('capacidade').value\"\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                            name=\"capacidade\" matInput>\r\n                    </mat-form-field>\r\n\r\n                    <br>\r\n\r\n                    <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n                        <mat-label>Observações gerais</mat-label>\r\n                        <textarea formControlName=\"comentarios\" required matInput></textarea>\r\n                    </mat-form-field>\r\n\r\n\r\n                    <mat-progress-bar [style.visibility]=\"saveSpinner\" style=\"margin-top: 0px;\"  @rowHighlight mode=\"query\">\r\n                    </mat-progress-bar>\r\n                \r\n                <button color=\"primary\" [disabled]=\"saveButton\" mat-raised-button\r\n                    style=\"float:right;margin-top: 10px;\">\r\n                    Salvar</button>\r\n            </form>\r\n\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { InfoDia, ListaPresencaDto } from \"../../Pedag-Models/infodia.model\";\r\n\r\n\r\n@Component({\r\n    selector: 'turmasinfoalunos-app',\r\n    templateUrl: './turmasinfoalunos.component.html',\r\n    styleUrls: ['./turmasinfoalunos.component.scss'],\r\n    animations: [HighlightTrigger]\r\n\r\n})\r\n\r\nexport class TurmasInfoAlunosPedagComponent implements OnInit {\r\n\r\n    private _baseUrl = environment.baseUrl\r\n    public showForm = false\r\n    public initProgressBar = 'visible'\r\n    // public listaPresencaDto: ListaPresencaDto[] = new Array<ListaPresencaDto>();\r\n    // public infoDia: InfoDia = new InfoDia();\r\n    //public saveCommand: SavePresencaCommand = new SavePresencaCommand();\r\n    // public observacoes: string = \"\";\r\n    // public obsForm: FormGroup;\r\n    // public diaAulaString: any\r\n    public calendarios: any[] = new Array<any>()\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog,\r\n        public _dialogRef: MatDialogRef<TurmasInfoAlunosPedagComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        // this.obsForm = this._fb.group({\r\n        //     observacoes: ['', [Validators.required]]\r\n        // })\r\n    }\r\n\r\n    ngOnInit() {\r\n      //  console.log(this.data['turma'])\r\n        //turmas/alunosturma/{turmaId}\r\n        this.GetAlunosTurma(this.data['turma'].id);\r\n    }\r\n\r\n    alunos: any[] = new Array<any>();\r\n    private GetAlunosTurma(turmaId: number) {\r\n\r\n        this._http.get(`${this._baseUrl}/pedag/aluno/alunos/${turmaId}`)\r\n            .subscribe(resp => {\r\n\r\n                console.log(resp)\r\n                this.alunos = Object.assign([], resp['alunos'])\r\n               // console.log(this.calendarios)\r\n\r\n            },\r\n                (error) => {\r\n                   // console.log(error)\r\n                   this.initProgressBar = 'hidden'\r\n                   this.showForm = false\r\n                    \r\n                },\r\n                () => {\r\n                    this._dialogRef.addPanelClass('myturmasinfoalunos-class')\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showForm = true\r\n                    \r\n                })\r\n    }\r\n\r\n    concluirAula() {\r\n        // calendárioId\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","<div style=\"font-size: 1.2em;\">Alunos\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<div *ngIf=\"showForm\" >\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 55%; \">\r\n        <mat-label>Turma</mat-label>\r\n        <input matInput disabled\r\n        [value]=\"data['turma'].identificador\"\r\n        >\r\n    </mat-form-field>\r\n\r\n<hr>\r\n\r\n<div class=\"table-responsive\" style=\"\">\r\n    <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n        <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n        <thead>\r\n            <tr>\r\n                <th style=\"width: 2%; \r\n            text-align:left; \r\n            vertical-align: middle;\r\n            border-top: 0px;\"></th>\r\n\r\n\r\n                <th style=\"width: 40%;font-size:1em;\r\n            vertical-align: middle; \r\n            text-align:left;\r\n             border-top: 0px; font-weight: 400;\">Nome</th>\r\n\r\n                <th style=\"width: 29%;font-size:1em;\r\n            vertical-align: middle;\r\n            text-align:center;\r\n            border-top: 0px; font-weight: 400;\">E-mail</th>\r\n\r\n                <th style=\"width: 29%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">CPF</th>\r\n\r\n                <!--<th style=\"width: 12%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">Matriculados</th>\r\n\r\n            <th style=\"width: 13%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">Status</th> -->\r\n\r\n                <!-- <th style=\"width: 34%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">\r\n\r\n            </th> -->\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            <tr *ngFor=\"let aluno of alunos; let i = index;\">\r\n                <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">{{i + 1}}</td>\r\n\r\n                <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                    {{aluno.nome}}\r\n                </td>\r\n\r\n                <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                    {{aluno.email}}\r\n                </td>\r\n\r\n                <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">{{aluno.cpf}}</td>\r\n\r\n                <!-- <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\"></td> -->\r\n                <!-- <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">Não iniciada</td>\r\n            <td style=\"text-align: center;vertical-align: middle;\"> -->\r\n                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                    matTooltip=\"adiar a tumra para a próxima data\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button \r\n                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                        mat-icon-button>\r\n                        <mat-icon style=\"font-size: 1.5em;\" class=\"material-icons-outlined\">watch_later</mat-icon>\r\n                    </button>\r\n                </i>\r\n\r\n                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                    matTooltip=\"iniciar as aulas\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button \r\n                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                        mat-icon-button>\r\n                        <mat-icon style=\"font-size: 1.5em;\" class=\"material-icons-outlined\">play_arrow</mat-icon>\r\n                    </button>\r\n                </i>-->\r\n\r\n                <!-- update_disabled -->\r\n\r\n                <!--<i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"detalhes/editar\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"openEditCursoModal(item)\"\r\n                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                        mat-icon-button>\r\n                        <mat-icon>description</mat-icon>\r\n                    </button>\r\n                </i> \r\n            </td>  \r\n            <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\"></td>     \r\n            -->\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n</div>\r\n\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { PedagogicoService } from \"../../service/pedagogico.service\";\r\n\r\n@Component({\r\n    selector: 'detalhemodal',\r\n    templateUrl: './detalhe.component.html',\r\n    styleUrls: ['./detalhe.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class DetalheComponent implements OnInit {\r\n\r\n\r\n    // // initProgressBar = 'visible'\r\n    // // public moduloForm: FormGroup;\r\n    // // public addMateriaForm: FormGroup;\r\n    // // public addDocForm: FormGroup;\r\n    // // private jwtHelper = new JwtHelperService();\r\n    // // public tokenInfo: TokenInfos = new TokenInfos();\r\n    // public modulo: any// = new any();\r\n    // // materiasTemplate: any//\r\n    // public documentos: any//\r\n    // // modalidade = Modalidade\r\n    // // public titularDoc = TitularDoc\r\n    // // showForm = false\r\n\r\n    public initProgressBar = 'visible'\r\n    public disabledSaveButton = 'hidden'\r\n    // public saveProgressBar = 'hidden'\r\n\r\n    public showContent = false\r\n    public informacoes: any;\r\n    private originalAcesso: Boolean = false\r\n    // public addMateriasForm = false\r\n\r\n    // public moduloForm: FormGroup;\r\n    // public addMateriaForm: FormGroup;\r\n    // public addDocForm: FormGroup;\r\n\r\n    // private jwtHelper = new JwtHelperService();\r\n    // public tokenInfo: TokenInfos = new TokenInfos();\r\n\r\n    // public errorMsg: any[] = new Array<any>()\r\n    // public unidadesAutorizadas: any[] = new Array<any>();\r\n    // public materiasTemplate: any[] = new Array<any>();\r\n    // public documentosTemplate: any[] = new Array<any>();\r\n    // public typePacote: any\r\n\r\n    // public typePacotes: any\r\n    // public docTemplates: any\r\n\r\n    // public titularDoc = TitularDoc\r\n\r\n    constructor(\r\n        private _pedagervice: PedagogicoService,\r\n        private _helper: HelpersService,\r\n        //private _snackBar: MatSnackBar,\r\n        //private router: Router,\r\n        //private _fb: FormBuilder,\r\n        //private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<DetalheComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log(this.data)\r\n        this.originalAcesso = this.data['aluno'].acessoSistema\r\n        this.informacoes = this.data['aluno']\r\n        this.initProgressBar = 'hidden'\r\n        this.dialogRef.addPanelClass('detalhecomponent-class')\r\n        this.showContent = true\r\n    }\r\n\r\n    get disabledButton() {\r\n        // console.log(this.originalAcesso)\r\n        // console.log(this.data['aluno'].acessoSistema)\r\n\r\n        if (this.originalAcesso != this.data['aluno'].acessoSistema) {\r\n            return this.disabledSaveButton != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n\r\n    }\r\n\r\n    salvarEdit() {\r\n        this.disabledSaveButton = 'visible'\r\n        this._pedagervice.editAcesso(this.data['aluno'].email, this.data['aluno'].acessoSistema)\r\n            .subscribe(\r\n                sucesso => { this.salvarEditSucesso(sucesso) },\r\n                falha => { this.salvarEditFalha(falha) }\r\n            )\r\n    }\r\n\r\n    salvarEditSucesso(resp) {\r\n        this._helper.openSnackBarSucesso(\"Acesso editado com sucesso.\")\r\n        this.disabledSaveButton = 'hidden'\r\n        this.originalAcesso = this.data['aluno'].acessoSistema\r\n    }\r\n\r\n    salvarEditFalha(error) {\r\n        this.disabledSaveButton = 'hidden'\r\n    }\r\n\r\n    disabledEnvio = true\r\n\r\n    enviarLogin() {\r\n\r\n        this.disabledEnvio = true\r\n        this._pedagervice.envioAcesso(this.data['aluno'].email)\r\n            .subscribe(\r\n                sucesso => { this.enviarLoginSucesso(sucesso) },\r\n                falha => { this.enviarLoginFalha(falha) }\r\n            )\r\n    }\r\n\r\n    enviarLoginSucesso(resp){\r\n        this._helper.openSnackBarSucesso(\"E-mail com informações de acesso enviado com sucesso.\")\r\n        this.disabledEnvio = false\r\n    }\r\n\r\n    enviarLoginFalha(error){\r\n        this._helper.openSnackBarErrorDefault()\r\n        this.disabledEnvio = false\r\n    }\r\n\r\n\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Detalhes Acesso\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n<div @rowHighlight *ngIf=\"showContent\">\r\n\r\n    <hr>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 220px;\">\r\n        <mat-label>Turma</mat-label>\r\n        <input selected [value]=\"informacoes.turmaDescricao\" disabled matInput\r\n            placeholder=\"dica: Curso Técnico de Enfermagem\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 120px;margin-left: 15px;\">\r\n        <mat-label>Código Turma</mat-label>\r\n        <input selected [value]=\"informacoes.turmaIdentificador\" disabled matInput\r\n            placeholder=\"dica: Curso Técnico de Enfermagem\">\r\n    </mat-form-field>\r\n\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"enviar login e senha para o usuário\"\r\n        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n        <button style=\"\" [disabled]=\"disabledEnvio\" (click)=\"enviarLogin()\" mat-icon-button>\r\n            <mat-icon>send</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 400px;\">\r\n        <mat-label>Nome</mat-label>\r\n        <input selected [value]=\"informacoes.nome\" disabled matInput placeholder=\"dica: Curso Técnico de Enfermagem\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 120px;margin-left: 10px;\">\r\n        <mat-label>Nº Matrícula</mat-label>\r\n        <input selected [value]=\"informacoes.numeroMatricula\" disabled matInput\r\n            placeholder=\"dica: Curso Técnico de Enfermagem\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 100px;\">\r\n        <mat-label>CPF</mat-label>\r\n        <input selected [value]=\"informacoes.cpf\" disabled matInput placeholder=\"dica: Curso Técnico de Enfermagem\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 250px;margin-left: 10px;\">\r\n        <mat-label>E-mail</mat-label>\r\n        <input selected [value]=\"informacoes.email\" disabled matInput placeholder=\"dica: Curso Técnico de Enfermagem\">\r\n    </mat-form-field>\r\n\r\n    <br>\r\n\r\n    <span style=\"font-style: italic;font-weight: 0.9em;\">acesso ao sistema: </span>\r\n    <mat-slide-toggle style=\"width: 15%; margin-left: 10px;\" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n        [(ngModel)]=\"informacoes.acessoSistema\" name=\"ativo\" required matTooltip=\"ativo/inativo\"\r\n        matTooltipPosition=\"above\" matTooltipHideDelay=\"250\" color=\"primary\" [required]=\"false\">\r\n    </mat-slide-toggle>\r\n\r\n    <mat-progress-bar [style.visibility]=\"disabledSaveButton\" @rowHighlight style=\"margin-top:15px\" mode=\"query\">\r\n    </mat-progress-bar>\r\n    <div style=\"float: right;margin-top: 15px;\">\r\n\r\n        <button type=\"submit\" mat-raised-button color=\"primary\" (click)=\"salvarEdit()\"\r\n        [disabled]=\"disabledButton\" style=\"width: 100px; position: relative; float:right;margin-bottom: 10px;\r\n        margin-left: 10px;\">\r\n            Salvar\r\n        </button>\r\n    </div>\r\n\r\n\r\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\ndeclare interface RouteInfo {\r\n    path: string;\r\n    title: string;\r\n    class: string;\r\n    typeIcon: string;\r\n}\r\n\r\nexport const ROUTES: RouteInfo[] = [\r\n    // { path: '/adm/usuarios', title: 'Usuários', class: '', typeIcon: 'manage_accounts' },\r\n    // { path: '/adm/admcursos', title: 'Turmas', class: '', typeIcon: 'house' },\r\n    // { path: '/adm/colaboradores', title: 'Colaboradores', class: '', typeIcon: 'engineering' },\r\n    // { path: '/adm/produtos', title: 'Produtos', class: '', typeIcon: 'fact_check' },\r\n    // { path: '/adm/unidades', title: 'Unidade', class: '', typeIcon: 'home' },\r\n    // { path: '/adm/config', title: 'Configurações', class: '', typeIcon: 'settings' },\r\n    // { path: '/adm/modulo', title: 'Pacotes', class: '', typeIcon: 'school' },\r\n    // { path: '/adm/planopgm', title: 'Planos', class: '', typeIcon: 'request_quote' },\r\n    // { path: '/adm/contrato', title: 'Contratos', class: '', typeIcon: 'gavel' },\r\n    // { path: '/adm/teste', title: 'TESTE', class: '', typeIcon: 'fact_check' },\r\n]\r\n\r\n@Component({\r\n    selector: 'geral-app',\r\n    templateUrl: './geral.component.html',\r\n    styleUrls: ['./geral.component.scss']\r\n})\r\n\r\nexport class GeralComponent implements OnInit {\r\n    menu: any;\r\n    data: string = \"\";\r\n    private baseUrl = environment.baseUrl;\r\n    mensagem: any;\r\n    public htmlContent: any;\r\n    \r\n    constructor(\r\n        //private jwtHelper: JwtHelperService, \r\n        private _router: Router,\r\n        private _modal: MatDialog,\r\n        private _http: HttpClient) {\r\n        const navigation = this._router.getCurrentNavigation();\r\n        console.log(navigation.extras['state'])\r\n        if (navigation.extras['state'] != undefined) {\r\n            const state = navigation.extras.state as { data: string };\r\n            this.data = state.data;\r\n        }\r\n\r\n    }\r\n    ngOnInit() {\r\n        // this.isUserAuthenticated();\r\n        console.log(this.data != \"\")\r\n        if(this.data != \"\"){ \r\n            this.getMessage();    \r\n            console.log('show message') \r\n        \r\n        }\r\n        this.menu = ROUTES.filter(menu => menu);\r\n    }\r\n\r\n    getMessage(){\r\n\r\n        this._http.get(`${this.baseUrl}/mensagem`)\r\n        .subscribe(resp => { \r\n                console.log(resp)\r\n                this.mensagem = resp\r\n                this.htmlContent = resp\r\n        }, (error) => { console.log(error)},\r\n        () => {\r\n          //  this.openMessageModal()\r\n        })\r\n    }\r\n\r\n    // openMessageModal(): void {\r\n    //     const dialogRef = this._modal\r\n    //         .open(MessageModalComponent, {\r\n    //             height: 'auto',\r\n    //             width: '800px',\r\n\r\n    //             data: { message: this.htmlContent },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n\r\n\r\n    //     dialogRef.afterClosed().subscribe((data) => {\r\n    //         if (data.clicked === \"Ok\") {\r\n               \r\n    //             console.log('afte close ok')\r\n               \r\n    //         } else if (data.clicked === \"Cancel\") {\r\n               \r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    // isUserAuthenticated() {\r\n    //     const token: string = localStorage.getItem(\"jwt\");\r\n    //     if (token && !this.jwtHelper.isTokenExpired(token)) {\r\n    //         this.router.navigate([\"/customers\"]);\r\n    //         return true;\r\n    //     }\r\n    //     else {\r\n    //         return false;\r\n    //     }\r\n    // }\r\n    // public logOut = () => {\r\n    //     localStorage.removeItem(\"jwt\");\r\n    // }\r\n\r\n    invalidLogin: boolean;\r\n\r\n    //constructor(private router: Router, private http: HttpClient) { }\r\n\r\n    // login(form: NgForm) {\r\n    //     const credentials = JSON.stringify(form.value);\r\n    //     console.log(credentials)\r\n    //     this.http.post(\"https://localhost:44370/api/identity/login\", credentials, {\r\n    //         headers: new HttpHeaders({\r\n    //             \"Content-Type\": \"application/json\"\r\n    //         })\r\n    //     }).subscribe(response => {\r\n    //         const token = (<any>response).accessToken;\r\n    //         console.log(response)\r\n    //         localStorage.setItem(\"jwt\", token);\r\n    //         this.invalidLogin = false;\r\n    //         this.router.navigate([\"/\"]);\r\n    //     }, err => {\r\n    //         this.invalidLogin = true;\r\n    //     });\r\n    // }\r\n\r\n    logOut() {\r\n        localStorage.removeItem(\"jwt\");\r\n        this._router.navigate([\"/login\"]);\r\n\r\n    }\r\n\r\n}","<ng-container>\r\n\r\n\r\n    <mat-sidenav-container class=\"example-container\" style=\"\r\n    background-color: rgba(250, 245, 245, 0); \">\r\n        <mat-sidenav style=\"\"\r\n         #sidenav mode=\"side\" opened class=\"example-sidenav mat-elevation-z8\">\r\n            <div class=\"d-flex flex-column text-white \" \r\n            style=\"position: absolute;\r\n            width: auto;\r\n            top: 0px;\r\n            bottom: 0px;\r\n            left: 0;\r\n            background-color: rgb(109, 218, 109);\r\n            right: 0;\">\r\n                <a href=\"/\" class=\"d-flex align-items-center  mb-md-0 me-md-auto text-white text-decoration-none\">\r\n                    <!-- <svg class=\"bi\" width=\"40\" height=\"32\"><use xlink:href=\"#bootstrap\"></use></svg> -->\r\n                    <span style=\"width: 190px;\r\n                    text-align: center;margin-top: 15px;font-size: 1em;\" \r\n                    >Master</span>\r\n                </a>\r\n                <hr>\r\n                <ul class=\"nav nav-pills flex-column mb-auto\">\r\n\r\n                    <li *ngFor=\"let item of menu\" routerLinkActive=\"active\" \r\n                    class=\"nav-item {{item.class}}\"\r\n                        style=\"overflow: auto;\">\r\n\r\n                        <a [routerLink]=\"[item.path]\" class=\"nav-link text-white\">\r\n                            <mat-icon style=\"top: -3px;\r\n                                        position:relative;\r\n                                        overflow: auto;\r\n                                        color:rgb(245, 243, 243); \r\n                                        vertical-align: middle;\r\n                                        \">\r\n                                        {{item.typeIcon}}\r\n                            </mat-icon>\r\n                                {{item.title}}\r\n                        </a>\r\n                    </li>\r\n                    \r\n\r\n\r\n                    <!-- <li class=\"nav-item\">\r\n\r\n                        <a routerLink=\"/adm/usuarios\" class=\"nav-link active\">\r\n                            \r\n                            <mat-icon style=\"top: -3px;\r\n                                        position:relative; \r\n                                        color:rgb(245, 243, 243); \r\n                                        vertical-align: middle;\r\n                                        margin-left: 5px;\">\r\n                                        manage_accounts\r\n                            </mat-icon>\r\n                            Usuários\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a routerLink=\"/adm/unidades\" class=\"nav-link text-white\">\r\n                            \r\n                            Unidades\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a routerLink=\"/adm/colaboradores\" class=\"nav-link text-white\">\r\n                            <svg class=\"bi me-2\" width=\"16\" height=\"16\">\r\n                                <use xlink:href=\"#people-circle\"></use>\r\n                            </svg>\r\n                            Colaboradores\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a routerLink=\"/adm/produtos\" class=\"nav-link text-white\">\r\n                            <svg class=\"bi me-2\" width=\"16\" height=\"16\">\r\n                                <use xlink:href=\"#people-circle\"></use>\r\n                            </svg>\r\n                            Produtos\r\n                        </a>\r\n                    </li> -->\r\n                </ul>\r\n                <!-- <hr>\r\n                <div class=\"dropdown\">\r\n                    <a href=\"#\" class=\"d-flex align-items-center text-white text-decoration-none dropdown-toggle\"\r\n                        id=\"dropdownUser1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <img src=\"https://github.com/mdo.png\" alt=\"mdo\" width=\"32\" height=\"32\"\r\n                            class=\"rounded-circle me-2\">\r\n                        <strong>conta</strong>\r\n                    </a>\r\n                    <ul id=\"menu\" class=\"dropdown-menu dropdown-menu text-small shadow\" aria-labelledby=\"dropdownUser1\"\r\n                        style=\"background-color: rgb(73, 168, 73);\">\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">New project...</a></li>\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">Settings</a></li>\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">Profile</a></li>\r\n                        <li>\r\n                            <hr style=\"color: white;\" class=\"dropdown-divider\">\r\n                        </li>\r\n                        <li><a type=\"button\"\r\n                            (click)=\"logOut()\"\r\n                            style=\"color: white;\" class=\"dropdown-item\">Sign out</a></li>\r\n                    </ul>\r\n                </div> -->\r\n            </div>\r\n            <!-- <div class=\"sidenav\">\r\n\r\n              \r\n                <a routerLink=\"/adm1/child1\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">manage_accounts</mat-icon>\r\n                    Usuários\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/unidades\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">apartment</mat-icon>\r\n                    Unidades\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/professores\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">person</mat-icon>\r\n                    professores\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/produtos\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">production_quantity_limits</mat-icon>\r\n                    produtos\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/cursos\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">assignment</mat-icon>\r\n                    cursos\r\n                </a>\r\n\r\n            </div> -->\r\n\r\n        </mat-sidenav>\r\n        <router-outlet>\r\n            <div style=\"position: absolute;\r\n            top: 0px;\r\n            bottom: 30px;\r\n            left: 0;\r\n            right: 0;\r\n            background: url(../../../assets/img/temporario.JPG) no-repeat center center fixed;\r\n            background-position: right top 60px; \">\r\n\r\n\r\n            </div>\r\n        </router-outlet>\r\n\r\n    </mat-sidenav-container>\r\n\r\n\r\n</ng-container>\r\n\r\nalou\r\n\r\n<!-- \r\n\r\n<div class=\"row mainpage\">\r\n    <div class=\" sidenavBar mat-elevation-z8\"\r\n    style=\"border-radius: 10.5px;\r\n    box-shadow: 0 0 8px 5px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\">\r\n        <div class=\"sidenav\">\r\n            <a routerLink=\"/adm1/child1\" >Usuários</a>\r\n            <a routerLink=\"/adm1/unidades\">Unidades</a>\r\n            <a routerLink=\"/adm1/professores\">professores</a>\r\n            <a routerLink=\"/adm1/produtos\">produtos</a>\r\n            <a routerLink=\"/adm1/cursos\">cursos</a>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\" mainBar\" >\r\n        \r\n        \r\n<router-outlet></router-outlet>\r\n   \r\n\r\n\r\n</div> -->\r\n<!-- <form *ngIf=\"!isUserAuthenticated()\" class=\"form-signin\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\r\n    <div class=\"container-fluid\">\r\n        <h2 class=\"form-signin-heading\">Login</h2>\r\n        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">Invalid username or password.</div>\r\n        <br />\r\n        <label for=\"email\" class=\"sr-only\">Email address</label>\r\n        <input type=\"email\" id=\"username\" name=\"email\" ngModel class=\"form-control\" placeholder=\"User Name\" required\r\n            autofocus>\r\n        <br />\r\n        <label for=\"senha\" class=\"sr-only\">Password</label>\r\n        <input type=\"password\" id=\"password\" name=\"senha\" ngModel class=\"form-control\" placeholder=\"Password\"\r\n            required>\r\n        <br />\r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n    </div>\r\n</form> -->","export class MyTel {\r\n    constructor(\r\n      public area: string,\r\n      public exchange: string,\r\n      public subscriber: string\r\n    ) {}\r\n  }","/*\r\nmodo: regular - qualificação/especialização - workshop\r\ninicio e fim? pedagógico\r\nDescricao\r\nduracao\r\nonline? pedagogico\r\nidade mínima?\r\nMEC reconhecido?\r\ngrade curricular\r\n\r\n\r\n*/\r\n\r\nimport { Colaborador } from \"./colaborador.model\";\r\n\r\nexport class Turma {\r\n    constructor(\r\n        public id?: number,\r\n        public identificador?: string,\r\n        public descricao?: string,\r\n        public prevInicio?: Date,\r\n        public prevtermino?: Date,\r\n        public totalAlunos?: number,\r\n        public iniciada?: Boolean,\r\n        public turno?: string,\r\n        public numAlunos?: number,\r\n        public valor?: string,\r\n        public Professores?: number[]\r\n    ) { }\r\n}\r\n\r\nexport class TurmaViewModel {\r\n    constructor(\r\n        public id?: number,\r\n        public identificador?: string,\r\n        public descricao?: string,\r\n        public moduloId?: string,\r\n        public turno?: string,\r\n        public vagas?: number,\r\n        public podeIniciar?: boolean,\r\n        public aulaIniciada?: boolean,\r\n        public minimoAlunos?: number,\r\n        public statusDaTurma?: string,\r\n        public totalAlunos?: number,\r\n        public previsionStartOne?: Date,\r\n        public prevtermino?: Date,\r\n        public iniciada?: Boolean,\r\n        public previsaoAtual?: Date,\r\n        public previsaoTerminoAtual?: Date,\r\n        public previsao?: string,\r\n        public professores?: number[],\r\n        public weekDayOne?: string,\r\n        public initialHourOne?: string,\r\n        public calendarioId?: number,\r\n        public finalHourOne?: string,\r\n\r\n        public previsoes?: PrevisoesViewModel\r\n    ) { }\r\n}\r\n\r\nexport class PrevisoesViewModel {\r\n    constructor(\r\n        public PrevisoesId?: number,\r\n        public iniciada?: boolean,\r\n        public previsaoAtual?: string,\r\n        public previsionStartOne?: Date,\r\n        public previsionEndingOne?: Date,\r\n        public previsionStartTwo?: Date,\r\n        public previsionEndingTwo?: Date,\r\n        public previsionStartThree?: Date,\r\n        public previsionEndingThree?: Date\r\n    ) { }\r\n}\r\n// export class Professor{\r\n//     public id?: number,\r\n\r\n// }\r\n\r\nexport class Materias {\r\n    constructor(\r\n        public id?: number,\r\n        public materiaId?: number,\r\n        public descricao?: string,\r\n        public avaliacaoUm?: string,\r\n        public avaliacaoDois?: string,\r\n        public avaliacaoTres?: string,\r\n        public segundaChamadaAvaliacaoUm?: string,\r\n        public segundaChamadaAvaliacaoDois?: string,\r\n        public segundaChamadaAvaliacaoTres?: string,\r\n        public materia?: string,\r\n        public profId?: number,\r\n        public turmaId?: number,\r\n        public turma?: string,\r\n        public moduloId?: number,\r\n        public temProfessor?: boolean\r\n\r\n    ) { }\r\n}\r\n\r\nexport class NotasViewModel {\r\n    constructor(\r\n        public id?: number,\r\n        public materia?: string,\r\n        public dataAv1?: string,\r\n        public dataAv2?: string,\r\n        public dataAv3?: string,\r\n        public alunos?: AlunosNotas[]\r\n    ) { }\r\n}\r\n\r\nexport class AlunosNotas {\r\n    constructor(\r\n        public alunoId?: number,\r\n        public listaNotasId?: number,\r\n        public materia?: string,\r\n        public nome?: string,\r\n        public av1?: string,\r\n        public av2?: string,\r\n        public av3?: string,\r\n        public disabledv1?: boolean,\r\n        public disabledv2?: boolean,\r\n        public disabledv3?: boolean,\r\n        public historicoId?: number\r\n    ){}\r\n}","import { HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport abstract class BaseService {\r\n    \r\n    protected BaseUrl: string = environment.baseUrl\r\n\r\n    protected ObterHeaderJson() {\r\n        return {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Authorization':`Bearer ${localStorage.getItem('jwt')}`\r\n            })\r\n        };\r\n    }\r\n\r\n\r\n    protected ObterHeaderDownload() {\r\n        return {\r\n            headers: new HttpHeaders({\r\n                'reportProgress': 'true',\r\n                'responseType':'blob',\r\n                'Authorization':`Bearer ${localStorage.getItem('jwt')}`\r\n            })\r\n        };\r\n    }\r\n\r\n\r\n\r\n    // public downloadListPendencia(matriculaId: any): Observable<HttpEvent<Blob>> {\r\n    //     return this._http.request(new HttpRequest(\r\n    //         'GET', `${this.baseUrl}/api/pedag/doc/getpendencia/${matriculaId}`, null, {\r\n    //         reportProgress: true,\r\n    //         responseType: 'blob'\r\n    //     }));\r\n    // }\r\n\r\n    protected extractData(response: any) {\r\n        return response || {};\r\n    }\r\n\r\n    protected extractDataDownload(response: any) {\r\n        return response;\r\n    }\r\n\r\n\r\n    protected serviceError(response: Response | any) {\r\n        let customError: string[] = [];\r\n\r\n        if (response instanceof HttpErrorResponse) {\r\n\r\n            if (response.statusText === \"Unknown Error\") {\r\n                customError.push(\"Ocorreu um erro desconhecido\");\r\n                response.error.errors = customError;\r\n            }\r\n        }\r\n      \r\n       // console.error(response);\r\n        return throwError(response);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// if (req.url.includes(this.baseUrl)) {\r\n//     if (localStorage.getItem('jwt') !== null) {\r\n//         const cloneReq = req.clone({\r\n//             headers: req.headers.set('Authorization', `Bearer ${localStorage.getItem('jwt')}`)\r\n            \r\n//         });\r\n//         return next.handle(cloneReq).pipe(\r\n//             tap(\r\n//                 succ => { },\r\n//                 err => {\r\n//                     if (err.status === 401) {\r\n//                         this.router.navigateByUrl('user/login');\r\n//                     }\r\n//                 }\r\n//             )\r\n//         );\r\n//     } else {\r\n//         return next.handle(req.clone());\r\n//     }\r\n// }else{\r\n//     const cloneReq = req.clone()\r\n//     return next.handle(cloneReq).pipe(\r\n//         tap(\r\n//             succ => { },\r\n//             err => {\r\n//                 if (err.status === 401) {\r\n//                     this.router.navigateByUrl('user/login');\r\n//                 }\r\n//             }\r\n//         )\r\n//     );\r\n// }","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit, Output } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Component({\r\n    selector: \"estagioedit-app\",\r\n    templateUrl: './estagio-alunos.component.html',\r\n    styleUrls: ['./estagio-alunos.component.scss'],\r\n    animations: [HighlightTrigger]\r\n    //\r\n})\r\n\r\nexport class EstagioAlunosComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n    //public cepReturn: CepReturn = new CepReturn();\r\n    estagioForm: FormGroup\r\n    public alunos: any[] = new Array<any>();\r\n\r\n    constructor(\r\n        private _snackBar: MatSnackBar,\r\n        //private CreateMatriculaModal: MatDialog,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<EstagioAlunosComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any\r\n        //private CreateColaboradoresModal: MatDialog,\r\n        //private EditColaboradoresModal: MatDialog\r\n    ) {\r\n        this.estagioForm = _fb.group({\r\n            nome: [\"\", [Validators.required]],\r\n            dataInicio: [\"\", [Validators.required]],\r\n            vagas: [\"\", [Validators.required]],\r\n            //trimestre: [\"\",[Validators.required]],\r\n           // inicio: ['', [Validators.required]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            numero: ['', [Validators.required]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]]//,\r\n        })\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.alunos = Object.assign([], this.data['estagio'].inscritos)\r\n        //this.GetAlunosEstagio(this.data['estagio']);\r\n    }\r\n\r\n    GetAlunosEstagio(estagio){\r\n\r\n        this._http.get(`${this.baseUrl}/estagios/alunos/${estagio.id}`)\r\n                .subscribe(response => {\r\n                    this.alunos = Object.assign([], response['alunos'])\r\n                }, err => { console.log(err) },\r\n                    () => {\r\n                        // console.log('finaly') \r\n                    });\r\n        \r\n    }\r\n\r\n    \r\n\r\n    onSubmit(form: any) {\r\n\r\n        this._http.post(`${this.baseUrl}/estagios`, this.estagioForm.value, {\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bear \"\r\n            })\r\n        }).subscribe(response => {\r\n\r\n        },\r\n            (error) => {\r\n                console.log(error)\r\n                //this.disabledSpinner = false\r\n            },\r\n            () => {\r\n               // this.estagioForm.reset();\r\n               // this.cepReturn = new CepReturn();\r\n                this.dialogRef.close({ clicked: \"OK\" });\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    valor: any\r\n    onFocusOutDateEvent(event: any) {\r\n        var data;\r\n       \r\n        if (event.target.value.length == 10) {\r\n          var data = event.target.value.split('/')\r\n          console.log(data)\r\n          var dataForm: Date = new Date(parseInt(data[2]), parseInt(data[1]) - 1,\r\n            parseInt(data[0]))\r\n         this.estagioForm.get('dataInicio').setValue(dataForm)\r\n          this.valor = dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n          //this.valor = dataForm//.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n        }\r\n    \r\n      }\r\n}","<div style=\"font-size: 1.2em;\">Estágio - matriculados\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<hr>\r\n\r\n<div style=\"position: relative;\">\r\n    \r\n    <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n        <mat-label>Nome</mat-label>\r\n        <input selected disabled [value]=\"this.data['estagio'].nome\" required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n    \r\n    <br>\r\n    \r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n        <mat-label>Nome</mat-label>\r\n        <input selected formControlName=\"nome\" required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n    \r\n    <br> -->\r\n\r\n    <div *ngIf=\"alunos.length > 0\" class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n        <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n            <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width: 2%; \r\n                text-align:left; \r\n                vertical-align: middle;\r\n                border-top: 0px;\"></th>\r\n\r\n\r\n                    <th style=\"width: 40%;font-size:1em;\r\n                vertical-align: middle; \r\n                text-align:left;\r\n                 border-top: 0px; font-weight: 400;\">Nome</th>\r\n\r\n                    <th style=\"width: 29%;font-size:1em;\r\n                vertical-align: middle;\r\n                text-align:center;\r\n                border-top: 0px; font-weight: 400;\">E-mail</th>\r\n\r\n                    <th style=\"width: 29%;font-size:1em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">CPF</th>\r\n\r\n                    <!--<th style=\"width: 12%;font-size:1em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">Matriculados</th>\r\n\r\n                <th style=\"width: 13%;font-size:1em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">Status</th> -->\r\n\r\n                    <!-- <th style=\"width: 34%;font-size:1em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">\r\n\r\n                </th> -->\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n                <tr *ngFor=\"let aluno of alunos; let i = index;\">\r\n                    <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">{{i + 1}}</td>\r\n\r\n                    <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                        {{aluno.nome}}\r\n                    </td>\r\n\r\n                    <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                        {{aluno.email || 'sem e-mail cadastrado'}}\r\n                    </td>\r\n\r\n                    <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">{{aluno.cpf}}</td>\r\n\r\n                    <!-- <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\"></td> -->\r\n                    <!-- <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">Não iniciada</td>\r\n                <td style=\"text-align: center;vertical-align: middle;\"> -->\r\n                    <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                        matTooltip=\"adiar a tumra para a próxima data\" matTooltipPosition=\"above\"\r\n                        matTooltipHideDelay=\"100\">\r\n                        <button \r\n                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                            mat-icon-button>\r\n                            <mat-icon style=\"font-size: 1.5em;\" class=\"material-icons-outlined\">watch_later</mat-icon>\r\n                        </button>\r\n                    </i>\r\n\r\n                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                        matTooltip=\"iniciar as aulas\" matTooltipPosition=\"above\"\r\n                        matTooltipHideDelay=\"100\">\r\n                        <button \r\n                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                            mat-icon-button>\r\n                            <mat-icon style=\"font-size: 1.5em;\" class=\"material-icons-outlined\">play_arrow</mat-icon>\r\n                        </button>\r\n                    </i>-->\r\n\r\n                    <!-- update_disabled -->\r\n\r\n                    <!--<i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"detalhes/editar\"\r\n                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <button (click)=\"openEditCursoModal(item)\"\r\n                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                            mat-icon-button>\r\n                            <mat-icon>description</mat-icon>\r\n                        </button>\r\n                    </i> \r\n                </td>  \r\n                <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\"></td>     \r\n                -->\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TransferenciaExternaComponent } from './TransExterna/transfexterna.component';\r\nimport { TransferenciaInternaComponent } from './TransfInterna/transfinterna.component';\r\nimport { TransferenciaTurmaComponent } from './TransTurma/transfturma.component';\r\n\r\n@Component({\r\n    selector: 'transferencia-app',\r\n    templateUrl: './transferencia.component.html',\r\n    styleUrls: ['./transferencia.component.scss']\r\n})\r\nexport class TransferenciaComponent implements OnInit{\r\n      \r\n    constructor(\r\n        private _modal: MatDialog,\r\n    ){\r\n\r\n    }\r\n    ngOnInit(){\r\n    }\r\n    \r\n    openTransfInternalModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(TransferenciaInternaComponent, {\r\n                height: 'auto',\r\n                width: '1200px',\r\n\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                // Reset form here\r\n                console.log('afte close ok')\r\n               // this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n    openTransfTurmaModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(TransferenciaTurmaComponent, {\r\n                height: 'auto',\r\n                width: '1200px',\r\n\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                // Reset form here\r\n                console.log('afte close ok')\r\n               // this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n    openTransfExternaModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(TransferenciaExternaComponent, {\r\n                height: 'auto',\r\n                width: '1000px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                // Reset form here\r\n                console.log('afte close ok')\r\n               // this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n}","<div class=\"container\" style=\"width: 95%;\" s>\r\n    <div style=\"margin-top: 20px;margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n        Transferências\r\n    </div>\r\n    <hr>\r\n\r\n    <!-- <button (click)=\"openTransfInternalModal()\" style=\"color:white; background-color: green;margin-right: 10px;\"\r\n        mat-raised-button>Interna</button>\r\n    <button (click)=\"openTransfExternaModal()\" mat-raised-button\r\n        style=\"color:white; background-color: green\">Externa</button>\r\n    <button (click)=\"openTransfTurmaModal()\" mat-raised-button\r\n        style=\"color:white; background-color: green\">Turma</button>\r\n    <br> -->\r\n\r\n\r\n\r\n\r\n    <span style=\"margin-top: 20px;margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n        Transferência interna\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openTransfInternalModal()\" disabled mat-icon-button>\r\n                <mat-icon>sync_alt</mat-icon>\r\n            </button>\r\n        </i>\r\n    </span>\r\n    <br>\r\n    <!-- <span style=\"margin-top: 20px;margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n        Transferência externa\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openTransfExternaModal()\" mat-icon-button>\r\n                <mat-icon>sync_alt</mat-icon>\r\n            </button>\r\n        </i>\r\n    </span> -->\r\n    <br>\r\n    <span style=\"margin-top: 20px;margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n        Transferência de turmas\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openTransfTurmaModal()\" disabled mat-icon-button>\r\n                <mat-icon>sync_alt</mat-icon>\r\n            </button>\r\n        </i>\r\n    </span>\r\n\r\n\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, TitularDoc, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Modulo } from \"src/app/_shared/models/modulo.model\";\r\nimport { Materia } from \"src/app/_shared/models/materia.model\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\n\r\nexport const Modalidade = [\r\n    { type: 'Presencial', value: 'Presencial' },\r\n    { type: 'On-line', value: 'On-line' }\r\n\r\n]\r\n\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'pacotedetalhemodal',\r\n    templateUrl: './pacote-detalhe.component.html',\r\n    styleUrls: ['./pacote-detalhe.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class DetailPacoteComponent implements OnInit {\r\n\r\n\r\n    // initProgressBar = 'visible'\r\n    // public moduloForm: FormGroup;\r\n    // public addMateriaForm: FormGroup;\r\n    // public addDocForm: FormGroup;\r\n    // private jwtHelper = new JwtHelperService();\r\n    // public tokenInfo: TokenInfos = new TokenInfos();\r\n    public modulo: any// = new any();\r\n    // materiasTemplate: any//\r\n    public documentos: any//\r\n    // modalidade = Modalidade\r\n    // public titularDoc = TitularDoc\r\n    // showForm = false\r\n\r\n    public initProgressBar = 'visible'\r\n    public saveProgressBar = 'hidden'\r\n\r\n    public showContent = false\r\n    public addMateriasForm = false\r\n\r\n    public moduloForm: FormGroup;\r\n    public addMateriaForm: FormGroup;\r\n    public addDocForm: FormGroup;\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n\r\n    public errorMsg: any[] = new Array<any>()\r\n    public unidadesAutorizadas: any[] = new Array<any>();\r\n    public materiasTemplate: any[] = new Array<any>();\r\n    public documentosTemplate: any[] = new Array<any>();\r\n\r\n    public typePacotes: any\r\n    public docTemplates: any\r\n\r\n    public titularDoc = TitularDoc\r\n\r\n    constructor(\r\n        private _admService: AdmService,\r\n        private _snackBar: MatSnackBar,\r\n        //private router: Router,\r\n        private _fb: FormBuilder,\r\n        //private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<DetailPacoteComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.addMateriaForm = _fb.group({\r\n            pacote: ['', [Validators.required]]\r\n        })\r\n\r\n        this.addDocForm = _fb.group({\r\n            documento: ['', [Validators.required]]\r\n        })\r\n\r\n        this.moduloForm = _fb.group({\r\n            id: [''],\r\n            descricao: ['', [Validators.required]],\r\n            dataCriacao: [''],\r\n            totalHoras: [''],\r\n            typePacoteId: ['', [Validators.required]],\r\n            unidadeId: ['', [Validators.required]],\r\n            ativo: [''],\r\n\r\n            materias: this._fb.array([], [Validators.required]),\r\n            documentosExigidos: this._fb.array([])\r\n\r\n        })\r\n    }  \r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n\r\n        this.GetEditPacoteView(this.data['moduloId'])\r\n    }\r\n\r\n    GetEditPacoteView(pacoteId) {\r\n\r\n        this._admService.GetEditModuleViewModel(pacoteId)\r\n            .subscribe(\r\n                sucesso => { this.GetEditPacoteViewSucesso(sucesso) },\r\n                error => { this.GetEditPacoteViewErro(error) })\r\n    }\r\n\r\n    GetEditPacoteViewSucesso(response) {\r\n        this.modulo = response['pacote']\r\n        this.materiasTemplate = response['materias']\r\n        this.documentos = response['docs']\r\n\r\n        this.MappingForm();\r\n    }\r\n\r\n    GetEditPacoteViewErro(error){\r\n        this.initProgressBar = 'hidden'\r\n        //console.log(error)\r\n    }\r\n\r\n    MappingForm(){\r\n        this.modulo.materias.forEach(element => {\r\n            this.addMateriaInitial(element)\r\n        });\r\n\r\n        this.modulo.documentosExigidos.forEach(element => {\r\n            this.addDocumentacaoInitial(element)\r\n        });\r\n        \r\n        this.moduloForm.get('id').setValue(this.modulo.id)\r\n        this.moduloForm.get('descricao').setValue(this.modulo.descricao)\r\n        this.moduloForm.get('dataCriacao').setValue(this.modulo.dataCriacao)\r\n        this.moduloForm.get('totalHoras').setValue(this.modulo.totalHoras)\r\n        this.moduloForm.get('typePacoteId').setValue(this.modulo.typePacoteId)\r\n        this.moduloForm.get('unidadeId').setValue(this.modulo.unidadeId)\r\n        this.moduloForm.get('ativo').setValue(this.modulo.ativo)\r\n        \r\n        this.initProgressBar = 'hidden'\r\n        this.dialogRef.addPanelClass('mymoduloedit-class')\r\n        this.showContent = true\r\n        this.addMateriasForm = true\r\n    }\r\n\r\n\r\n    get materias() {\r\n        return this.moduloForm.controls[\"materias\"] as FormArray;\r\n    }\r\n\r\n    get documentosExig() {\r\n        return this.moduloForm.controls[\"documentosExigidos\"] as FormArray;\r\n    }\r\n\r\n    addDocumentacaoInitial(form: any) {\r\n\r\n        let pacote = form//.value['pacote']\r\n\r\n        // if (form.valid) {\r\n        //     let pacotId = this.materias.value.find(element =>\r\n        //         element.materiaId == pacote.id);\r\n        //         if (pacotId != undefined) return;\r\n        //     }\r\n\r\n\r\n        const docsForm = this._fb.group({\r\n            id: [pacote.id],\r\n            descricao: [pacote.descricao],\r\n            comentario: [pacote.comentario],\r\n            titular: [pacote.titular],\r\n            validadeDias: [pacote.validadeDias],\r\n            obrigatorioParaMatricula: [pacote.obrigatorioParaMatricula],\r\n            pacoteId: [pacote.pacoteId],\r\n\r\n\r\n        });\r\n\r\n        this.documentosExig.push(docsForm);\r\n        //}\r\n\r\n    }\r\n\r\n    addMateriaInitial(form: any) {\r\n\r\n        let pacote = form//.value['pacote']\r\n\r\n        // if (form.valid) {\r\n        //     let pacotId = this.materias.value.find(element =>\r\n        //         element.materiaId == pacote.id);\r\n        //         if (pacotId != undefined) return;\r\n        //     }\r\n\r\n\r\n        const matForm = this._fb.group({\r\n            id: [pacote.id],\r\n            materiaId: [pacote.materiaId],\r\n            nome: [pacote.nome],\r\n            descricao: [pacote.descricao],\r\n            modalidade: [pacote.modalidade],\r\n            cargaHoraria: [pacote.cargaHoraria],\r\n            pacoteId: [pacote.pacoteId],\r\n\r\n        });\r\n\r\n        this.materias.push(matForm);\r\n        //}\r\n    }\r\n\r\n    addMateria(form: any) {\r\n\r\n        let pacote = form.value['pacote']\r\n\r\n        if (form.valid) {\r\n            let pacotId = this.materias.value.find(element =>\r\n                element.materiaId == pacote.id);\r\n\r\n            if (pacotId != undefined) return;\r\n\r\n            const matForm = this._fb.group({\r\n                id: [pacote.id],\r\n                materiaId: [pacote.materiaId],\r\n                nome: [pacote.nome],\r\n                descricao: [pacote.descricao],\r\n                modalidade: [pacote.modalidade],\r\n                cargaHoraria: [pacote.cargaHoraria],\r\n                pacoteId: [pacote.pacoteId],\r\n\r\n            });\r\n\r\n            this.materias.push(matForm);\r\n        }\r\n    }\r\n\r\n    addDocumentos(form: any) {\r\n\r\n        let pacote = form.value\r\n        \r\n\r\n        // if (form.valid) {\r\n        //     let pacotId = this.documentosExig.value.find(element =>\r\n        //         element.materiaId == pacote.id);\r\n        //     if (pacotId != undefined) return;\r\n        // }\r\n        console.log(form.value)\r\n\r\n        const docsForm = this._fb.group({\r\n            id: [pacote.id],\r\n            nome:  [pacote.nome],\r\n            descricao: [pacote.descricao],\r\n            titular: ['',[Validators.required]],\r\n            validadeDias: [pacote.modalidade],\r\n            obrigatorioParaMatricula: [false]\r\n        });\r\n\r\n        this.documentosExig.push(docsForm);\r\n        //}\r\n\r\n    }\r\n\r\n    deleteLesson(index: number) {\r\n        this.materias.removeAt(index);\r\n    }\r\n\r\n    deleteDocs(index: number) {\r\n        this.documentosExig.removeAt(index);\r\n    }\r\n\r\n    get totalHoras() {\r\n        let total = 0\r\n\r\n        if (this.moduloForm.get('materias').value.length > 0) {\r\n            const sum = this.moduloForm.get('materias').value.reduce((horas, a) => ({\r\n                cargaHoraria: horas.cargaHoraria + a.cargaHoraria\r\n            }));\r\n\r\n            if (sum != null) {\r\n                total = sum['cargaHoraria']\r\n            } else {\r\n                total = 0\r\n            }\r\n        }\r\n\r\n        this.moduloForm.get('totalHoras').setValue(total)\r\n\r\n        return total\r\n    }\r\n\r\n\r\n    onSubmit(form: any) {\r\n\r\n        if(this.moduloForm.valid){\r\n\r\n            this._admService.editPacote(this.moduloForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.onSubmitSucesso(sucesso)},\r\n                    falha => { this.onSubmitErro(falha)})\r\n        }\r\n    }\r\n\r\n    onSubmitSucesso(resposta){\r\n\r\n    }\r\n\r\n    onSubmitErro(error){\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Pacote - Editar\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<div @rowHighlight *ngIf=\"showContent\">\r\n\r\n    <hr>\r\n\r\n    <form novalidate [formGroup]=\"moduloForm\">\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 80px;\">\r\n            <mat-label>Unidade</mat-label>\r\n            <mat-select formControlName=\"unidadeId\" placeholder=\"type pacote\">\r\n                <mat-option></mat-option>\r\n                <mat-option *ngFor=\"let uni of unidadesAutorizadas\" [value]=\"uni.unidadeId\">{{uni.unidade}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 350px;margin-left: 10px;\">\r\n            <mat-label>Tipo</mat-label>\r\n            <mat-select formControlName=\"typePacoteId\" placeholder=\"\">\r\n                <mat-option></mat-option>\r\n                <mat-option (click)=\"buscarMaterias(type.id)\" [value]=\"type.id\" *ngFor=\"let type of typePacotes\">\r\n                    {{type.nome}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field> -->\r\n\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 280px; \">\r\n            <mat-label>Descrição</mat-label>\r\n            <input selected formControlName=\"descricao\" matInput placeholder=\"dica: Curso Técnico de Enfermagem\">\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 120px; margin-left: 10px;\">\r\n            <mat-label>Duração/meses</mat-label>\r\n            <input selected formControlName=\"duracaoMeses\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" matInput>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 100px;margin-left: 10px; \">\r\n            <mat-label>Preço</mat-label>\r\n            <input currencyMask [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" formControlName=\"preco\"\r\n                type=\"text\" selected required matInput placeholder=\"R$ 00,00\">\r\n            <span matPrefix>R$&nbsp;</span>\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 80px;margin-left: 10px; \">\r\n            <mat-label>Total horas</mat-label>\r\n            <input selected disabled [value]=\"totalHoras\" matInput placeholder=\"curso tal...\">\r\n        </mat-form-field>\r\n\r\n    </form>\r\n\r\n    <mat-tab-group>\r\n\r\n        <mat-tab label=\"Matérias\">\r\n\r\n            <ng-container *ngIf=\"addMateriasForm;else showEscolhaMateriasMsg\">\r\n\r\n                <div style=\"font-size: 0.9em;font-style: italic;margin-top: 20px;\">\r\n                    Adicione ao menos uma matéria ao curso:\r\n                </div>\r\n\r\n                <form novalidate [formGroup]=\"addMateriaForm\" (ngSubmit)=\"addMateria(addMateriaForm)\">\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n                        <mat-label>Matéria</mat-label>\r\n                        <mat-select formControlName=\"pacote\" placeholder=\"\">\r\n                            <mat-option></mat-option>\r\n                            <mat-option [value]=\"type\" *ngFor=\"let type of materiasTemplate\">\r\n                                {{type.nome}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n\r\n                    </mat-form-field>\r\n                    <button mat-icon-button type=\"submit\" #tooltip=\"matTooltip\" matTooltip=\"adicionar matéria\"\r\n                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <mat-icon>add</mat-icon>\r\n                    </button>\r\n                </form>\r\n\r\n                <form novalidate [formGroup]=\"moduloForm\">\r\n\r\n                    <ng-container formArrayName=\"materias\">\r\n\r\n                        <ng-container *ngFor=\"let matForm of materias.controls; let i = index;\">\r\n                            <div [formGroup]=\"matForm\">\r\n\r\n                                <span>{{ i + 1 }} - </span>\r\n\r\n                                <mat-form-field appearance=\"standard\" style=\"width: 245px;\">\r\n                                    <mat-label>Nome</mat-label>\r\n                                    <input selected [value]=\"matForm.value.nome\" disabled matInput\r\n                                        placeholder=\"Descrição\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"standard\" style=\"width: 150px;margin-left: 20px;\">\r\n                                    <mat-label>Descrição</mat-label>\r\n                                    <input selected [value]=\"matForm.value.descricao || ' '\" disabled matInput\r\n                                        placeholder=\"Descrição\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"standard\" style=\"width: 85px;margin-left: 20px;\">\r\n                                    <mat-label>Modalidade</mat-label>\r\n                                    <input selected [value]=\"matForm.value.modalidade\" disabled matInput\r\n                                        placeholder=\"Descrição\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field appearance=\"standard\" style=\"width: 70px;margin-left: 20px;\">\r\n                                    <mat-label>Carga Horária</mat-label>\r\n                                    <input selected [value]=\"matForm.value.cargaHoraria\" disabled matInput\r\n                                        placeholder=\"semestre\">\r\n                                </mat-form-field>\r\n\r\n                                <button mat-icon-button (click)=\"deleteLesson(i)\" style=\"margin-left:10px ;\"\r\n                                    #tooltip=\"matTooltip\" matTooltip=\"remover\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n\r\n                                    <mat-icon style=\"vertical-align: middle;\" class=\"delete-btn\">\r\n                                        delete_forever</mat-icon>\r\n                                </button>\r\n\r\n                            </div>\r\n                        </ng-container>\r\n\r\n                    </ng-container>\r\n\r\n                </form>\r\n            </ng-container>\r\n\r\n            <ng-template #showEscolhaMateriasMsg>\r\n                <span style=\"font-style: italic; margin-top: 10px; font-size: 0.9em;\">\r\n                    * escolha o tipo para poder adicionar as matérias\r\n                </span>\r\n\r\n            </ng-template>\r\n\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"Documentos\">\r\n\r\n\r\n\r\n            <div div style=\"font-size: 0.9em;font-style: italic;margin-top: 20px;\">\r\n                Adicione a documentação exigida (opcional):\r\n            </div>\r\n\r\n            <form novalidate [formGroup]=\"addDocForm\" (ngSubmit)=\"addDocumentos(addDocForm)\">\r\n                <mat-form-field appearance=\"standard\" style=\"width: 175px;\">\r\n                    <mat-label>Documento</mat-label>\r\n                    <mat-select formControlName=\"documento\" placeholder=\"\">\r\n                        <mat-option></mat-option>\r\n                        <mat-option [value]=\"type\" *ngFor=\"let type of documentos\">\r\n                            {{type.nome}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n\r\n                </mat-form-field>\r\n                <button mat-icon-button type=\"submit\" #tooltip=\"matTooltip\" matTooltip=\"adicionar documentos\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <mat-icon>add</mat-icon>\r\n                </button>\r\n            </form>\r\n\r\n            <form novalidate [formGroup]=\"moduloForm\">\r\n\r\n            <ng-container formArrayName=\"documentosExigidos\">\r\n\r\n                <ng-container *ngFor=\"let docsForm of documentosExig.controls; let i = index;\">\r\n                    <div [formGroup]=\"docsForm\">\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 180px;\">\r\n                            <mat-label>Nome</mat-label>\r\n                            <input selected [value]=\"docsForm.value.none\" disabled matInput\r\n                                placeholder=\"Descrição\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 210px;margin-left: 20px;\">\r\n                            <mat-label>Comentário</mat-label>\r\n                            <input selected formControlName=\"comentario\" matInput placeholder=\"Descrição\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 175px;;margin-left: 20px;\">\r\n                            <mat-label>Titular</mat-label>\r\n                            <mat-select formControlName=\"titular\" placeholder=\"\">\r\n                                <mat-option></mat-option>\r\n                                <mat-option [value]=\"doc.value\" *ngFor=\"let doc of titularDoc\">\r\n                                    {{doc.value}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <button mat-icon-button (click)=\"deleteDocs(i)\" style=\"margin-left:10px ;\" #tooltip=\"matTooltip\"\r\n                            matTooltip=\"remover\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n\r\n                            <mat-icon style=\"vertical-align: middle;\" class=\"delete-btn\">\r\n                                delete_forever</mat-icon>\r\n                        </button>\r\n\r\n                        <br>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 90px;\">\r\n                            <mat-label>Validade (dias)</mat-label>\r\n                            <input selected [value]=\"docsForm.value.validadeDias\" disabled matInput\r\n                                placeholder=\"semestre\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-checkbox color=\"primary\" style=\"margin-left:10px ;\"\r\n                            formControlName=\"obrigatorioParaMatricula\">\r\n                            Documento obrigatório para matrícula</mat-checkbox>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                </ng-container>\r\n\r\n            </ng-container>\r\n\r\n            </form>\r\n\r\n        </mat-tab>\r\n\r\n    </mat-tab-group>\r\n\r\n    <mat-progress-bar [style.visibility]=\"saveProgressBar\" mode=\"query\"></mat-progress-bar>\r\n\r\n    <span *ngFor=\"let msg of errorMsg\" style=\"margin-top: 20px; font-size: 0.8em;color: red;width: 350px;\">\r\n        {{ msg }}\r\n\r\n    </span>\r\n\r\n\r\n    <span>\r\n        <form novalidate [formGroup]=\"moduloForm\" (ngSubmit)=\"onSubmit(moduloForm)\" style=\"width: 200px; float: right;\">\r\n            <button type=\"submit\" [disabled]=\"disabledSaveButton\" mat-raised-button color=\"primary\"\r\n                style=\"float:right;margin-top: 10px\">\r\n\r\n                salvar\r\n            </button>\r\n        </form>\r\n    </span>\r\n\r\n</div>","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({ name: 'idade' })\r\nexport class IdadePipe implements PipeTransform {\r\n\r\n\r\n    transform(value) {\r\n\r\n        console.log(value)\r\n        //console.log(event.target.value);\r\n        //console.log(this.alunoForm.get('nascimento').value)\r\n        if (value != '') {\r\n            let idadeAluno: any\r\n            var dataForm: Date = new Date(value)\r\n\r\n\r\n            let timeDiff = Math.abs(Date.now() - dataForm.getTime());\r\n            idadeAluno = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\r\n\r\n\r\n            console.log(idadeAluno)\r\n            return idadeAluno\r\n        } else {\r\n\r\n            return ''\r\n        }\r\n    }\r\n}","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { PedagogicoService } from \"src/app/Pedagogico/service/pedagogico.service\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\n\r\n@Component({\r\n    selector: 'aulaeditarmodaldialog',\r\n    templateUrl: './aulaeditar.component.html',\r\n    styleUrls: ['./aulaeditar.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\nexport class AulaEditarModal implements OnInit {\r\n    \r\n    public initProgressBar = 'visible'\r\n    public disabledProfForm = false\r\n    public saveSpinner = 'hidden'\r\n    public showContent = false\r\n    public aula: any\r\n    public originalAula: any\r\n    public salas: any[] = new Array<any>()\r\n    public materias: any[] = new Array<any>()\r\n    public professores: any[] = new Array<any>()\r\n    public aulaForm: FormGroup\r\n    constructor(\r\n        private _pedagService: PedagogicoService,\r\n        private _fb: FormBuilder,\r\n        public dialogRef: MatDialogRef<AulaEditarModal>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.aulaForm = _fb.group({\r\n            id: [''],\r\n            professorId: [''],\r\n            materiaId: [''],\r\n            salaId: [''],\r\n            diaAula:[''],\r\n            horaInicial:['',[Validators.required]],\r\n            horaFinal:['',[Validators.required]]\r\n        })\r\n\r\n        this.aulaForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n\r\n                if (this.aulaForm.get('professorId').value !=\r\n                    \"00000000-0000-0000-0000-000000000000\") {\r\n\r\n                    this.aulaForm.controls['materiaId'].setValidators([Validators.required])\r\n                } else {\r\n                    this.aulaForm.controls['materiaId'].clearValidators()\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.GetAulaInfos()\r\n    }\r\n\r\n    get VerificarObrigariedade() {\r\n        if (this.aulaForm.get('professorId').value !=\r\n            \"00000000-0000-0000-0000-000000000000\") {\r\n            return Validators.required\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    private GetAulaInfos() {\r\n\r\n        this._pedagService.GetAulaEditViewModel(this.data['caled'].id)\r\n            .subscribe(\r\n                sucesso => { this.GetAulaInfosSucesso(sucesso) },\r\n                falha => { this.GetAulaInfosFalha(falha) }\r\n            )\r\n    }\r\n\r\n    private GetAulaInfosSucesso(resp) {\r\n        this.aula = resp['aula']\r\n        this.salas = resp['salas']\r\n        this.materias = resp['materias']\r\n        this.professores = resp['profsDisponiveis']\r\n        this.aulaForm.get(\"id\").setValue(this.aula.id)\r\n        this.aulaForm.get(\"professorId\").setValue(this.aula.professorId)\r\n        this.aulaForm.get(\"materiaId\").setValue(this.aula.materiaId)\r\n        this.aulaForm.get(\"salaId\").setValue(this.aula.salaId)\r\n        this.aulaForm.get(\"diaAula\").setValue(this.aula.diaAula)\r\n        this.aulaForm.get(\"horaInicial\").setValue(this.aula.horaInicial)\r\n        this.aulaForm.get(\"horaFinal\").setValue(this.aula.horaFinal)\r\n        this.originalAula = JSON.parse(JSON.stringify(this.aulaForm.value))\r\n        this.dialogRef.addPanelClass('aulaeditar-class')\r\n        this.initProgressBar = 'hidden'\r\n        this.showContent = true\r\n    }\r\n\r\n    private GetAulaInfosFalha(error) {\r\n\r\n    }\r\n\r\n    \r\n\r\n    get disabledSaveButton(){\r\n\r\n        if (this.aulaForm.valid &&\r\n            JSON.stringify(this.originalAula) !=\r\n            JSON.stringify(this.aulaForm.value)) {\r\n\r\n            return this.saveSpinner != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    public ChangeMateria() {\r\n        if (this.aulaForm.get(\"materiaId\").value == \"00000000-0000-0000-0000-000000000000\") {\r\n            this.aulaForm.get(\"professorId\").setValue(\"00000000-0000-0000-0000-000000000000\")\r\n            this.disabledProfForm = true\r\n            return;\r\n        }\r\n        this.disabledProfForm = false\r\n        this.aulaForm.get(\"professorId\").setValue(\"00000000-0000-0000-0000-000000000000\")\r\n\r\n        this._pedagService.GetProfsHabilitados(\r\n            this.aulaForm.get(\"id\").value,\r\n            this.aulaForm.get(\"materiaId\").value)\r\n            .subscribe(\r\n                sucesso => { this.ChangeMateriaSucesso(sucesso) },\r\n                error => { this.ChangeMateriaError(error) }\r\n            )\r\n\r\n        /*\r\n         if - materia == 00000000-0000-0000-0000-000000000000\r\n         se sim = tira o professor e deixa a aula sem professor\r\n         se nao = tira o profe temporariamente, vai no back\r\n                 e pega os prof q podem lecionar aquela matéria\r\n         e se voltar a lita de prof vazia (nao tem prof habilitado para aquela mat?)\r\n         deixa sem professor ?\r\n         */\r\n\r\n        /*\r\n        if - professor == 00000000-0000-0000-0000-000000000000\r\n        se sim, deixa do jeito q está podendo salvar sem prof\r\n        se nao - trazer as materias q aquele prof pode dar e nao deixar salvar\r\n        sem matéria\r\n        */\r\n\r\n    }\r\n\r\n    private ChangeMateriaSucesso(resp) {\r\n        this.professores = resp['profsDisponiveis']\r\n    }\r\n\r\n    private ChangeMateriaError(error) {\r\n\r\n        if (error['error'].status == 404) {\r\n            this.professores = new Array<any>()\r\n        }\r\n    }\r\n\r\n    public ChangeProfessor(professor) {\r\n\r\n    }\r\n\r\n    public SaveEdit(form) {\r\n\r\n        this.saveSpinner = 'visible'\r\n        this._pedagService.EditAula(this.aulaForm.value, this.data['caled'].id)\r\n            .subscribe(\r\n                sucesso => { this.SaveEditSucesso(sucesso) },\r\n                falha => { this.SaveEditFalha(falha) }\r\n            )\r\n    }\r\n\r\n    private SaveEditSucesso(resp) {\r\n        this.saveSpinner = 'hidden'\r\n        this.dialogRef.close({ result: true, aula: resp['aula'] })\r\n    }\r\n\r\n    private SaveEditFalha(error) {\r\n        this.saveSpinner = 'hidden'\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Editar aula\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" style=\"margin-top: 20px;\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<div *ngIf=\"showContent\">\r\n    <hr>\r\n    <form [formGroup]=\"aulaForm\" (ngSubmit)=\"SaveEdit(aulaForm)\">\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 50%;\">\r\n            <mat-label>Turma</mat-label>\r\n            <input selected matInput disabled value=\"{{aula.descricao}} - {{aula.identificador}}\"\r\n                oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 10px;\">\r\n        <mat-label>Sala</mat-label>\r\n        <input selected matInput disabled value=\"{{aula.titulo}}\"\r\n            oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n    </mat-form-field> -->\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 10px;\">\r\n            <mat-label>Sala</mat-label>\r\n            <mat-select formControlName=\"salaId\" name=\"salaId\" selected>\r\n                <mat-option></mat-option>\r\n                <mat-option *ngFor=\"let sala of salas\" [value]=\"sala.id\">{{sala.titulo}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 70%;\">\r\n        <mat-label>Professor</mat-label>\r\n        <input selected matInput [value]=\"aula.nome\" disabled oninput=\"this.value = this.value.toLowerCase()\"\r\n            placeholder=\"Email\">\r\n    </mat-form-field> -->\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 50%;\">\r\n            <mat-label>Professor</mat-label>\r\n            <mat-select formControlName=\"professorId\" name=\"profId\" selected>\r\n                <mat-option value=\"00000000-0000-0000-0000-000000000000\"></mat-option>\r\n                <mat-option *ngFor=\"let prof of professores\" [value]=\"prof.id\">{{prof.nome}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        \r\n        <br>\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 70%;\">\r\n        <mat-label>Matéria</mat-label>\r\n        <input selected value=\"Ética\" disabled [value]=\"aula.materiaDescricao\" matInput\r\n            oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n    </mat-form-field> -->\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 70%;\">\r\n            <mat-label>Matéria</mat-label>\r\n            <mat-select formControlName=\"materiaId\" name=\"matId\" selected>\r\n                <mat-option (click)=\"ChangeMateria()\" value=\"00000000-0000-0000-0000-000000000000\"></mat-option>\r\n                <mat-option (click)=\"ChangeMateria()\" *ngFor=\"let mat of materias\" [value]=\"mat.materiaId\">{{mat.nome}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 140px;\">\r\n            <mat-label>Dia da aula</mat-label>\r\n            <input matInput formControlName=\"diaAula\" [matDatepicker]=\"dp3\" disabled>\r\n            <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 70px;margin-left: 10px;\">\r\n            <mat-label>Início</mat-label>\r\n            <input selected disabled\r\n                value=\"09:00\" matInput\r\n                oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 80px;margin-left: 10px;\">\r\n            <mat-label>Fim</mat-label>\r\n            <input selected disabled\r\n                value=\"12:00\" matInput\r\n                oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field style=\"width: 80px; margin-left: 10px;\" appearance=\"standard\">\r\n            <mat-label>Início</mat-label>\r\n            <mytime-input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n              formControlName=\"horaInicial\" required></mytime-input>\r\n            <mat-hint></mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field style=\"width: 80px; margin-left: 10px;\" appearance=\"standard\">\r\n            <mat-label>Fim</mat-label>\r\n            <mytime-input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n              formControlName=\"horaFinal\" required></mytime-input>\r\n            <mat-hint></mat-hint>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n            <mat-label>Dia/Horário Aula</mat-label>\r\n            <input selected disabled\r\n                value=\"{{aula.diaAula | date: 'dd/MM/yyyy'}} {{aula.horaInicial}} às {{aula.horaFinal}}\" matInput\r\n                oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n            <mat-label>Início</mat-label>\r\n            <input selected disabled value=\"09:00\" matInput oninput=\"this.value = this.value.toLowerCase()\"\r\n                placeholder=\"Email\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n            <mat-label>Fim</mat-label>\r\n            <input selected disabled value=\"21:00\" matInput oninput=\"this.value = this.value.toLowerCase()\"\r\n                placeholder=\"Email\">\r\n        </mat-form-field>\r\n\r\n        <br> -->\r\n\r\n        <ng-container *ngIf=\"aula.aulaIniciada;else naoIniciada\">\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n                <mat-label>Aula iniciada em</mat-label>\r\n                <input disabled selected value=\"{{aula.dateAulaIniciada | date:'dd/MM/yyyy HH:MM'}}\" matInput\r\n                    oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n            </mat-form-field>\r\n        </ng-container>\r\n        <ng-template #naoIniciada>\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n                <mat-label>Aula iniciada em</mat-label>\r\n                <input disabled selected value=\"Aula não iniciada\" matInput\r\n                    oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n            </mat-form-field>\r\n        </ng-template>\r\n\r\n        <ng-container *ngIf=\"aula.aulaconcluida;else naoConcluida\">\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n                <mat-label>Aula concluída em</mat-label>\r\n                <input disabled selected matInput value=\"{{aula.dateAulaConcluida | date:'dd/MM/yyyy HH:MM'}}\"\r\n                    oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n            </mat-form-field>\r\n        </ng-container>\r\n        <ng-template #naoConcluida>\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n                <mat-label>Aula concluída em</mat-label>\r\n                <input disabled selected value=\"Aula não concluída\" matInput\r\n                    oninput=\"this.value = this.value.toLowerCase()\" placeholder=\"Email\">\r\n            </mat-form-field>\r\n        </ng-template>\r\n\r\n        <!-- <div style=\"position: relative;\">\r\n        <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n            <mat-label>Nota da aula</mat-label>\r\n            <textarea disabled placeholder=\"\" [value]=\"aula.observacoes\" matInput></textarea>\r\n        </mat-form-field>\r\n    </div> -->\r\n\r\n        <mat-progress-bar [style.visibility]=\"saveSpinner\" @rowHighlight style=\"margin-top:10px\" mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <button [disabled]=\"disabledSaveButton\" style=\"float: right;margin-top: 10px;\" mat-raised-button type=\"submit\"\r\n            color=\"primary\">\r\n            Salvar\r\n        </button>\r\n\r\n    </form>\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\n//import { Unidade } from \"../../Adm-Models/unidade.model\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'editunidademodal',\r\n    templateUrl: './editunidade.component.html',\r\n    styleUrls: ['./editunidade.component.scss']\r\n})\r\n\r\nexport class EditUnidadeComponent implements OnInit {\r\n\r\n    public initProgressBar = 'visible'\r\n    public saveSpinner = 'hidden'\r\n    public showContent = false\r\n    public unidadeOriginal: any;\r\n    public unidadeForm: FormGroup;\r\n\r\n    constructor(\r\n        private _admService: AdmService,\r\n        private _helper: HelpersService,\r\n        private _fb: FormBuilder,\r\n        private _dialogRef: MatDialogRef<EditUnidadeComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.unidadeForm = this._fb.group({\r\n            id: [''],\r\n            descricao: ['', [Validators.required]],\r\n            sigla: ['', [Validators.required, Validators.maxLength(3), Validators.minLength(3)]],\r\n            cnpj: ['', [Validators.required]],\r\n            cep: ['', [Validators.required, Validators.maxLength(8), Validators.minLength(8)]],\r\n            complemento: [''],\r\n            numero: ['', [Validators.required]],\r\n            logradouro: ['', [Validators.required]],\r\n            bairro: ['', [Validators.required]],\r\n            cidade: ['', [Validators.required]],\r\n            uf: ['', [Validators.required]],\r\n            ativo: [''],\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.GetUnidade()\r\n    }\r\n\r\n    private GetUnidade() {\r\n\r\n        this._admService.GetUnidadeById(this.data['unidade'].id)\r\n            .subscribe(\r\n                sucesso => { this.GetUnidadeSucesso(sucesso) },\r\n                falha => { this.GetUnidadeFalha(falha) }\r\n            )\r\n    }\r\n\r\n    private GetUnidadeSucesso(resp) {\r\n        this.unidadeForm.patchValue(resp['unidade']);\r\n        this.unidadeOriginal = JSON.parse(JSON.stringify(this.unidadeForm.value))\r\n        this._dialogRef.addPanelClass('myeditunidade-class')\r\n        this.initProgressBar = 'hidden'\r\n        this.showContent = true\r\n    }\r\n\r\n    private GetUnidadeFalha(error) {\r\n        this.initProgressBar = 'hidden'\r\n    }\r\n\r\n    public ConsultaCEP(CEP: string) {\r\n\r\n        if (this.unidadeForm.get('cep').valid) {\r\n\r\n            this._admService.CepConsulta(CEP)\r\n                .subscribe(response => {\r\n\r\n                    console.log(response)\r\n\r\n                    this.unidadeForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n                    this.unidadeForm.get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n                    this.unidadeForm.get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n                    this.unidadeForm.get('uf').setValue(response[\"uf\"].toUpperCase());\r\n\r\n                }, err => { console.log(err) });\r\n        }\r\n    }\r\n    \r\n    get saveButton(){\r\n\r\n        if (this.unidadeForm.valid &&\r\n            JSON.stringify(this.unidadeOriginal) !=\r\n            JSON.stringify(this.unidadeForm.value)) {\r\n\r\n            return this.saveSpinner != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    public SaveEdit() {\r\n\r\n        if (this.unidadeForm.valid) {\r\n            this.saveSpinner = 'visible'\r\n            \r\n            this._admService.EditUnidade(this.unidadeForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.SaveEditSucesso(sucesso)},\r\n                    falha => { this.SaveEditFalha(falha) }\r\n                    \r\n                )}\r\n    }\r\n\r\n    private SaveEditSucesso(resp){\r\n        this._helper.openSnackBarSucesso(\"Unidade editada com sucesso\")\r\n        this._dialogRef.close()\r\n    }\r\n\r\n    private SaveEditFalha(falha){\r\n        this.saveSpinner = 'hidden'\r\n    }\r\n\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">\r\n    Visualizar/Editar Unidade\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" \r\n@rowHighlight mode=\"query\"></mat-progress-bar>\r\n\r\n<hr>\r\n\r\n<div *ngIf=\"showContent\">\r\n\r\n\r\n    <form novalidate [formGroup]=\"unidadeForm\" (ngSubmit)=\"SaveEdit()\">\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 45%;\">\r\n            <mat-label>Nome da unidade</mat-label>\r\n            <input formControlName=\"descricao\"\r\n                oninput=\"this.value = this.value.toUpperCase()\"\r\n                 matInput>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 5%;\">\r\n            <mat-label>Sigla</mat-label>\r\n            <input disabled [value]=\"unidadeForm.get('sigla').value\" matInput>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 25%; margin-left: 5%;\">\r\n            <mat-label>CNPJ</mat-label>\r\n            <input [value]=\"unidadeForm.get('cnpj').value | cnpj\" disabled matInput>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 18%;\">\r\n            <mat-label>CEP</mat-label>\r\n            <input mask=\"00.000-000\" onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n            formControlName=\"cep\" minlength=\"8\" maxlength=\"10\" required matInput\r\n                placeholder=\"apenas números\">\r\n        </mat-form-field>\r\n        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button type=\"button\" (click)=\"ConsultaCEP(unidadeForm.get('cep').value)\" style=\"margin: 0px; margin: 0px;\"\r\n                mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 40%\">\r\n            <mat-label>Logradouro</mat-label>\r\n            <input selected formControlName=\"logradouro\" required \r\n                oninput=\"this.value = this.value.toUpperCase()\" matInput placeholder=\"ex: rua tal...\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 10%;margin-left: 5%;\">\r\n            <mat-label>Nº</mat-label>\r\n            <input selected oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"numero\" matInput placeholder=\"ex: rua tal...\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 40%; margin-left: 5%;\">\r\n            <mat-label>Complemento</mat-label>\r\n            <input selected oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"complemento\" matInput\r\n                placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%;\">\r\n            <mat-label>Cidade</mat-label>\r\n            <input disabled selected [value]=\"unidadeForm.get('cidade').value\" name=\"cidade\" matInput \r\n            placeholder=\"digite o bairro\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 6%; margin-left: 5%;\">\r\n            <mat-label>UF</mat-label>\r\n            <input disabled selected [value]=\"unidadeForm.get('uf').value\" name=\"uf\" matInput placeholder=\"digite o bairro\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%; margin-left: 5%\">\r\n            <mat-label>Bairro</mat-label>\r\n            <input selected formControlName=\"bairro\" oninput=\"this.value = this.value.toUpperCase()\" \r\n            matInput placeholder=\"digite o bairro\">\r\n        </mat-form-field>\r\n\r\n        <mat-progress-bar [style.visibility]=\"saveSpinner\" @rowHighlight style=\"margin-top:10px\" mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <span style=\"float: right;margin-top: 10px;\">\r\n        <button mat-raised-button type=\"submit\" color=\"primary\" \r\n        [disabled]=\"saveButton\">\r\n            Salvar\r\n        </button>\r\n    </span>\r\n        \r\n    </form>\r\n\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { CreateContratoComponent } from \"./CreateContrato/create-contrato.component\";\r\nimport { EditarContratoComponent } from \"./EditContrato/editcontrato.component\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: \"contrato-app\",\r\n    templateUrl: './contrato.component.html',\r\n    styleUrls: ['./contrato.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ContratoComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n\r\n    public typesPacotes: any = new Array<any>();\r\n    public contratos: any[] = new Array<any>()\r\n\r\n    public initProgressBar = 'visible'\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    private jwtHelper = new JwtHelperService();\r\n    public pesquisarForm: FormGroup\r\n    public showSpinnerSearch = false\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog) {\r\n        this.pesquisarForm = _fb.group({\r\n            typePacoteId: ['', [Validators.required]]\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        const token = localStorage.getItem('jwt')\r\n\r\n        this.getTypePacotes();\r\n    }\r\n\r\n    Pesquisar() {\r\n\r\n        if (this.pesquisarForm.valid) {\r\n            this.showSpinnerSearch = true\r\n            this.contratos = []\r\n            let typePacoteId = this.pesquisarForm.get('typePacoteId').value\r\n            // console.log(typePacoteId)\r\n            this._http.get(`${this.baseUrl}/contrato/type-pacote/${typePacoteId}`)\r\n                .subscribe(resp => {\r\n                    console.log(resp)\r\n\r\n                    this.contratos = Object.assign([], resp['contratos']);\r\n\r\n                }, (error) => {\r\n                    console.log(error)\r\n                    this.showSpinnerSearch = false\r\n                },\r\n                    () => {\r\n                        this.showSpinnerSearch = false\r\n                    })\r\n        }\r\n    }\r\n\r\n    getTypePacotes() {\r\n\r\n        this._http.get(`${this.baseUrl}/typepacote`)\r\n            .subscribe(resp => {\r\n                console.log(resp)\r\n\r\n                this.typesPacotes = Object.assign([], resp['typePacotes']);\r\n\r\n            }, (error) => {\r\n                //    console.log(error)\r\n                this.initProgressBar = 'hidden'\r\n            },\r\n                () => {\r\n                    this.initProgressBar = 'hidden'\r\n                })\r\n    }\r\n\r\n    openCreateContratoModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(CreateContratoComponent, {\r\n                height: 'auto',\r\n                width: '1000px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"OK\") {\r\n\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    openEditContratoModal(contrato: any): void {\r\n        const dialogRef = this._modal\r\n            .open(EditarContratoComponent, {\r\n                height: 'auto',\r\n                width: '1000px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                data: { contrato: contrato },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                this.getTypePacotes();\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n// export class Contrato {\r\n//     constructor(\r\n//         public id?: number,\r\n//         public codigoContrato?: number,\r\n//         public unidadeId?: number,\r\n//         public pacoteId?: number,\r\n//         public titulo?: string,\r\n//         public conteudos?: Conteudo[],\r\n//         public conteudo?: string,\r\n//         public podeEditar?: boolean,\r\n//         public observacao?: string,\r\n//         public dataCriacao?: Date\r\n//     ) {\r\n\r\n//     }\r\n// }\r\n\r\n// export class Conteudo {\r\n//     constructor(\r\n//         public id?: number,\r\n//         public order?: number,\r\n//         public content?: string,\r\n//         public contratoId?: number\r\n//     ) {\r\n\r\n//     }\r\n\r\n// }\r\n\r\n","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <div>\r\n        <i style=\"margin-left: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"criar contrato\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openCreateContratoModal()\" mat-icon-button>\r\n                <mat-icon>description</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n\r\n    <br>\r\n   \r\n     <form [formGroup]=\"pesquisarForm\" (ngSubmit)=\"Pesquisar()\" \r\n    class=\"form-inline siteForm\" style=\"margin-top: 5px;display: inline-block\">\r\n\r\n        <span style=\"font-size: 0.9em;font-style: italic;\">\r\n            Selecione o tipo do pacote para pesquisar pelo contrato:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center divSiteForm\">\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n\r\n                <mat-label></mat-label>\r\n                <mat-select [disabled]=\"typesPacotes.length == 0\" formControlName=\"typePacoteId\"  placeholder=\"type pacote\">\r\n                    <mat-option ></mat-option>\r\n                    <mat-option *ngFor=\"let pac of typesPacotes\"\r\n                    [value]=\"pac.id\"\r\n                    >{{pac.nome}}</mat-option>\r\n                </mat-select>\r\n        \r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button style=\"\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n        </div>\r\n\r\n    </form>  \r\n   \r\n    <mat-progress-bar @rowHighlight [style.visibility]=\"initProgressBar\" style=\"margin:0px\"  mode=\"query\"></mat-progress-bar>\r\n\r\n    <div @rowHighlight *ngIf=\"contratos.length > 0\" class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n        position: relative;\r\n       \r\n        box-shadow: 0 0 1em rgb(172, 170, 170);\r\n        background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Contratos</h4>\r\n            <p class=\"card-category\">Contratos cadastrados no sistema:</p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                text-align:left; \r\n                vertical-align: middle;\r\n                border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 25%;font-size:1.2em;\r\n                                vertical-align: middle;\r\n                                text-align:left;\r\n                border-top: 0px; font-weight: 400;\">Título</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1.2em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">Código</th>\r\n\r\n                        <th style=\"width: 15%;font-size:1.2em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">Ativo</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1.2em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">Data Cadasto</th>\r\n\r\n                            <th style=\"width: 6%;font-size:1.2em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\"></th>\r\n\r\n                            <!-- <th style=\"width: 6%;\r\n                border-top: 0px;\"></th>\r\n\r\n                        <th style=\"width: 6%;\r\n                border-top: 0px;\">\r\n                        </th> -->\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of contratos;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{i + 1}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.titulo}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.codigoContrato }}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.ativo? 'sim' : 'não' }}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.dataCriacao |\r\n                                date:'dd/M/yyyy'}}</td>\r\n\r\n                            <td style=\"position: relative;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" *ngIf=\"item.podeEditar\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openEditContratoModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                            </td>\r\n                            <!-- <td style=\"text-align: center;vertical-align: middle;\">\r\n                            <div *ngIf=\"item.ativo == true;else inativo\">\r\n\r\n                                <mat-icon style=\"margin: 0px; margin: 0px;\r\n                                    background-color: rgb(227, 240, 227);;color: green;\" style=\"color: green;\">\r\n                                    done_outline</mat-icon>\r\n                                \r\n\r\n                            </div>\r\n                            <ng-template #inativo>\r\n\r\n                                <mat-icon style=\"background-color: rgb(227, 240, 227);\r\n                                        margin: 0px; margin: 0px;color: red; \">close</mat-icon>\r\n\r\n\r\n                            </ng-template>\r\n\r\n                        </td>\r\n\r\n                        <td style=\"position: relative;\">\r\n\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button [disabled]=\"showSpinner\" (click)=\"openEditUserModal(item)\"\r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>settings</mat-icon>\r\n                                </button>\r\n                            </i>\r\n\r\n                        </td>\r\n                        <td style=\"position: relative;\">\r\n\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"deletar\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button [disabled]=\"showSpinner\" (click)=\"deleteColaborador(item.id)\"\r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>delete_outline</mat-icon>\r\n                                </button>\r\n                            </i>\r\n\r\n                        </td> -->\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <!-- <mat-paginator *ngIf=\"length > 5\" style=\"\r\n            background-color: rgb(227, 240, 227);\r\n            bottom: 0px;\r\n            right: 0px;\" [length]=\"length\" [pageSize]=\"5\" hidePageSize=\"true\" (page)=\"pageEvent = $event\"\r\n            (click)=\"changePage(pageEvent)\">\r\n        </mat-paginator> -->\r\n\r\n        </div>\r\n\r\n        <!-- <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n        top: 46.5%; \r\n        position: absolute;\">\r\n    </mat-spinner> -->\r\n    </div>\r\n\r\n\r\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { Modulo } from \"src/app/_shared/models/modulo.model\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { PlanoPgmCreateComponent } from \"./CreatePlanoPgm/create-planopgm.component\";\r\nimport { PlanoPgmEditComponent } from \"./EditPlanoPgm/editplano.component\";\r\n\r\n@Component({\r\n    selector: \"modulo-app\",\r\n    templateUrl: './planopgm.component.html',\r\n    styleUrls: ['./planopgm.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class PlanoPgmComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    public spinnerSearch = 'visible'\r\n    public modulos: Modulo[] = new Array<Modulo>();\r\n    \r\n    public pesquisarForm: FormGroup\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    private jwtHelper = new JwtHelperService();\r\n    public planos: any[] = new Array<any>();\r\n    public typesPacotes: any[] = new Array<any>();\r\n    public disabledForm = true\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _helpers: HelpersService,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog) { \r\n            this.pesquisarForm = _fb.group({\r\n                typePacoteId: ['', [Validators.required]]\r\n               // unidadeId: ['', [Validators.required]]\r\n            });\r\n\r\n        }\r\n\r\n    ngOnInit() {\r\n        //console.log('init colaboradores 123')\r\n        const token = localStorage.getItem('jwt')\r\n        \r\n       // this.GetPlanos();\r\n       this.getTypePacotes();\r\n    }\r\n\r\n    getTypePacotes() {\r\n\r\n        //if(this.pesquisarForm.valid){\r\n        this._http.get(`${this.baseUrl}/typepacote`)\r\n            .subscribe(resp => {\r\n                console.log(resp)\r\n\r\n                this.typesPacotes = Object.assign([], resp['typePacotes']);\r\n\r\n            }, (error) => { \r\n                console.log(error) \r\n                this.spinnerSearch = 'hidden'\r\n            },\r\n                () => {\r\n                    this.disabledForm = false\r\n                    this.spinnerSearch = 'hidden'\r\n                    //this.showTeste = true\r\n                })\r\n        // }\r\n    }\r\n\r\n    Pesquisar() {\r\n\r\n        if (this.pesquisarForm.valid) {\r\n            this.spinnerSearch = 'visible'\r\n            let typePacoteId = this.pesquisarForm.get('typePacoteId').value\r\n            //let unidadeId = this.pesquisarForm.get('unidadeId').value\r\n            // console.log(typePacoteId)\r\n            this._http.get(`${this.baseUrl}/plano-pagamento/pacote/${typePacoteId}`)\r\n                .subscribe(resp => {\r\n                    console.log(resp)\r\n\r\n                    this.planos = Object.assign([], resp['planos']);\r\n                    this.spinnerSearch = 'hidden'\r\n\r\n                }, (error) => { console.log(error) },\r\n                    () => {\r\n                        this.spinnerSearch = 'hidden'\r\n                    })\r\n        }\r\n    }\r\n\r\n    private GetPlanos() {\r\n        this._http.get(`${this.baseUrl}/plano-pagamento`)\r\n            .subscribe(resp => {\r\n                this.planos = Object.assign([], resp);\r\n            }, (error) => { console.log(error) },\r\n                () => {\r\n                    console.log(this.planos)\r\n                })\r\n\r\n    }\r\n\r\n    getModulos() {\r\n\r\n        this._http.get(`${this.baseUrl}/unidade/modulos`)\r\n            .subscribe(resp => {\r\n                this.modulos = Object.assign([], resp);\r\n            }, (error) => { console.log(error) },\r\n                () => {\r\n                    console.log(this.modulos)\r\n                })\r\n    }\r\n\r\n    createPlano(): void {\r\n        const dialogRef = this._modal\r\n            .open(PlanoPgmCreateComponent, {\r\n                height: 'auto',\r\n                width: '600px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                //data: {  },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                this.GetPlanos();\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    // PlanoPgmEditComponent\r\n    EditPlano(plano): void {\r\n        const dialogRef = this._modal\r\n            .open(PlanoPgmEditComponent, {\r\n                height: 'auto',\r\n                width: '600px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                data: { plano: plano },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                this.GetPlanos();\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n    pesquisar() {\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <div>\r\n        <i style=\"margin-left: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"criar plano de pagamento\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n            <button (click)=\"createPlano()\" mat-icon-button>\r\n                <mat-icon>assignment</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n\r\n    <br>\r\n\r\n\r\n    <form [formGroup]=\"pesquisarForm\" (ngSubmit)=\"Pesquisar()\" class=\"form-inline siteForm\"\r\n        style=\"margin-top: 5px;display: inline-block\">\r\n\r\n        <span style=\"font-size: 0.9em;font-style: italic;\">\r\n            Selecione o tipo do pacote para pesquisar pelos planos:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center divSiteForm\" >\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n                <mat-label>Type Pacote</mat-label>\r\n                <mat-select [disabled]=\"disabledForm\" formControlName=\"typePacoteId\" placeholder=\"type pacote\">\r\n                    <mat-option></mat-option>\r\n                    <mat-option *ngFor=\"let pac of typesPacotes\" [value]=\"pac.id\">{{pac.nome}}</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button style=\"\" [disabled]=\"disabledForm\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n    <mat-progress-bar style=\"margin-top: 0px;\" [style.visibility]=\"spinnerSearch\"  @rowHighlight mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n    <div @rowHighlight *ngIf=\"planos.length > 0\" class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n        position: relative;\r\n        margin-top: 20px;\r\n        box-shadow: 0 0 1em rgb(172, 170, 170);\r\n        background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\" style=\"background-color: rgb(207, 231, 207);\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Planos</h4>\r\n            <p class=\"card-category\"> Planos de Pagamento cadastrados no sistema: </p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 330px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead id=\"tableHead\">\r\n                        <tr style=\"\">\r\n                            <th style=\"width: 2%; \r\n                text-align:left; \r\n                vertical-align: middle;\r\n                border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 33%;font-size:1em;\r\n                                vertical-align: middle;font-weight: 400;\r\n                                text-align:left;\r\n                border-top: 0px; font-weight: 400;\">NOME</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">VALOR</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">TAXA MATRÍCULA\r\n                            </th>\r\n\r\n                            <th style=\"width: 25%;font-size:1em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\"></th>\r\n\r\n                            <!-- <th style=\"width: 20%;\r\n                border-top: 0px;\r\n                text-align:center; \r\n                vertical-align: middle;\"></th> -->\r\n\r\n                            <!-- <th style=\"width: 6%;\r\n                border-top: 0px;\">\r\n                        </th> -->\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of planos;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{i + 1}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.descricao}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.valor |\r\n                                currency:'BRL':true:'1.2-2'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.taxaMatricula |\r\n                                currency:'BRL':true:'1.2-2' }}</td>\r\n\r\n                            <!-- <td style=\"text-align: center;vertical-align: middle;\">\r\n                            <div *ngIf=\"item.ativo == true;else inativo\">\r\n\r\n                                <mat-icon style=\"margin: 0px; margin: 0px;\r\n                                    background-color: rgb(227, 240, 227);;color: green;\" style=\"color: green;\">\r\n                                    done_outline</mat-icon>\r\n\r\n\r\n                            </div>\r\n                            <ng-template #inativo>\r\n\r\n                                <mat-icon style=\"background-color: rgb(227, 240, 227);\r\n                                        margin: 0px; margin: 0px;color: red; \">close</mat-icon>\r\n\r\n\r\n                            </ng-template>\r\n\r\n                        </td> -->\r\n\r\n                            <td style=\"position: relative;text-align:center; \r\n                        vertical-align: middle;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"EditPlano(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 10px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"deletar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button disabled\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>delete_outline</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                            </td>\r\n                            <!-- <td style=\"position: relative;\">\r\n\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"deletar\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button [disabled]=\"showSpinner\" (click)=\"deleteColaborador(item.id)\"\r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>delete_outline</mat-icon>\r\n                                </button>\r\n                            </i>\r\n\r\n                        </td> -->\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <!-- <mat-paginator *ngIf=\"length > 5\" style=\"\r\n            background-color: rgb(227, 240, 227);\r\n            bottom: 0px;\r\n            right: 0px;\" \r\n            [length]=\"length\" \r\n            [pageSize]=\"pageSize\" \r\n            hidePageSize=\"true\" \r\n            (page)=\"pageEvent = $event\"\r\n            (click)=\"changePage(pageEvent)\">\r\n        </mat-paginator> -->\r\n\r\n        </div>\r\n\r\n        <!-- <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n        top: 46.5%; \r\n        position: absolute;\">\r\n    </mat-spinner> -->\r\n    </div>\r\n\r\n\r\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { ConfirmAcaoModalComponent } from \"src/app/_shared/components/ConfirmarAcao/confirm-acao.component\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { ConfirmAcaoModalConfig } from \"src/app/_shared/models/modal.config\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { InfoFinancModalConfig } from \"../models/financ-modal.config\";\r\nimport { InfoFinancComponent } from \"./infoFinanc/infofinanc.component\";\r\nimport { ReparcelamentoComponent } from \"./Reparcelamento/reparcelamento.component\";\r\n\r\n\r\n@Component({\r\n    selector: \"alunofin-app\",\r\n    templateUrl: './alunofinanc.component.html',\r\n    styleUrls: ['./alunofinanc.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class AlunoFinancComponent implements OnInit {\r\n\r\n\r\n    //colaboradores: Colaborador[] = new Array<Colaborador>();\r\n    baseUrl = environment.baseUrl;\r\n\r\n    length: number = 0\r\n    pageSize: number = 5;\r\n    pageEvent: PageEvent;\r\n    pageIndexNumber: number = 0;\r\n    currentPage = 1\r\n    @ViewChild(MatPaginator) paginator: MatPaginator\r\n\r\n    showMessageNoAluno = false\r\n    public spinnerSearch = 'hidden'\r\n    // pageEvent: PageEvent;\r\n    // pageIndexNumber: number = 0;\r\n    // actualPage = 1\r\n    // paginationInfo: IPager;\r\n\r\n    // formSubmitted: boolean = false;\r\n    // showTable: boolean = false;\r\n    // showSpinner = false\r\n    // showSpinnerFirst = false\r\n\r\n    // showMessage: boolean = false;\r\n    // cargos = Cargos;\r\n    // unidades = Unidades\r\n    showMessageNoColaborador = false\r\n    mensagem: string = \"\";\r\n    listAlunos: any[] = new Array<any>()// Aluno[] = new Array<Aluno>();\r\n\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    private jwtHelper = new JwtHelperService();\r\n    public pesquisarForm: FormGroup\r\n    //pagination\r\n\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog) {\r\n        this.pesquisarForm = _fb.group({\r\n            nome: ['', [Validators.required]],\r\n            email: ['', [Validators.required]],\r\n            cpf: ['', [Validators.required]],\r\n            ativo: [false]\r\n        });\r\n\r\n        this.pesquisarForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n                // console.log('form changed to:', form);\r\n                if (this.pesquisarForm.get('nome').value == '' &&\r\n                    this.pesquisarForm.get('email').value == '' &&\r\n                    this.pesquisarForm.get('cpf').value == '') {\r\n                    //  console.log('false valid')\r\n\r\n                    this.pesquisarForm.controls['nome'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['email'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['cpf'].setErrors({ required: true });\r\n                    // this.pesquisarForm.setErrors({required: true});\r\n                } else {\r\n                    //   console.log('true valid')\r\n                    this.pesquisarForm.controls['nome'].setErrors(null);\r\n\r\n                    this.pesquisarForm.controls['email'].setErrors(null)\r\n\r\n                    this.pesquisarForm.controls['cpf'].setErrors(null);\r\n\r\n                    //this.pesquisarForm.setErrors({required: false});\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n        );\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n    }\r\n\r\n    get mostrarEmLote() {\r\n        return this.tokenInfo.role == 'SuperAdm'\r\n    }\r\n    podeDesable = false\r\n    atualizarBoletos(): void {\r\n        const dialogRef = this._modal\r\n            .open(ConfirmAcaoModalComponent, ConfirmAcaoModalConfig());\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked == true) {\r\n                this.podeDesable = true\r\n                this._http.put(`https://localhost:5001/api/dev/atualizar-boletos`, {})\r\n                    .subscribe(\r\n                        resp => { this.podeDesable = false },\r\n                        error => { this.podeDesable = false }\r\n                    )\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    Pesquisar(event?: any) {\r\n\r\n        this.showMessageNoAluno = false\r\n\r\n\r\n\r\n        if (this.pesquisarForm.valid) {\r\n            this.spinnerSearch = 'visible'\r\n\r\n            if (event != undefined) {\r\n                this.currentPage = event.pageIndex + 1\r\n            } else {\r\n                this.currentPage = 1\r\n            }\r\n\r\n\r\n            var formJson = JSON.stringify(this.pesquisarForm.value)\r\n            this._http.get(`${this.baseUrl}/financeiro/alunos/?itemsPerPage=` + this.pageSize + `&currentPage=${this.currentPage}&paramsJson=${formJson}`)\r\n                .subscribe(\r\n                    (response) => {\r\n\r\n                        this.listAlunos = Object.assign([], response['alunos'].data)\r\n\r\n                        this.length = response['alunos'].totalItemsInDatabase\r\n\r\n                        this.spinnerSearch = 'hidden'\r\n\r\n\r\n                        if (event != undefined) {\r\n                            this.pageIndexNumber = (event.pageIndex * this.pageSize)\r\n                        } else {\r\n                            this.pageIndexNumber = 0\r\n                            //console.log(this.paginator)\r\n                            if (this.paginator != undefined) {\r\n                                this.paginator.firstPage();\r\n                            }\r\n                        }\r\n\r\n                    },\r\n                    (err) => {\r\n                        if (err['status'] == 404) {\r\n                            this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n                            this.showMessageNoColaborador = true\r\n                            this.listAlunos = new Array<any>();\r\n                        }\r\n                        if (err['status'] != 404) {\r\n                            this.mensagem = \"Ocorreu um erro desconhecido, por favor, procure o administrador do sistema\"\r\n                            this.showMessageNoColaborador = true\r\n                            this.listAlunos = new Array<any>();\r\n                        }\r\n                \r\n                        this.spinnerSearch = 'hidden'\r\n\r\n                    },\r\n                    () => {\r\n                        \r\n                    },\r\n                )\r\n        }\r\n\r\n    }\r\n\r\n    public OpenInfoFinanc(aluno: any): void {\r\n        const dialogRef = this._modal\r\n            .open(InfoFinancComponent, InfoFinancModalConfig(aluno));\r\n        dialogRef.afterClosed().subscribe(data => {\r\n        });\r\n    }\r\n\r\n    // openInfoFinanc(aluno: any): void {\r\n    //     const dialogRef = this._modal\r\n    //         .open(InfoFinancComponent, {\r\n    //             height: '650px',\r\n    //             width: '1000px',\r\n\r\n    //             data: { aluno: aluno },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n\r\n    //     });\r\n    // }\r\n\r\n    openReparcelamentoModal(aluno: any): void {\r\n        const dialogRef = this._modal\r\n            .open(ReparcelamentoComponent, {\r\n                height: 'auto',\r\n                width: '1000px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n\r\n                data: { aluno: aluno },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface IPager {\r\n    itemsPerPage?: number;\r\n    totalItemsInDatabase?: number;\r\n    currentPage?: number;\r\n    totalPages?: number;\r\n    items?: number;\r\n}\r\n\r\nexport class Parametros {\r\n    constructor(\r\n        public nome?: string,\r\n        public email?: string,\r\n        public cpf?: string) { }\r\n}\r\n\r\nfunction InfoFinancModal(InfoFinancModal: any, arg1: { height: string; width: string; data: { aluno: Aluno; }; hasBackdrop: true; disableClose: true; }) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <div *ngIf=\"mostrarEmLote\">\r\n        <i #tooltip=\"matTooltip\" matTooltip=\"atualizar boletos\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n            <button (click)=\"atualizarBoletos()\" [disabled]=\"podeDesable\" mat-icon-button>\r\n                <mat-icon>swap_vert</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n\r\n    <br>\r\n\r\n\r\n    <form [formGroup]=\"pesquisarForm\" (ngSubmit)=\"Pesquisar()\" class=\"form-inline siteForm\"\r\n        style=\"margin-top: 5px;display: inline-block\">\r\n\r\n        <span>Digite ao menos um dos campos para\r\n            pesquisar pelo aluno:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center\">\r\n\r\n            <mat-form-field appearance=\"standard\">\r\n                <mat-label>Nome</mat-label>\r\n                <input selected formControlName=\"nome\" matInput placeholder=\"digite o nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\">\r\n                <mat-label>E-mail</mat-label>\r\n                <input selected formControlName=\"email\" matInput placeholder=\"digite o E-mail\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\">\r\n                <mat-label>CPF</mat-label>\r\n                <input selected mask=\"000.000.000-00\" matInput placeholder=\"digite o CPF\">\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button type=\"submit\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n\r\n    <div class=\"card-header card-msg-response\" unselectable=\"on\" *ngIf=\"showMessageNoAluno\">{{mensagem}}</div>\r\n\r\n    <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"spinnerSearch\" @rowHighlight style=\"margin:0px\"\r\n        mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n\r\n    <div @rowHighlight *ngIf=\"listAlunos.length > 0\" class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n            position: relative;\r\n            margin-top: 50px;\r\n            box-shadow: 0 0 1em rgb(172, 170, 170);\r\n            background-color: rgb(227, 240, 227);\r\n           \">\r\n\r\n        <div class=\"card-header\" style=\"background-color: rgb(207, 231, 207);\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Alunos</h4>\r\n            <p class=\"card-category\">{{length}} alunos localizados. </p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive table-colaborador\">\r\n\r\n                <table color=\"primary\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n\r\n                            <th>Nome</th>\r\n\r\n                            <th>Email</th>\r\n\r\n                            <th>CPF</th>\r\n\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of listAlunos;let i = index;\" @rowHighlight>\r\n\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                <!-- {{(i + 1)+(pageIndexNumber)}} -->\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.email}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.cpf }}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                <!-- <i style=\"margin-right: 50px;\">\r\n\r\n                                    <mat-icon (click)=\"openReparcelamentoModal(item)\" disabled\r\n                                     type=\"button\" style=\"margin: 0px; margin: 0px;\">\r\n                                     gavel</mat-icon>\r\n                                    \r\n\r\n                                </i> -->\r\n\r\n                                <i>\r\n\r\n                                    <mat-icon (click)=\"OpenInfoFinanc(item)\" type=\"button\"\r\n                                        style=\"margin: 0px; margin: 0px;\">\r\n                                        attach_money</mat-icon>\r\n\r\n\r\n                                </i>\r\n\r\n\r\n                                <!-- <ng-template #inativo>\r\n\r\n                                    <mat-icon style=\"background-color: rgb(227, 240, 227);\r\n                                            margin: 0px; margin: 0px;color: red; \">attach_money</mat-icon>\r\n\r\n\r\n                                </ng-template> -->\r\n\r\n                            </td>\r\n\r\n                            <!-- <td style=\"position: relative;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"openEditUserModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                            </td>\r\n                            <td style=\"position: relative;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"deletar\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"deleteColaborador(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>delete_outline</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                            </td> -->\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <mat-paginator *ngIf=\"length > 5\" style=\"\r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" [length]=\"length\" [pageSize]=\"pageSize\" hidePageSize=\"true\"\r\n                (page)=\"pageEvent = Pesquisar($event)\">\r\n            </mat-paginator>\r\n\r\n        </div>\r\n\r\n        <!-- <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n            top: 46.5%; \r\n            position: absolute;\">\r\n        </mat-spinner>  -->\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","<div class=\"container\">\r\n    <div class=\"col-md-8 offset-md-2\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Fornecedor } from \"../../FinanceiroModels/fornecedor.model\";\r\nimport { FinanceiroService } from \"../../models/financ.service\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\n@Component({\r\n    selector: 'editfornecedormodal',\r\n    templateUrl: './editfornecedor.component.html',\r\n    styleUrls: ['./editfornecedor.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class EditFornecedorComponent implements OnInit {\r\n\r\n    //baseUrl = environment.baseUrl;\r\n    //public cepReturn: CepReturn = new CepReturn();\r\n    public fornecedorForm: FormGroup;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    //public validadeEmailMsg = false\r\n    //public validadeCPFMsg = false\r\n    //cargos = Cargos;\r\n    //mensagem = \"\";\r\n    //showMensagem = false\r\n    public initProgressBar = 'visible'\r\n    public showForm = false\r\n    public saveSpinner = 'hidden'\r\n    fornecedor: any;\r\n    originalFornecedor: any;\r\n\r\n    //unidades = Unidades;\r\n    constructor(\r\n        //private _snackBar: MatSnackBar,\r\n        //private router: Router,\r\n        private _helper: HelpersService,\r\n        private _fb: FormBuilder,\r\n        private _finService: FinanceiroService,\r\n        //private http: HttpClient,\r\n        public dialogRef: MatDialogRef<EditFornecedorComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.fornecedorForm = _fb.group({\r\n            id: [''],\r\n            razaoSocial: ['', [Validators.required]],\r\n            ie_rg: [''],\r\n            cnpj_cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n            email: ['', [Validators.required, Validators.email]],\r\n            telContato: [''],\r\n            whatsApp: [''],\r\n            nomeContato: ['', [Validators.required]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(2)]],\r\n            numero: ['', [Validators.required]],\r\n            uf: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],//,\r\n            bairro: ['', [Validators.required]],\r\n            ativo: [''],\r\n            unidadeId: ['']\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        this.GetFornecedor();\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n\r\n\r\n    }\r\n\r\n    private GetFornecedor() {\r\n\r\n        this._finService.GetFornecedorById(this.data['fornecedor'])\r\n            .subscribe(\r\n                sucesso => { this.GetFornecedorSucesso(sucesso) },\r\n                falha => { this.GetFornecedorFalha(falha) }\r\n            )\r\n    }\r\n\r\n    GetFornecedorSucesso(resp) {\r\n        this.fornecedorForm.patchValue(resp['fornecedor']);\r\n        this.originalFornecedor = JSON.parse(JSON.stringify(this.fornecedorForm.value))\r\n        this.dialogRef.updateSize('680px', '605px')\r\n        //this.dialogRef.addPanelClass('myfornecedoredit-class')\r\n        this.initProgressBar = 'hidden'\r\n        this.showForm = true\r\n    }\r\n\r\n    GetFornecedorFalha(error) {\r\n        this.initProgressBar = 'hidden'\r\n    }\r\n\r\n\r\n    public SaveEdit() {\r\n        if (!this.fornecedorForm.valid) return\r\n\r\n        this.saveSpinner = 'visible'\r\n\r\n        this._finService.EditFornecedor(this.fornecedorForm.value)\r\n            .subscribe(\r\n                sucesso => { this.SaveEditSucesso(sucesso) },\r\n                falha => { this.SaveEditFalha(falha) }\r\n            )\r\n    }\r\n\r\n    private SaveEditSucesso(resp) {\r\n        this.saveSpinner = 'hidden'\r\n        this._helper.openSnackBarSucesso(\"Fornecedor editado com sucesso.\")\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    private SaveEditFalha(error) {\r\n        this.saveSpinner = 'hidden'\r\n        this._helper.openSnackBarErrorDefault();\r\n    }\r\n\r\n    public ConsultaCEP(CEP: string) {\r\n        //console.log(CEP);\r\n        if (CEP.length == 10) {\r\n\r\n\r\n            //var mystring = \"crt/r2002_2\";\r\n            CEP = CEP.replace('-', '');\r\n            CEP = CEP.replace('.', '');\r\n          //  console.log(CEP);\r\n            this._finService.CepConsulta(CEP)\r\n                .subscribe(response => {\r\n\r\n                    this.fornecedorForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n                    this.fornecedorForm.get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n                    this.fornecedorForm.get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n                    this.fornecedorForm.get('uf').setValue(response[\"uf\"].toUpperCase());\r\n\r\n                }, err => { console.log(err) })\r\n        }\r\n    }\r\n\r\n    get disabledButton() {\r\n       // console.log(this.fornecedorForm.valid)\r\n        if (this.fornecedorForm.valid &&\r\n            JSON.stringify(this.originalFornecedor) !=\r\n            JSON.stringify(this.fornecedorForm.value)) {\r\n            return this.saveSpinner != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n}\r\n\r\n","<div style=\"font-size: 1.2em;\">Editar Fornecedor\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<hr>\r\n\r\n<div *ngIf=\"showForm\" style=\"position: relative;\">\r\n\r\n    <form novalidate [formGroup]=\"fornecedorForm\" (ngSubmit)=\"SaveEdit()\">\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 300px; \">\r\n            <mat-label>Nome/Razão Social</mat-label>\r\n            <input selected formControlName=\"razaoSocial\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                placeholder=\"Nome\">\r\n\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 220px; margin-left: 10px;\">\r\n            <mat-label>Email</mat-label>\r\n            <input selected formControlName=\"email\" oninput=\"this.value = this.value.toLowerCase()\" matInput\r\n                placeholder=\"Email\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 140px;\">\r\n            <mat-label>CPF/CNPJ</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                formControlName=\"cnpj_cpf\" minlength=\"11\" maxlength=\"14\" selected matInput placeholder=\"digite o CPF\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 140px;margin-left: 10px;\">\r\n            <mat-label>IE/RG</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                formControlName=\"ie_rg\" selected matInput placeholder=\"digite o CPF\">\r\n        </mat-form-field>\r\n\r\n        <mat-slide-toggle style=\"margin-left: 40px;float: right;\" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n            formControlName=\"ativo\" name=\"ativo\" required matTooltip=\"ativo/inativo\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"250\" color=\"primary\" [required]=\"false\">\r\n        </mat-slide-toggle>\r\n\r\n        <br>\r\n\r\n        <mat-form-field style=\"width: 130px;\" appearance=\"standard\">\r\n            <mat-label>Tel contato</mat-label>\r\n            <input formControlName=\"telContato\" mask=\"(00) 00000-0000\" matInput\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field style=\"width: 130px; margin-left: 10px;\" appearance=\"standard\">\r\n            <mat-label>Whatsapp</mat-label>\r\n            <input formControlName=\"whatsApp\" mask=\"(00) 00000-0000\" matInput\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 150px;margin-left: 10px;\">\r\n            <mat-label>contato/Nome</mat-label>\r\n            <input selected formControlName=\"nomeContato\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 17%;\">\r\n            <mat-label>CEP</mat-label>\r\n            <input mask=\"00.000-000\" onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                formControlName=\"cep\" minlength=\"8\" maxlength=\"10\" matInput placeholder=\"apenas números\">\r\n        </mat-form-field>\r\n\r\n        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button type=\"button\" (click)=\"consultaCEP(fornecedorForm.get('cep').value)\"\r\n                style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <br>\r\n\r\n        <ng-container [style.visibility]=\"enderecoContainer\">\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n                <mat-label>Logradouro</mat-label>\r\n                <input selected formControlName=\"logradouro\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                    placeholder=\"ex: rua tal...\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 80px;margin-left: 10px;\">\r\n                <mat-label>Número</mat-label>\r\n                <input selected formControlName=\"numero\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                    placeholder=\"123...\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n                <mat-label>Complemento</mat-label>\r\n                <input selected formControlName=\"complemento\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                    placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n                <mat-label>Cidade</mat-label>\r\n                <input disabled selected [value]=\"fornecedorForm.get('cidade').value\" name=\"cidade\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 40px; margin-left: 10px;\">\r\n                <mat-label>UF</mat-label>\r\n                <input disabled selected [value]=\"fornecedorForm.get('uf').value\" name=\"uf\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 200px; margin-left: 10px;\">\r\n                <mat-label>Bairro</mat-label>\r\n                <input selected formControlName=\"bairro\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n        </ng-container>\r\n\r\n        <div *ngIf=\"showMensagem\" class=\"alert alert-danger\" role=\"alert\"\r\n            style=\"text-align: center; vertical-align: middle; position:relative; height: 45px; float:left;margin-bottom: 20px;\">\r\n            {{mensagem}}\r\n        </div>\r\n\r\n        <mat-progress-bar [style.visibility]=\"saveSpinner\" @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <div style=\"margin-bottom: 10px;\">\r\n            <button type=\"submit\" mat-raised-button disabled=\"false\" color=\"primary\"\r\n                style=\"float:right;margin-top: 10px;margin-left: 10px;margin-bottom: 10px;\" [disabled]=\"disabledButton\">\r\n                Salvar\r\n            </button>\r\n        </div>\r\n\r\n    </form>\r\n</div>","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({name: 'cpf'})\r\nexport class CPFPipe implements PipeTransform {\r\n    transform(value) {\r\n        return value.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/g,\"\\$1.\\$2.\\$3\\-\\$4\")\r\n    }\r\n}","export class Produto{\r\n    constructor(\r\n        public id?: number,\r\n        public codigoProduto?: string,\r\n        public nome?: string,\r\n        public descricao?: string,\r\n        public preco?: number,\r\n        public precoCusto?: number,\r\n        public quantidade?: number,\r\n        public nivelMinimo?: number,\r\n        public unidadeId?: number,\r\n        public dataCadastro?: Date,\r\n        public observacoes?: string\r\n    ){\r\n\r\n        //this.preco.toFixed(2) \r\n    }\r\n\r\n   \r\n}\r\n\r\nexport class CompraProdutoCommand{\r\n    constructor(\r\n        public meioPagamento?: string,\r\n        public parcelas?: string,\r\n        public valorTotal?: number,\r\n        public cpf_comprador?: string,\r\n        public matriculaAluno?: string,\r\n        public produtos?: ProdutosCommand[]\r\n    ){\r\n        this.produtos = new Array<ProdutosCommand>();\r\n    }\r\n}\r\n\r\nexport class ProdutosCommand{\r\n    constructor(\r\n        public id?: number,\r\n        public codigoProduto?: string,\r\n        public nome?: string,\r\n        public descricao?: string,\r\n        public preco?: number,\r\n        public precoCusto?: number,\r\n        public quantidadeComprada?: number,\r\n        public nivelMinimo?: number,\r\n        public unidadeId?: number,\r\n        public dataCadastro?: Date,\r\n    ){\r\n\r\n    }\r\n}","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, MeioPagamento, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { CompraProdutoCommand, Produto, ProdutosCommand } from \"src/app/_shared/models/produto.model\";\r\nimport { Parcelas } from \"src/app/_shared/models/utils.model\";\r\n\r\n@Component({\r\n    selector: 'produto-doacaomodal',\r\n    templateUrl: './produto-doacao.component.html',\r\n    styleUrls: ['./produto-doacao.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\n\r\nexport class ProdutoDoacaoComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public meioPagamento = MeioPagamento\r\n    public showParcelas = false;\r\n    public msg = \"\"\r\n    public showMgs = false\r\n    public produtosCesta: Produto[] = new Array<Produto>();\r\n    public totalParcelas: number\r\n    parcelas = Parcelas\r\n    public unidades: any;\r\n    public unidadeId: number = 0;\r\n    public produtos: Produto[] = new Array<Produto>();\r\n    public produto: any;\r\n    public doacaoForm: FormGroup\r\n    public qntProduto: number = 1\r\n\r\n\r\n    constructor(\r\n        //private service: AdmService,\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog,\r\n        public dialogRef: MatDialogRef<ProdutoDoacaoComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.doacaoForm = _fb.group({\r\n            produtoId: [''],\r\n            unidadeDonatariaId: ['', [Validators.required]],\r\n            qntDoada: ['']\r\n        })\r\n\r\n        // produtoId, UnidadeDonatariaId, Qnt Doada\r\n    }\r\n\r\n\r\n    showForm = false\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        console.log(this.tokenInfo)\r\n       \r\n        console.log(this.data['produto'])\r\n        this.GetProdutoDoacao();\r\n        this.produtos = Object.assign([], this.data['produto'])\r\n        this.productCommand = Object.assign({}, this.data['produto'])\r\n        this.productCommand.quantidadeComprada = 1;\r\n        this.compraProdutoCommand.produtos.push(this.productCommand)\r\n        //this.produtos.push(this.data['produto'] as Produto)\r\n    }\r\n\r\n   // messageError = \"\"\r\n    showeMsgError = false\r\n    GetProdutoDoacao() {\r\n\r\n        this._http.get(`${this.baseUrl}/produto/doacao/${this.data['produto'].id}/${this.data['produto'].observacoes}`)\r\n            .subscribe(resp => {\r\n                this.unidades = Object.assign([], resp['unidades'])\r\n                this.produto = Object.assign({}, resp['produto'])\r\n            },\r\n                (err) => {\r\n                    console.log(err)\r\n                   // this.messageError = \"Não há unidade outras cadastradas\"\r\n                    this.showeMsgError = true\r\n                },\r\n                () => {\r\n                    this.showForm = true\r\n                })\r\n    }\r\n\r\n\r\n    onSubmit(form: FormGroup) {\r\n\r\n        if (form.valid) {\r\n           \r\n            this.doacaoForm.get('produtoId').setValue(this.produto.id)\r\n            this.doacaoForm.get('qntDoada').setValue(this.qntProduto)\r\n            \r\n            this._http.post(`${this.baseUrl}/produto/doacao`, this.doacaoForm.value, {})\r\n            .subscribe(response => {\r\n\r\n                console.log(response)\r\n             \r\n            }, (err) => {\r\n                console.log(err)\r\n                console.log(err['error'].mensagem)\r\n               \r\n            },\r\n                () => {\r\n                   \r\n                    this.openSnackBar()\r\n                   \r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                });\r\n        }\r\n    }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Colaborador salvo com sucesso.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n\r\n    add() {\r\n\r\n        this.qntProduto++\r\n\r\n        // var index = this.compraProdutoCommand.produtos.indexOf(product)\r\n        // var qntAtual = this.compraProdutoCommand.produtos[index].quantidadeComprada\r\n        // this.compraProdutoCommand.produtos[index].quantidadeComprada = qntAtual + 1\r\n    }\r\n\r\n    remove() {\r\n\r\n        \r\n        // var index = this.compraProdutoCommand.produtos.indexOf(product)\r\n        // var qntAtual = this.compraProdutoCommand.produtos[index].quantidadeComprada\r\n        if (this.qntProduto == 1) {\r\n\r\n        } else {\r\n            this.qntProduto--\r\n        }\r\n\r\n    }\r\n\r\n    get valorTotalVenda() {\r\n\r\n       \r\n        var sum = 0\r\n        this.compraProdutoCommand.produtos.forEach(element => {\r\n            sum += element.quantidadeComprada * element.preco\r\n        });\r\n\r\n        this.compraProdutoCommand.valorTotal = sum\r\n\r\n        // console.log(sum);\r\n        // console.log(this.compraProdutoCommand.valorTotal)\r\n\r\n        var valorTotal = this.produto.preco * this.qntProduto\r\n        var sum2 = sum.toFixed(2)\r\n\r\n        return `R$ ${valorTotal.toFixed(2)}`\r\n    }\r\n\r\n    deletar(product: Produto) {\r\n\r\n        var index = this.compraProdutoCommand.produtos.indexOf(product)\r\n        this.compraProdutoCommand.produtos[index]\r\n        this.compraProdutoCommand.produtos.splice(index, 1);\r\n\r\n    }\r\n\r\n\r\n    private productCommand: ProdutosCommand = new ProdutosCommand();\r\n\r\n    public compraProdutoCommand: CompraProdutoCommand = new CompraProdutoCommand();\r\n\r\n\r\n    parcelasTotais: any\r\n    // saveEdit(form: any) {\r\n    //     console.log(form.value['totalParcelas'])\r\n    //     console.log(this.compraProdutoCommand)\r\n\r\n    //     this.compraProdutoCommand.parcelas = this.parcelasTotais\r\n       \r\n    //     console.log(this.compraProdutoCommand.meioPagamento)\r\n       \r\n    //     console.log(this.meioPagamento)\r\n    //     if (this.compraProdutoCommand.produtos.length == 0) return\r\n\r\n    //     var sendForm = JSON.stringify(this.compraProdutoCommand)\r\n    //     console.log(sendForm)\r\n\r\n    //     this._http.post(`${this.baseUrl}/financeiro/produto-doacao-unidades/${this.unidadeId}`,\r\n    //         this.compraProdutoCommand, {\r\n    //     })\r\n    //         .subscribe(resp => { },\r\n    //             (error) => { console.log(error) },\r\n    //             () => {\r\n    //                 this.dialogRef.close({ clicked: \"Ok\" });\r\n    //             })\r\n\r\n    //     console.log(this.compraProdutoCommand)\r\n\r\n    // }\r\n\r\n}","<div style=\"font-size: 1.2em;\">Doação entre Unidades - produtos\r\n\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<hr>\r\n\r\n<br>\r\n\r\n<span *ngIf=\"showeMsgError\" style=\"font-size: 0.9em; color:red\" >* Não há outras unidade cadastradas. </span>\r\n\r\n<div *ngIf=\"showForm\" class=\"table-responsive\" style=\"position: relative;\">\r\n\r\n    <form novalidate [formGroup]=\"doacaoForm\" (ngSubmit)=\"onSubmit(doacaoForm)\">\r\n        <table style=\"margin-bottom: 0px;\" class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th style=\"text-align: left;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Produto</th>\r\n                    <th style=\"text-align: center;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Quantidade</th>\r\n                    <th style=\"text-align: center;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Preço</th>\r\n                    <th style=\"text-align: center;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Total</th>\r\n                    <th style=\"width: 10%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\"></th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                <tr >\r\n                    <td style=\"vertical-align: middle;width: 6%;font-size:1em;font-weight: 400;\r\n                    border-top: 0px;\">{{produto.nome}}</td>\r\n\r\n\r\n                    <td style=\"vertical-align: middle;text-align: center;width: 6%;font-size:0.8em;font-weight: 400;\r\n                    border-top: 0px;\">\r\n\r\n                        <span style=\"vertical-align: middle;margin-top: 5px;\">\r\n                            <span style=\"vertical-align: middle;\" mat-icon-button>\r\n                                <mat-icon type=\"button\" (click)=\"add()\">\r\n                                    add\r\n                                </mat-icon>\r\n                            </span>\r\n                        </span>\r\n\r\n                        <span style=\"margin-right: 5px;margin-left: 5px; vertical-align: middle;width: 6%;font-size:1.4em;font-weight: 400;\r\n            border-top: 0px;\">{{qntProduto}}</span>\r\n\r\n                        <span style=\"vertical-align: middle;\">\r\n                            <span style=\"vertical-align: middle;\" mat-icon-button>\r\n                                <mat-icon type=\"button\" (click)=\"remove()\">remove</mat-icon>\r\n                            </span>\r\n                        </span>\r\n\r\n                    </td>\r\n\r\n                    <td style=\"vertical-align: middle;text-align: center;width: 6%;font-size:1em;font-weight: 400;\r\n                    border-top: 0px;\">\r\n\r\n                        <div>{{produto.preco | currency:'BRL':true:'1.2-2'}}</div>\r\n\r\n                    </td>\r\n\r\n                    <td style=\"vertical-align: middle;text-align: center;width: 6%;font-size:1em;font-weight: 400;\r\n                border-top: 0px;\">\r\n                        <span #valorTotal>{{produto.preco * qntProduto |\r\n                            currency:'BRL':true:'1.2-2'}}</span>\r\n\r\n                    </td>\r\n                    <td style=\"width: 6%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">\r\n\r\n                    </td>\r\n\r\n                </tr>\r\n\r\n            </tbody>\r\n\r\n\r\n\r\n        </table>\r\n\r\n        <mat-form-field style=\"width: 21%;margin-top: 20px; \" appearance=\"outline\">\r\n            <mat-label>Valor total da doação:</mat-label>\r\n            <input disabled name=\"CPF\" matInput [value]=\"valorTotalVenda\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n            <mat-label>Unidade donatária:</mat-label>\r\n            <mat-select formControlName=\"unidadeDonatariaId\" selected required>\r\n                <mat-option></mat-option>\r\n                <mat-option [value]=\"uni.id\" *ngFor=\"let uni of unidades\">{{uni.sigla}}</mat-option>\r\n\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <br>\r\n\r\n        <button type=\"submit\" color=\"primary\" mat-raised-button \r\n        [disabled]=\"!doacaoForm.valid\"\r\n            style=\"float:right;margin-bottom: 0px;margin-left: 10px;\">\r\n            Salvar\r\n        </button>\r\n\r\n    </form>\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, MeioPagamento, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n\r\nimport { CompraProdutoCommand, Produto, ProdutosCommand } from \"src/app/_shared/models/produto.model\";\r\nimport { Parcelas } from \"src/app/_shared/models/utils.model\";\r\n\r\n\r\n@Component({\r\n    selector: 'caixadiariomodal',\r\n    templateUrl: './caixadiario.component.html',\r\n   // styleUrls: ['./caixadiario.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\n\r\nexport class CaixaDiarioComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public meioPagamento = MeioPagamento\r\n    public showParcelas = false;\r\n    public msg = \"\"\r\n    public showMgs = false\r\n    public produtosCesta: Produto[] = new Array<Produto>();\r\n    public totalParcelas: number\r\n    parcelas = Parcelas\r\n\r\n    public produtos: Produto[] = new Array<Produto>();\r\n    constructor(\r\n        //private service: AdmService,\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog,\r\n        public dialogRef: MatDialogRef<CaixaDiarioComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        //this.colaboradorForm = _fb.group({\r\n        // templateName: ['', [Validators.required, Validators.minLength(5)]],\r\n\r\n        //})\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        console.log(this.tokenInfo.Unidade);\r\n        console.log(this.tokenInfo.Codigo);\r\n        console.log(this.tokenInfo);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    onSubmit(form: FormGroup) {\r\n        // this.showMensagem = false\r\n        console.log(form)\r\n        console.log(form.value)\r\n        console.log(form.valid)\r\n        //var cel = `${form['celular'].value}`\r\n        //console.log(cel)\r\n        // this.dialogRef.close();\r\n        if (form.valid) {\r\n            console.log('form valid')\r\n            const novoColaborador = JSON.stringify(form.value);\r\n            //this.save(novoColaborador)\r\n            // let newTemplate = this.mapForm(tempForm)\r\n\r\n            this._http.post(`${this.baseUrl}/colaboradores`, novoColaborador, {\r\n                //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n                headers: new HttpHeaders({\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bear \"\r\n                })\r\n            }).subscribe(response => {\r\n\r\n                console.log(response)\r\n                // this.colaboradores = Object.assign([], response['data'])\r\n                // console.log(this.colaboradores)\r\n                // this.dialogRef.close();\r\n            }, (err) => {\r\n                console.log(err)\r\n                console.log(err['error'].mensagem)\r\n                //this.mensagem = err['error'].mensagem\r\n                //this.showMensagem = true\r\n            },\r\n                () => {\r\n                    //console.log(response)\r\n                    this.openSnackBar()\r\n                    //this.showMensagem = false\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                });\r\n        }\r\n    }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Colaborador salvo com sucesso.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    meioPagamentoSelect(meioPag) {\r\n\r\n        this.compraProdutoCommand.meioPagamento = meioPag\r\n\r\n        console.log(meioPag)\r\n\r\n        if (meioPag != \"credito\") {\r\n            this.showParcelas = false\r\n        } else {\r\n            this.showParcelas = true\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onOkClick() {\r\n\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n\r\n    }\r\n\r\n    fechar() {\r\n\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n\r\n    }\r\n\r\n    pesquisaItem(nome: string) {\r\n        this.showMgs = false\r\n        if (nome == \"\") return\r\n\r\n        console.log(nome)\r\n\r\n        this._http.get(`${this.baseUrl}/financeiro/produtos-buscar/${nome}`)\r\n            .subscribe(resp => {\r\n                this.produtos = Object.assign([], resp)\r\n            },\r\n                (erro) => { console.log(erro) },\r\n                () => {\r\n\r\n                    if (this.produtos.length == 0) {\r\n\r\n                        this.msg = \"nenhum produto com esse nome foi localizado\"\r\n                        this.showMgs = true\r\n                    } else {\r\n\r\n                      //  this.openPesquisaResult()\r\n\r\n                    }\r\n\r\n                })\r\n    }\r\n\r\n    add(product: Produto) {\r\n        var index = this.compraProdutoCommand.produtos.indexOf(product)\r\n        var qntAtual = this.compraProdutoCommand.produtos[index].quantidadeComprada\r\n        this.compraProdutoCommand.produtos[index].quantidadeComprada = qntAtual + 1\r\n    }\r\n\r\n    remove(product: Produto) {\r\n        var index = this.compraProdutoCommand.produtos.indexOf(product)\r\n        var qntAtual = this.compraProdutoCommand.produtos[index].quantidadeComprada\r\n        if (qntAtual == 1) {\r\n\r\n        } else {\r\n            this.compraProdutoCommand.produtos[index].quantidadeComprada = qntAtual - 1\r\n        }\r\n\r\n    }\r\n\r\n    get valorTotalVenda() {\r\n\r\n        /*\r\n                var preco = parseFloat(form.value[\"preco\"])\r\n                var precoFloat = preco.toFixed(2)\r\n                console.log(precoFloat)\r\n                produto.preco =  parseFloat(preco.toFixed(2))\r\n                console.log(produto)\r\n                */\r\n        //var array = [1, 2, 3, 4, 5];\r\n        var sum = 0\r\n        this.compraProdutoCommand.produtos.forEach(element => {\r\n            sum += element.quantidadeComprada * element.preco\r\n        });\r\n\r\n        this.compraProdutoCommand.valorTotal = sum\r\n\r\n        // console.log(sum);\r\n        // console.log(this.compraProdutoCommand.valorTotal)\r\n\r\n        var sum2 = sum.toFixed(2)\r\n\r\n        return `R$ ${sum2}`\r\n    }\r\n\r\n    deletar(product: Produto) {\r\n\r\n        var index = this.compraProdutoCommand.produtos.indexOf(product)\r\n        this.compraProdutoCommand.produtos[index]\r\n        this.compraProdutoCommand.produtos.splice(index, 1);\r\n\r\n    }\r\n\r\n\r\n    private productCommand: ProdutosCommand = new ProdutosCommand();\r\n\r\n    public compraProdutoCommand: CompraProdutoCommand = new CompraProdutoCommand();\r\n\r\n\r\n   \r\n    \r\n\r\n}","<div style=\"font-size: 1.2em;\">Caixa Diário\r\n\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button (click)=\"fechar()\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<hr>\r\n<!--\r\n<form [formGroup]=\"produtoForm\" (ngSubmit)=\"onSubmit(produtoForm)\">\r\n   \r\n    <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Nº Doc</mat-label>\r\n        <input selected formControlName=\"nome\" required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field (focusout)=\"onFocusOutDateEvent($event, 'iniUm')\" appearance=\"standard\"\r\n    style=\"width: 145px; \">\r\n    <mat-label>Previsão 1</mat-label>\r\n    <input mask=\"00/00/0000\" required name=\"prevInicio_1\" matInput [value]=\"previIniOne\"\r\n        formControlName=\"prevInicio_1\"\r\n        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n    <mat-hint>Previsão de início 2</mat-hint>\r\n</mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Nome</mat-label>\r\n        <input selected formControlName=\"nome\" required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Nome</mat-label>\r\n        <input selected formControlName=\"nome\" required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Nome</mat-label>\r\n        <input selected formControlName=\"nome\" required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Nome</mat-label>\r\n        <input selected formControlName=\"nome\" required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Nome</mat-label>\r\n        <input selected formControlName=\"nome\" required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Nome</mat-label>\r\n        <input selected formControlName=\"nome\" required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n\r\n</form>\r\n-->","<div style=\"font-size: 1.2em;\">Cadastro/Matrícula\r\n\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button (click)=\"fechar()\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n<hr>\r\n\r\n<!-- \r\nsó aparece seach (email ou telefone?) buscar na Lead\r\nabre trazendo uma lista da busca ou não o resultado\r\nse o aluno não estiver na lsita avisa ou entao o usuário informa que não\r\né nenhum aluno abaixo\r\n\r\nmaior | sem res financeiro | necessariamente sem resp\r\nmaior | com res financeiro | necessariamente sem resp\r\nmenor | sem res financeiro | necessariamente COM resp\r\nmenor | com res financeiro | necessariamente COM resp\r\n\r\n\r\nno searhc informar primeiro se é ex aluno ou nao, e trazer cadastro dele\r\n-->\r\n\r\n\r\n<div *ngIf=\"showSerch\">\r\n    Digite um ou mais campos para verificação do cadastro:<br>\r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 40%;\">\r\n        <mat-label>nome</mat-label>\r\n        <input #nome selected required name=\"nome\" matInput placeholder=\"nome\">\r\n    </mat-form-field> -->\r\n\r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 25%; margin-left: 5%; \">\r\n        <mat-label>Email</mat-label>\r\n        <input #email selected required name=\"email\" matInput placeholder=\"email\">\r\n    </mat-form-field> -->\r\n    <form novalidate [formGroup]=\"cpfForm\" (ngSubmit)=\"consulta(cpfForm)\">\r\n        <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n            <mat-label>CPF</mat-label>\r\n            <input formControlName=\"cpf\" required name=\"cpf\" mask=\"000.000.000-00\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" required matInput\r\n                placeholder=\"cpf\">\r\n        </mat-form-field>\r\n\r\n        <button type=\"submit\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n            <mat-icon>search</mat-icon>\r\n        </button>\r\n    </form>\r\n    <div @rowHighlight class=\"card-header \" style=\"background-color: rgb(227, 240, 227);margin-left: 0px;\r\n       width: 350px; font-size: 0.9em;box-shadow: 0 0 0.5em rgb(172, 170, 170);\" unselectable=\"on\"\r\n        onselectstart=\"return false;\" *ngIf=\"showMensagem\">{{mensagem}}</div>\r\n\r\n\r\n    <!-- <input type=\"text\" (focusout)=\"onFocusOutEvent($event)\" /> -->\r\n</div>\r\n\r\n\r\n<!-- <div *ngIf=\"showAlunoResponseList\">\r\n    Registros localizados no cadastro: <br>\r\n    <mat-selection-list #shoes [multiple]=\"false\">\r\n        <mat-list-option (click)=\"selecionarAluno(aluno)\" *ngFor=\"let aluno of alunoResponse; let i = index;\"\r\n            [value]=\"aluno\">\r\n            {{i+1}} - Nome: {{aluno.nome}}, Email: {{aluno.email}}\r\n        </mat-list-option>\r\n    </mat-selection-list>\r\n</div> -->\r\n\r\n<!-- <div *ngIf=\"showAlunoResponseList\">\r\n    <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th style=\"width: 2%;height: 20px;;  \r\n    text-align:left; \r\n    vertical-align: middle;\r\n    border-top: 0px;\"></th>\r\n\r\n                <th style=\"width: 32%;font-size:1em;\r\n                    vertical-align: middle;\r\n                    text-align:left;\r\n    border-top: 0px; font-weight: 400;\">Nome</th>\r\n\r\n                <th style=\"width: 19%;font-size:1em;\r\n            vertical-align: middle;\r\n            text-align:center;\r\n            border-top: 0px; font-weight: 400;\">Email</th>\r\n\r\n                <th style=\"width: 15%;font-size:1em;\r\n    text-align:center; \r\n    vertical-align: middle;\r\n    border-top: 0px; font-weight: 400;\">Situação</th>                \r\n\r\n                <th style=\"width: 6%;\r\n    border-top: 0px;\"></th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let item of alunoResponse;let i = index;\">\r\n                <td style=\"text-align:center;vertical-align: middle;\">\r\n                    <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"selecionar\" matTooltipPosition=\"above\"\r\n                        matTooltipHideDelay=\"100\">\r\n                        <button (click)=\"selecionarAluno(item)\" style=\"\" mat-icon-button>\r\n                            <mat-icon style=\"color: green;\">arrow_right_alt</mat-icon>\r\n                        </button>\r\n                    </i>\r\n                </td>\r\n\r\n                <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;\">{{item.email}}</td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;\">LEAD                    \r\n\r\n                </td>\r\n\r\n                <td style=\"position: relative;text-align: center;vertical-align: middle;\">\r\n\r\n                </td>\r\n            </tr>\r\n    </table>\r\n</div> -->\r\n\r\n<!--                  STEPPERS TABS                           -->\r\n\r\n\r\n<mat-tab-group *ngIf=\"showFormCadastro\" [selectedIndex]=\"indexTab\" mat-align-tabs=\"start\">\r\n\r\n\r\n\r\n    <!--                  CADASTRO            -->\r\n\r\n\r\n    <mat-tab *ngIf=\"showFormCadastroTab\" [label]=\"tabs[0]\">\r\n\r\n        <form novalidate [formGroup]=\"colaboradorForm\" (ngSubmit)=\"onSubmit(colaboradorForm)\">\r\n\r\n            <div style=\"position: relative;\">\r\n\r\n                <div style=\"position: absolute;  display:flex;padding: 0px; margin-left: 88%; display: inline-block;\r\n                overflow: hidden;margin-top: 5px; width: 100px; height: 133px; border: 1px solid black; \">\r\n\r\n                    <img src=\"\" style=\"display: block;\r\n                margin-left: auto;\r\n                margin-right: auto;width:50%\r\n                \">\r\n\r\n                </div>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                    <mat-label>Nome completo</mat-label>\r\n                    <input selected formControlName=\"nome\" required name=\"nome\" matInput placeholder=\"Nome\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 14%; margin-left: 2%;\">\r\n                    <mat-label>CPF</mat-label>\r\n                    <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" disabled\r\n\r\n                        [(value)]=\"atualCPF\" minlength=\"11\" maxlength=\"11\" selected name=\"cpf\" matInput\r\n                        placeholder=\"digite o CPF\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 12%; margin-left: 2%;\">\r\n                    <mat-label>RG</mat-label>\r\n                    <input formControlName=\"rg\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" selected\r\n                        name=\"rg\"  matInput placeholder=\"digite o RG\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%; margin-left: 5%;\">\r\n                    <mat-label>Nascimento</mat-label>\r\n                    <date-input formControlName=\"nascimento\" (focusout)=\"onFocusOutDateEvent($event)\" name=\"nascimento\"\r\n                        matInput required></date-input>\r\n                </mat-form-field>\r\n\r\n                <br>\r\n                <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                    <mat-label>Nome Social</mat-label>\r\n                    <input selected formControlName=\"nomeSocial\" name=\"nome\" matInput placeholder=\"Nome\">\r\n                </mat-form-field>\r\n                <br>\r\n\r\n                <!-- <div (click)=\"testeinvalid()\">teste</div> -->\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n                    <mat-label>Naturalidade</mat-label>\r\n                    <input selected formControlName=\"naturalidade\" required name=\"naturalidade\" matInput\r\n                        placeholder=\"Nome\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                    <mat-label>UF</mat-label>\r\n                    <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\"\r\n                        minlength=\"2\" maxlength=\"2\" selected formControlName=\"naturalidadeUF\" required\r\n                        name=\"naturalidadeUF\" matInput placeholder=\"UF\">\r\n                </mat-form-field>\r\n\r\n                <span style=\"padding: 5px; margin-left: 5%\">\r\n\r\n                    <span *ngIf=\"showPerguntaRespFinanc\" style=\"margin-left: 1%;\">\r\n                        <label class=\"example-margin\">É também o responsável financeiro:</label>\r\n                        <mat-radio-group>\r\n                            <mat-radio-button [checked]=\"checkedRespFinanc.sim\" color=\"primary\" class=\"example-margin\"\r\n                                (click)=\"eHRespFinan(true)\" value=\"Sim\">Sim</mat-radio-button>\r\n                            <mat-radio-button [checked]=\"checkedRespFinanc.nao\" color=\"primary\" class=\"example-margin\"\r\n                                (click)=\"eHRespFinan(false)\" value=\"Não\">Não</mat-radio-button>\r\n                        </mat-radio-group>\r\n                    </span>\r\n\r\n                </span>\r\n\r\n                <br>\r\n                <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input (focusout)=\"buscarEmail($event)\" selected formControlName=\"email\" name=\"email\" matInput\r\n                        placeholder=\"Email\">\r\n                    <mat-hint @rowHighlight *ngIf=\"validadeEmailMsg\" style=\"color: red;\">\r\n                        O email informado já existe\r\n                    </mat-hint>\r\n                </mat-form-field>\r\n\r\n                <!-- <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>Celular</mat-label>\r\n                    <example-tel-input #cel name=\"telCelular\" formControlName=\"telCelular\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </example-tel-input> -->\r\n                <!-- <mat-icon matSuffix>phone</mat-icon> -->\r\n                <!-- <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field> -->\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>Celular</mat-label>\r\n                    <input #cel name=\"telCelular\" formControlName=\"telCelular\" mask=\"(00) 00000-0000\" matInput\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    <!-- <mat-icon matSuffix>phone</mat-icon> -->\r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <!-- <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>WhatsApp</mat-label>\r\n                    <example-tel-input name=\"telWhatsapp\" formControlName=\"telWhatsapp\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </example-tel-input>\r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field> -->\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>WhatsApp</mat-label>\r\n                    <input name=\"telWhatsapp\" formControlName=\"telWhatsapp\" mask=\"(00) 00000-0000\" matInput\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                </mat-form-field>\r\n\r\n                <!-- <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>Residencial</mat-label>\r\n                    <example-tel-input name=\"telResidencial\" formControlName=\"telResidencial\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </example-tel-input>\r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field> -->\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>Residencial</mat-label>\r\n                    <input name=\"telResidencial\" formControlName=\"telResidencial\" mask=\"(00) 00000-0000\" matInput\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <br>\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%;\">\r\n                    <mat-label>Tel referência</mat-label>\r\n                    <example-tel-input formControlName=\"telReferencia\" #cel name=\"telReferencia\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </example-tel-input>\r\n                    <!-- <mat-icon matSuffix>phone</mat-icon> -->\r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 35%;margin-left: 5%; \">\r\n                    <mat-label>Nome do contato</mat-label>\r\n                    <input formControlName=\"nomeContatoReferencia\" selected required name=\"nomeContatoReferencia\"\r\n                        matInput placeholder=\"Nome\">\r\n                </mat-form-field>\r\n\r\n                <br>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n                    <mat-label>CEP</mat-label>\r\n                    <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" #cep\r\n                        formControlName=\"cep\" minlength=\"8\" maxlength=\"8\" required name=\"templateName\" matInput\r\n                        placeholder=\"12345678\">\r\n                </mat-form-field>\r\n                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <span type=\"button\" (click)=\"consultaCEP(cep.value)\" style=\"margin: 0px; margin: 0px;\"\r\n                        mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </span>\r\n                </i>\r\n\r\n                <ng-container *ngIf=\"showEndercoField\">\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 5%;\">\r\n                        <mat-label>Logradouro</mat-label>\r\n                        <input selected [(value)]=\"cepReturn.logradouro\" required name=\"templateName\" matInput\r\n                            placeholder=\"ex: rua tal...\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 45%; margin-left: 5%;\">\r\n                        <mat-label>Complemento</mat-label>\r\n                        <input selected formControlName=\"complemento\" name=\"templateName\" matInput\r\n                            placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n                    </mat-form-field>\r\n\r\n                    <br>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                        <mat-label>Cidade</mat-label>\r\n                        <input disabled selected [(value)]=\"cepReturn.localidade\" required name=\"templateName\" matInput\r\n                            placeholder=\"digite o bairro\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 5%;\">\r\n                        <mat-label>UF</mat-label>\r\n                        <input disabled selected [(value)]=\"cepReturn.uf\" required name=\"templateName\" matInput\r\n                            placeholder=\"digite o bairro\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 5%;\">\r\n                        <mat-label>Bairro</mat-label>\r\n                        <input selected [(value)]=\"cepReturn.bairro\" required name=\"templateName\" matInput\r\n                            placeholder=\"digite o bairro\">\r\n                    </mat-form-field>\r\n                </ng-container>\r\n                <br>\r\n\r\n\r\n                <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n                    <mat-label>Observações gerais</mat-label>\r\n                    <textarea formControlName=\"observacoes\" name=\"observacoes\" matInput></textarea>\r\n                </mat-form-field>\r\n\r\n\r\n\r\n            </div>\r\n            <button type=\"submit\" mat-raised-button disabled=\"false\"\r\n                style=\"float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n            <!-- <button style=\"float:right;margin-bottom: 10px;\" mat-raised-button\r\n                [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button> -->\r\n        </form>\r\n\r\n    </mat-tab>\r\n\r\n\r\n\r\n    <!--                  RESP FINANCEIRO          -->\r\n\r\n\r\n\r\n    <mat-tab *ngIf=\"showFormRespFinanc\" [label]=\"tabs[1]\">\r\n\r\n        <form novalidate [formGroup]=\"responsavelFinancForm\">\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                <mat-label>Nome completo</mat-label>\r\n                <input selected formControlName=\"nome\" required name=\"nome\" matInput placeholder=\"Nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>CPF</mat-label>\r\n                <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                mask=\"000.000.000-00\"\r\n                    formControlName=\"cpf\" minlength=\"11\" maxlength=\"14\" selected name=\"cpf\" matInput\r\n                    placeholder=\"digite o CPF\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>RG</mat-label>\r\n                <input formControlName=\"rg\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" selected name=\"rg\"\r\n                    matInput placeholder=\"digite o RG\">\r\n            </mat-form-field>\r\n\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 17%; margin-left: 5%;\">\r\n                <mat-label>Nascimento</mat-label>\r\n                <date-input formControlName=\"nascimento\" name=\"nascimento\" matInput required></date-input>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 20%;\">\r\n                <mat-label>Grau de parentesco</mat-label>\r\n                <input formControlName=\"parentesco\" required name=\"naturalidadeUF\" matInput\r\n                    placeholder=\"Grau de parentesco\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n                <mat-label>Naturalidade</mat-label>\r\n                <input selected formControlName=\"naturalidade\" required name=\"naturalidade\" matInput placeholder=\"Nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                <mat-label>UF</mat-label>\r\n                <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\"\r\n                    minlength=\"2\" maxlength=\"2\" selected formControlName=\"naturalidadeUF\" required name=\"naturalidadeUF\"\r\n                    matInput placeholder=\"UF\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n            <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                <mat-label>Email</mat-label>\r\n                <input selected formControlName=\"email\" name=\"email\" matInput placeholder=\"Email\">\r\n            </mat-form-field>\r\n\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                <mat-label>Celular</mat-label>\r\n                <example-tel-input #cel name=\"telCelular\" formControlName=\"telCelular\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                </example-tel-input>\r\n\r\n                <mat-hint>telefone com DDD</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                <mat-label>WhatsApp</mat-label>\r\n                <example-tel-input name=\"telWhatsapp\" formControlName=\"telWhatsapp\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                </example-tel-input>\r\n                <mat-hint>telefone com DDD</mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                <mat-label>Residencial</mat-label>\r\n                <example-tel-input name=\"telResidencial\" formControlName=\"telResidencial\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                </example-tel-input>\r\n                <mat-hint>telefone com DDD</mat-hint>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n                <mat-label>CEP</mat-label>\r\n                <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" #cep\r\n                    formControlName=\"cep\" minlength=\"8\" maxlength=\"8\" required name=\"templateName\" matInput\r\n                    placeholder=\"apenas números\">\r\n            </mat-form-field>\r\n            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\"\r\n                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                <button (click)=\"consultaCEPFin(cep.value)\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                    <mat-icon>search</mat-icon>\r\n                </button>\r\n            </i>\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                <mat-label>Logradouro</mat-label>\r\n                <input selected [(value)]=\"cepReturn2.logradouro\" name=\"templateName\" matInput\r\n                    placeholder=\"ex: rua tal...\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 45%; margin-left: 5%;\">\r\n                <mat-label>Complemento</mat-label>\r\n                <input selected formControlName=\"complemento\" name=\"templateName\" matInput\r\n                    placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                <mat-label>Cidade</mat-label>\r\n                <input disabled selected [(value)]=\"cepReturn2.localidade\" name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 5%;\">\r\n                <mat-label>UF</mat-label>\r\n                <input disabled selected [(value)]=\"cepReturn2.uf\" name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 5%;\">\r\n                <mat-label>Bairro</mat-label>\r\n                <input selected [(value)]=\"cepReturn2.bairro\" name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n            <br>\r\n\r\n\r\n            <!-- <div style=\"font-size: 0.9em;\">\r\n                <i style=\"margin-left: 5px; position: relative;top: 5px;\" #tooltip=\"matTooltip\"\r\n                    matTooltip=\"anexar comp. de residência\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n\r\n                    <mat-icon style=\"color: green; margin-left: 0px; font-size: 20px;\">done</mat-icon>\r\n\r\n                </i>\r\n                comprovante de residência\r\n                <i style=\"margin-left: 5px; position: relative;top: 5px;\" #tooltip=\"matTooltip\"\r\n                    matTooltip=\"anexar comp. de residência\" matTooltipPosition=\"above\" type=\"button\"\r\n                    matTooltipHideDelay=\"100\">\r\n\r\n                    <mat-icon style=\"margin-left: 0px; font-size: 20px;\">attach_file</mat-icon>\r\n\r\n                </i>\r\n                <span>\r\n                    \"arquivotal.pdf\"\r\n                </span>\r\n            </div> -->\r\n<!-- \r\n            <div style=\"font-size: 0.8em;\">\r\n                <i style=\"margin-left: 5px;position: relative;top: 5px;\" #tooltip=\"matTooltip\"\r\n                    matTooltip=\"anexar comp. de residência\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n\r\n                    <mat-icon style=\"color: red; margin-left: 0px; font-size: 20px;\">close</mat-icon>\r\n\r\n                </i>\r\n                CPF\r\n                <i style=\"margin-left: 5px;position: relative;top: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\"\r\n                    matTooltipPosition=\"above\" type=\"button\" matTooltipHideDelay=\"100\">\r\n\r\n                    <mat-icon style=\"margin-left: 0px; font-size: 20px;\">attach_file</mat-icon>\r\n\r\n                </i>\r\n                <span>\r\n                    \"arquivotal.pdf\"\r\n                </span>\r\n            </div> -->\r\n\r\n            <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n                <mat-label>Observações gerais</mat-label>\r\n                <textarea formControlName=\"observacoes\" name=\"observacoes\" matInput></textarea>\r\n            </mat-form-field>\r\n\r\n\r\n\r\n\r\n        </form>\r\n\r\n\r\n\r\n    </mat-tab>\r\n\r\n\r\n    <!--                  RESP MENOR          -->\r\n\r\n\r\n    <mat-tab *ngIf=\"showTabMenorIdade\" [label]=\"tabs[2]\">\r\n        <form novalidate [formGroup]=\"responsavelMenorForm\">\r\n            <br>\r\n\r\n            <section style=\"margin-left: 1%;\" class=\"example-section\">\r\n                <label class=\"example-margin\">O responsável do menor também é o responsável financeiro:</label>\r\n                <mat-radio-group>\r\n                    <mat-radio-button color=\"primary\" [checked]=\"checkedRespMenor.sim\" class=\"example-margin\"\r\n                        (click)=\"eHRespMenorEFinan(true)\" value=\"Sim\">Sim</mat-radio-button>\r\n                    <mat-radio-button color=\"primary\" [checked]=\"checkedRespMenor.nao\" class=\"example-margin\"\r\n                        (click)=\"eHRespMenorEFinan(false)\" value=\"Não\">Não</mat-radio-button>\r\n                </mat-radio-group>\r\n            </section>\r\n\r\n            <div class=\"card-body\">\r\n                <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                    <mat-label>Nome completo</mat-label>\r\n                    <input selected formControlName=\"nome\" required name=\"nome\" matInput placeholder=\"Nome\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                    <mat-label>CPF</mat-label>\r\n                    <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                    mask=\"000.000.000-00\"    \r\n                    formControlName=\"cpf\" minlength=\"11\" maxlength=\"14\" selected name=\"cpf\" matInput\r\n                        placeholder=\"digite o CPF\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                    <mat-label>RG</mat-label>\r\n                    <input formControlName=\"rg\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" selected\r\n                        name=\"rg\" matInput placeholder=\"digite o RG\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%; margin-left: 5%;\">\r\n                    <mat-label>Nascimento</mat-label>\r\n                    <date-input formControlName=\"nascimento\" name=\"nascimento\" matInput required></date-input>\r\n                </mat-form-field>\r\n\r\n                <br>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 20%;\">\r\n                    <mat-label>Grau de parentesco</mat-label>\r\n                    <input formControlName=\"parentesco\" required name=\"naturalidadeUF\" matInput\r\n                        placeholder=\"Grau de parentesco\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 2%; \">\r\n                    <mat-label>Naturalidade</mat-label>\r\n                    <input selected formControlName=\"naturalidade\" required name=\"naturalidade\" matInput\r\n                        placeholder=\"Nome\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                    <mat-label>UF</mat-label>\r\n                    <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\"\r\n                        minlength=\"2\" maxlength=\"2\" selected formControlName=\"naturalidadeUF\" required\r\n                        name=\"naturalidadeUF\" matInput placeholder=\"UF\">\r\n                </mat-form-field>\r\n\r\n                <!-- <span type=\"button\" (click)=\"uploadDoc('compRes')\">juntar doc</span> -->\r\n\r\n                <br>\r\n                <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input selected formControlName=\"email\" name=\"email\" matInput placeholder=\"Email\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>Celular</mat-label>\r\n                    <example-tel-input #cel name=\"telCelular\" formControlName=\"telCelular\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </example-tel-input>\r\n                    <!-- <mat-icon matSuffix>phone</mat-icon> -->\r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>WhatsApp</mat-label>\r\n                    <example-tel-input name=\"telWhatsapp\" formControlName=\"telWhatsapp\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </example-tel-input>\r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>Residencial</mat-label>\r\n                    <example-tel-input name=\"telResidencial\" formControlName=\"telResidencial\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </example-tel-input>\r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <br>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n                    <mat-label>CEP</mat-label>\r\n                    <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" #cep\r\n                        formControlName=\"cep\" minlength=\"8\" maxlength=\"8\" required name=\"templateName\" matInput\r\n                        placeholder=\"apenas números\">\r\n                </mat-form-field>\r\n                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"consultaCEPMen(cep.value)\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n                <br>\r\n                <mat-form-field appearance=\"standard\" style=\"width: 40%;\">\r\n                    <mat-label>Logradouro</mat-label>\r\n                    <input selected [(value)]=\"cepReturn3.logradouro\" name=\"templateName\" matInput\r\n                        placeholder=\"ex: rua tal...\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 55%; margin-left: 5%;\">\r\n                    <mat-label>Complemento</mat-label>\r\n                    <input selected formControlName=\"complemento\" name=\"templateName\" matInput\r\n                        placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                    <mat-label>Cidade</mat-label>\r\n                    <input selected required [(value)]=\"cepReturn3.localidade\" name=\"templateName\" matInput\r\n                        placeholder=\"digite o bairro\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 15%;\">\r\n                    <mat-label>UF</mat-label>\r\n                    <input selected required [(value)]=\"cepReturn3.uf\" name=\"templateName\" matInput\r\n                        placeholder=\"digite o bairro\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 15%;\">\r\n                    <mat-label>Bairro</mat-label>\r\n                    <input selected [(value)]=\"cepReturn3.bairro\" name=\"templateName\" matInput\r\n                        placeholder=\"digite o bairro\">\r\n                </mat-form-field>\r\n                <br>\r\n\r\n\r\n                <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n                    <mat-label>Observações gerais</mat-label>\r\n                    <textarea formControlName=\"observacoes\" name=\"observacoes\" matInput></textarea>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n            <!-- <button type=\"submit\" mat-raised-button disabled=\"false\"\r\n                style=\"float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n            <button style=\"float:right;margin-bottom: 10px;\" mat-raised-button\r\n                [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button> -->\r\n\r\n        </form>\r\n\r\n\r\n    </mat-tab>\r\n\r\n\r\n    <!--                             TAB MATRICULA CONFIRM             -->\r\n\r\n\r\n\r\n    <mat-tab *ngIf=\"showMatricula\" [label]=\"tabs[3]\">\r\n\r\n        <br>\r\n\r\n        <div>\r\n            <ng-container *ngIf=\"hideCursoSearchAndMessage\">\r\n                <div *ngIf=\"showSelectCursoSearch; else message\">\r\n                    Selecione o curso disponível nesta unidade:\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 2%;\">\r\n                        <mat-label>Curso</mat-label>\r\n                        <mat-select selected name=\"cargo\" required>\r\n                            <mat-option></mat-option>\r\n                            <mat-option (click)=\"consultarCursos(item.id)\" *ngFor=\"let item of cursosType\"\r\n                                [value]=\"item.id\">\r\n                                {{item.nome}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <ng-template #message>\r\n                    Não há turmas com matrículas abertas nesta unidade!\r\n                </ng-template>\r\n            </ng-container>\r\n\r\n\r\n            <div *ngIf=\"showTableCursosAndamento\" class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%;height: 20px;\r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 27%;font-size:0.9em;\r\n                                    vertical-align: middle; \r\n                                    text-align:left;\r\n                    border-top: 0px; font-weight: 400;\">Descrição</th>\r\n\r\n                            <th style=\"width: 24%;font-size:0.9em;\r\n                            vertical-align: middle; \r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">Horário</th>\r\n\r\n                            <th style=\"width: 15%;font-size:0.9em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Início</th>\r\n\r\n                            <th style=\"width: 15%;font-size:0.9em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Término</th>\r\n\r\n                            <th style=\"width: 6%;\r\n                    border-top: 0px;\"></th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of turmasParaMatricular;let i = index;\">\r\n                            <td style=\"text-align:center;vertical-align: middle;\"></td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;font-size:0.9em;\">\r\n                                {{item.descricao}}<br>Turma\r\n                                {{item.identificador}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;font-size:0.9em;\">\r\n                                {{item.weekDayOne}} - {{item.initialHourOne}} às {{item.finalHourOne}}<br>\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;font-size:0.9em;\">\r\n                                {{ item.previsaoAtual | date: 'dd/MM/yyyy' }}\r\n\r\n                                <br>\r\n\r\n                                <span *ngIf=\"item.iniciada\" style=\"color:red; font-size: 0.8em;\">\r\n                                    * turma\r\n                                    iniciada!\r\n                                </span>\r\n\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;font-size:0.9em;\">{{\r\n                                item.previsaoTerminoAtual |\r\n                                date: 'dd/MM/yyyy' }}\r\n                            </td>\r\n\r\n                            <td style=\"position: relative;text-align: center;vertical-align: middle;\">\r\n                                <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"ativo\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"selecionarTurma(item)\" style=\"\" mat-icon-button>\r\n                                        <mat-icon style=\"\">note_add</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n                            </td>\r\n                        </tr>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <form *ngIf=\"showFormFinal\" novalidate [formGroup]=\"matriculaTurmaForm\"\r\n            (ngSubmit)=\"submitMatricula(matriculaTurmaForm)\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\" \r\n            style=\"width: 17%;margin-left: 2%;\">\r\n                <mat-label>Código do contrato:</mat-label>\r\n                <input disabled name=\"templateName\" matInput value=\"CGI-34534634\">\r\n            </mat-form-field>\r\n\r\n            <div style=\"float: right; width: 50px;\">\r\n                <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"voltar\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"voltar()\" style=\"\" mat-icon-button>\r\n                        <mat-icon>undo</mat-icon>\r\n                    </button>\r\n                </i>\r\n\r\n            </div>\r\n\r\n\r\n            <br>\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 29%; ;margin-left: 2%;\">\r\n                <mat-label>Curso</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.descricao\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 13%; margin-left: 2%;\">\r\n                <mat-label>Turma</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.identificador\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>Investimento</mat-label>\r\n                <input disabled name=\"templateName\" matInput value=\"R$ 4.190,00\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 10%; margin-left: 1%;\">\r\n                <mat-label>código </mat-label>\r\n                <input disabled selected name=\"templateName\" matInput placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 13%; margin-left: 2%;\">\r\n                <mat-label>Dia</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.weekDayOne\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 18%; margin-left: 2%;\">\r\n                <mat-label>Horário</mat-label>\r\n                <input disabled name=\"templateName\" matInput [(value)]=\"horarioTurma\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>Previsão início </mat-label>\r\n                <input selected name=\"templateName\" matInput disabled [(value)]=\"previAtual\"\r\n                    placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 1%;\">\r\n                <mat-label>Previsão término </mat-label>\r\n                <input selected name=\"templateName\" matInput disabled [(value)]=\"previTerminoAtual\"\r\n                    placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 1%;\">\r\n                <mat-label>Previsão término </mat-label>\r\n                <input selected name=\"templateName\" matInput disabled [(value)]=\"previTerminoAtual\"\r\n                    placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 1%;\">\r\n                <mat-label>Previsão término </mat-label>\r\n                <input selected name=\"templateName\" matInput disabled [(value)]=\"previTerminoAtual\"\r\n                    placeholder=\"aplicar desconto\">\r\n            </mat-form-field>\r\n\r\n\r\n\r\n\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 24%;margin-left: 2%;margin-top: 20px;\">\r\n                <mat-label>Forma de pagamento</mat-label>\r\n                <mat-select formControlName=\"meioPagamento\" selected name=\"cargo\" required>\r\n                    <mat-option></mat-option>\r\n                    <mat-option *ngFor=\"let item of meioPagamento\" [value]=\"item.type\">\r\n                        {{item.value}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <!-- <mat-form-field appearance=\"fill\" style=\"width: 38%;margin-left: 2%;margin-top: 20px;\"> -->\r\n\r\n                <!-- <mat-form-field appearance=\"outline\" style=\"width: 120px; \">\r\n                    <mat-label>Vencimento</mat-label>\r\n                    <input mask=\"00/00/0000\" required name=\"cpf\" matInput placeholder=\"Vencimento\" \r\n                    [(ngModel)]=\"vencimento\"\r\n                        (focusout)=\"onFocusOutDateEvent($event)\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                </mat-form-field> -->\r\n\r\n            <!-- <span style=\"padding: 5px; margin-left: 5%\">\r\n\r\n                <span *ngIf=\"showPerguntaRespFinanc\" style=\"margin-left: 1%;\">\r\n                    <label class=\"example-margin\">À vista?</label>\r\n                    <mat-radio-group>\r\n                        <mat-radio-button [checked]=\"checkedRespFinanc.sim\" color=\"primary\" class=\"example-margin\"\r\n                            (click)=\"aVista(true)\" value=\"Sim\">Sim</mat-radio-button>\r\n                        <mat-radio-button [checked]=\"checkedRespFinanc.nao\" color=\"primary\" class=\"example-margin\"\r\n                            (click)=\"aVista(false)\" value=\"Não\">Não</mat-radio-button>\r\n                    </mat-radio-group>\r\n                </span>\r\n\r\n            </span> -->\r\n\r\n\r\n            <!-- <mat-form-field *ngIf=\"showParcelas\" appearance=\"fill\" style=\"width: 14%; margin-left: 1%;\">\r\n                <mat-label>Número de parcelas</mat-label>\r\n                <input disabled selected formControlName=\"qntParcelas\" name=\"qntParcelas\" required matInput>\r\n            </mat-form-field> -->\r\n            <mat-form-field *ngIf=\"shoNParcelar\" appearance=\"outline\" style=\"width: 25%;margin-left: 2%;margin-top: 20px;\">\r\n                <mat-label>Número de parcelas</mat-label>\r\n                <mat-select formControlName=\"parcelas\" selected name=\"noparcelas\" required>\r\n                    <!-- <mat-option ></mat-option> -->\r\n                    <mat-option  *ngFor=\"let item of parcelas\" [value]=\"item.type\">\r\n                        {{item.value}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"shoNParcelar\" appearance=\"outline\" style=\"width: 40%;margin-left: 2%;margin-top: 20px;\">\r\n                <mat-label>Dia de vencimento:</mat-label>\r\n                <mat-select formControlName=\"diaVencimento\" selected name=\"diaVencimento\" required>\r\n                    <mat-option ></mat-option>\r\n                    <mat-option  *ngFor=\"let item of diaVencimento\" [value]=\"item.type\">\r\n                        {{item.value}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n\r\n\r\n            <!-- <span style=\"margin-left: 5px;margin-right: 5px\">À vista?</span>\r\n            <mat-checkbox type=\"checkbox\" color=\"primary\" (click)=\"markAvista()\" class=\"example-margin\" name=\"checked\">\r\n            </mat-checkbox> -->\r\n            <br>\r\n\r\n            <!-- <span style=\"margin-left: 5px;margin-right: 5px\">Confirmar pagamento da primeira ou única parcela (à vista): </span>\r\n            <mat-checkbox type=\"checkbox\" color=\"primary\" (click)=\"markPrimeiraParc()\" class=\"example-margin\" name=\"checked\">\r\n            </mat-checkbox> -->\r\n\r\n\r\n            <mat-form-field appearance=\"outline\" style=\"width: 25%;margin-left: 2%;\">\r\n                <mat-label>Primeira parcela já paga:</mat-label>\r\n                <mat-select formControlName=\"primeiraParcPaga\" selected name=\"parcela\" required>\r\n                    <mat-option value=\"True\">Sim</mat-option>\r\n                    <mat-option value=\"false\">Não</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"fill\" style=\"width: 38%;margin-left: 2%;margin-top: 20px;\">\r\n                <mat-label>Como ficou sabendo dos nossos cursos?</mat-label>\r\n                <mat-select formControlName=\"cienciaCurso\" selected name=\"cargo\" required>\r\n                    <mat-option (click)=\"searchAluno('nenhuma')\"></mat-option>\r\n                    <mat-option (click)=\"searchAluno(item.type)\" *ngFor=\"let item of cienciaCurso\" [value]=\"item.value\">\r\n                        {{item.value}}\r\n                    </mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n\r\n            <!-- <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 2%;\">\r\n                <mat-label>Matrícula</mat-label>\r\n                <input (focusout)=\"buscarAluno($event)\" selected name=\"email\" matInput\r\n                    placeholder=\"Matrícula\">\r\n                <mat-hint @rowHighlight *ngIf=\"validadeEmailMsg\" style=\"color: red;\">\r\n                    Nenhuma aluno encontrado\r\n                </mat-hint>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 2%;\">\r\n                <mat-label>Matrícula</mat-label>\r\n                <input disabled selected name=\"email\" matInput\r\n                    placeholder=\"Matrícula\">\r\n                <mat-hint @rowHighlight *ngIf=\"validadeEmailMsg\" style=\"color: red;\">\r\n                    Nenhuma aluno encontrado\r\n                </mat-hint>\r\n            </mat-form-field> -->\r\n\r\n            <br>\r\n\r\n            <br>\r\n\r\n            <br>\r\n\r\n            <!-- <span style=\"margin-left: 2%;\">Escolha a forma de pagamento:</span>\r\n            <mat-tab-group style=\"\">\r\n                <mat-tab label=\"Cartão de Crédito\"> </mat-tab>\r\n                <mat-tab label=\"Boleto\"> </mat-tab>\r\n                <mat-tab label=\"Carnê\"></mat-tab>\r\n            </mat-tab-group> -->\r\n\r\n\r\n            <br>\r\n            <button type=\"submit\" mat-raised-button disabled=\"false\"\r\n                style=\"bottom: 0; float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n                Confirmar matrícula\r\n            </button>\r\n\r\n        </form>\r\n\r\n    </mat-tab>\r\n</mat-tab-group>","import { Component, EventEmitter, Inject, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nimport { Aluno, DataTrans, IValidateForms } from \"src/app/_shared/models/aluno.model\";\r\nimport { ConfirmModalComponent } from \"../confirmDialog/confirm.component\";\r\nimport { Turma, TurmaViewModel } from \"src/app/_shared/models/Turma.model\";\r\nimport { MyDate } from \"src/app/_shared/customMasks/maskDate/nyDate.model\";\r\nimport { MyTel } from \"src/app/_shared/customMasks/maskTelBr/mytel.model\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { ConfirmMatriculaComponent } from \"../confirmmatricula/confirmamat.component\";\r\nimport { Observable } from \"rxjs\";\r\nimport { DiaVencimento, Parcelas } from \"src/app/_shared/models/utils.model\";\r\n\r\nexport const Parentesco = [\r\n    { type: 'pais', value: 'Pai/Mãe' },\r\n    { type: 'filhos', value: 'Filho/Filha' },\r\n    { type: 'avos', value: 'Avô/Avó' },\r\n    { type: 'sobrinhos', value: 'Sobinho(a)' },\r\n    { type: 'tio', value: 'Tio(a)' },\r\n    { type: 'conjuge', value: 'Conjugê' },\r\n    { type: 'irmao', value: 'Irmão/Irmã' }\r\n\r\n]\r\n\r\nexport const RespostaResFinanceiro = [\r\n    { type: true, value: 'Sim' },\r\n    { type: false, value: 'Não' }\r\n]\r\n\r\nexport const CienciaCurso = [\r\n    { type: 'Balcão', value: 'Balcão' },\r\n    { type: 'Facebook', value: 'Facebook' },\r\n    { type: 'Instagram', value: 'Instagram' },\r\n    { type: 'Indicação Aluno', value: 'Indicação Aluno' },\r\n    { type: 'Rádio', value: 'Rádio' },\r\n    { type: 'Vendendor Externo', value: 'Vendendor Externo' },\r\n    { type: 'Outros', value: 'Outros' }\r\n]\r\n\r\nexport const MeioPagamento = [\r\n    { type: 'boleto', value: 'Boleto' },\r\n    { type: 'debito', value: 'Cartão - Débito' },\r\n    { type: 'credito', value: 'Cartão - Crédito' },\r\n    { type: 'pix', value: 'Pix' },\r\n    { type: 'dinheiro', value: 'Dinheiro' },\r\n]\r\n\r\n\r\nexport const Cursos = [\r\n    { type: 'Enfermagem', value: 'Técnico em Enfermagem' },\r\n    { type: 'Necropsia', value: 'Aux. Necrópsia' }\r\n]\r\n\r\nexport const CheckedRespFinanc = {\r\n    sim: true, nao: false\r\n}\r\n\r\nexport const CheckedRespMenor = {\r\n    sim: true, nao: false\r\n}\r\n\r\n@Component({\r\n    selector: 'creatematriculamodal',\r\n    templateUrl: './creatematricula.component.html',\r\n    styleUrls: ['./creatematricula.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class CreateMatriculaComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  \r\n    showSerch = true\r\n    showAlunoResponseList = false\r\n    showFormCadastro = false\r\n    showFormCadastroTab = false\r\n    showPerguntaRespFinanc = true\r\n    checkedRespFinanc = CheckedRespFinanc\r\n    checkedRespMenor = CheckedRespMenor\r\n    parcelas = Parcelas\r\n    diaVencimento = DiaVencimento\r\n    showFormRespFinanc = false\r\n    showTabMenorIdade = false\r\n    showMatricula = false\r\n    showSelectCursoSearch = false\r\n    hideCursoSearchAndMessage = true\r\n    showTableCursosAndamento = false\r\n    showFormFinal = false\r\n\r\n    mensagem = \"\";\r\n    showMensagem = false\r\n\r\n    idAlunoCadastradoRetorno: number = 0; \r\n\r\n    showEndercoField = false\r\n   \r\n    alunoCriadoId: number = null;\r\n    dataTrans: DataTrans = new DataTrans();\r\n    alunoSelecionadoDoCadastro: Aluno = new Aluno()\r\n    cienciaCurso = CienciaCurso\r\n    meioPagamento = MeioPagamento\r\n    dataHoje: Date;\r\n    parentesco = Parentesco\r\n    cursoPesquisa = Cursos\r\n   \r\n    haTurmas = false\r\n    dataTeste: Date = new Date();\r\n    indexTab: number = 0\r\n\r\n    baseUrl = environment.baseUrl;\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    public cepReturn2: CepReturn = new CepReturn();\r\n    public cepReturn3: CepReturn = new CepReturn();\r\n\r\n    cargos = Cargos;\r\n    respFinanceiro = RespostaResFinanceiro;\r\n    alunoResponse: Aluno[] = new Array<Aluno>();\r\n    showParcelas = true\r\n\r\n    previAtual: string\r\n    previTerminoAtual: string\r\n\r\n\r\n    cursos: Turma[] = new Array<Turma>()\r\n    \r\n    turmaAndamento: TurmaViewModel[] = new Array<TurmaViewModel>();\r\n    messageturmas: boolean = false\r\n   \r\n    selectedForm: FormGroup\r\n    unidades = Unidades;\r\n   \r\n    public cpfForm: FormGroup;\r\n    public colaboradorForm: FormGroup;\r\n    public responsavelFinancForm: FormGroup;\r\n    public responsavelMenorForm: FormGroup;\r\n    public matriculaTurmaForm: FormGroup;\r\n\r\n    constructor(\r\n       \r\n        @Inject('ValidateForms') private _validateFomService: IValidateForms,\r\n\r\n        private CreateMatriculaModal: MatDialog,\r\n        private ConfirmModal: MatDialog,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private http: HttpClient,\r\n        public dialogRef: MatDialogRef<CreateMatriculaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.selectedForm = _fb.group({\r\n            selecionar: new FormControl(0)\r\n        })\r\n\r\n        this.cpfForm = _fb.group({\r\n            cpf: ['', [Validators.required, Validators.minLength(11), Validators.maxLength(11)]]\r\n        })\r\n\r\n        this.colaboradorForm = _fb.group({\r\n            nome: ['', [Validators.required, Validators.minLength(2)]],\r\n            nomeSocial: [''],\r\n            cpf: ['', [Validators.required, Validators.minLength(11), Validators.maxLength(11)]],\r\n            rg: ['', [Validators.required]],\r\n            nascimento: ['', [Validators.required]],\r\n            naturalidade: ['', [Validators.required]],\r\n            naturalidadeUF: ['', [Validators.required]],\r\n            temRespFin: [false, [Validators.required]],\r\n            email: ['', [Validators.required, Validators.minLength(5), Validators.email]],\r\n            telReferencia: [null, [Validators.minLength(0)]],\r\n            nomeContatoReferencia: ['', [Validators.required, Validators.minLength(2)]],\r\n            telCelular: [null, [Validators.minLength(0)]],\r\n            telWhatsapp: [null, [Validators.minLength(10)]],\r\n            telResidencial: [null, [Validators.minLength(9)]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            cienciaCurso: [''],\r\n            unidadeCadastrada: [0],\r\n            observacoes: ['', [Validators.minLength(1), Validators.maxLength(300)]]\r\n        })\r\n\r\n        this.responsavelFinancForm = _fb.group({\r\n            nome: ['', [Validators.required, Validators.minLength(2)]],\r\n            cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n            rg: ['', [Validators.required]],\r\n            nascimento: ['', [Validators.required]],\r\n            parentesco: ['', [Validators.required]],\r\n            naturalidade: ['', [Validators.required]],\r\n            naturalidadeUF: ['', [Validators.required]],\r\n            email: ['', [Validators.required, Validators.minLength(5)]],\r\n            telCelular: [null, [Validators.minLength(0)]],\r\n            telWhatsapp: [null, [Validators.minLength(10)]],\r\n            telResidencial: [null, [Validators.minLength(9)]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            observacoes: ['', [Validators.minLength(1), Validators.maxLength(300)]]\r\n        })\r\n\r\n        this.responsavelMenorForm = _fb.group({\r\n            nome: ['', [Validators.required, Validators.minLength(2)]],\r\n            cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n            rg: ['', [Validators.required]],\r\n            nascimento: ['', [Validators.required]],\r\n            parentesco: ['', [Validators.required]],\r\n            naturalidade: ['', [Validators.required]],\r\n            naturalidadeUF: ['', [Validators.required]],\r\n            eRespFinanc: [true, [Validators.required]],\r\n            email: ['', [Validators.required, Validators.minLength(5)]],\r\n            telCelular: [null, [Validators.minLength(0)]],\r\n            telWhatsapp: [null, [Validators.minLength(10)]],\r\n            telResidencial: [null, [Validators.minLength(9)]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            observacoes: ['', [Validators.minLength(1), Validators.maxLength(300)]]\r\n        })\r\n\r\n        this.matriculaTurmaForm = _fb.group({\r\n            cienciaCurso: ['', [Validators.required]],\r\n            meioPagamento: [, [Validators.required]],\r\n            //aVista: [false, [Validators.required]],\r\n            primeiraParcPaga: [, [Validators.required]],\r\n            parcelas: ['', [Validators.required, Validators.min(1)]],\r\n            idAlunoIndicacao: [,[Validators.required]],\r\n            diaVencimento:[,Validators.required]\r\n        })\r\n\r\n\r\n    }\r\n\r\n    \r\n\r\n    markPrimeiraParc() {\r\n        let value: boolean = this.matriculaTurmaForm.get('primeiraParcPaga').value\r\n        this.matriculaTurmaForm.get('primeiraParcPaga').setValue(!value)\r\n        console.log(this.matriculaTurmaForm.get('primeiraParcPaga').value)\r\n        this.showParcelas = !this.matriculaTurmaForm.get('primeiraParcPaga').value\r\n    }\r\n\r\n    \r\n    getValue() {\r\n       \r\n        return new MyDate('', '', '')\r\n    }\r\n    ngOnDestroy() {\r\n        console.log('destroy')\r\n        this.showSerch = true\r\n        this.showAlunoResponseList = false\r\n        this.showFormCadastro = false\r\n        this.showFormCadastroTab = false\r\n        this.showPerguntaRespFinanc = true\r\n        this.checkedRespFinanc.sim = true\r\n        this.checkedRespFinanc.nao = false\r\n        this.checkedRespMenor.sim = true\r\n        this.checkedRespMenor.nao = false\r\n        this.showFormRespFinanc = false\r\n        this.showTabMenorIdade = false\r\n        this.showMatricula = false\r\n        this.showSelectCursoSearch = false\r\n        this.showTableCursosAndamento = false\r\n        this.showFormFinal = false\r\n    }\r\n\r\n    get shoNParcelar() {\r\n        var value = this.matriculaTurmaForm.get('meioPagamento').value\r\n      \r\n        \r\n        if (value == \"cartaoDébito\" || \r\n        value == \"pix\" || \r\n         value == \"dinheiro\" ||\r\n       \r\n        value == null) {\r\n            return false\r\n        }else{\r\n            return true\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    ngOnInit() {\r\n       \r\n        this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n    }\r\n\r\n\r\n    onInputChange(event) {\r\n        console.log(event)\r\n        let newVal = event.replace(/\\D/g, '');\r\n      \r\n        if (newVal.length === 0) {\r\n            newVal = '';\r\n        } else if (newVal.length <= 3) {\r\n            newVal = newVal.replace(/^(\\d{0,3})/, '$1');\r\n        } else if (newVal.length <= 6) {\r\n            newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})/, '$1.$2');\r\n        } else if (newVal.length <= 9) {\r\n            newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})/, '$1.$2.$3');\r\n        } else if (newVal.length <= 11) {\r\n            newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})(\\d{0,2})/, '$1.$2.$3-$4');\r\n        } else {\r\n            newVal = newVal.substring(0, 11);\r\n            newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})(\\d{0,2})/, '$1.$2.$3-$4');\r\n        }\r\n        return newVal;\r\n    }\r\n\r\n    atualCPF: string = \"\";\r\n    resposta: any\r\n    HasMessage: any\r\n    consulta(form: FormGroup) {\r\n        \r\n        console.log(this.cpfForm.value)\r\n        console.log(this.cpfForm.valid)\r\n        if (!this.cpfForm.valid) {\r\n            \r\n            return;\r\n        }\r\n        this.showMensagem = false\r\n\r\n        let cpf = this.cpfForm.get('cpf').value\r\n        console.log(cpf)\r\n        \r\n        this.http.get(`${this.baseUrl}/matricula/?query=${cpf}`)\r\n            \r\n            .subscribe(response => {\r\n                \r\n                this.resposta = response\r\n                \r\n                this.HasMessage = response['message']\r\n                \r\n\r\n            }, err => { console.log(err) },\r\n                () => {\r\n                    console.log(this.alunoResponse)\r\n\r\n                    if (this.HasMessage != \"\") {\r\n\r\n                        this.showMensagem = true\r\n                        this.mensagem = this.resposta['message']\r\n                        console.log(this.mensagem)\r\n                    } else {\r\n                       \r\n                        this.atualCPF = this.onInputChange(this.cpfForm.get('cpf').value);\r\n                        console.log(this.atualCPF)\r\n                        this.colaboradorForm.get('cpf').setValue(this.cpfForm.get('cpf').value)\r\n\r\n                        this.showSerch = false\r\n                        this.showFormCadastro = true\r\n                        this.showFormCadastroTab = true\r\n\r\n                       \r\n                    }\r\n\r\n                });\r\n    }\r\n\r\n\r\n\r\n    voltar() {\r\n        this.hideCursoSearchAndMessage = false\r\n        this.showSelectCursoSearch = false\r\n        this.showTableCursosAndamento = true\r\n        this.showFormFinal = false\r\n    }\r\n\r\n    selecionarAluno(aluno: Aluno) {\r\n        console.log(aluno)\r\n        this.showAlunoResponseList = false\r\n        this.showFormCadastro = true\r\n        this.showFormCadastroTab = true\r\n        this.showSerch = false\r\n    }\r\n\r\n    searchAluno(value) {\r\n\r\n        if (value == \"Indicação Aluno\") {\r\n            \r\n        }\r\n    }\r\n\r\n    onFocusOutDateEvent(event: any) {\r\n        console.log(event.target.value);\r\n        console.log(this.colaboradorForm.get('nascimento').value)\r\n        var dataForm: Date = new Date(this.colaboradorForm.get('nascimento').value)\r\n        \r\n        let timeDiff = Math.abs(Date.now() - dataForm.getTime());\r\n        let age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\r\n        console.log(age)\r\n        if (age < 18 && age != NaN) {\r\n            this.showTabMenorIdade = true\r\n            this.showPerguntaRespFinanc = false\r\n            this.showFormRespFinanc = false\r\n            this.colaboradorForm.get('temRespFin').setValue(true)\r\n        } else if (age > 18 && age != NaN) {\r\n            this.showTabMenorIdade = false\r\n            this.showPerguntaRespFinanc = true\r\n            if (this.checkedRespFinanc.sim == true) {\r\n                this.showFormRespFinanc = false\r\n            } else {\r\n                this.showFormRespFinanc = true\r\n            }\r\n        }\r\n    }\r\n    eHRespMenorEFinan(boleano: boolean) {\r\n        console.log(boleano)\r\n        if (boleano) {\r\n            this.showFormRespFinanc = !boleano\r\n            this.showPerguntaRespFinanc = false\r\n            \r\n            this.responsavelMenorForm.get('eRespFinanc').setValue(true)\r\n            this.colaboradorForm.get('temRespFin').setValue(false)\r\n        } else {\r\n            this.showFormRespFinanc = !boleano\r\n            this.showPerguntaRespFinanc = false\r\n            this.checkedRespFinanc.sim = false\r\n            this.checkedRespFinanc.nao = true\r\n            this.responsavelMenorForm.get('eRespFinanc').setValue(false)\r\n            this.colaboradorForm.get('temRespFin').setValue(true)\r\n        }\r\n    }\r\n\r\n    eHRespFinan(boleano: boolean) {\r\n      \r\n        if (boleano) {\r\n            this.showFormRespFinanc = !boleano\r\n            this.checkedRespFinanc.sim = true\r\n            this.checkedRespFinanc.nao = false\r\n            this.colaboradorForm.get('temRespFin').setValue(false)\r\n        } else {\r\n            this.showFormRespFinanc = !boleano\r\n            this.checkedRespFinanc.sim = false\r\n            this.checkedRespFinanc.nao = true\r\n            this.colaboradorForm.get('temRespFin').setValue(true)\r\n        }\r\n    }\r\n\r\n    turmasParaMatricular: TurmaViewModel[] = new Array<TurmaViewModel>()\r\n\r\n\r\n    consultarCursos(item: any) {\r\n        console.log(item)\r\n        console.log('consultarCursos')\r\n        if (item == \"\") {\r\n          \r\n            return;\r\n        }\r\n\r\n       \r\n        this.http.get(`${this.baseUrl}/turmas/pesquisav2/${item}`) \r\n            .subscribe(response => {\r\n\r\n                console.log(response)\r\n                this.turmasParaMatricular = Object.assign([], response)\r\n\r\n\r\n            }, err => {\r\n                console.log(err)\r\n            },\r\n                () => {\r\n\r\n                    this.showTableCursosAndamento = true\r\n\r\n                    console.log(this.turmasParaMatricular)                   \r\n\r\n                });\r\n\r\n    }\r\n\r\n    alterar(item: boolean) {\r\n        this.colaboradorForm.get('temRespFinanceiro').setValue(item)\r\n        console.log(this.colaboradorForm.get('temRespFinanceiro').value)\r\n    }\r\n\r\n\r\n    selectPayment(item: any) {\r\n\r\n    }\r\n    fechar() {\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n\r\n    turmaSelecionada: TurmaViewModel = new TurmaViewModel();\r\n    temDesconto: number;\r\n    horarioTurma: string = \"\"\r\n    selecionarTurma(turma: Turma) {\r\n        console.log(turma)\r\n        Object.assign(this.turmaSelecionada, turma)\r\n        console.log(this.turmaSelecionada)\r\n        this.horarioTurma = `${this.turmaSelecionada.initialHourOne} às ${this.turmaSelecionada.finalHourOne}`\r\n        this.hideCursoSearchAndMessage = false\r\n        this.showSelectCursoSearch = false\r\n        this.showTableCursosAndamento = false\r\n        this.showFormFinal = true\r\n        this.previAtual = `${new Date(this.turmaSelecionada.previsaoAtual).toLocaleDateString()}`\r\n        this.previTerminoAtual = `${new Date(this.turmaSelecionada.previsaoTerminoAtual).toLocaleDateString()}`\r\n    }\r\n\r\n\r\n\r\n    showRespFinanceiro = false\r\n    testeinvalid() {\r\n        this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n        \r\n    }\r\n\r\n    validadeEmailMsg = false\r\n    buscarEmail(event: any) {\r\n        if (this.colaboradorForm.get('email').valid) {\r\n            this.validadeEmailMsg = false\r\n            this.http.get(`${this.baseUrl}/adm/aluno/email/${event.target.value}`, {\r\n                headers: new HttpHeaders({\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bear \"\r\n                })\r\n            }).subscribe(response => {\r\n\r\n            }, (err) => {\r\n                if (err['status'] == 409) {\r\n                    this.validadeEmailMsg = true\r\n                    this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n                }\r\n            },\r\n                () => {\r\n                    this.colaboradorForm.get('email').setErrors(null);\r\n                });\r\n\r\n            \r\n\r\n        }\r\n    }\r\n\r\n    onSubmit(form: FormGroup) {\r\n\r\n\r\n       \r\n        console.log(this.colaboradorForm.value)\r\n        console.log(this.colaboradorForm.valid)\r\n        console.log(this.responsavelFinancForm.value)\r\n        console.log(this.responsavelFinancForm.valid)\r\n        console.log(this.responsavelMenorForm.value)\r\n        console.log(this.responsavelMenorForm.valid)\r\n\r\n      \r\n        var validar = this._validateFomService.ValidarForms(\r\n            form,\r\n            this.responsavelFinancForm,\r\n            this.responsavelMenorForm, form.get('nascimento').value)\r\n\r\n        console.log(validar['data'])\r\n        console.log(validar['isValid'])\r\n        if (validar['isValid']) {\r\n            console.log('form valid')\r\n\r\n            this.http.post(`${this.baseUrl}/matricula`, validar['data'], {\r\n                headers: new HttpHeaders({\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bear \"\r\n                })\r\n            }).subscribe(response => {\r\n\r\n                console.log(response)\r\n                this.alunoCriadoId = response['alunoCriado']\r\n            }, (err) => {\r\n                console.log(err)\r\n            },\r\n                () => {\r\n                    this.confirmModal()\r\n                });\r\n        }\r\n    }\r\n\r\n    respAlunoDto\r\n    respMenorDto\r\n\r\n\r\n\r\n    \r\n    cursosDisponiveis: TurmaViewModel[] = new Array<TurmaViewModel>();\r\n    cursosType: any[] = new Array<any>()\r\n    async getCursos(actualPage: number, pageSize: number) {\r\n\r\n        var itemsPerPage = 5;\r\n        var currentPage = 1;\r\n\r\n       \r\n        await this.http.get(`${this.baseUrl}/turmas/cursosUnidadev2`)\r\n        .subscribe(response => {\r\n\r\n\r\n            console.log(response)\r\n          \r\n            Object.assign(this.cursosType, response) \r\n            console.log(this.cursosDisponiveis)\r\n           \r\n        }, err => { console.log(err) },\r\n            () => {\r\n\r\n                this.showMatricula = true\r\n                this.showFormCadastroTab = false\r\n                this.showFormRespFinanc = false\r\n                this.showTabMenorIdade = false\r\n                //this.showSelectCursoSearch = true\r\n\r\n                this.indexTab = 3;\r\n                console.log('metodo getCursos')\r\n                if (this.cursosType.length == 0) {\r\n                    this.showSelectCursoSearch = false\r\n                } else if (this.cursosType.length > 0) {\r\n                    this.showSelectCursoSearch = true\r\n                }\r\n\r\n                if (this.cursosType.length == 0) {\r\n                    this.showSelectCursoSearch = false\r\n                } else if (this.cursosType.length > 0) {\r\n                    this.showSelectCursoSearch = true\r\n                }\r\n\r\n               \r\n\r\n            });\r\n\r\n    }\r\n\r\n    consultaCEPMen(CEP: string) {\r\n        console.log(CEP);\r\n\r\n        this.http.get(`https://viacep.com.br/ws/${CEP}/json/`, {\r\n\r\n        }\r\n        )\r\n            .subscribe(response => {\r\n\r\n                console.log(response)\r\n                this.cepReturn3 = new CepReturn(\r\n                    response[\"logradouro\"],\r\n                    response[\"bairro\"],\r\n                    response[\"localidade\"],\r\n                    response[\"uf\"]);\r\n                console.log(this.cepReturn)\r\n                this.responsavelMenorForm.get('logradouro').setValue(response[\"logradouro\"]);\r\n                this.responsavelMenorForm.get('bairro').setValue(response[\"bairro\"]);\r\n                this.responsavelMenorForm.get('cidade').setValue(response[\"localidade\"]);\r\n                this.responsavelMenorForm.get('uf').setValue(response[\"uf\"]);\r\n                //this.bairro = this.cepReturn.bairro\r\n                // const token = (<any>response).accessToken;\r\n                // console.log(response)\r\n                // localStorage.setItem(\"jwt\", token);\r\n                // this.invalidLogin = false;\r\n                // this.router.navigate([\"/main\"]);\r\n            }, err => {\r\n                console.log(err)\r\n                this.showEndercoField = true\r\n            },\r\n                () => {\r\n                    console.log('finaly')\r\n                    this.showEndercoField = true\r\n                });\r\n    }\r\n\r\n    consultaCEPFin(CEP: string) {\r\n        console.log(CEP);\r\n\r\n        this.http.get(`https://viacep.com.br/ws/${CEP}/json/`, {\r\n\r\n        }\r\n        )\r\n            .subscribe(response => {\r\n\r\n                console.log(response)\r\n                this.cepReturn2 = new CepReturn(\r\n                    response[\"logradouro\"],\r\n                    response[\"bairro\"],\r\n                    response[\"localidade\"],\r\n                    response[\"uf\"]);\r\n                console.log(this.cepReturn)\r\n                this.responsavelFinancForm.get('logradouro').setValue(response[\"logradouro\"]);\r\n                this.responsavelFinancForm.get('bairro').setValue(response[\"bairro\"]);\r\n                this.responsavelFinancForm.get('cidade').setValue(response[\"localidade\"]);\r\n                this.responsavelFinancForm.get('uf').setValue(response[\"uf\"]);\r\n                //this.bairro = this.cepReturn.bairro\r\n                // const token = (<any>response).accessToken;\r\n                // console.log(response)\r\n                // localStorage.setItem(\"jwt\", token);\r\n                // this.invalidLogin = false;\r\n                // this.router.navigate([\"/main\"]);\r\n            }, err => {\r\n                console.log(err)\r\n                this.showEndercoField = true\r\n            },\r\n                () => {\r\n                    console.log('finaly')\r\n                    this.showEndercoField = true\r\n                });\r\n    }\r\n\r\n    consultaCEP(CEP: string) {\r\n        console.log(CEP);\r\n\r\n        this.http.get(`https://viacep.com.br/ws/${CEP}/json/`, {\r\n\r\n        }\r\n        )\r\n            .subscribe(response => {\r\n\r\n                console.log(response)\r\n                this.cepReturn = new CepReturn(\r\n                    response[\"logradouro\"],\r\n                    response[\"bairro\"],\r\n                    response[\"localidade\"],\r\n                    response[\"uf\"]);\r\n                console.log(this.cepReturn)\r\n                this.colaboradorForm.get('logradouro').setValue(response[\"logradouro\"]);\r\n                this.colaboradorForm.get('bairro').setValue(response[\"bairro\"]);\r\n                this.colaboradorForm.get('cidade').setValue(response[\"localidade\"]);\r\n                this.colaboradorForm.get('uf').setValue(response[\"uf\"]);\r\n                //this.bairro = this.cepReturn.bairro\r\n                // const token = (<any>response).accessToken;\r\n                // console.log(response)\r\n                // localStorage.setItem(\"jwt\", token);\r\n                // this.invalidLogin = false;\r\n                // this.router.navigate([\"/main\"]);\r\n            }, err => {\r\n                console.log(err)\r\n                this.showEndercoField = true\r\n            },\r\n                () => {\r\n                    console.log('finaly')\r\n                    this.showEndercoField = true\r\n                });\r\n    }\r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n    confirmModal(): void {\r\n        const dialogRef = this.ConfirmModal\r\n            .open(ConfirmModalComponent, {\r\n                height: 'auto',\r\n                width: '400px',\r\n\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n        //     console.log('The dialog was closed');\r\n        //     // this.animal = result;\r\n        // });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            console.log(data)\r\n            if (data.clicked === \"Sim\") {\r\n                this.getCursos(0, 0);\r\n                console.log('clicou no sim')\r\n                //this.indexTab = 2\r\n\r\n            } else if (data.clicked === \"Cancel\") {\r\n                console.log('clicou no cancel')\r\n                this.dialogRef.close({ clicked: \"cancel\" });\r\n            }\r\n        });\r\n    }\r\n\r\n    confirmMatriculaModal(): void {\r\n        const dialogRef = this.ConfirmModal\r\n            .open(ConfirmMatriculaComponent, {\r\n                height: 'auto',\r\n                width: '400px',\r\n\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n        //     console.log('The dialog was closed');\r\n        //     // this.animal = result;\r\n        // });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            console.log(data)\r\n            if (data.clicked === \"Sim\") {\r\n                //this.getCursos(0, 0);\r\n                console.log('clicou no sim')\r\n                this.downloadContrato()\r\n                //this.indexTab = 2\r\n\r\n            } else if (data.clicked === \"Cancel\") {\r\n                console.log('clicou no cancel')\r\n                this.dialogRef.close({ clicked: \"cancel\" });\r\n            }\r\n        });\r\n    }\r\n\r\n    downloadContrato() {\r\n        var file = \"Contrato.pdf\";// this.createFileName(\"EXCEL\");\r\n        // this.showSpinner = true;\r\n        // this.testehabilitar = false\r\n        console.log('download contrato')\r\n        this.download().subscribe(data => {\r\n            //console.log(data)\r\n            switch (data.type) {\r\n                case HttpEventType.Response:\r\n                    // this.showSpinner = false;\r\n                    //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n                    const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n                    const a = document.createElement('a');\r\n                    a.setAttribute('style', 'display:none;');\r\n                    document.body.appendChild(a);\r\n                    a.download = file;\r\n                    a.href = URL.createObjectURL(downloadedFile);\r\n                    a.target = '_blank';\r\n                    a.click();\r\n                    document.body.removeChild(a);\r\n                    break;\r\n            }\r\n        },\r\n            (err) => {\r\n                //this.showSpinner = false;\r\n                //this.testehabilitar = true;\r\n            },\r\n            () => {\r\n\r\n                this.dialogRef.close({ clicked: \"OK\" });\r\n                //this.showSpinner = false;\r\n                // this.testehabilitar = true;\r\n            }\r\n        );\r\n    }\r\n\r\n    download(): Observable<HttpEvent<Blob>> {\r\n        return this.http.request(new HttpRequest(\r\n            'GET', `${this.baseUrl}/document/pdf`, null, {\r\n            reportProgress: true,\r\n            responseType: 'blob'\r\n        }));\r\n    }\r\n\r\n    change() {\r\n        console.log(this.selectedForm['selecionar'])\r\n        this.indexTab = 3;\r\n        //this.selectedForm.get['selecionar'].setValue(numeorindex)\r\n    }\r\n\r\n    tabs = ['Cadastro', 'Responsável Financeiro', 'Responsável (menor)'\r\n        , \"Matrícula\"];\r\n    // selected = new FormControl(0);\r\n\r\n    addTab(selectAfterAdding: boolean) {\r\n        this.tabs.push('New');\r\n\r\n        if (selectAfterAdding) {\r\n            //this.selected.setValue(this.tabs.length - 1);\r\n        }\r\n    }\r\n\r\n    ValidateFormasPagamento(){\r\n        if(this.matriculaTurmaForm.get('meioPagamento').valid){\r\n\r\n            var meioPag = this.matriculaTurmaForm.get('meioPagamento').value\r\n            if(meioPag == \"credito\" || meioPag == \"boleto\"){\r\n\r\n                if(this.matriculaTurmaForm.get('parcelas').valid && \r\n                this.matriculaTurmaForm.get('diaVencimento').valid){\r\n                    \r\n                    return true\r\n\r\n                }else{\r\n                    return false\r\n                }\r\n            }else{\r\n                return true\r\n            }\r\n\r\n        }else{\r\n            return false\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    submitMatricula(form: FormGroup) {\r\n        console.log(form.value)\r\n        console.log('sen matrícula')\r\n\r\n        /*\r\n        cienciaCurso\r\nmeioPagamento\r\nprimeiraParcPaga\r\nparcelas\r\nidAlunoIndicacao\r\n        */\r\n       console.log(this.matriculaTurmaForm.get('primeiraParcPaga').valid)\r\n\r\n        if(!this.ValidateFormasPagamento()){\r\n            return\r\n        }   \r\n\r\n        this.matriculaTurmaForm.get('primeiraParcPaga').valid\r\n        console.log(this.matriculaTurmaForm.get('cienciaCurso').valid)\r\n\r\n/*\r\n        if(this.matriculaTurmaForm.get('cienciaCurso').value == \"Indicação Aluno\"){\r\n\r\n            if(this.matriculaTurmaForm.get('idAlunoIndicacao').valid){\r\n                return true\r\n            }else{\r\n                return false\r\n            }\r\n\r\n        }else{\r\n            return this.matriculaTurmaForm.get('cienciaCurso').valid\r\n        }\r\n        */\r\n\r\n        // TEMP\r\n        if(!this.matriculaTurmaForm.get('cienciaCurso').valid)return \r\n        // if indicacao aluno\r\n        // VALIDAR\r\n        //var idMatriculaAlunoInd = \r\n        // validate primeira parcela ja paga ou nao\r\n\r\n        //validate indicaçao aluno\r\n\r\n\r\n\r\n        //var ciencia = this.matriculaTurmaForm.get('cienciaCurso').value\r\n        // this.colaboradorForm.get('cienciaCurso').setValue(ciencia)\r\n        //console.log(form['cienciaCurso'].value)\r\n        // id aluno\r\n        // id turma\r\n        // turma/{idAluno}/{idTurma}\r\n\r\n\r\n        //if (form.valid) {\r\n\r\n            var submitForm = new submitMatriculaForm()\r\n\r\n            // TODO CONTRATOID\r\n            submitForm.idAluno = this.alunoCriadoId\r\n            submitForm.idTurma = this.turmaSelecionada.id\r\n            submitForm.ciencia = this.matriculaTurmaForm.get('cienciaCurso').value\r\n            submitForm.meioPagamento = this.matriculaTurmaForm.get('meioPagamento').value\r\n            submitForm.parcelas = this.matriculaTurmaForm.get('parcelas').value\r\n            submitForm.primeiraParceJaPaga = this.matriculaTurmaForm.get('primeiraParcPaga').value\r\n            submitForm.diaVencimento = this.matriculaTurmaForm.get('diaVencimento').value\r\n            console.log(submitForm)\r\n            console.log(this.matriculaTurmaForm.get('diaVencimento').value)\r\n\r\n            this.http.post(`${this.baseUrl}/turmas/turma`, submitForm, {\r\n            }).subscribe(\r\n                () => { },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n\r\n                    this.confirmMatriculaModal()\r\n\r\n                }\r\n            )\r\n\r\n        }\r\n   // }\r\n\r\n}\r\n\r\nfunction ConfirmComponent(ConfirmComponent: any, arg1: { height: string; width: string; data: { Hello: string; }; hasBackdrop: true; disableClose: true; }) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n\r\nexport class submitMatriculaForm {\r\n    constructor(\r\n        public idAluno?: number,\r\n        public idTurma?: number,\r\n        public ciencia?: string,\r\n        public meioPagamento?: string,\r\n        public parcelas?: string,\r\n        public diaVencimento?: string,\r\n        public percentualDesconto?: number,\r\n        public primeiraParceJaPaga?: Boolean,\r\n        //public aVista?: Boolean\r\n    ) { }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[formControlName][appPhoneMask]',\r\n})\r\nexport class PhoneMaskDirective {\r\n\r\n  constructor(public ngControl: NgControl) { }\r\n\r\n  @HostListener('ngModelChange', ['$event'])\r\n  onModelChange(event) {\r\n    this.onInputChange(event, false);\r\n  }\r\n\r\n  @HostListener('keydown.backspace', ['$event'])\r\n  keydownBackspace(event) {\r\n    this.onInputChange(event.target.value, true);\r\n  }\r\n  \r\n\r\n  onInputChange(event, backspace) {\r\n    let newVal = event.replace(/\\D/g, '');\r\n    if (backspace && newVal.length <= 6) {\r\n      newVal = newVal.substring(0, newVal.length - 1);\r\n    }\r\n    if (newVal.length === 0) {\r\n      newVal = '';\r\n    } else if (newVal.length <= 2) {\r\n      newVal = newVal.replace(/^(\\d{0,2})/, '($1)');\r\n    } else if (newVal.length <= 7) {\r\n      newVal = newVal.replace(/^(\\d{0,2})(\\d{0,5})/, '($1) $2');\r\n    } else if (newVal.length <= 11) {\r\n      newVal = newVal.replace(/^(\\d{0,2})(\\d{0,5})(\\d{0,4})/, '($1) $2-$3');\r\n    } else {\r\n      newVal = newVal.substring(0, 11);\r\n      newVal = newVal.replace(/^(\\d{0,2})(\\d{0,5})(\\d{0,4})/, '($1) $2-$3');\r\n    }\r\n    this.ngControl.valueAccessor.writeValue(newVal);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { NavBarComponent } from './nav-bar/navbar.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MyTelInput } from './customMasks/maskTelBr/form-field-custom-control-example';\r\nimport { MyDateInput } from './customMasks/maskDate/form-field-customDate-control';\r\nimport { MyTimeInput } from './customMasks/maskTimeStan/form-field-customTime-control';\r\nimport { MyCurrencyInput } from './customMasks/maskCurrency/form-fiels-customCurreny-control';\r\nimport { PhoneMaskDirective } from './directives/phone-mask.directive';\r\nimport { CPFMaskDirective } from './directives/cpf-mask.directive';\r\nimport { AuthInterceptor } from '../_Auth/auth.interceptor';\r\nimport { SanitizeHtmlPipe } from './pipes/sanitizePipe.component';\r\nimport { CNPJPipe } from './pipes/cnpjPipe';\r\nimport { CPFPipe } from './pipes/cpfPipe';\r\nimport { SpinnerComponent } from './components/spinner.component';\r\nimport { SafePipe } from './pipes/safe.pipe';\r\nimport { ConfirmModalComponent } from './components/ConfirmModal/confirm-modal.component';\r\nimport { HelpersService } from './components/helpers/helpers.component';\r\nimport { AlertModule } from 'ngx-bootstrap/alert';\r\nimport { MyCurrencyPipe } from './pipes/mycurrencypipe';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SelectUnidadeComponent } from '../_Auth/user/login/selecionarUnidade/selectunidade.component';\r\nimport { IdadePipe } from './pipes/idadePipe';\r\nimport { DatePastDirective } from './directives/date-past.directive';\r\nimport { ConfirmAcaoModalComponent } from './components/ConfirmarAcao/confirm-acao.component';\r\nimport { OnlynumberDirective } from './directives/onlynumbers.directive';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    RouterModule,\r\n    BrowserModule,\r\n    AlertModule.forRoot()\r\n  ],\r\n\r\n  declarations: [\r\n    NavBarComponent\r\n    , FooterComponent\r\n    , HomeComponent,\r\n    MyTelInput,\r\n    MyDateInput,\r\n    MyTimeInput,\r\n    MyCurrencyInput,\r\n    PhoneMaskDirective,\r\n    CPFMaskDirective,\r\n    SanitizeHtmlPipe,\r\n    CNPJPipe,\r\n    CPFPipe,\r\n    OnlynumberDirective,\r\n    IdadePipe,\r\n    MyCurrencyPipe,\r\n    SpinnerComponent,\r\n    SafePipe,\r\n    ConfirmModalComponent,\r\n    ConfirmAcaoModalComponent,\r\n    DatePastDirective\r\n    //SelectUnidadeComponent\r\n  ],\r\n  providers: [\r\n    HelpersService,   \r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    RouterModule,\r\n    CommonModule,\r\n    MyTelInput,\r\n    MyDateInput,\r\n    MyTimeInput,\r\n    MyCurrencyInput,\r\n    PhoneMaskDirective,\r\n    CPFMaskDirective,\r\n    SanitizeHtmlPipe,\r\n    CNPJPipe,\r\n    CPFPipe,\r\n    OnlynumberDirective,\r\n    IdadePipe,\r\n    MyCurrencyPipe,\r\n    SpinnerComponent,\r\n    SafePipe,\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    FooterComponent,\r\n    HomeComponent,\r\n    NavBarComponent,\r\n    DatePastDirective\r\n  ],\r\n  entryComponents: [\r\n    ConfirmModalComponent,\r\n    ConfirmAcaoModalComponent\r\n    //SelectUnidadeComponent\r\n  ]\r\n\r\n})\r\n\r\nexport class SharedModule { }","import { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from '@angular/common/http';\r\nimport { Component, EventEmitter, Injectable, OnInit, Output } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { TokenInfos } from '../_shared/models/token.model';\r\nimport { ExportLeadComponent } from './ExportarLead/exportar.component';\r\n\r\n\r\ndeclare interface RouteInfo {\r\n  path: string;\r\n  title: string;\r\n  class: string;\r\n  typeIcon: string;\r\n}\r\n\r\nexport const ROUTES: RouteInfo[] = [\r\n  { path: '/comercial/leads', title: 'Lead', class: '', typeIcon: 'query_stats' },\r\n // { path: '/comercial/addlead', title: 'Exportar Lead', class: '', typeIcon: 'table_chart' }\r\n  // { path: '/adm/cursos', title:'cursos', class:'', typeIcon: 'house'},\r\n  // { path: '/adm/colaboradores', title: 'Colaboradores', class: '', typeIcon: 'engineering' },\r\n  // { path: '/adm/produtos', title: 'Produtos', class: '', typeIcon: 'fact_check' },\r\n]\r\n\r\n@Component({\r\n  selector: 'comericial-app',\r\n  templateUrl: './comercial.component.html',\r\n  styleUrls: ['./comercial.component.scss']\r\n})\r\nexport class ComercialComponent implements OnInit {\r\n  menu: any;\r\n  public progress: number;\r\n  public message: string;\r\n  totalLeadsHoje = 0;\r\n  totalLeads = 0;\r\n  private jwtHelper = new JwtHelperService();\r\n  public tokenInfo: TokenInfos = new TokenInfos();\r\n  baseUrl = environment.baseUrl;\r\n\r\n  //@Output() public onUploadFinished = new EventEmitter();\r\n\r\n  constructor(\r\n    private fileService: FileService,\r\n    // private jwtHelper: JwtHelperService, \r\n    private exportLeadModal: MatDialog,\r\n    private router: Router,\r\n    private _http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    // this.isUserAuthenticated();\r\n    const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        \r\n    this.menu = ROUTES.filter(menu => menu);\r\n    // this.getLeads();\r\n  }\r\n\r\n  getLeads() {\r\n    const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        console.log(this.tokenInfo)\r\n\r\n    this._http.get(`${this.baseUrl}/comercial/leads`)\r\n      .subscribe(resp => {\r\n        this.totalLeadsHoje = resp['totalLeadsHoje']\r\n        this.totalLeads = resp['totalLeads']\r\n      },\r\n        (error) => {\r\n          console.log(error)\r\n        },\r\n        () => { })\r\n  }\r\n\r\n  openExportModal(): void {\r\n    const dialogRef = this.exportLeadModal\r\n      .open(ExportLeadComponent, {\r\n        height: 'auto',\r\n        width: 'auto',\r\n\r\n        data: { colaborador: 'hello' },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n      });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n    });\r\n  }\r\n\r\n  // isUserAuthenticated() {\r\n  //     const token: string = localStorage.getItem(\"jwt\");\r\n  //     if (token && !this.jwtHelper.isTokenExpired(token)) {\r\n  //         this.router.navigate([\"/customers\"]);\r\n  //         return true;\r\n  //     }\r\n  //     else {\r\n  //         return false;\r\n  //     }\r\n  // }\r\n  // public logOut = () => {\r\n  //     localStorage.removeItem(\"jwt\");\r\n  // }\r\n\r\n  invalidLogin: boolean;\r\n\r\n  //constructor(private router: Router, private http: HttpClient) { }\r\n\r\n  // login(form: NgForm) {\r\n  //     const credentials = JSON.stringify(form.value);\r\n  //     console.log(credentials)\r\n  //     this.http.post(\"https://localhost:44370/api/identity/login\", credentials, {\r\n  //         headers: new HttpHeaders({\r\n  //             \"Content-Type\": \"application/json\"\r\n  //         })\r\n  //     }).subscribe(response => {\r\n  //         const token = (<any>response).accessToken;\r\n  //         console.log(response)\r\n  //         localStorage.setItem(\"jwt\", token);\r\n  //         this.invalidLogin = false;\r\n  //         this.router.navigate([\"/\"]);\r\n  //     }, err => {\r\n  //         this.invalidLogin = true;\r\n  //     });\r\n  // }\r\n\r\n  logOut() {\r\n    localStorage.removeItem(\"jwt\");\r\n    this.router.navigate([\"/login\"]);\r\n  }\r\n\r\n  // public uploadFile = (files) => {\r\n  //     if (files.length === 0) {\r\n  //       return;\r\n  //     }\r\n\r\n  //     let fileToUpload = <File>files[0];\r\n  //     const formData = new FormData();\r\n  //     formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n  //     this.fileService.upload(formData).subscribe((event) => {\r\n  //       if (event.type === HttpEventType.UploadProgress)\r\n  //         this.progress = Math.round((100 * event.loaded) / event.total);\r\n  //       else if (event.type === HttpEventType.Response) {\r\n  //         this.message = 'Upload success.';\r\n  //         this.onUploadFinished.emit(event.body);\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  decodedToken: any;\r\n\r\n\r\n\r\n\r\n  refresh(): void {\r\n    window.location.reload();\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FileService {\r\n  private url = 'https://localhost:5001/api';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public upload(formData: FormData) {\r\n    return this.http.post(`${this.url}/upload`, formData, {\r\n      reportProgress: true,\r\n      observe: 'events',\r\n    });\r\n  }\r\n\r\n  public download(fileUrl: string) {\r\n    return this.http.get(`${this.url}/download?fileUrl=${fileUrl}`, {\r\n      reportProgress: true,\r\n      observe: 'events',\r\n      responseType: 'blob',\r\n    });\r\n  }\r\n\r\n  public getPhotos() {\r\n    return this.http.get(`${this.url}/getPhotos`);\r\n  }\r\n}\r\n","<ng-container>\r\n\r\n    <mat-sidenav-container class=\"example-container\" style=\"\r\n    background-color: rgba(250, 245, 245, 0); \">\r\n        <mat-sidenav style=\"\"#sidenav mode=\"side\" opened class=\"example-sidenav mat-elevation-z8\">\r\n            <div class=\"d-flex flex-column text-white \" style=\"position: absolute;\r\n            width: auto;\r\n            top: 0px;\r\n            bottom: 0px;\r\n            left: 0;\r\n            background-color: rgb(109, 218, 109);\r\n            right: 0;\">\r\n                <a class=\"d-flex align-items-center  mb-md-0 me-md-auto text-white text-decoration-none\">\r\n                    <span style=\"width: 190px;\r\n                    text-align: center;margin-top: 15px;font-size: 1em;\" >\r\n                    COMERCIAL<br>Unidade {{tokenInfo.Unidade}}\r\n                </span>\r\n                </a>\r\n                <hr>\r\n                <ul class=\"nav nav-pills flex-column mb-auto\">\r\n\r\n                    <li *ngFor=\"let item of menu\" routerLinkActive=\"active\" class=\"nav-item {{item.class}}\"\r\n                        style=\"overflow: auto;\">\r\n\r\n                        <a [routerLink]=\"[item.path]\" class=\"nav-link text-white\">\r\n                            <mat-icon style=\"top: -3px;\r\n                                        position:relative;\r\n                                        overflow: auto;\r\n                                        color:rgb(245, 243, 243); \r\n                                        vertical-align: middle;\r\n                                        \">\r\n                                        {{item.typeIcon}}\r\n                            </mat-icon>\r\n                                {{item.title}}\r\n                        </a>\r\n                    </li>\r\n                    \r\n\r\n\r\n                    <!-- <li class=\"nav-item\">\r\n\r\n                        <a routerLink=\"/adm/usuarios\" class=\"nav-link active\">\r\n                            \r\n                            <mat-icon style=\"top: -3px;\r\n                                        position:relative; \r\n                                        color:rgb(245, 243, 243); \r\n                                        vertical-align: middle;\r\n                                        margin-left: 5px;\">\r\n                                        manage_accounts\r\n                            </mat-icon>\r\n                            Usuários\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a routerLink=\"/adm/unidades\" class=\"nav-link text-white\">\r\n                            \r\n                            Unidades\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a routerLink=\"/adm/colaboradores\" class=\"nav-link text-white\">\r\n                            <svg class=\"bi me-2\" width=\"16\" height=\"16\">\r\n                                <use xlink:href=\"#people-circle\"></use>\r\n                            </svg>\r\n                            Colaboradores\r\n                        </a>\r\n                    </li>\r\n                    <li>\r\n                        <a routerLink=\"/adm/produtos\" class=\"nav-link text-white\">\r\n                            <svg class=\"bi me-2\" width=\"16\" height=\"16\">\r\n                                <use xlink:href=\"#people-circle\"></use>\r\n                            </svg>\r\n                            Produtos\r\n                        </a>\r\n                    </li> -->\r\n                </ul>\r\n                <!-- <hr>\r\n                <div class=\"dropdown\">\r\n                    <a href=\"#\" class=\"d-flex align-items-center text-white text-decoration-none dropdown-toggle\"\r\n                        id=\"dropdownUser1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <img src=\"https://github.com/mdo.png\" alt=\"mdo\" width=\"32\" height=\"32\"\r\n                            class=\"rounded-circle me-2\">\r\n                        <strong>conta</strong>\r\n                    </a>\r\n                    <ul id=\"menu\" class=\"dropdown-menu dropdown-menu text-small shadow\" aria-labelledby=\"dropdownUser1\"\r\n                        style=\"background-color: rgb(73, 168, 73);\">\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">New project...</a></li>\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">Settings</a></li>\r\n                        <li><a style=\"color: white;\" class=\"dropdown-item\">Profile</a></li>\r\n                        <li>\r\n                            <hr style=\"color: white;\" class=\"dropdown-divider\">\r\n                        </li>\r\n                        <li><a type=\"button\"\r\n                            (click)=\"logOut()\"\r\n                            style=\"color: white;\" class=\"dropdown-item\">Sign out</a></li>\r\n                    </ul>\r\n                </div> -->\r\n            </div>\r\n            <!-- <div class=\"sidenav\">\r\n\r\n              \r\n                <a routerLink=\"/adm1/child1\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">manage_accounts</mat-icon>\r\n                    Usuários\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/unidades\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">apartment</mat-icon>\r\n                    Unidades\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/professores\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">person</mat-icon>\r\n                    professores\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/produtos\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">production_quantity_limits</mat-icon>\r\n                    produtos\r\n                </a>\r\n\r\n                <a routerLink=\"/adm1/cursos\" style=\"vertical-align: middle;margin-left:5px;\">\r\n                    <mat-icon style=\"top: -3px;\r\n                    position:relative; \r\n                    color:rgb(7, 7, 7); vertical-align: middle;margin-left: 5px;\">assignment</mat-icon>\r\n                    cursos\r\n                </a>\r\n\r\n            </div> -->\r\n\r\n        </mat-sidenav>\r\n        <router-outlet></router-outlet>\r\n\r\n    </mat-sidenav-container>\r\n\r\n\r\n</ng-container>\r\n\r\n<!-- \r\n\r\n<div class=\"row mainpage\">\r\n    <div class=\" sidenavBar mat-elevation-z8\"\r\n    style=\"border-radius: 10.5px;\r\n    box-shadow: 0 0 8px 5px rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\">\r\n        <div class=\"sidenav\">\r\n            <a routerLink=\"/adm1/child1\" >Usuários</a>\r\n            <a routerLink=\"/adm1/unidades\">Unidades</a>\r\n            <a routerLink=\"/adm1/professores\">professores</a>\r\n            <a routerLink=\"/adm1/produtos\">produtos</a>\r\n            <a routerLink=\"/adm1/cursos\">cursos</a>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\" mainBar\" >\r\n        \r\n        \r\n<router-outlet></router-outlet>\r\n   \r\n\r\n\r\n</div> -->\r\n<!-- <form *ngIf=\"!isUserAuthenticated()\" class=\"form-signin\" #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\r\n    <div class=\"container-fluid\">\r\n        <h2 class=\"form-signin-heading\">Login</h2>\r\n        <div *ngIf=\"invalidLogin\" class=\"alert alert-danger\">Invalid username or password.</div>\r\n        <br />\r\n        <label for=\"email\" class=\"sr-only\">Email address</label>\r\n        <input type=\"email\" id=\"username\" name=\"email\" ngModel class=\"form-control\" placeholder=\"User Name\" required\r\n            autofocus>\r\n        <br />\r\n        <label for=\"senha\" class=\"sr-only\">Password</label>\r\n        <input type=\"password\" id=\"password\" name=\"senha\" ngModel class=\"form-control\" placeholder=\"Password\"\r\n            required>\r\n        <br />\r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n    </div>\r\n</form> -->\r\n\r\n\r\n\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { IValidateForms } from \"src/app/_shared/models/aluno.model\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\n@Component({\r\n    selector: 'createnovamatriculamodal',\r\n    templateUrl: './createnovamatricula.component.html',\r\n    styleUrls: ['./createnovamatricula.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class CreateNovaMatriculaComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    public searchCpfProgressBar = 'hidden'\r\n    public hintCpfInvalid = false\r\n    public hintRgInvalid = false\r\n    public hintEmailInvalid = false\r\n\r\n    public alunoForm: FormGroup;\r\n    public pesquisaForm: FormGroup;\r\n    public alunoCPF: any;\r\n    constructor(\r\n        @Inject('ValidateForms') private _validateFomService: IValidateForms,\r\n        private _helper: HelpersService,\r\n        private _fb: FormBuilder,\r\n        private http: HttpClient,\r\n        public dialogRef: MatDialogRef<CreateNovaMatriculaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.pesquisaForm = _fb.group({\r\n            cpf: ['', [Validators.required, Validators.minLength(11), Validators.maxLength(11)]],\r\n        })\r\n\r\n        this.alunoForm = _fb.group({\r\n            nome: ['', [Validators.required, Validators.minLength(2)]],\r\n            nomeSocial: [''],\r\n            cpf: ['', [Validators.required, Validators.minLength(11), Validators.maxLength(11)]],\r\n            rg: ['', [Validators.required]],\r\n            nomePai: [''],\r\n            nomeMae: [''],\r\n            nascimento: ['', [Validators.required]],\r\n            naturalidade: ['', [Validators.required]],\r\n            naturalidadeUF: ['', [Validators.required]],\r\n            email: ['', [Validators.required, Validators.minLength(5), Validators.email]],\r\n            telReferencia: [null, [Validators.required, Validators.minLength(10)]],\r\n            nomeContatoReferencia: ['', [Validators.required, Validators.minLength(2)]],\r\n            telCelular: [''],\r\n            telWhatsapp: [''],\r\n            telResidencial: [''],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            numero: ['', [Validators.required, Validators.minLength(1)]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            ativo: [true]\r\n        })\r\n\r\n        this.alunoForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n                //console.log(this.alunoForm.get('telWhatsapp').value.length)\r\n                // Nenhum preenchido\r\n                if (this.alunoForm.get('telCelular').value == '' &&\r\n                    this.alunoForm.get('telWhatsapp').value == '' &&\r\n                    this.alunoForm.get('telResidencial').value == '') {\r\n                    //console.log('all null')\r\n                    //console.log(this.alunoForm)\r\n                    this.alunoForm.get('telCelular').setValidators([Validators.required, Validators.minLength(11)])\r\n                    this.alunoForm.get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n                    this.alunoForm.get('telWhatsapp').setValidators([Validators.required, Validators.minLength(11)])\r\n                    this.alunoForm.get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n                    this.alunoForm.get('telResidencial').setValidators([Validators.required, Validators.minLength(10)])\r\n                    this.alunoForm.get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n\r\n                } else if (this.alunoForm.get('telCelular').value.length < 11 ||\r\n                    this.alunoForm.get('telWhatsapp').value.length < 11 ||\r\n                    this.alunoForm.get('telResidencial').value.length < 10) {\r\n                    //console.log('um com valor')\r\n                    //console.log(this.alunoForm)\r\n                    if (this.alunoForm.get('telCelular').value.length < 11 && this.alunoForm.get('telCelular').value.length > 0) {\r\n                        this.alunoForm.get('telCelular').setValidators([Validators.required, Validators.minLength(11)])\r\n                        this.alunoForm.get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n                    } else {\r\n                        this.alunoForm.get('telCelular').clearValidators()\r\n                        this.alunoForm.get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n                    }\r\n                    if (this.alunoForm.get('telWhatsapp').value.length < 11 && this.alunoForm.get('telWhatsapp').value.length > 0) {\r\n                        this.alunoForm.get('telWhatsapp').setValidators([Validators.required, Validators.minLength(11)])\r\n                        this.alunoForm.get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n                    } else {\r\n                        this.alunoForm.get('telWhatsapp').clearValidators()\r\n                        this.alunoForm.get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n                    }\r\n                    if (this.alunoForm.get('telResidencial').value.length < 10 && this.alunoForm.get('telResidencial').value.length > 0) {\r\n                        this.alunoForm.get('telResidencial').setValidators([Validators.required, Validators.minLength(10)])\r\n                        this.alunoForm.get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n                    } else {\r\n                        this.alunoForm.get('telResidencial').clearValidators()\r\n                        this.alunoForm.get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n                    }\r\n                } else {\r\n                    this.alunoForm.get('telCelular').clearValidators()\r\n                    this.alunoForm.get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    this.alunoForm.get('telWhatsapp').clearValidators()\r\n                    this.alunoForm.get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    this.alunoForm.get('telResidencial').clearValidators()\r\n                    this.alunoForm.get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    asd: string = ''\r\n\r\n    get pegarform() {\r\n\r\n        // console.log(this.alunoForm.get('telCelular').value)\r\n\r\n        return true\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    showDivPesquisa = true\r\n    showDivForm = false\r\n    showMensagem = false\r\n    mensagem = \"\"\r\n    consulta() {\r\n\r\n        if (this.pesquisaForm.valid) {\r\n            this.searchCpfProgressBar = 'visible'\r\n            this.showMensagem = false\r\n\r\n            let cpf = this.pesquisaForm.get('cpf').value\r\n\r\n            this.http.get(`${this.baseUrl}/alunos/${cpf}`)\r\n\r\n                .subscribe(response => {\r\n\r\n\r\n                }, (err) => {\r\n                    //  console.log(err)\r\n                    this.searchCpfProgressBar = 'hidden'\r\n                    this.mensagem = \"O CPF já se encontra cadastrado!\"\r\n                    this.showMensagem = true\r\n\r\n                },\r\n                    () => {\r\n                        this.searchCpfProgressBar = 'hidden'\r\n                        this.dialogRef.addPanelClass('createnovamatricula-class')\r\n                        this.alunoCPF = cpf\r\n                        this.alunoForm.get('cpf').setValue(this.alunoCPF)\r\n                        this.showDivPesquisa = false\r\n                        this.showDivForm = true\r\n                    });\r\n        }\r\n\r\n\r\n    }\r\n    disabledSaveButton = 'hidden'\r\n    get disabledButton() {\r\n        // console.log()\r\n        if (this.alunoForm.valid) {\r\n            return this.disabledSaveButton != 'hidden'\r\n\r\n        } else {\r\n\r\n            return true\r\n        }\r\n\r\n\r\n    }\r\n    showDivEndereco = 'hidden'\r\n    consultaCEP(CEP: string) {\r\n        // console.log(CEP);\r\n\r\n        if (this.alunoForm.get('cep').valid) {\r\n            this.http.get(`https://viacep.com.br/ws/${CEP}/json/`, {})\r\n                .subscribe(response => {\r\n\r\n                    this.alunoForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n                    this.alunoForm.get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n                    this.alunoForm.get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n                    this.alunoForm.get('uf').setValue(response[\"uf\"].toUpperCase());\r\n\r\n                }, err => {\r\n                    //console.log(err) \r\n                },\r\n                    () => {\r\n                        // console.log('finaly')\r\n                        this.showDivEndereco = 'visible'\r\n                    });\r\n        }\r\n    }\r\n\r\n    //idade: number\r\n    // onFocusOutDateEvent(event: any) {       \r\n    //     var dataForm: Date = new Date(this.alunoForm.get('nascimento').value)\r\n\r\n    //     if (this.alunoForm.get('nascimento').value != null) {\r\n    //         let timeDiff = Math.abs(Date.now() - dataForm.getTime());\r\n    //         this.idade = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);         \r\n    //     } else {\r\n    //         this.idade = null\r\n    //     }\r\n\r\n    // }\r\n\r\n    private OnOfMatHintMsgInvalids(command: boolean){\r\n        this.hintCpfInvalid = command\r\n        this.hintRgInvalid = command\r\n        this.hintEmailInvalid = command\r\n    }\r\n\r\n    messageConflit = false\r\n    public SaveCadastro() {\r\n\r\n        this.OnOfMatHintMsgInvalids(false)\r\n        // console.log(this.alunoForm.value)\r\n        if (this.alunoForm.valid) {\r\n            this.disabledSaveButton = 'visible'\r\n\r\n            this.http.post(`${this.baseUrl}/alunos`, this.alunoForm.value, {\r\n            }).subscribe(response => {\r\n            }, (err) => {\r\n                if(err['status'] == 409){\r\n\r\n                    var msg = [\r\n                        { campo: 'cpf', msg: 'mensagem'  },\r\n                        { campo: 'email', msg: 'mesagem'  }\r\n                    ]\r\n\r\n                    msg.forEach(element => {\r\n\r\n                        //cpf\r\n                        if(element.campo == 'cpf') this.hintCpfInvalid = true\r\n                        //email\r\n                        if(element.campo == 'email') this.hintRgInvalid = true\r\n                        //rg\r\n                        if(element.campo == 'email') this.hintEmailInvalid = true\r\n                    });\r\n                   // this.hintCpfInvalid = true\r\n                    //this.hintRgInvalid = true\r\n                    //this.hintEmailInvalid = true\r\n\r\n                   // this.mensagem = err['error'].mensagem\r\n                    //this.showMensagem = true\r\n                   // this.messageConflit = true\r\n                    this.disabledSaveButton = 'hidden'    \r\n                }\r\n                // console.log(err)\r\n                // console.log(err['error'].mensagem)\r\n                //this.mensagem = err['error'].mensagem\r\n                //this.showMensagem = true\r\n                //this.messageConflit = true\r\n                this.disabledSaveButton = 'hidden'\r\n            },\r\n                () => {\r\n                    //console.log(response)\r\n                    this._helper.openSnackBarSucesso(\"Aluno cadastrado com sucesso.\")\r\n                    //this.showMensagem = false\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                });\r\n        }\r\n    }\r\n\r\n    // openSnackBar() {\r\n    //     this._snackBar.open('Aluno salvo com sucesso.', '', {\r\n    //         horizontalPosition: 'center',\r\n    //         verticalPosition: 'top',\r\n    //         panelClass: 'green-snackbar',\r\n    //         duration: 3 * 1000,\r\n    //     });\r\n    // }\r\n}\r\n\r\n","<div style=\"font-size: 1.2em;\">Cadastro\r\n\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n<hr>\r\n\r\n\r\n<div *ngIf=\"showDivPesquisa\">\r\n\r\n    <span style=\"font-size: 0.9em;\">Digite o CPF do aluno:</span><br>\r\n\r\n    <form novalidate [formGroup]=\"pesquisaForm\" (ngSubmit)=\"consulta()\">\r\n        <mat-form-field appearance=\"standard\" style=\"width: 145px;\">\r\n            <mat-label>CPF</mat-label>\r\n            <input formControlName=\"cpf\" mask=\"000.000.000-00\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" matInput\r\n                placeholder=\"CPF\">\r\n        </mat-form-field>\r\n\r\n        <button type=\"submit\" [disabled]=\"searchCpfProgressBar == 'visible' ? true : false\"\r\n            style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n            <mat-icon>search</mat-icon>\r\n        </button>\r\n    </form>\r\n    <mat-progress-bar @rowHighlight [style.visibility]=\"searchCpfProgressBar\" style=\"margin:0px\" mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n    <div @rowHighlight class=\"card-header \" style=\"background-color: rgb(227, 240, 227);margin-left: 0px;\r\n       width: 350px; font-size: 0.9em;box-shadow: 0 0 0.5em rgb(172, 170, 170);\" unselectable=\"on\"\r\n        *ngIf=\"showMensagem\">{{mensagem}}</div>\r\n\r\n</div>\r\n\r\n<div *ngIf=\"showDivForm\" style=\"position: relative;\">\r\n\r\n    <form novalidate [formGroup]=\"alunoForm\" (ngSubmit)=\"SaveCadastro()\">\r\n\r\n        <!-- <div style=\"position: relative;\"> -->\r\n        <!--\r\n            <div style=\"position: absolute;  display:flex;padding: 0px; margin-left: 88%; display: inline-block;\r\n            overflow: hidden;margin-top: 5px; width: 100px; height: 133px; border: 1px solid black; \">\r\n\r\n                <img src=\"\" style=\"display: block;\r\n            margin-left: auto;\r\n            margin-right: auto;width:50%\r\n            \">\r\n\r\n            </div> -->\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n            <mat-label>Nome completo</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"nome\" matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 14%; margin-left: 2%;\">\r\n            <mat-label>CPF</mat-label>\r\n            <input disabled [value]=\"alunoCPF | cpf\" matInput>\r\n            <mat-hint *ngIf=\"hintCpfInvalid\" style=\"color: red;\">escolha outro CPF</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 12%; margin-left: 2%;\">\r\n            <mat-label>RG</mat-label>\r\n            <input formControlName=\"rg\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" matInput\r\n                placeholder=\"digite o RG\">\r\n                <mat-hint *ngIf=\"hintRgInvalid\" style=\"color: red;\">escolha outro RG</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 17%; margin-left: 2%;\">\r\n                <mat-label>Nascimento</mat-label>\r\n                <date-input formControlName=\"nascimento\" (focusout)=\"onFocusOutDateEvent($event)\" \r\n                    matInput></date-input>\r\n            </mat-form-field> -->\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 145px;margin-left: 2%;\">\r\n            <mat-label>Nascimento</mat-label>\r\n            <input matInput disabled [matDatepicker]=\"dp3\" formControlName=\"nascimento\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <span style=\"font-style: italic; margin-left: 2%; font-size: 0.9em;\">idade: {{ alunoForm.get('nascimento').value\r\n            | idade}} anos </span>\r\n\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n            <mat-label>Nome Pai</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"nomePai\" matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%;margin-left: 2%; \">\r\n            <mat-label>Nome Mãe</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"nomeMae\" matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n            <mat-label>Nome Social</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"nomeSocial\" matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n            <mat-label>Naturalidade</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"naturalidade\" matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n            <mat-label>UF</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\" minlength=\"2\"\r\n                maxlength=\"2\" formControlName=\"naturalidadeUF\" matInput placeholder=\"UF\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n            <mat-label>Email</mat-label>\r\n            <input oninput=\"this.value = this.value.toLowerCase()\" formControlName=\"email\" name=\"email\" matInput\r\n                placeholder=\"Email\">\r\n                <mat-hint *ngIf=\"hintEmailInvalid\" style=\"color: red;\">escolha outro E-mail</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n            <mat-label>Celular</mat-label>\r\n            <input formControlName=\"telCelular\" mask=\"(00) 00000-0000\" matInput\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n            <mat-hint @rowHighlight >\r\n                informe ao menos um telefone\r\n            </mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n            <mat-label>WhatsApp</mat-label>\r\n            <input formControlName=\"telWhatsapp\" mask=\"(00) 00000-0000\" matInput\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n            <mat-label>Residencial</mat-label>\r\n            <input formControlName=\"telResidencial\" mask=\"(00) 0000-0000\" matInput\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 17%;\">\r\n            <mat-label>Tel referência</mat-label>\r\n            <input formControlName=\"telReferencia\" mask=\"(00) 00000-0000\" matInput\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%;margin-left: 5%; \">\r\n            <mat-label>Nome do contato</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"nomeContatoReferencia\"\r\n                name=\"nomeContatoReferencia\" matInput placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n            <mat-label>CEP</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" mask=\"00.000-000\"\r\n                formControlName=\"cep\" minlength=\"8\" maxlength=\"10\" matInput placeholder=\"12345678\">\r\n        </mat-form-field>\r\n        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <span type=\"button\" (click)=\"consultaCEP(alunoForm.get('cep').value)\" style=\"margin: 0px; margin: 0px;\"\r\n                mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </span>\r\n        </i>\r\n\r\n        <div [style.visibility]=\"showDivEndereco\" @rowHighlight>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 20%;\">\r\n                <mat-label>Logradouro</mat-label>\r\n                <input [value]=\"alunoForm.get('logradouro').value\" matInput placeholder=\"ex: rua tal...\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 5%;\">\r\n                <mat-label>Número</mat-label>\r\n                <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"numero\" matInput\r\n                    placeholder=\"ex: rua tal...\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 5%;\">\r\n                <mat-label>Complemento</mat-label>\r\n                <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"complemento\" matInput\r\n                    placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n            </mat-form-field>\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                <mat-label>Cidade</mat-label>\r\n                <input disabled [value]=\"alunoForm.get('cidade').value\" matInput placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 5%;\">\r\n                <mat-label>UF</mat-label>\r\n                <input disabled [value]=\"alunoForm.get('uf').value\" matInput placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 5%;\">\r\n                <mat-label>Bairro</mat-label>\r\n                <input disabled [value]=\"alunoForm.get('bairro').value\" matInput placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n        </div>\r\n        <!-- <br> -->\r\n\r\n        <!-- </div> -->\r\n        <mat-progress-bar @rowHighlight [style.visibility]=\"disabledSaveButton\" style=\"margin:0px\" mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <span style=\"float: right;margin-top: 15px;\">\r\n            <button type=\"submit\" color=\"primary\" mat-raised-button [disabled]=\"disabledButton\" style=\"\">\r\n                Salvar\r\n            </button>\r\n        </span>\r\n    </form>\r\n\r\n    <!-- <div *ngIf=\"pegarform\"></div> -->\r\n\r\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { Turma, TurmaViewModel } from \"src/app/_shared/models/Turma.model\";\r\nimport { Chart } from 'chart.js';\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Component({\r\n    selector: \"leads-app\",\r\n    templateUrl: './leads.component.html',\r\n    styleUrls: ['./leads.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class LeadsComponent implements OnInit {\r\n\r\n    pageSize: number = 5;\r\n    pageEvent: PageEvent;\r\n    pageIndexNumber: number = 0;\r\n    cursos: Turma[] = new Array<Turma>();\r\n    baseUrl = environment.baseUrl;\r\n    turmas: TurmaViewModel[] = new Array<TurmaViewModel>()\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n    // colaboradores: Colaborador[] = new Array<Colaborador>();\r\n    currentPage = 1\r\n\r\n    showTurmas = false\r\n    showMessage = false\r\n    showSpinner = false\r\n    mensagem: string;\r\n\r\n    totalLeadsHoje = 0;\r\n  totalLeads = 0;\r\n\r\n\r\n  name = 'Angular   6';\r\n  canvas: any;\r\n  ctx: any;\r\n  @ViewChild('mychart') mychart;\r\n  \r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        console.log('init colaboradores 123')\r\n        this.getLeads();\r\n    }\r\n\r\n    getLeads(){\r\n\r\n        this._http.get(`${this.baseUrl}/comercial/leads`)\r\n        .subscribe(resp => {\r\n          this.totalLeadsHoje = resp['totalLeadsHoje']\r\n          this.totalLeads = resp['totalLeads']\r\n        }, \r\n        (error) => { console.log(error)},\r\n        () => { })\r\n      }\r\n\r\n    \r\n\r\n    PodeAdiar(turma: TurmaViewModel) {\r\n        if (turma.statusDaTurma == 'Aguardando início' &&\r\n            turma.previsao != '3ª previsão') {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n\r\n    ngAfterViewInit() {\r\n        this.canvas = this.mychart.nativeElement; \r\n        this.ctx = this.canvas.getContext('2d');\r\n    \r\n        let myChart = new Chart(this.ctx, {\r\n          type: 'bar',\r\n          \r\n          data: {\r\n            labels: ['20/03','20/03','20/03','20/03','20/03','20/03','20/03'],\r\n            datasets: [{\r\n              label: 'My First Dataset',\r\n              data: [65, 59, 80,70,55,0,15],\r\n              backgroundColor: [\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n                'rgba(255, 205, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(201, 203, 207, 0.2)'\r\n              ],\r\n              borderColor: [\r\n                'rgb(255, 99, 132)',\r\n                'rgb(255, 159, 64)',\r\n                'rgb(255, 205, 86)',\r\n                'rgb(75, 192, 192)',\r\n                'rgb(54, 162, 235)',\r\n                'rgb(153, 102, 255)',\r\n                'rgb(201, 203, 207)'\r\n              ],\r\n              borderWidth: 1\r\n            }]\r\n          }\r\n        });\r\n      }\r\n\r\n}\r\n","\r\n<div class=\"container\" style=\"width: 80%;\">\r\n    <!-- <div class=\"row\">\r\n        <button style=\"width: 140px;margin-top: 10px;\" type=\"button\" class=\"btn btn-success\" (click)=\"openExportModal()\">exportar lead</button>\r\n\r\n    </div> -->\r\n    <br>\r\n   \r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 200px; \">\r\n        <mat-label>Total Leads Cadastradas</mat-label>\r\n        <input disabled [(ngModel)]=\"totalLeads\" selected required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <br> -->\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 200px; \">\r\n        <mat-label>Total Cadastradas (hoje)</mat-label>\r\n        <input disabled [(ngModel)]=\"totalLeadsHoje\" selected required name=\"templateName\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n \r\n    <div style=\"font-size: 0.9em;\">Leads cadastradas nos últimos 7 dias:</div>\r\n    <br>\r\n    <div style=\"width:50%;background-color: aliceblue;\">\r\n        <canvas id=\"myChart\" width=\"700\" height=\"250\" #mychart></canvas>\r\n    </div>\r\n   \r\n</div>","import { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from \"@angular/common/http\";\r\nimport { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Estagio } from \"src/app/_shared/models/estagio.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: \"alunodocs-app\",\r\n    templateUrl: './alunodocs.component.html',\r\n    //styleUrls: ['./colaboradores.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class AlunoDocsComponent implements OnInit {\r\n\r\n\r\n   // colaboradores: Colaborador[] = new Array<Colaborador>();\r\n   baseUrl = environment.baseUrl;\r\n   private jwtHelper = new JwtHelperService();\r\n   tokenInfo: TokenInfos = new TokenInfos();\r\n   formDatas = new FormData();\r\n\r\n   fileAP: File[] = []\r\n   fileAPName: string = null\r\n   fileAPViewName: string = null\r\n\r\n   fileCartaoVac: File[] = []\r\n   fileCartaoVacName: string = null\r\n   fileCartaoVacViewName: string = null\r\n\r\n   fileTipoSang: File[] = []\r\n   fileTipoSangName: string = null\r\n   fileTipoSangViewName: string = null\r\n\r\n   fileHCG: File[] = []\r\n   fileHCGName: string = null\r\n   fileHCGViewName: string = null\r\n\r\n   public progress: number;\r\n   public message: string;\r\n   @Output() public onUploadFinished = new EventEmitter();\r\n\r\n   constructor(\r\n       private _snackBar: MatSnackBar,\r\n       //private CreateMatriculaModal: MatDialog,\r\n       private http: HttpClient\r\n       //public dialogRef: MatDialogRef<InscricaoEstComponent>,\r\n       //public data: any\r\n       //@Inject(MAT_DIALOG_DATA) \r\n      \r\n   ) { }\r\npublic id:any\r\n    public ids: any\r\n   ngOnInit() {\r\n       console.log('init inscricao')\r\n       const token = localStorage.getItem('jwt')\r\n       this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n       this.getIdAlunosMats()\r\n      \r\n   }\r\n\r\n   getIdAlunosMats(){\r\n       this.http.get(`${this.baseUrl}/matricula/alunosidsmatriculas`)\r\n       .subscribe(resp => {\r\n           console.log(resp)\r\n           this.ids = resp['ids']\r\n       },(error) => { console.log(error) },\r\n       () => { })\r\n   }\r\n   // pageIndex = 0\r\n   apendFileAP(file) {\r\n       this.fileAP = new Array<File>()\r\n       let fileToUpload = <File>file[0];\r\n       this.fileAPName = `AP${fileToUpload.name}`\r\n       this.fileAPViewName = `${fileToUpload.name}`\r\n       this.fileAP.push(fileToUpload)\r\n   }\r\n\r\n   apendFileCartaoVac(file) {\r\n       this.fileCartaoVac = new Array<File>()\r\n       let fileToUpload = <File>file[0];\r\n       this.fileCartaoVacName = `CV${fileToUpload.name}`\r\n       this.fileCartaoVacViewName = `${fileToUpload.name}`\r\n       this.fileCartaoVac.push(fileToUpload)\r\n   }\r\n\r\n   apendFileTipoSang(file) {\r\n       this.fileTipoSang = new Array<File>()\r\n       let fileToUpload = <File>file[0];\r\n       this.fileTipoSangName = `TP${fileToUpload.name}`\r\n       this.fileTipoSangViewName = `${fileToUpload.name}`\r\n       this.fileTipoSang.push(fileToUpload)\r\n   }\r\n\r\n   apendFileHCG(file) {\r\n       this.fileHCG = new Array<File>()\r\n       let fileToUpload = <File>file[0];\r\n       this.fileHCGName = `HC${fileToUpload.name}`\r\n       this.fileHCGViewName = `${fileToUpload.name}`\r\n       this.fileHCG.push(fileToUpload)\r\n   }\r\n\r\n\r\n   verificar() {\r\n\r\n       console.log(this.fileAP)\r\n       console.log(this.fileCartaoVac)\r\n\r\n       console.log(this.fileTipoSang)\r\n       console.log(this.fileHCG)\r\n\r\n   }\r\n\r\n\r\n   uploadFile() {\r\n       console.log('sendo files')\r\n       this.formDatas.append('file', this.fileAP[0], this.fileAPName);\r\n       this.formDatas.append('file', this.fileCartaoVac[0], this.fileCartaoVacName);\r\n       this.formDatas.append('file', this.fileTipoSang[0], this.fileTipoSangName);\r\n       this.formDatas.append('file', this.fileHCG[0], this.fileHCGName);\r\n\r\n       const token = localStorage.getItem('jwt')\r\n       const Bearer = `Bearer ${token}`;\r\n       this.http.post(`${this.baseUrl}/estagios/arquivos`, this.formDatas, {\r\n           reportProgress: true, observe: 'events',\r\n           headers: new HttpHeaders({\r\n\r\n               \"Authorization\": Bearer\r\n           })\r\n       })\r\n           .subscribe(event => {\r\n               if (event.type === HttpEventType.UploadProgress)\r\n                   this.progress = Math.round(100 * event.loaded / event.total);\r\n               else if (event.type === HttpEventType.Response) {\r\n                   this.message = 'Upload success.';\r\n                   this.onUploadFinished.emit(event.body);\r\n               }\r\n           },\r\n               (error) => { console.log(error) },\r\n               () => {\r\n                   console.log('finally')\r\n                  // this.dialogRef.close({ clicked: \"Ok\" });\r\n                  \r\n               });\r\n   }\r\n\r\n}\r\n\r\n","<div class=\"container\">\r\n    <mat-form-field appearance=\"standard\" style=\"width: 105px;margin-left: 5px;\">\r\n        <mat-label>Recuperação?</mat-label>\r\n\r\n        <mat-select [(ngModel)]=\"id\" placeholder=\"temRecuperacao\">\r\n            <mat-option *ngFor=\"let item of ids\" [value]=\"item\">\r\n                {{item}}\r\n            </mat-option>\r\n\r\n\r\n        </mat-select>\r\n\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    Boa Tarde, {{tokenInfo.Nome}}<br>\r\n    <hr>\r\n    <div style=\"font-style: italic;font-size: 0.9em;\">Para poder se candidatar à uma vaga de estágio, é necessário o\r\n        envio das\r\n        documentaçãoes listadas abaixo.\r\n    </div>\r\n    <div style=\"font-style: italic;font-size: 0.9em;color: red;\">\r\n        * formatos permitidos: jpeg, pdf\r\n    </div>\r\n    <div style=\"font-style: italic;font-size: 0.9em;color: red;\">\r\n        * tamanho máximo permitido por arquivo: 500kb\r\n    </div>\r\n    <br>\r\n\r\n    <div>RG\r\n        <input multiple type=\"file\" #fileAP placeholder=\"Choose file\" (change)=\"apendFileAP(fileAP.files)\"\r\n            style=\"display:none;\">\r\n\r\n        <mat-icon type=\"button\" #tooltip=\"matTooltip\" matTooltip=\"anexar arquivo\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\" (click)=\"fileAP.click()\" style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">attachment</mat-icon>\r\n\r\n        <span style=\"margin-left: 5px;font-size: 0.9em;\">{{fileAPViewName || ''}}</span>\r\n        <!-- <span style=\"margin-left: 5px;font-size: 0.9em;color: red;\">* formato ou tamanho inválido </span> -->\r\n    </div>\r\n\r\n    <div>CPF\r\n        <input multiple type=\"file\" #fileCV placeholder=\"Choose file\" (change)=\"apendFileCartaoVac(fileCV.files)\"\r\n            style=\"display:none;\">\r\n\r\n        <mat-icon type=\"button\" #tooltip=\"matTooltip\" matTooltip=\"anexar arquivo\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\" (click)=\"fileCV.click()\" style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">attachment</mat-icon>\r\n\r\n        <span style=\"margin-left: 5px;font-size: 0.9em;\">{{fileCartaoVacViewName || ''}}</span>\r\n    </div>\r\n\r\n    <div>COMP RES\r\n        <input multiple type=\"file\" #fileTP placeholder=\"Choose file\" (change)=\"apendFileTipoSang(fileTP.files)\"\r\n            style=\"display:none;\">\r\n\r\n        <mat-icon type=\"button\" #tooltip=\"matTooltip\" matTooltip=\"anexar arquivo\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\" (click)=\"fileTP.click()\" style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">attachment</mat-icon>\r\n\r\n        <span style=\"margin-left: 5px;font-size: 0.9em;\">{{fileTipoSangViewName || ''}}</span>\r\n    </div>\r\n    <!-- <div>Beta HGC recente (pelo menos 30 dias antes da candidatura à vaga\r\n        (apenas para sexo feminino)\r\n        <input multiple type=\"file\" #fileHCG placeholder=\"Choose file\" (change)=\"apendFileHCG(fileHCG.files)\"\r\n            style=\"display:none;\">\r\n\r\n        <mat-icon type=\"button\" #tooltip=\"matTooltip\" matTooltip=\"anexar arquivo\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\" (click)=\"fileHCG.click()\" style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">attachment</mat-icon>\r\n\r\n        <span style=\"margin-left: 5px;font-size: 0.9em;\">{{fileHCGViewName || ''}}</span>\r\n    </div> -->\r\n\r\n\r\n    <div (click)=\"verificar()\">verificar</div>\r\n    <button type=\"submit\" (click)=\"uploadFile()\" mat-raised-button disabled=\"false\"\r\n        style=\"float:left;margin-bottom: 10px;margin-left: 10px;\">\r\n        Enviar\r\n    </button>\r\n    <button style=\"float:left;margin-bottom: 10px;\" mat-raised-button\r\n        [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button>\r\n\r\n</div>","import { HttpClientModule } from '@angular/common/http';\r\nimport { DEFAULT_CURRENCY_CODE, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//import { CustomersComponent } from './customers/customers.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { JwtModule } from \"@auth0/angular-jwt\";\r\n\r\nimport { CommonModule, CurrencyPipe, DatePipe, UpperCasePipe } from '@angular/common';\r\n//import { HomeComponent } from './home.component';\r\nimport { SharedModule } from '../_shared/shared.module';\r\n\r\nimport { MaterialModule } from '../_shared/material/material.module';\r\n\r\nimport { ComercialComponent } from './comercial.component';\r\nimport { ExportLeadComponent } from './ExportarLead/exportar.component';\r\nimport { LeadsComponent } from './Leads/leads.component';\r\n\r\nimport { LeadExportComponent } from './AddLead/leadexport/lead-export.component';\r\n\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { Servico } from '../Adm/testes/testeexterno';\r\n\r\n\r\n// import { CustomersComponent } from '../customers/customers.component';\r\n\r\nexport function tokenGetter() {\r\n    return localStorage.getItem(\"jwt\");\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ComercialComponent,\r\n        ExportLeadComponent,\r\n        LeadsComponent,\r\n        //AddLeadComponent,\r\n        LeadExportComponent,\r\n       // LeadIndividualCriarComponent\r\n        //LoginComponent,\r\n        //CustomersComponent,\r\n        //AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        SharedModule,\r\n        MaterialModule,\r\n        AngularEditorModule,\r\n       // NgxMaskModule.forRoot(maskConfig),\r\n        CurrencyMaskModule   \r\n    ],\r\n    // providers: [AuthGuard],\r\n    providers:  [CurrencyPipe, UpperCasePipe,DatePipe, { provide: DEFAULT_CURRENCY_CODE, useValue: 'BRL' },\r\n    {provide: 'IServicoToken', useClass: Servico}\r\n    ],\r\n    //bootstrap: [AppComponent]\r\n    exports: [\r\n        ComercialComponent,\r\n        LeadsComponent,\r\n        //AddLeadComponent\r\n        //SharedModule\r\n        //, CustomersComponent\r\n    ],\r\n    entryComponents: [\r\n        ExportLeadComponent,\r\n        LeadExportComponent,\r\n       // LeadIndividualCriarComponent\r\n        // FormFieldCustomControlExample, \r\n        //MyTelInput,\r\n        // CreateUserComponent,\r\n        // EditUserComponent,\r\n        // CreateUnidadeComponent,\r\n        // EditUnidadeComponent,\r\n        // CreateColaboradoresComponent,\r\n        // EditColaboradoresComponent,\r\n        // CreateCursoComponent,\r\n        // EditCursoComponent,\r\n        //   DialogOverviewExampleDialog,\r\n        //   EditTemplateModel\r\n    ]\r\n})\r\nexport class ComercialModule { }\r\n\r\nfunction maskConfig(maskConfig: any): any[] | import(\"@angular/core\").Type<any> | import(\"@angular/core\").ModuleWithProviders<{}> {\r\n    throw new Error('Function not implemented.');\r\n}\r\n\r\n","export class AgendaProvas{\r\n    constructor(\r\n        public id?: number,\r\n        public avaliacaoUm?: string,\r\n        public segundaChamadaAvaliacaoUm?: string,\r\n        public avaliacaoDois?: string,\r\n        public segundaChamadaAvaliacaoDois?: string,\r\n        public avaliacaoTres?: string,\r\n        public segundaChamadaAvaliacaoTres?: string,\r\n        public materiaId?: number,\r\n        public materia?: string,\r\n        public turmaId?: number,\r\n    ){\r\n\r\n    }\r\n}","import { Component, EventEmitter, Inject, OnInit, Output } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n    selector: 'troca-senhamodal',\r\n    templateUrl: './troca-senha.component.html',\r\n    //styleUrls: ['./troca-senha.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class TrocaSenhaComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n\r\n    trocaSenhaForm: FormGroup\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        // private _service: PedagService,\r\n        private _router: Router,\r\n        private _modal: MatDialog,\r\n        public dialogRef: MatDialogRef<TrocaSenhaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.trocaSenhaForm = _fb.group({\r\n            senha: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(10)]],\r\n            senhaNova: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(10)]],\r\n            senhacomparacao: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(10)]]\r\n        })\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        //console.log(this.tokenInfo)\r\n    }\r\n\r\n\r\n\r\n\r\n    conferir() {\r\n        if (this.trocaSenhaForm.get('senhaNova').value === this.trocaSenhaForm.get('senhacomparacao').value) {\r\n          //  console.log('igual')\r\n        } else {\r\n           // console.log('diferente')\r\n        }\r\n\r\n    }\r\n\r\n    get showHintSenha() {\r\n        if (this.trocaSenhaForm.get('senhaNova').value === this.trocaSenhaForm.get('senhacomparacao').value) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    initProgressBar = 'hidden'\r\n    get desabilitar() {\r\n\r\n        if (!this.trocaSenhaForm.valid) return true\r\n\r\n        if (this.trocaSenhaForm.get('senhaNova').value === this.trocaSenhaForm.get('senhacomparacao').value) {\r\n            return this.initProgressBar != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n\r\n    }\r\n\r\n    onSubmit(form) {\r\n        //Email = this. email\r\n        //Senha\r\n        //SenhaConfirmacao\r\n        var model = {\r\n            Email: this.tokenInfo.email,\r\n            Senha: this.trocaSenhaForm.get('senha').value,\r\n            SenhaConfirmacao: this.trocaSenhaForm.get('senhacomparacao').value\r\n        }\r\n\r\n        this.initProgressBar = 'visible'\r\n        this.trocaSenhaForm.disable()\r\n        this._http.put(`${this.baseUrl}/identity/troca-senha`, model, {})\r\n            .subscribe(\r\n                sucesso => { this.onSubmitSucesso(sucesso) },\r\n                falha => { this.onSubmitFalha(falha) }\r\n            )\r\n    }\r\n\r\n    onSubmitSucesso(resposta) {\r\n        this.initProgressBar = 'hidden'\r\n        this.trocaSenhaForm.enable()\r\n      //  console.log(resposta)\r\n\r\n        localStorage.removeItem(\"jwt\");\r\n        this.dialogRef.close({click: true})\r\n        this._router.navigateByUrl('user/login');\r\n\r\n    }\r\n\r\n    erroMesg = \"\"\r\n    onSubmitFalha(erro) {\r\n        this.initProgressBar = 'hidden'\r\n        this.trocaSenhaForm.enable()\r\n      //  console.log(erro['error'].errors)\r\n        let mensagens = erro['error'].errors\r\n        this.erroMesg = mensagens['Mensagens'][0]\r\n       // console.log(this.erroMesg)\r\n    }\r\n\r\n\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Trocar Senha\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n<hr>\r\n\r\n<div style=\"position: relative;\">\r\n\r\n    <form  novalidate  [formGroup]=\"trocaSenhaForm\" style=\"\"\r\n    (ngSubmit)=\"onSubmit(trocaSenhaForm)\">\r\n        <div style=\"margin: 0px; font-size: 0.8em;color:red\" >* a senha deve ter de 8 a 10 caracteres</div>\r\n        <div style=\"margin: 0px; font-size: 0.8em;color:red\" >* a senha deve ter letras maiúsculas e minúsculas</div>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n            <mat-label>Senha atual</mat-label>\r\n            <input  formControlName=\"senha\" maxlength=\"10\" matInput >\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n            <mat-label>Nova senha</mat-label>\r\n            <input  formControlName=\"senhaNova\" max=\"10\" matInput >\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 250px;\">\r\n            <mat-label>Digite novamente</mat-label>\r\n            <input formControlName=\"senhacomparacao\" max=\"10\" matInput>\r\n            <mat-hint *ngIf=\"showHintSenha\">* as senhas não correspondem</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <div style=\"margin: 0px; font-size: 0.8em;color:red\" >{{erroMesg}}</div>\r\n        <mat-progress-bar [style.visibility]=\"initProgressBar\"\r\n         @rowHighlight style=\"margin-top: 5px\" mode=\"query\">\r\n        </mat-progress-bar>\r\n        <div style=\"float: right;margin-top: 15px;\">\r\n\r\n            <button type=\"submit\" [disabled]=\"desabilitar\" mat-raised-button color=\"primary\" \r\n            style=\"width: 100px; position: relative; float:right;margin-bottom: 10px;\r\n            margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n        </div>\r\n    </form>\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Fornecedor } from \"../../FinanceiroModels/fornecedor.model\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { MeioPagamento } from \"src/app/Pedagogico/Matricula/CreateModal/creatematricula.component\";\r\n\r\n@Component({\r\n    selector: 'fornecedorcadvendamodal',\r\n    templateUrl: './fornecedorcadvenda.component.html',\r\n   // styleUrls: ['./createfornecedor.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class FornecedorVendaComponent implements OnInit {\r\n  \r\n   \r\n    baseUrl = environment.baseUrl;\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    public fornecedorForm: FormGroup;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public fornecedor: Fornecedor = new Fornecedor();\r\n    public validadeEmailMsg = false\r\n    public validadeCPFMsg = false\r\n    cargos = Cargos;\r\n    mensagem = \"\";\r\n    showMensagem = false\r\n    meioPagamento = MeioPagamento\r\n    \r\n    unidades = Unidades;\r\n    constructor(\r\n        private _datepipe: DatePipe,\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private http: HttpClient,\r\n        public dialogRef: MatDialogRef<FornecedorVendaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.fornecedorForm = _fb.group({\r\n            dataVencimento: ['', [Validators.required]],\r\n            valor: ['', [Validators.required]],\r\n            valorComDesconto: ['', [Validators.required]],\r\n            comentario: [''],\r\n            meioPagamento: ['',[Validators.required]],\r\n            descricaoTransacao: ['', [Validators.required]],\r\n            //comentario: [''],\r\n            // nomeContato: ['', [Validators.required]],\r\n            // cep: ['', [Validators.required, Validators.minLength(8),Validators.maxLength(8)]],\r\n            // logradouro: [''],\r\n            // complemento: [''],\r\n            // cidade: ['', [Validators.required]],\r\n            // uf: ['', [Validators.required, Validators.minLength(2),Validators.maxLength(2)]],//,\r\n            // bairro: ['', [Validators.required]],//,\r\n            // observacoes: ['']//,\r\n            \r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.fornecedor = Object.assign({}, this.data['fornecedor']);\r\n\r\n        // console.log(this.tokenInfo.Unidade);\r\n        // console.log(this.tokenInfo.Codigo);\r\n        // console.log(this.tokenInfo);\r\n       // this.fornecedorForm.get('email').setErrors({ 'incorrect': true });\r\n        //this.fornecedorForm.get('cnpj_cpf').setErrors({ 'incorrect': true });\r\n        \r\n    }\r\n    dataVencimento:any;\r\n    onFocusOutDateEvent(event: any) {\r\n        if (event.target.value.length == 10) {\r\n            var data = event.target.value.split('/')\r\n            var dataForm: Date = new Date(parseInt(data[2]), parseInt(data[1]) - 1,\r\n                parseInt(data[0]), 0, 0, 0)\r\n\r\n            this.dataVencimento = dataForm.toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })//dataForm.getDay\r\n\r\n            this.fornecedorForm.get('dataVencimento').setValue(dataForm.toJSON())\r\n        } else {\r\n            this.fornecedorForm.get('dataVencimento').setValue('')\r\n        }\r\n    }\r\n\r\n    onSubmit(form: FormGroup) {\r\n\r\n       \r\n       // console.log(form.value)\r\n        if (form.valid) {\r\n          \r\n            //const novofornecedor = JSON.stringify(form.value);\r\n\r\n           // console.log(novofornecedor)\r\n\r\n\r\n            this.http.post(`${this.baseUrl}/financeiro/fornecedor-contas-receber/?fornecedorId=${this.data['fornecedor'].id}`, form.value, {\r\n            }).subscribe(response => {\r\n\r\n                //console.log(response)\r\n               \r\n            }, (err) => { \r\n              //  console.log(err) \r\n            },\r\n                () => {\r\n                    \r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                });\r\n        }\r\n    }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Colaborador salvo com sucesso.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n   \r\n   \r\n\r\n    consultaCEP(CEP: string) {\r\n     \r\n\r\n        this.http.get(`https://viacep.com.br/ws/${CEP}/json/`, {})\r\n            .subscribe(response => {\r\n                this.fornecedorForm.get('logradouro').setValue(response[\"logradouro\"]);\r\n                this.fornecedorForm.get('bairro').setValue(response[\"bairro\"]);\r\n                this.fornecedorForm.get('cidade').setValue(response[\"localidade\"]);\r\n                this.fornecedorForm.get('uf').setValue(response[\"uf\"]);\r\n                \r\n            }, err => { \r\n                //console.log(err) \r\n            },\r\n                () => { });\r\n    }\r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n    \r\n}","<div style=\"font-size: 1.2em;\">Fornecedor - Cadastrar contas a pagar\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n<hr>\r\n\r\n<form novalidate [formGroup]=\"fornecedorForm\" (ngSubmit)=\"onSubmit(fornecedorForm)\">\r\n\r\n    <!-- <div class=\"card-body\"> -->\r\n    <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n        <mat-label>Nome/Razão Social</mat-label>\r\n        <input selected disabled [value]=\"fornecedor.razaoSocial\" required name=\"razaoSocial\" matInput\r\n            placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 45%; margin-left: 10%;\">\r\n            <mat-label>Email</mat-label>\r\n            <input selected formControlName=\"email\" name=\"templateName\" matInput placeholder=\"Email\">\r\n        </mat-form-field> -->\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 5%;\">\r\n        <mat-label>CPF/CNPJ</mat-label>\r\n        <input selected disabled [value]=\"fornecedor.cnpj_cpf\" name=\"cnpj_cpf\" matInput placeholder=\"cnpj_cpf\">\r\n        <!-- <mat-hint @rowHighlight *ngIf=\"validadeEmailMsg\" style=\"color: red;\">\r\n            O email informado já existe\r\n        </mat-hint> -->\r\n    </mat-form-field>\r\n    <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar \" matTooltipPosition=\"above\"\r\n                            matTooltipHideDelay=\"100\">\r\n                            <button style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon>search</mat-icon>\r\n                            </button>\r\n                        </i> -->\r\n    <br>\r\n    <mat-form-field (focusout)=\"onFocusOutDateEvent($event)\" appearance=\"standard\" style=\"width: 145px; \">\r\n        <mat-label>Vencimento</mat-label>\r\n        <input mask=\"00/00/0000\" required name=\"dataVencimento\" matInput \r\n        [value]=\"dataVencimento\"\r\n            \r\n            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n       \r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n        <mat-label>Valor</mat-label>\r\n        <input currencyMask [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" formControlName=\"valor\" type=\"text\"\r\n            selected required name=\"valor\" matInput placeholder=\"0,00\">\r\n        <span matPrefix>R$&nbsp;</span>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 5%; \">\r\n        <mat-label>Com desconto</mat-label>\r\n        <input currencyMask [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" formControlName=\"valorComDesconto\" type=\"text\"\r\n            selected required name=\"valorComDesconto\" matInput placeholder=\"0,00\">\r\n        <span matPrefix>R$&nbsp;</span>\r\n    </mat-form-field>\r\n\r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 18%;margin: 5%;\">\r\n        <mat-label>Meio Pagamento</mat-label>\r\n        <input \r\n            formControlName=\"meioPagamento\"\r\n            selected name=\"meioPagamento\" matInput placeholder=\"digite o CPF\">\r\n       \r\n    </mat-form-field> -->\r\n    <br>\r\n    <mat-form-field appearance=\"standard\" style=\"width: 40%;\">\r\n        <mat-label>Forma de pagamento</mat-label>\r\n        <mat-select formControlName=\"meioPagamento\" selected name=\"cargo\" required>\r\n            <mat-option></mat-option>\r\n            <mat-option *ngFor=\"let item of meioPagamento\" [value]=\"item.type\">\r\n                {{item.value}}\r\n            </mat-option>\r\n        </mat-select>\r\n    </mat-form-field>\r\n    <br>\r\n    <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n        <mat-label>Descrição</mat-label>\r\n        <input formControlName=\"descricaoTransacao\" name=\"descricaoTransacao\" selected required matInput\r\n            placeholder=\"Nome\">\r\n    </mat-form-field>\r\n    <br>\r\n    <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n        <mat-label>Observação</mat-label>\r\n        <textarea formControlName=\"comentario\" name=\"comentario\" matInput></textarea>\r\n    </mat-form-field>\r\n\r\n\r\n    <div *ngIf=\"showMensagem\" class=\"alert alert-danger\" role=\"alert\"\r\n        style=\"text-align: center; vertical-align: middle; position:relative; height: 45px; float:left;margin-bottom: 20px;\">\r\n        {{mensagem}}\r\n    </div>\r\n\r\n    <button type=\"submit\" mat-raised-button disabled=\"false\" style=\"float:right;margin-bottom: 0px;margin-left: 10px;\"\r\n        [disabled]=\"!fornecedorForm.valid\">\r\n        Salvar\r\n    </button>\r\n\r\n\r\n</form>","import { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Injectable, InjectionToken } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { DataService } from 'src/app/_services/data.service';\r\nimport { Aluno } from 'src/app/_shared/models/aluno.model';\r\n\r\n\r\nexport const REST_TAREFA_URL = new InjectionToken(\"rest_url\")\r\n\r\n@Injectable()\r\n\r\nexport class PedagService {\r\n\r\n    //genericTask: GenericTask[] = new Array<GenericTask>();\r\n    private baseUrl = environment.baseUrl;\r\n    // private templateUrl: string = `${this.baseUrl}/api/template`;\r\n    // // private catUrl: string = `${this.baseUrl}/api/v1/categories`;\r\n    // private functionUrl: string = `${this.baseUrl}/api/categories/functions`;\r\n    // private categoryUrl: string = `${this.baseUrl}/api/categories`;\r\n    // private tasksUrl: string = `${this.baseUrl}/api/task`;\r\n    // private saveTemplateUrl: string = `${this.baseUrl}/api/template`;\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n\r\n    // getTasks(currentPage?: number, itemsPerPage?: number): Observable<GenericTask[]> {\r\n    //     let url = this.tasksUrl + '/?currentPage=' + currentPage + '&itemsPerPage=' + itemsPerPage\r\n    //     console.log(url)\r\n    //     return this.dataService.get(url).pipe<GenericTask[]>(tap((response: any) => { return response; }));\r\n    // }\r\n\r\n    getAlunos(alunoId: number): Observable<Aluno> {\r\n        let url = `${this.baseUrl}/adm/aluno/${alunoId}`\r\n        return this.dataService.get(url).pipe<Aluno>(tap((response: any) => { return response; }))\r\n    }\r\n\r\n    // getAllTemplates(): Observable<Template[]> {\r\n\r\n    //     return this.dataService.get(this.templateUrl, null)\r\n    //         .pipe<Template[]>(tap((response: any) => { return response; }));\r\n    // }\r\n\r\n    // getTemplateById(templateId: number): Observable<Template> {\r\n    //     let url = `${this.templateUrl}/template/${templateId}`\r\n    //     return this.dataService.get(url).pipe<Template>(tap((response: any) => { return response }))\r\n    // }\r\n\r\n    // getFunctionsByCategoryId(id: number): Observable<TypeFunction[]> {\r\n    //     let url = `${this.functionUrl}/${id}`;\r\n    //     return this.dataService.get(url).pipe<TypeFunction[]>(tap((response: any) => { return response; }))\r\n    // }\r\n\r\n    // deleteTemplate(id: number): Observable<boolean> {\r\n    //     return this.dataService.delete(`${this.templateUrl}/${id}`)\r\n    //         .pipe<boolean>(tap((response: any) => { return response; }));\r\n    // }\r\n\r\n    // deleteTask(id: number): Observable<boolean> {\r\n    //     return this.dataService.delete(`${this.tasksUrl}/${id}`)\r\n    //         .pipe<boolean>(tap((response: any) => { return response; }));\r\n    // }\r\n\r\n    // editTemplate(template: Template): Observable<boolean> {\r\n    //     return this.dataService.put(this.templateUrl, template).pipe<boolean>(tap((Response: any) => true));\r\n    // }\r\n\r\n    // saveTask(newTask): Observable<boolean> {\r\n    //     return this.dataService.post(this.tasksUrl, newTask).pipe<boolean>(tap((response: any) => true));\r\n    // }\r\n\r\n    // saveNewTemplate(newTemplate): Observable<boolean> {\r\n    //     return this.dataService.post(this.saveTemplateUrl, newTemplate).pipe<boolean>(tap((response: any) => true));\r\n    // }\r\n\r\n\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { InfoDia, ListaPresencaDto } from \"../../Pedag-Models/infodia.model\";\r\n\r\n\r\n@Component({\r\n    selector: 'turmasinfonotas-app',\r\n    templateUrl: './turmasinfonotas.component.html',\r\n    styleUrls: ['./turmasinfonotas.component.scss'],\r\n    animations: [HighlightTrigger]\r\n\r\n})\r\n\r\nexport class TurmasInfoNotasComponent implements OnInit {\r\n\r\n    private _baseUrl = environment.baseUrl\r\n    public showSpin = true\r\n    // public listaPresencaDto: ListaPresencaDto[] = new Array<ListaPresencaDto>();\r\n    // public infoDia: InfoDia = new InfoDia();\r\n    //public saveCommand: SavePresencaCommand = new SavePresencaCommand();\r\n    // public observacoes: string = \"\";\r\n    // public obsForm: FormGroup;\r\n    // public diaAulaString: any\r\n    public calendarios: any[] = new Array<any>()\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog,\r\n        public _dialogRef: MatDialogRef<TurmasInfoNotasComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        // this.obsForm = this._fb.group({\r\n        //     observacoes: ['', [Validators.required]]\r\n        // })\r\n    }\r\n\r\n    ngOnInit() {\r\n       // console.log(this.data['turma'])\r\n//\r\n        this.GetCalendarioTurma(this.data['turma'].id);\r\n    }\r\n\r\n    private GetCalendarioTurma(turmaId: number) {\r\n\r\n        this._http.get(`${this._baseUrl}/turmas/calendario/${turmaId}`)\r\n            .subscribe(resp => {\r\n\r\n               // console.log(resp)\r\n                this.calendarios = Object.assign([], resp['calendarioTurmaView'])\r\n                //console.log(this.calendarios)\r\n\r\n            },\r\n                (error) => {\r\n                   // console.log(error)\r\n                    this.showSpin = false\r\n                },\r\n                () => {\r\n                    this.showSpin = false\r\n                })\r\n    }\r\n\r\n    concluirAula() {\r\n        // calendárioId\r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { Turma, TurmaViewModel } from \"src/app/_shared/models/Turma.model\";\r\n\r\nimport { environment } from \"src/environments/environment\";\r\nimport { NotasComponent } from \"../turmapedag/notas/notas.component\";\r\nimport { TurmasInfoAlunosPedagComponent } from \"./AlunosTurma/turmasinfoalunos.component\";\r\nimport { CalendarioTurmaComponent } from \"./CalendarioDaTurma/calendarioturma.component\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: \"admturmas-app\",\r\n    templateUrl: './turmasinfopedag.component.html',\r\n    styleUrls: ['./turmasinfopedag.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class TurmasPedagInfoComponent implements OnInit {\r\n\r\n    pageSize: number = 5;\r\n    pageEvent: PageEvent;\r\n    pageIndexNumber: number = 0;\r\n    cursos: any[] = new Array<any>();// Turma[] = new Array<Turma>();\r\n    baseUrl = environment.baseUrl;\r\n    turmas: TurmaViewModel[] = new Array<TurmaViewModel>()\r\n    public spinnerSearch = 'visible'\r\n    public showTable = false\r\n    // colaboradores: Colaborador[] = new Array<Colaborador>();\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n\r\n    currentPage = 1\r\n\r\n    showTurmas = false\r\n    showMessage = false\r\n    showSpinner = false\r\n    mensagem: string;\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private _modal: MatDialog\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.getCursos();\r\n    }\r\n\r\n    // iniciarTurma(turmaId): void {\r\n    //     //console.log(item)\r\n    //     const dialogRef = this._modal\r\n    //         .open(ConfirmarIniciarTurmaModal, {\r\n    //             height: 'auto',\r\n    //             width: '500px',\r\n    //             autoFocus: false,\r\n    //             //maxHeight: '90vh',\r\n    //             //maxWidth: '400vh',\r\n\r\n    //             data: { turma: turmaId },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n    //         if (result.clicked === \"Sim\") {\r\n\r\n    //             console.log(turmaId)\r\n    //             this.http.put(`${this.baseUrl}/turmas/turma/${turmaId}`, {\r\n\r\n    //             }).subscribe(result => {\r\n\r\n    //             },\r\n    //                 (error) => { console.log(error) },\r\n    //                 () => {\r\n    //                     this.atualizar();\r\n    //                 }\r\n    //             )\r\n\r\n    //         } else {\r\n    //             console.log('nao')\r\n    //         }\r\n\r\n    //     });\r\n    // }\r\n\r\n    PodeAdiar(turma: TurmaViewModel) {\r\n        if (turma.statusDaTurma == 'Aguardando início' &&\r\n            turma.previsao != '3ª previsão') {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    adiar(turmaId: number) {\r\n       // console.log('adiar')\r\n\r\n        this.http.put(`${this.baseUrl}/turmas/turma/adiar/${turmaId}`, {}).subscribe(response => {\r\n\r\n        },\r\n            (error) => { \r\n                //console.log(error)\r\n             },\r\n            () => {\r\n                this.atualizar();\r\n            }\r\n        )\r\n    }\r\n\r\n    atualizar() {\r\n        var itemsPerPage = 0;\r\n        var actualPage = 0;\r\n\r\n        this.http.get(`${this.baseUrl}/turmas/?itemsPerPage=` + itemsPerPage + `&currentPage=` + actualPage, {\r\n            //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bear \"\r\n            })\r\n        }).subscribe(response => {\r\n\r\n\r\n           // console.log(response)\r\n            Object.assign(this.turmas, response['data'])\r\n            Object.assign(this.turmas, response)\r\n            //console.log(this.turmas)\r\n\r\n        }, (err) => {\r\n           // console.log(err)\r\n            this.mensagem = \"Ocorreu um erro! Contate o Administrador!\"\r\n\r\n        },\r\n            () => {\r\n\r\n\r\n            });\r\n    }\r\n\r\n    getTurmas() {\r\n\r\n        // this.showTurmas = false\r\n        // this.showMessage = false\r\n        // this.showSpinner = true\r\n\r\n        // this._http.get(`${this.BaseUrl}/pedag/turma`)\r\n        //     .subscribe(response => {\r\n        //         this.turmas = Object.assign([], response['turmas']);\r\n        //         console.log(this.turmas)\r\n        //     },\r\n        //         (error) => {\r\n        //            // this.mensagem = \"Ocorreu um erro! Contate o Administrador!\"\r\n        //             console.log(error)\r\n        //             this.mensagem = \"Não há turmas cadastradas ou em andamento.\"\r\n        //                 this.showTurmas = false\r\n        //                 this.showMessage = true\r\n        //                 this.showSpinner = false\r\n        //         },\r\n        //         () => {                    \r\n        //                 this.showTurmas = true\r\n        //                 this.showMessage = false\r\n        //                 this.showSpinner = false                    \r\n        //         })\r\n    }\r\n\r\n    getCursos() {\r\n\r\n        var itemsPerPage = 0;\r\n        var actualPage = 0\r\n\r\n\r\n        this.showTurmas = false\r\n        this.showMessage = false\r\n        this.showSpinner = true\r\n        // console.log('get cursos 1234')\r\n        //this.http.get(`${this.baseUrl}/turmas/?itemsPerPage=` + itemsPerPage + `&currentPage=` + actualPage, {\r\n        //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n        this.http.get(`${this.baseUrl}/pedag/turma`)\r\n            .subscribe(response => {\r\n\r\n\r\n                // console.log(response)\r\n                //Object.assign(this.turmas, response['data'])\r\n                this.turmas = Object.assign([], response['turmas']);\r\n                //  console.log(this.turmas)\r\n                // this.colaboradores = Object.assign([], response['data'])\r\n                //console.log(this.colaboradores)\r\n                // this.dialogRef.close();\r\n            }, (err) => {\r\n                // console.log(err)\r\n                this.spinnerSearch = 'hidden'\r\n\r\n                this.showTable = false\r\n                this.mensagem = \"Ocorreu um erro! Contate o Administrador!\"\r\n\r\n                this.mensagem = \"Não há turmas cadastradas ou em andamento.\"\r\n                this.showTurmas = false\r\n                this.showMessage = true\r\n                this.showSpinner = false\r\n\r\n            },\r\n                () => {\r\n                    this.spinnerSearch = 'hidden'\r\n                    this.showTable = true\r\n                    this.showTurmas = true\r\n                    this.showMessage = false\r\n                    this.showSpinner = false\r\n\r\n                });\r\n\r\n    }\r\n\r\n    createCurso() {\r\n\r\n    }\r\n\r\n    // openCreateCursoModal(): void {\r\n    //     const dialogRef = this._modal\r\n    //         .open(CreateCursoComponent, {\r\n    //             height: 'auto',\r\n    //             width: '920px',\r\n    //             autoFocus: false,\r\n    //             maxHeight: '90vh',\r\n    //             //maxWidth: '400vh',\r\n\r\n    //             data: { Hello: \"Hello World\" },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n    //     // dialogRef.afterClosed().subscribe(result => {\r\n    //     //     console.log('The dialog was closed');\r\n    //     //     // this.animal = result;\r\n    //     // });\r\n\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n    //         if (result.clicked === \"OK\") {\r\n    //             this.getCursos();\r\n    //             console.log('afte close ok')\r\n    //         }\r\n\r\n    //     });\r\n    // }\r\n\r\n    listaPresenca(turma) {\r\n\r\n\r\n    }\r\n\r\n    openNotas(turma): void {\r\n\r\n        const dialogRef = this._modal.open(NotasComponent, {\r\n            height: 'auto',\r\n            width: '1030px',\r\n            autoFocus: false,\r\n            maxHeight: '90vh',\r\n            maxWidth: '400vh',\r\n            data: { turma: turma },\r\n            hasBackdrop: true,\r\n            disableClose: true\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n          //  console.log('The dialog was closed');\r\n            // this.animal = result;\r\n        });\r\n    } v\r\n\r\n    openCalendarioModal(turma: TurmaViewModel): void {\r\n        const dialogRef = this._modal\r\n            .open(CalendarioTurmaComponent, {\r\n               // height: 'auto',\r\n                width: '1230px',\r\n\r\n\r\n                //autoFocus: false,\r\n                //maxHeight: '90vh',\r\n               // maxWidth: '450vh',\r\n\r\n                data: { turma: turma },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n        //     console.log('The dialog was closed');\r\n        //     // this.animal = result;\r\n        // });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result.clicked === \"OK\") {\r\n                // this.getCursos(1, this.pageSize);\r\n                //console.log('afte close ok')\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    getAlunosFromTurma(turma: TurmaViewModel): void {\r\n        const dialogRef = this._modal\r\n            .open(TurmasInfoAlunosPedagComponent, {\r\n               // height: 'auto',\r\n                width: '1230px',\r\n               // autoFocus: false,\r\n               // maxHeight: '90vh',\r\n               // maxWidth: '400vh',\r\n\r\n                data: { turma: turma },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n        //     console.log('The dialog was closed');\r\n        //     // this.animal = result;\r\n        // });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result.clicked === \"OK\") {\r\n                // this.getCursos(1, this.pageSize);\r\n              //  console.log('afte close ok')\r\n            }\r\n\r\n        });\r\n    }\r\n    // openEditCursoModal(item: Turma): void {\r\n    //     //console.log(item)\r\n    //     const dialogRef = this._modal\r\n    //         .open(EditCursoComponent, {\r\n    //             height: 'auto',\r\n    //             width: '1030px',\r\n    //             autoFocus: false,\r\n    //             maxHeight: '90vh',\r\n    //             maxWidth: '400vh',\r\n\r\n    //             data: { turma: item },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n    //     // dialogRef.afterClosed().subscribe(result => {\r\n    //     //     console.log('The dialog was closed');\r\n    //     //     // this.animal = result;\r\n    //     // });\r\n\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n    //         //console.log('The dialog was closed');\r\n    //         // console.log(result);\r\n    //         // console.log(this.templateTasks);\r\n    //         //console.log(this.templateTasks);\r\n    //         //this.newtasks. = this.templateTasks\r\n    //         // this.templateTasks = result;\r\n    //     });\r\n    // }\r\n\r\n\r\n\r\n}\r\n","<div class=\"container\" style=\"width: 95%;\">\r\n\r\n\r\n\r\n    <!-- <span>\r\n        <i style=\"margin-left: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"criar turma\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\" >\r\n           \r\n            <mat-icon type=\"button\" style=\"font-size: 2em;\">post_add</mat-icon>\r\n           \r\n        </i>\r\n    </span> -->\r\n    <br>\r\n\r\n    <div @rowHighlight *ngIf=\"showMessage\" class=\"card-header \" style=\"background-color: rgb(227, 240, 227);\r\n    margin-top: 50px;\r\n    margin-left: 10px;\r\n    width: 350px; \r\n    font-size: 0.9em;box-shadow: 0 0 0.5em rgb(172, 170, 170);\" unselectable=\"on\" >\r\n        {{mensagem}}\r\n    </div>\r\n\r\n    <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"spinnerSearch\"  @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n\r\n    <div *ngIf=\"showTable\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n    margin-top: 10px;\r\n    box-shadow: 0 0 1em rgb(172, 170, 170);\r\n    background-color: rgb(227, 240, 227);\">\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.2em; font-weight: 400;\">\r\n                Turmas </h4>\r\n            <p class=\"card-category\">Unidade {{ tokenInfo.Unidade}}</p>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: auto;position: relative;\">\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                            text-align:left; \r\n                            vertical-align: middle;\r\n                            border-top: 0px;\"></th>\r\n\r\n\r\n                            <th style=\"width: 68%;font-size:1em;\r\n                            vertical-align: middle; \r\n                            text-align:left;\r\n                             border-top: 0px; font-weight: 400;\">TURMA/DESCRIÇÃO</th>\r\n\r\n                            <!-- <th style=\"width: 12%;font-size:1em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">Início</th>\r\n\r\n                            <th style=\"width: 8%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">Vagas</th>\r\n\r\n                            <th style=\"width: 12%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">Matriculados</th>\r\n\r\n                            <th style=\"width: 13%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">Status</th>\r\n                            </th> -->\r\n\r\n                            <th style=\"width: 30%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let item of turmas;let i = index;\">\r\n                            <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                                {{item.descricao}}<br>{{item.identificador}}</td>\r\n                            <!-- \r\n                            <td  @rowHighlight style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                                {{item.previsaoAtual | date:\"dd/MM/yy\"}}<br>\r\n                                <span @rowHighlight style=\"font-size: 0.8em;color: red;\">\r\n                                    {{item.previsao}}\r\n                                </span>\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">{{item.vagas}}</td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">{{item.totalAlunos}}\r\n                                \r\n                            </td>\r\n                            <td @rowHighlight style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">{{item.statusDaTurma}}</td>\r\n                             -->\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"calendário\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openCalendarioModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>calendar_today</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin-left: 50px;\" #tooltip=\"matTooltip\" matTooltip=\"alunos\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"getAlunosFromTurma(item)\" \r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>groups</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <!-- <i style=\"margin-left: 50px;\" #tooltip=\"matTooltip\" matTooltip=\"lista presenças\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"listaPresenca(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>fact_check</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n                                <i style=\"margin-left: 50px;\" #tooltip=\"matTooltip\" matTooltip=\"notas\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openNotas(item)\" \r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>list_alt</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"grade notas\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button \r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>calendar_today</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"grade notas\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button \r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>calendar_today</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n\r\n                                <!--\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"adiar a tumra para a próxima previsão\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"PodeAdiar(item)\"\r\n                                        (click)=\"adiar(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon style=\"font-size: 1.5em;\" class=\"material-icons-outlined\">watch_later\r\n                                        </mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"iniciar as aulas\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"item.statusDaTurma != 'Aguardando início' ? true : false\"\r\n                                        (click)=\"iniciarTurma(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon style=\"font-size: 1.5em;font-weight: 200;\"\r\n                                            class=\"material-icons-outlined\">play_arrow</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"detalhes/editar\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openEditCursoModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <!-- <mat-spinner *ngIf=\"showSpinner\" @rowHighlight [diameter]=\"100\" style=\"\r\n            left: 43.5%;\r\n            top: 40%; \r\n            position: absolute;\">\r\n    </mat-spinner> -->\r\n\r\n\r\n</div>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"home-app\",\r\n    templateUrl: './home.component.html'\r\n\r\n})\r\n\r\nexport class HomeComponent{ }","import { getTreeMultipleDefaultNodeDefsError } from \"@angular/cdk/tree\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\nimport { ProfResponse } from \"../CreateModal/createcurso.component\";\r\nimport { SaveProfsCommand } from \"../EditModal/editcurso.component\";\r\n\r\n@Component({\r\n    selector: 'addprof-modal',\r\n    templateUrl: './addprof.component.html',\r\n    styleUrls: ['./addprof.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class AddProfessorModalComponent implements OnInit {\r\n\r\n    private baseUrl = environment.baseUrl\r\n    public profRespOriginal: any[] = new Array<any>();\r\n    public profResp: any[] = new Array<any>();\r\n    public initProgressBar = 'visible'\r\n    public showContent = false\r\n    listProfId: any[] = new Array<any>()\r\n\r\n    constructor(\r\n        private _admService: AdmService,\r\n        private _helper:HelpersService,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<AddProfessorModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any\r\n    ) {\r\n\r\n    }\r\n    ngOnInit() {\r\n       // console.log(this.data['turmaId'])\r\n        this.getProfessores()\r\n    }\r\n\r\n    getProfessores() {\r\n\r\n        this._http.get(`${this.baseUrl}/pedag/turma/professores/${this.data[\"turmaId\"]}`)\r\n            .subscribe(result => {\r\n\r\n                this.profResp = result['profs']// Object.assign([], result)\r\n                this.profRespOriginal = Object.assign([], result['profs']) //.patchValue(response['colaborador']);\r\n                this.profResp = JSON.parse(JSON.stringify(this.profRespOriginal))\r\n\r\n            },\r\n                (error) => {\r\n                   // console.log(error)\r\n                    if(error['status'] == 404){\r\n                        this._helper.openSnackBarError(\"Não há professores com disponibilidades para essa turma.\")\r\n                        this.dialogRef.close({clicked: false});\r\n                    }else{\r\n                        this._helper.openSnackBarErrorDefault();\r\n                        this.dialogRef.close({clicked: false});\r\n                    }\r\n                },\r\n                () => {\r\n                    //console.log(this.profResp)\r\n                    this.dialogRef.addPanelClass('turmaaddprof-class')\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showContent = true\r\n                }\r\n            )\r\n    }\r\n\r\n    salvarProfs() {\r\n        //  console.log(this.listProfId)\r\n        this.addProfIcon = true\r\n        this.initProgressBar = 'visible'\r\n        var saveProfs: SaveProfsCommand = new SaveProfsCommand();\r\n        saveProfs.turmaId = this.data['turmaId']\r\n        saveProfs.listProfsIds = this.listProfId\r\n        //console.log(saveProfs)\r\n        this._admService.AddProfNaTurma(saveProfs)\r\n            .subscribe(\r\n                sucess => { this.salvarProfsSucesso(sucess) },\r\n                falha => { this.salvarProfsError(falha) }\r\n            )\r\n    }\r\n\r\n    private salvarProfsSucesso(resp) {\r\n        this.dialogRef.close({ clicked: true });\r\n        this.addProfIcon = false\r\n        this.initProgressBar = 'hidden'\r\n    }\r\n\r\n    private salvarProfsError(erro) {\r\n        this.addProfIcon = false\r\n        this.initProgressBar = 'hidden'\r\n    }\r\n\r\n    //console.log(this.data['turma'].id)\r\n    //console.log(profIds)\r\n    //         var saveProfs: SaveProfsCommand = new SaveProfsCommand();\r\n    // saveProfs.turmaId = this.data['turma'].id\r\n    // saveProfs.listProfsIds = profIds\r\n    // console.log(saveProfs)\r\n    // this._http.post(`${this.BaseUrl}/pedag/turma/professores`, saveProfs, {\r\n\r\n    // })\r\n    //     .subscribe(\r\n    //         (response) => {\r\n    //             console.log(response)\r\n\r\n    //             //\r\n\r\n    //         },\r\n    //         (error) => { console.log(error) },\r\n    //         () => {\r\n\r\n    //             this.GetInformacoesDaTurma(this.data['turma'].id);\r\n    //             //console.log(this.alunos)\r\n\r\n    //         }\r\n    //     )\r\n\r\n    get DisabledSave() {\r\n\r\n        return JSON.stringify(this.profRespOriginal) != JSON.stringify(this.profResp)\r\n    }\r\n\r\n    public AddProf(profId) {\r\n        this.addProfIcon = true\r\n        this.listProfId.push(profId)\r\n\r\n        this.salvarProfs()\r\n\r\n    }\r\n\r\n    addProfIcon = false\r\n    get disabledAddProf() {\r\n\r\n        return this.addProfIcon;\r\n    }\r\n\r\n\r\n    // onCheckboxChange(event: any, profId) {\r\n    //     console.log(profId)\r\n    //     console.log(event.checked)\r\n\r\n    //     if (event.checked) {\r\n    //         this.listProfId.push(profId)\r\n    //     } else {\r\n    //         let index = this.listProfId.indexOf(profId)\r\n    //         this.listProfId.splice(index, 1);\r\n    //     }\r\n\r\n    //     console.log(this.listProfId)\r\n    // }\r\n}","<!-- <div style=\"font-size: 1.2em;\">Adicionar Professor\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<hr>\r\n\r\n<div style=\"height: 450px; position: relative;\" *ngIf=\"showContent\" @rowHighlight>\r\n\r\n    <table style=\"margin-bottom: 0px;\" class=\"table\">\r\n\r\n        <thead>\r\n            <tr>\r\n                <th style=\"width: 2%; \r\n            text-align:left; \r\n            vertical-align: middle;\r\n            border-top: 0px;\"></th>\r\n\r\n\r\n                <th style=\"width: 27%;font-size:1em;\r\n            vertical-align: middle;\r\n            text-align:left;\r\n             border-top: 0px; font-weight: 400;\">NOME</th>\r\n\r\n                <th style=\"width: 25%;font-size:1em;\r\n            vertical-align: middle;\r\n            text-align:center;\r\n            border-top: 0px; font-weight: 400;\">E-MAIL</th>\r\n\r\n                <th style=\"width: 17%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">\r\n\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            <tr *ngFor=\"let prof of profResp\">\r\n\r\n                <td style=\"text-align:center;vertical-align: middle;\"></td>\r\n\r\n                <td style=\"text-align:left;vertical-align: middle;\">\r\n                    {{prof.nome}}\r\n                </td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;\">\r\n                    {{prof.email}}\r\n                </td>\r\n\r\n                <td style=\"position: relative; float: right;\">\r\n                    <mat-checkbox style=\"margin-right: 5px;\" (change)=\"onCheckboxChange($event, prof.id)\"\r\n                        type=\"checkbox\" color=\"primary\" class=\"example-margin\" name=\"checked\">\r\n                    </mat-checkbox>\r\n                </td>\r\n\r\n            </tr>\r\n\r\n        </tbody>\r\n\r\n    </table>\r\n\r\n</div>\r\n<div *ngIf=\"showContent\" style=\"float:right;bottom: 0; margin-left: 10px;\">\r\n    <button (click)=\"salvarProfs()\" [disabled]=\"DisabledSave\" color=\"primary\" type=\"submit\" mat-raised-button\r\n        disabled=\"false\">\r\n        Salvar\r\n    </button>\r\n</div> -->\r\n\r\n\r\n<div style=\"font-size: 1.2em;\">Adicionar Professor\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<hr>\r\n\r\n<div style=\"height: 450px; position: relative;\" *ngIf=\"showContent\" @rowHighlight>\r\n\r\n    <table style=\"margin-bottom: 0px;\" class=\"table\">\r\n\r\n        <thead>\r\n            <tr>\r\n                <th style=\"width: 2%; \r\n            text-align:left; \r\n            vertical-align: middle;\r\n            border-top: 0px;\"></th>\r\n\r\n\r\n                <th style=\"width: 27%;font-size:1em;\r\n            vertical-align: middle;\r\n            text-align:left;\r\n             border-top: 0px; font-weight: 400;\">NOME</th>\r\n\r\n                <th style=\"width: 25%;font-size:1em;\r\n            vertical-align: middle;\r\n            text-align:center;\r\n            border-top: 0px; font-weight: 400;\">E-MAIL</th>\r\n\r\n                <th style=\"width: 17%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">\r\n\r\n                </th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            <tr *ngFor=\"let prof of profResp\">\r\n\r\n                <td style=\"text-align:center;vertical-align: middle;\"></td>\r\n\r\n                <td style=\"text-align:left;vertical-align: middle;\">\r\n                    {{prof.nome}}\r\n                </td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;\">\r\n                    {{prof.email}}\r\n                </td>\r\n\r\n                <td style=\"position: relative; float: right;\">\r\n                    <!-- <mat-checkbox style=\"margin-right: 5px;\" (change)=\"onCheckboxChange($event, prof.id)\"\r\n                        type=\"checkbox\" color=\"primary\" class=\"example-margin\" name=\"checked\">\r\n                    </mat-checkbox> -->\r\n\r\n                    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"adicionar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button type=\"button\" (click)=\"AddProf(prof.id)\" [disabled]=\"disabledAddProf\" style=\"\" mat-icon-button>\r\n                        <mat-icon  >person_add_alt</mat-icon>\r\n                    </button>\r\n                </i>\r\n                </td>\r\n\r\n            </tr>\r\n\r\n        </tbody>\r\n\r\n    </table>\r\n\r\n</div>\r\n<!-- <div *ngIf=\"showContent\" style=\"float:right;bottom: 0; margin-left: 10px;\">\r\n    <button (click)=\"salvarProfs()\" [disabled]=\"DisabledSave\" color=\"primary\" type=\"submit\" mat-raised-button\r\n        disabled=\"false\">\r\n        Salvar\r\n    </button>\r\n</div> -->","import { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { Router } from \"@angular/router\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { AuthService } from \"src/app/_Auth/auth.service\";\r\nimport { TrocaSenhaComponent } from \"src/app/_Auth/user/trocaSenha/troca-senha.component\";\r\nimport { TokenInfos } from \"../models/token.model\";\r\n\r\ndeclare interface RouteInfo {\r\n    path: string;\r\n    title: string;\r\n    class: string;\r\n    //typeIcon: string;\r\n}\r\n\r\nexport const ROUTES: RouteInfo[] = [\r\n    { path: './adm', title: 'Administrativo', class: '' },\r\n    { path: './newmat', title: 'Matrícula', class: '', },\r\n    { path: './pedag', title: 'Pedagógico', class: '', },\r\n   // { path: './comercial', title: 'Comercial', class: '', },\r\n    { path: './financeiro', title: 'Financeiro', class: '', }\r\n   // { path: './aluno', title: 'Aluno', class: '', }\r\n   // { path: './geral', title: 'Master', class: '', },\r\n    //{ path:'./operadorUP', title:'Painel Técnicos Externos', class:''},\r\n    //{ path: '/adm/colaboradores', title: 'Colaboradores', class: '', typeIcon: 'engineering' },\r\n    //{ path: '/adm/produtos', title: 'Produtos', class: '', typeIcon: 'fact_check' },\r\n]\r\n\r\n\r\nexport const ROUTESTESTE: RouteInfo[] = []\r\n   \r\n\r\n@Component({\r\n    selector: 'navbar',\r\n    templateUrl: './navbar.component.html',\r\n    styleUrls: ['navbar.component.scss']\r\n})\r\n\r\nexport class NavBarComponent implements OnInit {\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n\r\n    menu: any;\r\n    constructor(\r\n        private _router: Router,\r\n        public authService: AuthService,\r\n        private _modal: MatDialog,\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n      //  console.log('enter navBar')\r\n      const token = localStorage.getItem('jwt')\r\n      this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        //ROUTESTESTE = this.tokenInfo.Telas\r\n        this.menu = ROUTES.filter(menu => menu);\r\n        //this.isUserAuthenticated();\r\n    }\r\n\r\n    trocarSenha() {\r\n        const dialogRef = this._modal\r\n            .open(TrocaSenhaComponent, {\r\n                height: '420px',\r\n                width: '360px',\r\n                autoFocus: false,\r\n                maxHeight: '400vh',\r\n\r\n                data: {},\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === true) {\r\n\r\n                localStorage.removeItem(\"jwt\");\r\n                \r\n                this._router.navigateByUrl('user/login');\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"jwt\");\r\n        this._router.navigateByUrl('user/login');\r\n    }\r\n\r\n}","<nav class=\"navbar navbar-expand-md .bg-success.bg-gradient\" style=\"height: 60px;\r\nbackground-color: rgb(73, 168, 73);\r\nbox-shadow: 2px 2px 4px 4px rgba(0, 0, 0, 0.2), \r\n10px 6px 20px 0 rgba(0, 0, 0, 0.19);\">\r\n    <img class=\"bg-primary\"\r\n        style=\"margin-left: 70px; width:70px; color:white; border:none; background: rgba(202, 134, 44, 0);\"\r\n        type=\"button\" src=\"../../../assets/img/logo4.png\" alt=\"\" class=\"img-thumbnail\">\r\n    <div class=\"container-fluid\">\r\n        <!-- <a class=\"navbar-brand\" style=\"color: aliceblue;margin-left: 30px;font-size: 2em;\" href=\"#\">Invictus</a> -->\r\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse\"\r\n            aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n            <!-- <ul style=\"margin-left: 45px;\"\r\n            class=\"navbar-nav me-auto mb-2 mb-md-0\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link active\" style=\"color: aliceblue;\" aria-current=\"page\"\r\n                        routerLink='/adm'>Administrativo</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link active\" style=\"color: aliceblue;\" aria-current=\"page\"\r\n                        routerLink='/pedag'>Pedagógico</a>\r\n                </li>\r\n\r\n            </ul> -->\r\n\r\n            <ul  style=\"margin-left: 45px;\"\r\n                class=\"navbar-nav me-auto mb-2 mb-md-0\">\r\n                <li *ngFor=\"let item of menu\" routerLinkActive=\"active\" \r\n                class=\"nav-item {{item.class}}\">\r\n                    <a class=\"nav-link active\" style=\"margin-right: 30px; font-size: 1em;color: aliceblue;\" aria-current=\"page\"\r\n                        [routerLink]=[item.path]>{{item.title}}</a>\r\n                </li>\r\n            </ul>\r\n\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <!-- <li class=\"nav-item\">\r\n                    Olá, Fulano\r\n                </li> -->\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button mat-button [matMenuTriggerFor]=\"afterMenu\"><img src=\"../../../assets/img/nophoto.png\" alt=\"\" width=\"32\" height=\"32\" class=\"rounded-circle me-2\"></button>\r\n                    <mat-menu #afterMenu=\"matMenu\" xPosition=\"after\">\r\n                      <button style=\"height: 30px;\" type=\"button\" (click)=\"trocarSenha()\" mat-menu-item>trocar senha</button>\r\n                      <!-- <button style=\"height: 30px;\" mat-menu-item>perfil</button>                       -->\r\n                      <button  style=\"height: 30px;\" (click)=\"logout()\" mat-menu-item>sair</button>\r\n                    </mat-menu>\r\n\t\t\t\t</li>\r\n\t\t\t\t\r\n\t\t\t</ul>\r\n        </div>\r\n    </div>\r\n</nav>","import { Injectable } from '@angular/core';\r\nimport * as signalR from \"@aspnet/signalr\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignalRService {\r\n  public data: ChartModel[];\r\n  public bradcastedData: ChartModel[];\r\n  public connectionId: string;\r\n\r\n  private hubConnection: signalR.HubConnection\r\n\r\n  public startConnection = () => {\r\n    this.hubConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl('https://localhost:5001/chart', {\r\n        skipNegotiation: true,\r\n        transport: signalR.HttpTransportType.WebSockets\r\n      })\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .then(() => console.log('Connection started'))\r\n      .then(() => this.getConnectionId())\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  public addTransferChartDataListener = () => {\r\n    this.hubConnection.on('transferchartdata', (data) => {\r\n      this.data = data;\r\n   //   console.log(data);\r\n    });\r\n  }\r\n\r\n  public getConnectionId = () => {\r\n    this.hubConnection.invoke('getconnectionid').then(\r\n      (data) => {\r\n        console.log(data);\r\n          this.connectionId = data;\r\n        }\r\n    ); \r\n  }\r\n\r\n  public broadcastChartData = () => {\r\n    const data = this.data.map(m => {\r\n      const temp = {\r\n        data: m.data,\r\n        label: m.label\r\n      }\r\n      return temp;\r\n    });\r\n //   console.log('broadcast GET!!!!!!!!!!!!!!!!!!')\r\n    this.hubConnection.invoke('broadcastchartdata', this.data, this.connectionId)\r\n    .catch(err => console.error(err));\r\n  }\r\n\r\n\r\n  public addBroadcastChartDataListener = () => {\r\n   // console.log('addBroadcastChartDataListener')\r\n    this.hubConnection.on('broadcastchartdata', (data) => {\r\n      this.bradcastedData = data;\r\n    })\r\n  }\r\n}\r\n\r\nexport interface ChartModel {\r\n    data: [],\r\n    label: string\r\n}\r\n\r\n","import { Modulo } from \"src/app/_shared/models/modulo.model\";\r\nimport { Sala } from \"./sala.model\";\r\n\r\nexport class CreateTurmaViewModel{\r\n    constructor(\r\n        public modulos?: Modulo[],\r\n        public salas?: Sala[],\r\n        //public pacotes?: Pacote[]\r\n        public planos?: PlanoPagamento[]\r\n    ){\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class Pacote{\r\n    constructor(\r\n        public id?:number,\r\n        public descricao?: string,\r\n        public unidadeId?: number\r\n    ){\r\n\r\n    }\r\n}\r\nexport class PlanoPagamento{\r\n    constructor(\r\n        public id?:number,\r\n        public pacoteId?:number,\r\n        public descricao?:string,\r\n        public valor?:number,\r\n        public taxaMatricula?:number,\r\n        public parcelamento?:string,\r\n        public materialGratuito?: boolean,\r\n        public bonusMensalidade?:number,\r\n        public contratoId?:number,\r\n\r\n    ){\r\n\r\n    }\r\n\r\n\r\n\r\n}","import {Pipe} from '@angular/core';\r\n \r\n@Pipe({\r\n    name: 'myCurrencyPipe'\r\n})\r\nexport class MyCurrencyPipe {\r\n    transform(value: number,\r\n        currencySign: string = 'R$ ',\r\n        decimalLength: number = 2, \r\n        chunkDelimiter: string = '.', \r\n        decimalDelimiter:string = ',',\r\n        chunkLength: number = 3): string \r\n        {\r\n\r\n        value /= 100;\r\n\r\n        let result = '\\d(?=(\\d{' + chunkLength + '})+' + (decimalLength > 0 ? '\\D' : '$') + ')';\r\n        let num = value.toFixed(Math.max(0, ~~decimalLength));\r\n\r\n        return currencySign+(decimalDelimiter ? num.replace('.', decimalDelimiter) : num).replace(new RegExp(result, 'g'), '$&' + chunkDelimiter);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { BaseService } from 'src/app/_shared/services/base.service';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class PedagogicoService extends BaseService {\r\n    \r\n    constructor(private http: HttpClient) { super(); }\r\n\r\n\r\n    // Estagio\r\n\r\n    public GetEstagios() : Observable<any> {  \r\n\r\n        let path = `/estagio`\r\n        \r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    public GetEstagio(estagioId) : Observable<any> {  \r\n\r\n        let path = `/estagio/${estagioId}`\r\n        \r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    public AddEstagio(estagio): Observable<any>{\r\n\r\n        let path = `/estagio`\r\n       // console.log(estagio)\r\n        let response = this.http\r\n            .post(this.BaseUrl + path, estagio, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    public EditEstagio(estagio): Observable<any>{\r\n\r\n        let path = `/estagio`\r\n        \r\n        let response = this.http\r\n            .put(this.BaseUrl + path, estagio, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    // EstagiosDocs\r\n\r\n    public GetAlunosEstagio(pageSize?: number, currentPage?: number, jsonParam?: any) : Observable<any> {       \r\n\r\n        var formJson = JSON.stringify(jsonParam)\r\n\r\n        let path = `/estagio/alunos/?itemsPerPage=` + pageSize + `&currentPage=${currentPage}&paramsJson=${formJson}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    // OUTROS\r\n    getInfoDebitos(matriculaId: any) : Observable<any> {  \r\n\r\n        let path = `/financeiro/debitos/${matriculaId}`\r\n        \r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    getAlunos(pageSize?: number, currentPage?: number, jsonParam?: any) : Observable<any> {       \r\n\r\n        var formJson = JSON.stringify(jsonParam)\r\n\r\n        let path = `/alunos/pesquisar/?itemsPerPage=` + pageSize + `&currentPage=${currentPage}&paramsJson=${formJson}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    getAllAlunos(pageSize?: number, currentPage?: number, jsonParam?: any) : Observable<any> {       \r\n\r\n        var formJson = JSON.stringify(jsonParam)\r\n\r\n        let path = `/alunos/get-all/?itemsPerPage=` + pageSize + `&currentPage=${currentPage}&paramsJson=${formJson}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    //TurmasInfos.CalendariosDaTurma.AulaDetalhe\r\n\r\n    public GetAulaViewModel(calendarioId) : Observable<any> {    \r\n\r\n        let path = `/pedag/turma/aula/${calendarioId}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    public GetAulaEditViewModel(calendarioId) : Observable<any> {    \r\n\r\n        let path = `/pedag/turma/aula-edit/${calendarioId}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    public GetProfsHabilitados(calendarioId, materiaId): Observable<any> {\r\n\r\n        let path = `/pedag/turma/aula-edit/profs/${calendarioId}/${materiaId}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    public EditAula(aula, calendarioId): Observable<any>{\r\n\r\n        let path = `/pedag/turma/calendario/editar/${calendarioId}`\r\n        \r\n        let response = this.http\r\n            .put(this.BaseUrl + path, aula, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    // infos.component\r\n\r\n    saveAluno(form): Observable<any>{\r\n\r\n        let path = `/alunos`\r\n        \r\n        let response = this.http\r\n            .put(this.BaseUrl + path, form, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n    \r\n\r\n    getAlunobyId(id) : Observable<any> {    \r\n\r\n        let path = `/alunos/cadastro/${id}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    saveResponsavel(form): Observable<any>{\r\n\r\n        let path = `/pedag/aluno/responsavel`\r\n        console.log(form)\r\n        let response = this.http\r\n            .put(this.BaseUrl + path, form, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    GetResponsavelById(id) : Observable<any> {       \r\n\r\n        let path = `/pedag/aluno/responsavel-aluno/${id}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    public GetCertificado(matriculaId) : Observable<any> {       \r\n\r\n        let path = `/pedag/aluno/certificado/${matriculaId}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    // Matricula Modal\r\n\r\n    GetBolsa(senha) : Observable<any> {       \r\n\r\n        let path = `/bolsa/senha-validar/${senha}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    GetAlunosIndicacao() : Observable<any> {       \r\n\r\n        let path = `/pedag/matricula/aluno-indicacao`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n\r\n    // DOWNLOAD\r\n\r\n    GetDocumento(matriculaId) : Observable<any> {       \r\n\r\n        let path = `/pedag/doc/getpendencia/${matriculaId}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderDownload())\r\n            .pipe(\r\n                map(this.extractDataDownload),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n\r\n    // ACESSO ALUNO\r\n\r\n    getAlunosAcesso(pageSize?: number, currentPage?: number, jsonParam?: any) : Observable<any> {       \r\n\r\n        var formJson = JSON.stringify(jsonParam)\r\n\r\n        let path = `/alunos/matriculados/?itemsPerPage=` + pageSize + `&currentPage=${currentPage}&paramsJson=${formJson}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    editAcesso(email, acesso) : Observable<any> {       \r\n\r\n        let path = `/usuario/aluno-acesso/${email}/${acesso}`\r\n\r\n        let response = this.http\r\n            .put(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    envioAcesso(email) : Observable<any> {       \r\n\r\n        let path = `/usuario/envio-acesso/${email}`\r\n\r\n        let response = this.http\r\n            .put(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n/*\r\n    getColaboradores(pageSize?: number, currentPage?: number, jsonParam?: any) : Observable<any> {       \r\n        \r\n        var formJson = JSON.stringify(jsonParam)\r\n\r\n        let path = `/colaboradores/pesquisar/?itemsPerPage=` + pageSize + `&currentPage=${currentPage}&paramsJson=${formJson}`\r\n        \r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    getTypePacotes() : Observable<any> {  \r\n\r\n        let path = `/typepacote`\r\n        \r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    getMateriasByTypeId(typePacoteId: any) : Observable<any>{\r\n        let path = `/materia-template/filtro/${typePacoteId}`\r\n        \r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    saveProfessorMateria(profId: any,materiaId: any ) : Observable<any>{\r\n        let path = `/professor/materia/${profId}/${materiaId}`\r\n        \r\n        let response = this.http\r\n            .post(this.BaseUrl + path, {}, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    editDisponibilidade(dispo: any) : Observable<any>{\r\n        let path = `/professor/disponibilidade`\r\n        \r\n        let response = this.http\r\n            .put(this.BaseUrl + path, dispo, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    CepConsulta(CEP?: any) : Observable<any> {       \r\n        \r\n        let url = `https://viacep.com.br/ws/${CEP}/json/`\r\n        \r\n        let response = this.http\r\n            .get(url)\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    pesquisarPacote(typePacoteId:any, unidadeId:any): Observable<any>{\r\n\r\n        let path = `/pacote/${typePacoteId}/${unidadeId}`\r\n        \r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n\r\n    }\r\n\r\n    GetCreateModuleViewModel(): Observable<any>{\r\n\r\n        let path = `/pacote/create`\r\n        \r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n\r\n    }\r\n\r\n    GetEditModuleViewModel(pacoteId): Observable<any>{\r\n\r\n        let path = `/pacote/edit/${pacoteId}`\r\n        \r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n\r\n    }\r\n\r\n    savePacote(newPacote): Observable<any>{\r\n\r\n        let path = `/pacote`\r\n        \r\n        let response = this.http\r\n            .post(this.BaseUrl + path, newPacote, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    editPacote(editedPacote): Observable<any>{\r\n\r\n        let path = `/pacote`\r\n        \r\n        let response = this.http\r\n            .put(this.BaseUrl + path, editedPacote, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n*/\r\n\r\n    // console.log(CEP);\r\n    // if (CEP.length == 10) {\r\n\r\n\r\n    //     //var mystring = \"crt/r2002_2\";\r\n    //     CEP = CEP.replace('-', '');\r\n    //     CEP = CEP.replace('.', '');\r\n    //     console.log(CEP);\r\n    //     this.http.get(`https://viacep.com.br/ws/${CEP}/json/`, {})\r\n    //         .subscribe(response => {\r\n\r\n    //             //  console.log(response)\r\n    //             // this.cepReturn = new CepReturn(\r\n    //             //     response[\"logradouro\"],\r\n    //             //     response[\"bairro\"],\r\n    //             //     response[\"localidade\"],\r\n    //             //     response[\"uf\"]);\r\n    //             //console.log(this.cepReturn)\r\n    //             this.colaboradorForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n    //             this.colaboradorForm.get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n    //             this.colaboradorForm.get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n    //             this.colaboradorForm.get('uf').setValue(response[\"uf\"].toUpperCase());\r\n    //             //this.bairro = this.cepReturn.bairro\r\n    //             // const token = (<any>response).accessToken;\r\n    //             // console.log(response)\r\n    //             // localStorage.setItem(\"jwt\", token);\r\n    //             // this.invalidLogin = false;\r\n    //             // this.router.navigate([\"/main\"]);\r\n    //         }, err => { console.log(err) },\r\n    //             () => {\r\n    //                 //  console.log('finaly')\r\n    //                 this.showEndereco = true\r\n      \r\n\r\n\r\n}","import { Component, Inject, Input, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { CheckedRespFinanc, CheckedRespMenor, CienciaCurso } from \"../../Matricula/CreateModal/creatematricula.component\";\r\nimport { Turma, TurmaViewModel } from \"src/app/_shared/models/Turma.model\";\r\n\r\n\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'transfexternamodal',\r\n    templateUrl: './transfexterna.component.html',\r\n    styleUrls: ['./transfexterna.component.scss'],\r\n    animations: [HighlightTrigger] //@rowHighlight\r\n})\r\n\r\nexport class TransferenciaExternaComponent implements OnInit {\r\n\r\n    showSerch = true\r\n    baseUrl = environment.baseUrl;\r\n    alunoResponse: Aluno[] = new Array<Aluno>();\r\n    showFormCadastro = false\r\n    showFormCadastroTab = false\r\n    showAlunoResponseList = false\r\n    showFormRespFinanc = false\r\n    showTabMenorIdade = false\r\n    showPerguntaRespFinanc = true\r\n    checkedRespFinanc = CheckedRespFinanc\r\n    checkedRespMenor = CheckedRespMenor\r\n    cienciaCurso = CienciaCurso\r\n\r\n    public cepReturn: CepReturn = new CepReturn();\r\n    public cepReturn2: CepReturn = new CepReturn();\r\n    public cepReturn3: CepReturn = new CepReturn();\r\n    showEndercoField = false\r\n\r\n    mensagem = \"\";\r\n    showMensagem = false\r\n    tabs = ['Cadastro', 'Responsável Financeiro', 'Responsável (menor)'\r\n        , 'Matrícula', 'Documentação'];\r\n    cpfAluno: string = \"\"\r\n\r\n    public cpfForm: FormGroup;\r\n    public alunoForm: FormGroup\r\n    public responsavelMenorForm: FormGroup;\r\n    public responsavelFinancForm: FormGroup;\r\n    public matriculaTurmaForm: FormGroup;\r\n\r\n    public parentForm: FormGroup\r\n\r\n    temRespFinanc: AbstractControl;\r\n    menorEhRespFinanc: AbstractControl;\r\n    dataNascimento: AbstractControl;\r\n\r\n    ehMenor: boolean;\r\n\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<TransferenciaExternaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.cpfForm = _fb.group({\r\n            cpf: ['', [Validators.required, Validators.minLength(11), Validators.maxLength(11)]]\r\n        })\r\n\r\n        this.alunoForm = _fb.group({\r\n            nome: ['', [Validators.required, Validators.minLength(2)]],\r\n            nomeSocial: [''],\r\n            cpf: ['', [Validators.required, Validators.minLength(11), Validators.maxLength(11)]],\r\n            rg: ['', [Validators.required, Validators.minLength(9), Validators.maxLength(9)]],\r\n            nascimento: ['', [Validators.required]],\r\n            naturalidade: ['', [Validators.required]],\r\n            naturalidadeUF: ['', [Validators.required]],\r\n            temRespFin: [true, [Validators.required]],\r\n            email: ['', [Validators.required, Validators.minLength(3)]],\r\n            telReferencia: [null, [Validators.minLength(0)]],\r\n            nomeContatoReferencia: ['', [Validators.required, Validators.minLength(2)]],\r\n            telCelular: [null, [Validators.minLength(0)]],\r\n            telWhatsapp: [null, [Validators.minLength(10)]],\r\n            telResidencial: [null, [Validators.minLength(9)]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            cienciaCurso: [''],\r\n            unidadeCadastrada: [''],\r\n            observacoes: ['', [Validators.maxLength(300)]],\r\n\r\n\r\n        })\r\n\r\n        this.responsavelFinancForm = _fb.group({\r\n            nome: ['', [Validators.required, Validators.minLength(2)]],\r\n            cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n            rg: ['', [Validators.required, Validators.minLength(9)]],\r\n            nascimento: ['', [Validators.required]],\r\n            parentesco: ['', [Validators.required]],\r\n            naturalidade: ['', [Validators.required]],\r\n            naturalidadeUF: ['', [Validators.required]],\r\n            email: ['', [Validators.required, Validators.minLength(5)]],\r\n            telCelular: [null, [Validators.minLength(0)]],\r\n            telWhatsapp: [null, [Validators.minLength(10)]],\r\n            telResidencial: [null, [Validators.minLength(9)]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            observacoes: ['', [Validators.minLength(1), Validators.maxLength(300)]]\r\n        })\r\n\r\n        this.responsavelMenorForm = _fb.group({\r\n            nome: ['', [Validators.required, Validators.minLength(2)]],\r\n            cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n            rg: ['', [Validators.required, Validators.minLength(9)]],\r\n            nascimento: ['', [Validators.required]],\r\n            parentesco: ['', [Validators.required]],\r\n            naturalidade: ['', [Validators.required]],\r\n            naturalidadeUF: ['', [Validators.required]],\r\n            eRespFinanc: [true, [Validators.required]],\r\n            email: ['', [Validators.required, Validators.minLength(5)]],\r\n            telCelular: [null, [Validators.minLength(0)]],\r\n            telWhatsapp: [null, [Validators.minLength(10)]],\r\n            telResidencial: [null, [Validators.minLength(9)]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            observacoes: ['', [Validators.minLength(1), Validators.maxLength(300)]]\r\n        })\r\n\r\n        this.matriculaTurmaForm = _fb.group({\r\n            cienciaCurso: ['', [Validators.required]],\r\n            turmaId: ['', [Validators.required]],\r\n        })\r\n\r\n        this.parentForm = _fb.group({\r\n            alunoDto: this.alunoForm,\r\n            respAlunoDto: this.responsavelFinancForm,\r\n            respMenorDto: this.responsavelMenorForm,\r\n            turma: this.matriculaTurmaForm\r\n        })\r\n\r\n        //     this.myForm = fb.group({\r\n        //   'sku':  ['', Validators.required]\r\n        // });\r\n\r\n        this.temRespFinanc = this.alunoForm.controls['temRespFin'];\r\n        this.dataNascimento = this.alunoForm.controls['nascimento'];\r\n        this.menorEhRespFinanc = this.responsavelMenorForm.controls['eRespFinanc'];\r\n\r\n        this.temRespFinanc.valueChanges.subscribe(\r\n            (value: string) => {\r\n                console.log('temRespFin changed to:', value);\r\n                //this.alunoForm.get('temRespFin').setValue(value);\r\n                console.log(this.alunoForm.get('temRespFin').value)\r\n                this.eHRespFinan(Boolean(value))\r\n\r\n            }\r\n        );\r\n\r\n        this.menorEhRespFinanc.valueChanges.subscribe(\r\n            (value: string) => {\r\n                console.log('temRespFin changed to:', value);\r\n                //this.responsavelMenorForm.get('eRespFinanc').setValue(value);\r\n                console.log(this.responsavelMenorForm.get('eRespFinanc').value)\r\n                this.eHRespMenorEFinan(Boolean(value))\r\n\r\n            }\r\n        );\r\n\r\n        this.dataNascimento.valueChanges.subscribe(\r\n            (value: string) => {\r\n                if (value == null) {\r\n\r\n                } else {\r\n                    console.log('temRespFin changed to:', value);\r\n                    this.EhMenor(new Date(value))\r\n                }\r\n\r\n            }\r\n        );\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.showSerch = true\r\n        this.showAlunoResponseList = false\r\n        this.showFormCadastro = false\r\n        this.showFormCadastroTab = false\r\n        this.showPerguntaRespFinanc = true\r\n        this.checkedRespFinanc.sim = true// = CheckedRespFinanc\r\n        this.checkedRespFinanc.nao = false// = CheckedRespFinanc\r\n        this.checkedRespMenor.sim = true// CheckedRespMenor\r\n        this.checkedRespMenor.nao = false// = CheckedRespMenor\r\n        this.showFormRespFinanc = false\r\n        this.showTabMenorIdade = false\r\n        //this.showMatricula = false\r\n        //this.showSelectCursoSearch = false\r\n        //this.showTableCursosAndamento = fal\r\n    }\r\n\r\n    onInputChange(event) {\r\n        console.log(event)\r\n        let newVal = event.replace(/\\D/g, '');\r\n        // if (backspace && newVal.length <= 6) {\r\n        //   newVal = newVal.substring(0, newVal.length - 1);\r\n        // }\r\n        if (newVal.length === 0) {\r\n            newVal = '';\r\n        } else if (newVal.length <= 3) {\r\n            newVal = newVal.replace(/^(\\d{0,3})/, '$1');\r\n        } else if (newVal.length <= 6) {\r\n            newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})/, '$1.$2');\r\n        } else if (newVal.length <= 9) {\r\n            newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})/, '$1.$2.$3');\r\n        } else if (newVal.length <= 11) {\r\n            newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})(\\d{0,2})/, '$1.$2.$3-$4');\r\n        } else {\r\n            newVal = newVal.substring(0, 11);\r\n            newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(\\d{0,3})(\\d{0,2})/, '$1.$2.$3-$4');\r\n        }\r\n        return newVal;\r\n    }\r\n\r\n    resposta: any\r\n    HasMessage: any\r\n    consulta(form: FormGroup) {\r\n\r\n        if (!this.cpfForm.valid) {\r\n            // TODO: sendo form alert: selecionar ao menos um\r\n            return;\r\n        }\r\n\r\n        this._http.get(`${this.baseUrl}/transferencia/?query={\"nome\":\"\",\"email\":\"\",\"cpf\":\"${this.cpfForm.get('cpf').value}\"}`)\r\n            .subscribe(response => {\r\n                console.log(response)\r\n\r\n                //this.alunoResponse = Object.assign([], response)\r\n                this.resposta = response\r\n                console.log(response)\r\n                // if(response != null){\r\n                // this.HasMessage = response['message']\r\n                // }\r\n\r\n\r\n            }, err => {\r\n                //console.log(err)\r\n                //console.log(err['status'])\r\n                //console.log(err['error'].message)\r\n                if (err['status'] == 409) {\r\n                    this.mensagem = err['error'].message\r\n                    this.showMensagem = true\r\n                }\r\n            },\r\n                () => {\r\n                    console.log(this.alunoResponse)\r\n\r\n                    // if(this.HasMessage != undefined){\r\n                    //     this.showMensagem = true\r\n                    //     this.mensagem = this.resposta['message']\r\n                    // }else{\r\n                    ///this.alunoResponse = Object.assign([], this.resposta)\r\n                    this.cpfAluno = this.onInputChange(this.cpfForm.get('cpf').value);\r\n                    this.alunoForm.get('cpf').setValue(this.cpfForm.get('cpf').value)\r\n                    this.showFormCadastro = true\r\n                    this.showSerch = false\r\n                    this.getCursos(0, 0)\r\n\r\n                    //}\r\n                });\r\n    }\r\n\r\n    showTableCursosAndamento: boolean = false\r\n    turmasParaMatricular: TurmaViewModel[] = new Array<TurmaViewModel>()\r\n    consultarCursos(item: any) {\r\n        console.log(item)\r\n        console.log('consultarCursos')\r\n        if (item == \"\") {\r\n            // TODO: sendo form alert: selecionar ao menos um\r\n            return;\r\n        }\r\n\r\n        // cpf = \"\"\r\n\r\n        this._http.get(`${this.baseUrl}/turmas/pesquisa/?curso=${item}`)\r\n            .subscribe(response => {\r\n\r\n                console.log(response)\r\n                this.turmasParaMatricular = Object.assign([], response)\r\n\r\n\r\n            }, err => {\r\n                console.log(err)\r\n            },\r\n                () => {\r\n\r\n                    this.showTableCursosAndamento = true\r\n\r\n                    console.log(this.turmasParaMatricular)\r\n                    // if (this.alunoResponse.length == 0) {\r\n                    //     // show form vazia\r\n                    //     this.showForm = true\r\n                    //     this.showSerch = false\r\n                    //     // this.dialogRef.updateSize('900px','630px')\r\n                    // } else if (this.alunoResponse.length == 1) {\r\n                    //     this.showForm = true\r\n                    //     this.showSerch = false\r\n                    //     // this.dialogRef.updateSize('900px','630px')\r\n                    //     // atribuir valores ao formControl\r\n                    // } else if (this.alunoResponse.length > 1) {\r\n                    //     this.showAlunoResponseList = true\r\n                    //     //this.dialogRef.updateSize('900px','auto')\r\n                    // }\r\n\r\n                });\r\n\r\n    }\r\n\r\n    turmaSelecionada: TurmaViewModel = new TurmaViewModel();\r\n    showFormFinal: boolean = false\r\n    previAtual: string\r\n    previTerminoAtual: string\r\n    hideCursoSearchAndMessage = true\r\n    horarioTurma: string = \"\"\r\n\r\n    selecionarTurma(turma: Turma) {\r\n        console.log(turma)\r\n        Object.assign(this.turmaSelecionada, turma)\r\n        console.log(this.turmaSelecionada)\r\n        this.matriculaTurmaForm.get('turmaId').setValue(turma.id)\r\n        this.horarioTurma = `${this.turmaSelecionada.initialHourOne} às ${this.turmaSelecionada.finalHourOne}`\r\n        //this.hideCursoSearchAndMessage = false\r\n        this.hideCursoSearchAndMessage = false\r\n        this.showSelectCursoSearch = false\r\n        this.showTableCursosAndamento = false\r\n        this.showFormFinal = true\r\n        this.previAtual = `${new Date(this.turmaSelecionada.previsaoAtual).toLocaleDateString()}`\r\n        this.previTerminoAtual = `${new Date(this.turmaSelecionada.previsaoTerminoAtual).toLocaleDateString()}`\r\n    }\r\n\r\n    voltar() {\r\n        this.hideCursoSearchAndMessage = false\r\n        this.showSelectCursoSearch = false\r\n        this.showTableCursosAndamento = true\r\n        this.showFormFinal = false\r\n    }\r\n\r\n    EhMenor(data: Date) {\r\n        console.log(data);\r\n        // console.log(event.target.value);\r\n        //console.log(this.alunoForm.get('nascimento').value)\r\n        //var dataForm: Date = new Date(this.alunoForm.get('nascimento').value)\r\n        //console.log(dataForm)\r\n        // console.log(dataForm.dia)\r\n        //var nascimento = new Date(parseInt(dataForm?.ano), parseInt(dataForm?.mes) - 1, parseInt(dataForm?.dia));\r\n        //console.log(nascimento)\r\n        let timeDiff = Math.abs(Date.now() - data.getTime());\r\n        let age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\r\n        //console.log(age)\r\n        if (age < 18 && age != NaN) {\r\n            console.log('é menor')\r\n            this.ehMenor = true\r\n            this.showTabMenorIdade = true\r\n            this.showPerguntaRespFinanc = false\r\n            this.showFormRespFinanc = false\r\n            this.alunoForm.get('temRespFin').setValue(true)\r\n        } else if (age > 18 && age != NaN) {\r\n            console.log('é maior')\r\n            this.ehMenor = false\r\n            this.showTabMenorIdade = false\r\n            this.showPerguntaRespFinanc = true\r\n            this.showFormRespFinanc = !this.alunoForm.get('temRespFin').value\r\n            //  if (this.checkedRespFinanc.sim == true) {\r\n            //      this.showFormRespFinanc = false\r\n            //  } else {\r\n            // this.showFormRespFinanc = true\r\n            //}\r\n        }\r\n    }\r\n    onFocusOutDateEvent(event: any) {\r\n        // console.log(event.target.value);\r\n        //console.log(this.alunoForm.get('nascimento').value)\r\n        var dataForm: Date = new Date(this.alunoForm.get('nascimento').value)\r\n        //console.log(dataForm)\r\n        // console.log(dataForm.dia)\r\n        //var nascimento = new Date(parseInt(dataForm?.ano), parseInt(dataForm?.mes) - 1, parseInt(dataForm?.dia));\r\n        //console.log(nascimento)\r\n        let timeDiff = Math.abs(Date.now() - dataForm.getTime());\r\n        let age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\r\n        //console.log(age)\r\n        if (age < 18 && age != NaN) {\r\n            this.showTabMenorIdade = true\r\n            this.showPerguntaRespFinanc = false\r\n            this.showFormRespFinanc = false\r\n            this.alunoForm.get('temRespFin').setValue(true)\r\n        } else if (age > 18 && age != NaN) {\r\n            this.showTabMenorIdade = false\r\n            this.showPerguntaRespFinanc = true\r\n            if (this.checkedRespFinanc.sim == true) {\r\n                this.showFormRespFinanc = false\r\n            } else {\r\n                this.showFormRespFinanc = true\r\n            }\r\n        }\r\n    }\r\n\r\n    eHRespFinan(boleano: boolean) {\r\n        console.log(boleano)\r\n        if (boleano) {\r\n            this.showFormRespFinanc = false\r\n            // this.checkedRespFinanc.sim = true\r\n            // this.checkedRespFinanc.nao = false\r\n            //this.alunoForm.get('temRespFin').setValue(false)\r\n        } else {\r\n            this.showFormRespFinanc = true\r\n            // this.checkedRespFinanc.sim = false\r\n            // this.checkedRespFinanc.nao = true\r\n            // this.alunoForm.get('temRespFin').setValue(true)\r\n        }\r\n    }\r\n\r\n    eHRespMenorEFinan(boleano: boolean) {\r\n        console.log(boleano)\r\n        if (boleano) {\r\n            this.showFormRespFinanc = !boleano\r\n            this.showPerguntaRespFinanc = false\r\n\r\n            // set tru in form\r\n            //this.responsavelMenorForm.get('eRespFinanc').setValue(true)\r\n            //this.alunoForm.get('temRespFin').setValue(false)\r\n        } else {\r\n            this.showFormRespFinanc = !boleano\r\n            this.showPerguntaRespFinanc = false\r\n            this.checkedRespFinanc.sim = false\r\n            this.checkedRespFinanc.nao = true\r\n\r\n            //this.responsavelMenorForm.get('eRespFinanc').setValue(false)\r\n            //this.alunoForm.get('temRespFin').setValue(true)\r\n        }\r\n    }\r\n\r\n    consultaCEPMen(CEP: string) {\r\n        console.log(CEP);\r\n\r\n        this._http.get(`https://viacep.com.br/ws/${CEP}/json/`, {\r\n\r\n        }\r\n        )\r\n            .subscribe(response => {\r\n\r\n                console.log(response)\r\n                this.cepReturn3 = new CepReturn(\r\n                    response[\"logradouro\"],\r\n                    response[\"bairro\"],\r\n                    response[\"localidade\"],\r\n                    response[\"uf\"]);\r\n                //console.log(this.cepReturn)\r\n                this.responsavelMenorForm.get('logradouro').setValue(response[\"logradouro\"]);\r\n                this.responsavelMenorForm.get('bairro').setValue(response[\"bairro\"]);\r\n                this.responsavelMenorForm.get('cidade').setValue(response[\"localidade\"]);\r\n                this.responsavelMenorForm.get('uf').setValue(response[\"uf\"]);\r\n                //this.bairro = this.cepReturn.bairro\r\n                // const token = (<any>response).accessToken;\r\n                // console.log(response)\r\n                // localStorage.setItem(\"jwt\", token);\r\n                // this.invalidLogin = false;\r\n                // this.router.navigate([\"/main\"]);\r\n            }, err => {\r\n                console.log(err)\r\n                this.showEndercoField = true\r\n            },\r\n                () => {\r\n                    console.log('finaly')\r\n                    this.showEndercoField = true\r\n                });\r\n    }\r\n\r\n    consultaCEP(CEP: string) {\r\n        console.log(CEP);\r\n\r\n        this._http.get(`https://viacep.com.br/ws/${CEP}/json/`, {\r\n\r\n        }\r\n        )\r\n            .subscribe(response => {\r\n\r\n                console.log(response)\r\n                this.cepReturn = new CepReturn(\r\n                    response[\"logradouro\"],\r\n                    response[\"bairro\"],\r\n                    response[\"localidade\"],\r\n                    response[\"uf\"]);\r\n                console.log(this.cepReturn)\r\n                this.alunoForm.get('logradouro').setValue(response[\"logradouro\"]);\r\n                this.alunoForm.get('bairro').setValue(response[\"bairro\"]);\r\n                this.alunoForm.get('cidade').setValue(response[\"localidade\"]);\r\n                this.alunoForm.get('uf').setValue(response[\"uf\"]);\r\n                //this.bairro = this.cepReturn.bairro\r\n                // const token = (<any>response).accessToken;\r\n                // console.log(response)\r\n                // localStorage.setItem(\"jwt\", token);\r\n                // this.invalidLogin = false;\r\n                // this.router.navigate([\"/main\"]);\r\n            }, err => {\r\n                console.log(err)\r\n                this.showEndercoField = true\r\n            },\r\n                () => {\r\n                    console.log('finaly')\r\n                    this.showEndercoField = true\r\n                });\r\n    }\r\n\r\n    cursosDisponiveis: TurmaViewModel[] = new Array<TurmaViewModel>();\r\n\r\n    showSelectCursoSearch: boolean = false\r\n    getCursos(actualPage: number, pageSize: number) {\r\n\r\n        var itemsPerPage = 5;\r\n        var currentPage = 1;\r\n\r\n        this._http.get(`${this.baseUrl}/turmas/cursosUnidade`, {\r\n            //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bear \"\r\n            })\r\n        }).subscribe(response => {\r\n\r\n\r\n            console.log(response)\r\n            Object.assign(this.cursosDisponiveis, response)\r\n            console.log(this.cursosDisponiveis)\r\n            // this.colaboradores = Object.assign([], response['data'])\r\n            //console.log(this.colaboradores)\r\n            // this.dialogRef.close();\r\n        }, err => { console.log(err) },\r\n            () => {\r\n\r\n                //this.showMatricula = true\r\n                // this.showFormCadastroTab = false\r\n                // this.showFormRespFinanc = false\r\n                // this.showTabMenorIdade = false\r\n                //this.showSelectCursoSearch = true\r\n\r\n                // this.indexTab = 3;\r\n                console.log('metodo getCursos')\r\n                if (this.cursosDisponiveis.length == 0) {\r\n                    this.showSelectCursoSearch = false\r\n                } else if (this.cursosDisponiveis.length > 0) {\r\n                    this.showSelectCursoSearch = true\r\n                }\r\n\r\n                // if (this.cursos.length > 0) {\r\n                //     this.haTurmas = true\r\n                //     this.messageturmas = false\r\n                // } else {\r\n                //     this.haTurmas = false\r\n                //     this.messageturmas = true\r\n                // }\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n    VerificarEhMenor(data: Date) {\r\n        console.log(data);\r\n        // console.log(event.target.value);\r\n        //console.log(this.alunoForm.get('nascimento').value)\r\n        //var dataForm: Date = new Date(this.alunoForm.get('nascimento').value)\r\n        //console.log(dataForm)\r\n        // console.log(dataForm.dia)\r\n        //var nascimento = new Date(parseInt(dataForm?.ano), parseInt(dataForm?.mes) - 1, parseInt(dataForm?.dia));\r\n        //console.log(nascimento)\r\n        let timeDiff = Math.abs(Date.now() - data.getTime());\r\n        let age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\r\n        //console.log(age)\r\n        if (age < 18 && age != NaN) {\r\n            console.log('é menor')\r\n            return true\r\n        } else if (age > 18 && age != NaN) {\r\n            return false\r\n        }\r\n    }\r\n    Validar() {\r\n        if (!this.alunoForm.valid) return false\r\n\r\n        if (this.VerificarEhMenor(this.alunoForm.get('nascimento').value)) {\r\n\r\n            if (!this.responsavelMenorForm.valid) {\r\n                false\r\n            } else {\r\n\r\n                if (this.responsavelMenorForm.get('eRespFinanc').value) {\r\n                    return true\r\n                } else {\r\n                    if (this.responsavelFinancForm.valid) {\r\n                        return true\r\n                    } else {\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n\r\n            if (this.alunoForm.get('temRespFin').value) {\r\n                return this.responsavelFinancForm.valid\r\n            } else {\r\n                return true\r\n            }\r\n\r\n        }\r\n    }\r\n    confirmar() {\r\n        //this.responsavelFinancForm.disable()\r\n        // this.responsavelMenorForm.disable()\r\n        // this.responsavelMenorForm.enable()\r\n        console.log(this.parentForm.valid)\r\n        console.log(this.parentForm.value)\r\n        console.log(this.alunoForm.valid)\r\n        console.log(this.matriculaTurmaForm.valid)\r\n        /*\r\n        ver se é menor\r\n            se sim \r\n                validar respmenor\r\n                    ver se ele é respFin\r\n                        se sim PASSAR\r\n                        se nao \r\n                            validar RespFin\r\n            se nao\r\n                validar respFin\r\n        \r\n        depois valodar FormTurma\r\n        \r\n        */\r\n        if (this.validaForm()) {\r\n\r\n            this._http.post(`${this.baseUrl}/transferencia`, this.parentForm.value)\r\n                .subscribe(resp => {\r\n\r\n                },\r\n                    (error) => { console.log(error) },\r\n                    () => { })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    validaForm() {\r\n\r\n        console.log(this.alunoForm.valid)\r\n        if (!this.alunoForm.valid) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.matriculaTurmaForm.valid) {\r\n            return false;\r\n        }\r\n\r\n        var ehMenor = this.EhMenoIdade();\r\n\r\n        if (ehMenor) {\r\n\r\n            if (this.responsavelMenorForm.valid) {\r\n                if (this.responsavelMenorForm.get('eRespFinanc').value) {\r\n                    return true;\r\n                } else {\r\n\r\n                    if (this.responsavelFinancForm.valid) {\r\n                        return true;\r\n                    } else {\r\n                        return true;\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n\r\n        } else {\r\n\r\n            if (this.alunoForm.get('temRespFin').value) {\r\n                return true;\r\n            } else {\r\n\r\n                if (this.responsavelFinancForm.valid) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    EhMenoIdade() {\r\n        // console.log(event.target.value);\r\n        // console.log(this.alunoForm.get('nascimento').value)\r\n        var dataForm: Date = new Date(this.alunoForm.get('nascimento').value)\r\n        //console.log(dataForm)\r\n        // console.log(dataForm.dia)\r\n        //var nascimento = new Date(parseInt(dataForm?.ano), parseInt(dataForm?.mes) - 1, parseInt(dataForm?.dia));\r\n        //console.log(nascimento)\r\n        let timeDiff = Math.abs(Date.now() - dataForm.getTime());\r\n        let age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\r\n        console.log(age)\r\n        if (age < 18 && age != NaN) {\r\n            return true;\r\n        } else if (age > 18 && age != NaN) {\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    consultaCEPFin(CEP: string) {\r\n        console.log(CEP);\r\n\r\n        this._http.get(`https://viacep.com.br/ws/${CEP}/json/`, {\r\n\r\n        }\r\n        )\r\n            .subscribe(response => {\r\n\r\n                console.log(response)\r\n                this.cepReturn2 = new CepReturn(\r\n                    response[\"logradouro\"],\r\n                    response[\"bairro\"],\r\n                    response[\"localidade\"],\r\n                    response[\"uf\"]);\r\n                //console.log(this.cepReturn)\r\n                this.responsavelFinancForm.get('logradouro').setValue(response[\"logradouro\"]);\r\n                this.responsavelFinancForm.get('bairro').setValue(response[\"bairro\"]);\r\n                this.responsavelFinancForm.get('cidade').setValue(response[\"localidade\"]);\r\n                this.responsavelFinancForm.get('uf').setValue(response[\"uf\"]);\r\n                //this.bairro = this.cepReturn.bairro\r\n                // const token = (<any>response).accessToken;\r\n                // console.log(response)\r\n                // localStorage.setItem(\"jwt\", token);\r\n                // this.invalidLogin = false;\r\n                // this.router.navigate([\"/main\"]);\r\n            }, err => {\r\n                console.log(err)\r\n                this.showEndercoField = true\r\n            },\r\n                () => {\r\n                    console.log('finaly')\r\n                    this.showEndercoField = true\r\n                });\r\n    }\r\n\r\n\r\n    apendFileAP(file) {\r\n        // this.fileAP = new Array<File>()\r\n        // let fileToUpload = <File>file[0];\r\n        // this.fileAPName = `AP${fileToUpload.name}`\r\n        // this.fileAPViewName = `${fileToUpload.name}`\r\n        // this.fileAP.push(fileToUpload)\r\n    }\r\n\r\n    apendFileCartaoVac(file) {\r\n        // this.fileCartaoVac = new Array<File>()\r\n        // let fileToUpload = <File>file[0];\r\n        // this.fileCartaoVacName = `CV${fileToUpload.name}`\r\n        // this.fileCartaoVacViewName = `${fileToUpload.name}`\r\n        // this.fileCartaoVac.push(fileToUpload)\r\n    }\r\n\r\n    apendFileTipoSang(file) {\r\n        // this.fileTipoSang = new Array<File>()\r\n        // let fileToUpload = <File>file[0];\r\n        // this.fileTipoSangName = `TP${fileToUpload.name}`\r\n        // this.fileTipoSangViewName = `${fileToUpload.name}`\r\n        // this.fileTipoSang.push(fileToUpload)\r\n    }\r\n\r\n    apendFileHCG(file) {\r\n        // this.fileHCG = new Array<File>()\r\n        // let fileToUpload = <File>file[0];\r\n        // this.fileHCGName = `HC${fileToUpload.name}`\r\n        // this.fileHCGViewName = `${fileToUpload.name}`\r\n        // this.fileHCG.push(fileToUpload)\r\n    }\r\n\r\n\r\n    verificar() {\r\n\r\n        // console.log(this.fileAP)\r\n        // console.log(this.fileCartaoVac)\r\n\r\n        // console.log(this.fileTipoSang)\r\n        // console.log(this.fileHCG)\r\n\r\n    }\r\n\r\n\r\n    uploadFile() {\r\n\r\n        // this.formDatas.append('file', this.fileAP[0], this.fileAPName);\r\n        // this.formDatas.append('file', this.fileCartaoVac[0], this.fileCartaoVacName);\r\n        // this.formDatas.append('file', this.fileTipoSang[0], this.fileTipoSangName);\r\n        // this.formDatas.append('file', this.fileHCG[0], this.fileHCGName);\r\n\r\n        // const token = localStorage.getItem('jwt')\r\n        // const Bearer = `Bearer ${token}`;\r\n        // this.http.post(`${this.baseUrl}/estagios/arquivos`, this.formDatas, {\r\n        //     reportProgress: true, observe: 'events',\r\n        //     headers: new HttpHeaders({\r\n\r\n        //         \"Authorization\": Bearer\r\n        //       })\r\n        // })\r\n        //     .subscribe(event => {\r\n        //         if (event.type === HttpEventType.UploadProgress)\r\n        //             this.progress = Math.round(100 * event.loaded / event.total);\r\n        //         else if (event.type === HttpEventType.Response) {\r\n        //             this.message = 'Upload success.';\r\n        //             this.onUploadFinished.emit(event.body);\r\n        //         }\r\n        //     },\r\n        //         (error) => { console.log(error) },\r\n        //         () => {\r\n        //             console.log('finally')\r\n        //             this.dialogRef.close({ clicked: \"Ok\" });\r\n        //             // this.refresh()\r\n        //             //this.onUploadFinished.unsubscribe;\r\n        //             //files = null\r\n        //         });\r\n    }\r\n\r\n    fechar() {\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n}","<div>\r\n    <div style=\"font-size: 1.2em;\">Transferência externa\r\n\r\n        <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"fechar()\" style=\"\" mat-icon-button>\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n    <hr>\r\n\r\n    <div *ngIf=\"showSerch\">\r\n        Preencha os campos para verificação do cadastro:<br>\r\n\r\n        <form novalidate [formGroup]=\"cpfForm\" (ngSubmit)=\"consulta(cpfForm)\">\r\n            <mat-form-field appearance=\"standard\" style=\"width: 25%; \">\r\n                <mat-label>CPF</mat-label>\r\n                <input formControlName=\"cpf\" mask=\"000.000.000-00\" required name=\"cpf\" matInput placeholder=\"cpf\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n            </mat-form-field>\r\n\r\n            <button type=\"submit\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n        </form>\r\n        <br>\r\n        <div @rowHighlight class=\"card-header \" style=\"background-color: rgb(227, 240, 227);margin-left: 0px;\r\n       width: 350px; font-size: 0.9em;box-shadow: 0 0 0.5em rgb(172, 170, 170);\" unselectable=\"on\"\r\n            onselectstart=\"return false;\" *ngIf=\"showMensagem\">{{mensagem}}</div>\r\n    </div>\r\n\r\n\r\n\r\n    <mat-tab-group *ngIf=\"showFormCadastro\" [selectedIndex]=\"indexTab\" mat-align-tabs=\"start\">\r\n\r\n\r\n\r\n        <!--                  CADASTRO            -->\r\n\r\n\r\n        <mat-tab [label]=\"tabs[0]\">\r\n\r\n            <form novalidate [formGroup]=\"alunoForm\" (ngSubmit)=\"onSubmit(alunoForm)\">\r\n\r\n                <div style=\"position: relative;\">\r\n\r\n                    <div style=\"position: absolute;  display:flex;padding: 0px; margin-left: 88%; display: inline-block;\r\n                overflow: hidden;margin-top: 5px; width: 100px; height: 133px; border: 1px solid black; \">\r\n\r\n                        <img src=\"../../../../assets/img/belchior-fotografia-3x4-700x390.jpg\" style=\"display: block;\r\n                margin-left: auto;\r\n                margin-right: auto;width:50%\r\n                \">\r\n\r\n                    </div>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                        <mat-label>Nome completo</mat-label>\r\n                        <input selected formControlName=\"nome\" required name=\"nome\" matInput placeholder=\"Nome\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 14%; margin-left: 2%;\">\r\n                        <mat-label>CPF</mat-label>\r\n                        <input disabled [(value)]=\"cpfAluno\" minlength=\"11\" maxlength=\"11\" selected name=\"cpf\" matInput\r\n                            placeholder=\"digite o CPF\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 12%; margin-left: 2%;\">\r\n                        <mat-label>RG</mat-label>\r\n                        <input formControlName=\"rg\"\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" selected\r\n                            name=\"rg\" minlength=\"9\" maxlength=\"11\" matInput placeholder=\"digite o RG\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%; margin-left: 5%;\">\r\n                        <mat-label>Nascimento</mat-label>\r\n                        <date-input formControlName=\"nascimento\" \r\n                            name=\"nascimento\" matInput required></date-input>\r\n                    </mat-form-field>\r\n\r\n                    <!-- <mat-form-field appearance=\"standard\" style=\"width: 17%; margin-left: 5%;\">\r\n                        <mat-label>Nascimento</mat-label>\r\n                        <input formControlName=\"nascimento\" mask=\"00/00/0000\"\r\n                            name=\"nascimento\" matInput required>\r\n                    </mat-form-field> -->\r\n\r\n                    <br>\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                        <mat-label>Nome Social</mat-label>\r\n                        <input selected formControlName=\"nomeSocial\" name=\"nome\" matInput placeholder=\"Nome\">\r\n                    </mat-form-field>\r\n\r\n                    <span style=\"margin-left: 5%\">\r\n\r\n                        <span *ngIf=\"showPerguntaRespFinanc\" style=\"margin-left: 1%;\">\r\n                            <label style=\"margin-right: 15px;\" class=\"example-margin\">É também o responsável financeiro:</label>\r\n                            <!-- <mat-radio-group>\r\n                                <mat-radio-button [checked]=\"checkedRespFinanc.sim\" color=\"primary\"\r\n                                    class=\"example-margin\" (click)=\"eHRespFinan(true)\" value=\"Sim\">Sim\r\n                                </mat-radio-button>\r\n                                <mat-radio-button [checked]=\"checkedRespFinanc.nao\" color=\"primary\"\r\n                                    class=\"example-margin\" (click)=\"eHRespFinan(false)\" value=\"Não\">Não\r\n                                </mat-radio-button>\r\n                            </mat-radio-group> -->\r\n\r\n                            <mat-checkbox color=\"primary\" formControlName=\"temRespFin\"></mat-checkbox>\r\n                        </span>\r\n\r\n                    </span>\r\n                    <br>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n                        <mat-label>Naturalidade</mat-label>\r\n                        <input selected formControlName=\"naturalidade\" required name=\"naturalidade\" matInput\r\n                            placeholder=\"Nome\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                        <mat-label>UF</mat-label>\r\n                        <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\"\r\n                            minlength=\"2\" maxlength=\"2\" selected formControlName=\"naturalidadeUF\" required\r\n                            name=\"naturalidadeUF\" matInput placeholder=\"UF\">\r\n                    </mat-form-field>\r\n\r\n                    \r\n\r\n                    <br>\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input selected formControlName=\"email\" name=\"email\" matInput placeholder=\"Email\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                        <mat-label>Celular</mat-label>\r\n                        <example-tel-input #cel name=\"telCelular\" formControlName=\"telCelular\"\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        </example-tel-input>\r\n                        <mat-hint>telefone com DDD</mat-hint>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                        <mat-label>WhatsApp</mat-label>\r\n                        <example-tel-input name=\"telWhatsapp\" formControlName=\"telWhatsapp\"\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        </example-tel-input>\r\n                        <mat-hint>telefone com DDD</mat-hint>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                        <mat-label>Residencial</mat-label>\r\n                        <example-tel-input name=\"telResidencial\" formControlName=\"telResidencial\"\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        </example-tel-input>\r\n                        <mat-hint>telefone com DDD</mat-hint>\r\n                    </mat-form-field>\r\n\r\n                    <br>\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%;\">\r\n                        <mat-label>Tel referência</mat-label>\r\n                        <example-tel-input formControlName=\"telReferencia\" #cel name=\"telReferencia\"\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        </example-tel-input>\r\n                        <mat-hint>telefone com DDD</mat-hint>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 35%;margin-left: 5%; \">\r\n                        <mat-label>Nome do contato</mat-label>\r\n                        <input formControlName=\"nomeContatoReferencia\" selected required name=\"nomeContatoReferencia\"\r\n                            matInput placeholder=\"Nome\">\r\n                    </mat-form-field>\r\n\r\n                    <br>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n                        <mat-label>CEP</mat-label>\r\n                        <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" #cep\r\n                            formControlName=\"cep\" minlength=\"8\" maxlength=\"8\" required name=\"templateName\" matInput\r\n                            placeholder=\"12345678\">\r\n                    </mat-form-field>\r\n                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\"\r\n                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <span type=\"button\" (click)=\"consultaCEP(cep.value)\" style=\"margin: 0px; margin: 0px;\"\r\n                            mat-icon-button>\r\n                            <mat-icon>search</mat-icon>\r\n                        </span>\r\n                    </i>\r\n\r\n                    <ng-container *ngIf=\"showEndercoField\">\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 5%;\">\r\n                            <mat-label>Logradouro</mat-label>\r\n                            <input selected [(value)]=\"cepReturn.logradouro\" required name=\"templateName\" matInput\r\n                                placeholder=\"ex: rua tal...\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 45%; margin-left: 5%;\">\r\n                            <mat-label>Complemento</mat-label>\r\n                            <input selected formControlName=\"complemento\" name=\"templateName\" matInput\r\n                                placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n                        </mat-form-field>\r\n\r\n                        <br>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                            <mat-label>Cidade</mat-label>\r\n                            <input disabled selected [value]=\"this.alunoForm.get('cidade').value\" required name=\"cidade\"\r\n                                matInput placeholder=\"digite o bairro\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 5%;\">\r\n                            <mat-label>UF</mat-label>\r\n                            <input disabled selected [(value)]=\"cepReturn.uf\" required name=\"templateName\" matInput\r\n                                placeholder=\"digite o bairro\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 5%;\">\r\n                            <mat-label>Bairro</mat-label>\r\n                            <input selected [(value)]=\"cepReturn.bairro\" required name=\"templateName\" matInput\r\n                                placeholder=\"digite o bairro\">\r\n                        </mat-form-field>\r\n                    </ng-container>\r\n                    <br>\r\n\r\n\r\n                    <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n                        <mat-label>Observações gerais</mat-label>\r\n                        <textarea formControlName=\"observacoes\" name=\"observacoes\" matInput></textarea>\r\n                    </mat-form-field>\r\n\r\n\r\n\r\n                </div>\r\n                <!-- <button type=\"submit\" mat-raised-button disabled=\"false\"\r\n                    style=\"float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n                    Salvar\r\n                </button>\r\n                <button style=\"float:right;margin-bottom: 10px;\" mat-raised-button\r\n                    [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button> -->\r\n            </form>\r\n\r\n        </mat-tab>\r\n\r\n\r\n\r\n        <!--                  RESP FINANCEIRO          -->\r\n\r\n\r\n\r\n        <mat-tab *ngIf=\"showFormRespFinanc\" [label]=\"tabs[1]\">\r\n\r\n            <form novalidate [formGroup]=\"responsavelFinancForm\">\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                    <mat-label>Nome completo</mat-label>\r\n                    <input selected formControlName=\"nome\" required name=\"nome\" matInput placeholder=\"Nome\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                    <mat-label>CPF</mat-label>\r\n                    <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                        formControlName=\"cpf\" minlength=\"11\" maxlength=\"11\" selected name=\"cpf\" matInput\r\n                        placeholder=\"digite o CPF\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                    <mat-label>RG</mat-label>\r\n                    <input formControlName=\"rg\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" selected\r\n                        name=\"rg\" matInput placeholder=\"digite o RG\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%; margin-left: 5%;\">\r\n                    <mat-label>Nascimento</mat-label>\r\n                    <date-input formControlName=\"nascimento\" name=\"nascimento\" matInput required></date-input>\r\n                </mat-form-field>\r\n\r\n                <br>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 20%;\">\r\n                    <mat-label>Grau de parentesco</mat-label>\r\n                    <input formControlName=\"parentesco\" required name=\"naturalidadeUF\" matInput\r\n                        placeholder=\"Grau de parentesco\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n                    <mat-label>Naturalidade</mat-label>\r\n                    <input selected formControlName=\"naturalidade\" required name=\"naturalidade\" matInput\r\n                        placeholder=\"Nome\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                    <mat-label>UF</mat-label>\r\n                    <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\"\r\n                        minlength=\"2\" maxlength=\"2\" selected formControlName=\"naturalidadeUF\" required\r\n                        name=\"naturalidadeUF\" matInput placeholder=\"UF\">\r\n                </mat-form-field>\r\n\r\n                <br>\r\n                <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input selected formControlName=\"email\" name=\"email\" matInput placeholder=\"Email\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>Celular</mat-label>\r\n                    <example-tel-input #cel name=\"telCelular\" formControlName=\"telCelular\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </example-tel-input>\r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>WhatsApp</mat-label>\r\n                    <example-tel-input name=\"telWhatsapp\" formControlName=\"telWhatsapp\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </example-tel-input>\r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                    <mat-label>Residencial</mat-label>\r\n                    <example-tel-input name=\"telResidencial\" formControlName=\"telResidencial\"\r\n                        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </example-tel-input>\r\n                    <mat-hint>telefone com DDD</mat-hint>\r\n                </mat-form-field>\r\n                <br>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n                    <mat-label>CEP</mat-label>\r\n                    <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" #cep\r\n                        formControlName=\"cep\" minlength=\"8\" maxlength=\"8\" required name=\"templateName\" matInput\r\n                        placeholder=\"apenas números\">\r\n                </mat-form-field>\r\n                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\"\r\n                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"consultaCEPFin(cep.value)\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 5%;\">\r\n                    <mat-label>Logradouro</mat-label>\r\n                    <input selected [(value)]=\"cepReturn2.logradouro\" name=\"templateName\" matInput\r\n                        placeholder=\"ex: rua tal...\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 45%; margin-left: 5%;\">\r\n                    <mat-label>Complemento</mat-label>\r\n                    <input selected formControlName=\"complemento\" name=\"templateName\" matInput\r\n                        placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n                </mat-form-field>\r\n                <br>\r\n                <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                    <mat-label>Cidade</mat-label>\r\n                    <input disabled selected [(value)]=\"cepReturn2.localidade\" name=\"templateName\" matInput\r\n                        placeholder=\"digite o bairro\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 5%;\">\r\n                    <mat-label>UF</mat-label>\r\n                    <input disabled selected [(value)]=\"cepReturn2.uf\" name=\"templateName\" matInput\r\n                        placeholder=\"digite o bairro\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 5%;\">\r\n                    <mat-label>Bairro</mat-label>\r\n                    <input selected [(value)]=\"cepReturn2.bairro\" name=\"templateName\" matInput\r\n                        placeholder=\"digite o bairro\">\r\n                </mat-form-field>\r\n                <br>\r\n\r\n\r\n                <div style=\"font-size: 0.9em;\">\r\n                    <i style=\"margin-left: 5px; position: relative;top: 5px;\" #tooltip=\"matTooltip\"\r\n                        matTooltip=\"anexar comp. de residência\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <mat-icon style=\"color: green; margin-left: 0px; font-size: 20px;\">done</mat-icon>\r\n                    </i>\r\n                    comprovante de residência\r\n                    <i style=\"margin-left: 5px; position: relative;top: 5px;\" #tooltip=\"matTooltip\"\r\n                        matTooltip=\"anexar comp. de residência\" matTooltipPosition=\"above\" type=\"button\"\r\n                        matTooltipHideDelay=\"100\">\r\n                        <mat-icon style=\"margin-left: 0px; font-size: 20px;\">attach_file</mat-icon>\r\n                    </i>\r\n                    <span>\r\n                        \"arquivotal.pdf\"\r\n                    </span>\r\n                </div>\r\n\r\n                <div style=\"font-size: 0.8em;\">\r\n                    <i style=\"margin-left: 5px;position: relative;top: 5px;\" #tooltip=\"matTooltip\"\r\n                        matTooltip=\"anexar comp. de residência\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <mat-icon style=\"color: red; margin-left: 0px; font-size: 20px;\">close</mat-icon>\r\n\r\n                    </i>\r\n                    CPF\r\n                    <i style=\"margin-left: 5px;position: relative;top: 5px;\" #tooltip=\"matTooltip\"\r\n                        matTooltip=\"pesquisar\" matTooltipPosition=\"above\" type=\"button\" matTooltipHideDelay=\"100\">\r\n                        <mat-icon style=\"margin-left: 0px; font-size: 20px;\">attach_file</mat-icon>\r\n\r\n                    </i>\r\n                    <span>\r\n                        \"arquivotal.pdf\"\r\n                    </span>\r\n                </div>\r\n\r\n                <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n                    <mat-label>Observações gerais</mat-label>\r\n                    <textarea formControlName=\"observacoes\" name=\"observacoes\" matInput></textarea>\r\n                </mat-form-field>\r\n\r\n            </form>\r\n\r\n\r\n        </mat-tab>\r\n\r\n\r\n        <!--                  RESP MENOR          -->\r\n\r\n\r\n        <mat-tab *ngIf=\"showTabMenorIdade\" [label]=\"tabs[2]\">\r\n\r\n\r\n            <form novalidate [formGroup]=\"responsavelMenorForm\">\r\n                <br>\r\n\r\n                <!-- <section style=\"margin-left: 1%;\" class=\"example-section\">\r\n                    <label class=\"example-margin\">O responsável do menor também é o responsável financeiro:</label>\r\n                    <mat-radio-group>\r\n                        <mat-radio-button color=\"primary\" [checked]=\"checkedRespMenor.sim\" class=\"example-margin\"\r\n                            (click)=\"eHRespMenorEFinan(true)\" value=\"Sim\">Sim</mat-radio-button>\r\n                        <mat-radio-button color=\"primary\" [checked]=\"checkedRespMenor.nao\" class=\"example-margin\"\r\n                            (click)=\"eHRespMenorEFinan(false)\" value=\"Não\">Não</mat-radio-button>\r\n                    </mat-radio-group>\r\n                </section> -->\r\n\r\n                <span>\r\n\r\n                    <span style=\"margin-left: 2%;\">\r\n                        <label style=\"margin-right: 15px;\" class=\"example-margin\">É também o responsável financeiro:</label>\r\n                        <!-- <mat-radio-group>\r\n                            <mat-radio-button [checked]=\"checkedRespFinanc.sim\" color=\"primary\"\r\n                                class=\"example-margin\" (click)=\"eHRespFinan(true)\" value=\"Sim\">Sim\r\n                            </mat-radio-button>\r\n                            <mat-radio-button [checked]=\"checkedRespFinanc.nao\" color=\"primary\"\r\n                                class=\"example-margin\" (click)=\"eHRespFinan(false)\" value=\"Não\">Não\r\n                            </mat-radio-button>\r\n                        </mat-radio-group> -->\r\n\r\n                        <mat-checkbox color=\"primary\" formControlName=\"eRespFinanc\"></mat-checkbox>\r\n                    </span>\r\n\r\n                </span>\r\n\r\n                <div class=\"card-body\">\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                        <mat-label>Nome completo</mat-label>\r\n                        <input selected formControlName=\"nome\" required name=\"nome\" matInput placeholder=\"Nome\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                        <mat-label>CPF</mat-label>\r\n                        <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                            formControlName=\"cpf\" minlength=\"11\" maxlength=\"11\" selected name=\"cpf\" matInput\r\n                            placeholder=\"digite o CPF\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                        <mat-label>RG</mat-label>\r\n                        <input formControlName=\"rg\"\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" selected\r\n                            name=\"rg\" matInput placeholder=\"digite o RG\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%; margin-left: 5%;\">\r\n                        <mat-label>Nascimento</mat-label>\r\n                        <date-input formControlName=\"nascimento\" name=\"nascimento\" matInput required></date-input>\r\n                    </mat-form-field>\r\n\r\n                    <br>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 20%;\">\r\n                        <mat-label>Grau de parentesco</mat-label>\r\n                        <input formControlName=\"parentesco\" required name=\"naturalidadeUF\" matInput\r\n                            placeholder=\"Grau de parentesco\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n                        <mat-label>Naturalidade</mat-label>\r\n                        <input selected formControlName=\"naturalidade\" required name=\"naturalidade\" matInput\r\n                            placeholder=\"Nome\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                        <mat-label>UF</mat-label>\r\n                        <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\"\r\n                            minlength=\"2\" maxlength=\"2\" selected formControlName=\"naturalidadeUF\" required\r\n                            name=\"naturalidadeUF\" matInput placeholder=\"UF\">\r\n                    </mat-form-field>\r\n\r\n                    <!-- <span type=\"button\" (click)=\"uploadDoc('compRes')\">juntar doc</span> -->\r\n\r\n                    <br>\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input selected formControlName=\"email\" name=\"email\" matInput placeholder=\"Email\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                        <mat-label>Celular</mat-label>\r\n                        <example-tel-input #cel name=\"telCelular\" formControlName=\"telCelular\"\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        </example-tel-input>\r\n                        <mat-hint>telefone com DDD</mat-hint>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                        <mat-label>WhatsApp</mat-label>\r\n                        <example-tel-input name=\"telWhatsapp\" formControlName=\"telWhatsapp\"\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        </example-tel-input>\r\n                        <mat-hint>telefone com DDD</mat-hint>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 5%;\">\r\n                        <mat-label>Residencial</mat-label>\r\n                        <example-tel-input name=\"telResidencial\" formControlName=\"telResidencial\"\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        </example-tel-input>\r\n                        <mat-hint>telefone com DDD</mat-hint>\r\n                    </mat-form-field>\r\n\r\n                    <br>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 10%;\">\r\n                        <mat-label>CEP</mat-label>\r\n                        <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" #cep\r\n                            formControlName=\"cep\" minlength=\"8\" maxlength=\"8\" required name=\"templateName\" matInput\r\n                            placeholder=\"apenas números\">\r\n                    </mat-form-field>\r\n                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\"\r\n                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <button (click)=\"consultaCEPMen(cep.value)\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                            <mat-icon>search</mat-icon>\r\n                        </button>\r\n                    </i>\r\n                    <br>\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 40%;\">\r\n                        <mat-label>Logradouro</mat-label>\r\n                        <input selected [(value)]=\"cepReturn3.logradouro\" name=\"templateName\" matInput\r\n                            placeholder=\"ex: rua tal...\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 55%; margin-left: 5%;\">\r\n                        <mat-label>Complemento</mat-label>\r\n                        <input selected formControlName=\"complemento\" name=\"templateName\" matInput\r\n                            placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                        <mat-label>Cidade</mat-label>\r\n                        <input selected required [(value)]=\"cepReturn3.localidade\" name=\"templateName\" matInput\r\n                            placeholder=\"digite o bairro\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 15%;\">\r\n                        <mat-label>UF</mat-label>\r\n                        <input selected required [(value)]=\"cepReturn3.uf\" name=\"templateName\" matInput\r\n                            placeholder=\"digite o bairro\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 15%;\">\r\n                        <mat-label>Bairro</mat-label>\r\n                        <input selected [(value)]=\"cepReturn3.bairro\" name=\"templateName\" matInput\r\n                            placeholder=\"digite o bairro\">\r\n                    </mat-form-field>\r\n                    <br>\r\n\r\n\r\n                    <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n                        <mat-label>Observações gerais</mat-label>\r\n                        <textarea formControlName=\"observacoes\" name=\"observacoes\" matInput></textarea>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n\r\n            </form>\r\n\r\n\r\n        </mat-tab>\r\n\r\n\r\n        <!--                             TAB MATRICULA CONFIRM             -->\r\n\r\n\r\n\r\n        <mat-tab [label]=\"tabs[3]\">\r\n\r\n            <br>\r\n\r\n            <div>\r\n                <ng-container *ngIf=\"hideCursoSearchAndMessage\">\r\n                    <div *ngIf=\"showSelectCursoSearch; else message\">\r\n                        Selecione o curso disponível nesta unidade:\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 2%;\">\r\n                            <mat-label>Curso</mat-label>\r\n                            <mat-select selected name=\"cargo\" required>\r\n                                <mat-option></mat-option>\r\n                                <mat-option (click)=\"consultarCursos(item.descricao)\"\r\n                                    *ngFor=\"let item of cursosDisponiveis\" [value]=\"item.descricao\">\r\n                                    {{item.descricao}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <ng-template #message>\r\n                        Não há turmas com matrículas abertas nesta unidade!\r\n                    </ng-template>\r\n                </ng-container>\r\n\r\n\r\n                <div *ngIf=\"showTableCursosAndamento\" class=\"table-responsive\"\r\n                    style=\"height: 430px;position: relative;\">\r\n                    <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style=\"width: 2%;height: 20px;;  \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                                <th style=\"width: 32%;font-size:1em;\r\n                                    vertical-align: middle;\r\n                                    text-align:left;\r\n                    border-top: 0px; font-weight: 400;\">Descrição</th>\r\n\r\n                                <th style=\"width: 19%;font-size:1em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">Turno</th>\r\n\r\n                                <th style=\"width: 15%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Prev. início</th>\r\n\r\n                                <th style=\"width: 15%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Prev. término</th>\r\n\r\n                                <th style=\"width: 6%;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let item of turmasParaMatricular;let i = index;\">\r\n                                <td style=\"text-align:center;vertical-align: middle;\"></td>\r\n\r\n                                <td style=\"text-align:left;vertical-align: middle;\">{{item.descricao}}<br>Turma\r\n                                    {{item.identificador}}</td>\r\n\r\n                                <td style=\"text-align: center;vertical-align: middle;\"></td>\r\n\r\n                                <td style=\"text-align: center;vertical-align: middle;\">\r\n                                    {{ item.previsaoAtual | date: 'dd/MM/yyyy' }}\r\n\r\n                                    <br>\r\n\r\n                                    <span *ngIf=\"item.iniciada\" style=\"color:red; font-size: 0.8em;\">\r\n                                        * turma\r\n                                        iniciada!\r\n                                    </span>\r\n\r\n                                </td>\r\n\r\n                                <td style=\"text-align: center;vertical-align: middle;\">{{ item.previsaoTerminoAtual |\r\n                                    date: 'dd/MM/yyyy' }}\r\n                                </td>\r\n\r\n                                <td style=\"position: relative;text-align: center;vertical-align: middle;\">\r\n                                    <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"selecionar\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"selecionarTurma(item)\" style=\"\" mat-icon-button>\r\n                                            <mat-icon style=\"\">note_add</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n                                </td>\r\n                            </tr>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <form *ngIf=\"showFormFinal\" novalidate [formGroup]=\"matriculaTurmaForm\"\r\n                (ngSubmit)=\"submitMatricula(matriculaTurmaForm)\">\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 17%;margin-left: 2%;\">\r\n                    <mat-label>Código do contrato:</mat-label>\r\n                    <input disabled name=\"templateName\" matInput value=\"CGI-34534634\">\r\n                </mat-form-field>\r\n\r\n                <div style=\"float: right; width: 50px;\">\r\n                    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"voltar\"\r\n                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <button (click)=\"voltar()\" style=\"\" mat-icon-button>\r\n                            <mat-icon>undo</mat-icon>\r\n                        </button>\r\n                    </i>\r\n\r\n                </div>\r\n\r\n\r\n                <br>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\" style=\"width: 29%; ;margin-left: 2%;\">\r\n                    <mat-label>Curso</mat-label>\r\n                    <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.descricao\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"width: 13%; margin-left: 2%;\">\r\n                    <mat-label>Turma</mat-label>\r\n                    <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.identificador\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 2%;\">\r\n                    <mat-label>Investimento</mat-label>\r\n                    <input disabled name=\"templateName\" matInput value=\"R$ 4.190,00\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"width: 10%; margin-left: 1%;\">\r\n                    <mat-label>código </mat-label>\r\n                    <input disabled selected name=\"templateName\" matInput placeholder=\"aplicar desconto\">\r\n                </mat-form-field>\r\n\r\n                <br>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"width: 13%; margin-left: 2%;\">\r\n                    <mat-label>Turno</mat-label>\r\n                    <input disabled name=\"templateName\" matInput [(value)]=\"turmaSelecionada.turno\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"width: 18%; margin-left: 2%;\">\r\n                    <mat-label>Horário</mat-label>\r\n                    <input disabled name=\"templateName\" matInput value=\"10:00 às 16:00\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 2%;\">\r\n                    <mat-label>Previsão início </mat-label>\r\n                    <input selected name=\"templateName\" matInput disabled [(value)]=\"previAtual\"\r\n                        placeholder=\"aplicar desconto\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"outline\" style=\"width: 15%; margin-left: 1%;\">\r\n                    <mat-label>Previsão término </mat-label>\r\n                    <input selected name=\"templateName\" matInput disabled [(value)]=\"previTerminoAtual\"\r\n                        placeholder=\"aplicar desconto\">\r\n                </mat-form-field>\r\n\r\n\r\n\r\n\r\n                <mat-form-field appearance=\"fill\" style=\"width: 38%;margin-left: 2%;margin-top: 20px;\">\r\n                    <mat-label>Como ficou sabendo dos nossos cursos?</mat-label>\r\n                    <mat-select formControlName=\"cienciaCurso\" selected name=\"cargo\" required>\r\n                        <mat-option></mat-option>\r\n                        <mat-option *ngFor=\"let item of cienciaCurso\" [value]=\"item.type\">\r\n                            {{item.value}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n\r\n                <br>\r\n\r\n                <br>\r\n\r\n                <br>\r\n\r\n                <span style=\"margin-left: 2%;\">Escolha a forma de pagamento:</span>\r\n                <mat-tab-group style=\"\">\r\n                    <mat-tab label=\"Cartão de Crédito\"> </mat-tab>\r\n                    <mat-tab label=\"Boleto\"> </mat-tab>\r\n                    <mat-tab label=\"Carnê\"></mat-tab>\r\n                </mat-tab-group>\r\n\r\n\r\n                <br>\r\n                <!-- <button type=\"submit\" mat-raised-button disabled=\"false\"\r\n                    style=\"bottom: 0; float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n                    Confirmar matrícula\r\n                </button> -->\r\n\r\n            </form>\r\n\r\n        </mat-tab>\r\n\r\n\r\n\r\n\r\n        <mat-tab [label]=\"tabs[4]\">\r\n\r\n\r\n\r\n            <div style=\"font-style: italic;font-size: 0.9em;margin-top: 10px;\">\r\n                Para efetivar a transferência, é necessário o envio das\r\n                documentaçãoes listadas abaixo.\r\n            </div>\r\n            <div style=\"font-style: italic;font-size: 0.9em;color: red;\">\r\n                * formatos permitidos: jpeg, pdf\r\n            </div>\r\n            <div style=\"font-style: italic;font-size: 0.9em;color: red;\">\r\n                * tamanho máximo permitido por arquivo: 500kb\r\n            </div>\r\n            <br>\r\n\r\n            <div>Histórico escolar\r\n                <input multiple type=\"file\" #fileAP placeholder=\"Choose file\" (change)=\"apendFileAP(fileAP.files)\"\r\n                    style=\"display:none;\">\r\n\r\n                <mat-icon type=\"button\" #tooltip=\"matTooltip\" matTooltip=\"anexar arquivo\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\" (click)=\"fileAP.click()\" style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">attachment</mat-icon>\r\n\r\n                <span style=\"margin-left: 5px;font-size: 0.9em;\">{{fileAPViewName || ''}}</span>\r\n                <!-- <span style=\"margin-left: 5px;font-size: 0.9em;color: red;\">* formato ou tamanho inválido </span> -->\r\n            </div>\r\n\r\n            <!-- <div>cartão de vacinação\r\n        <input multiple type=\"file\" #fileCV placeholder=\"Choose file\" (change)=\"apendFileCartaoVac(fileCV.files)\"\r\n        style=\"display:none;\">\r\n\r\n        <mat-icon type=\"button\" #tooltip=\"matTooltip\" matTooltip=\"anexar arquivo\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\" (click)=\"fileCV.click()\" style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">attachment</mat-icon>\r\n\r\n        <span style=\"margin-left: 5px;font-size: 0.9em;\">{{fileCartaoVacViewName || ''}}</span>\r\n    </div>\r\n\r\n    <div>tipo sanguíneo\r\n        <input multiple type=\"file\" #fileTP placeholder=\"Choose file\" (change)=\"apendFileTipoSang(fileTP.files)\"\r\n            style=\"display:none;\">\r\n\r\n            <mat-icon type=\"button\" #tooltip=\"matTooltip\" matTooltip=\"anexar arquivo\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\" (click)=\"fileTP.click()\" style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">attachment</mat-icon>\r\n\r\n        <span style=\"margin-left: 5px;font-size: 0.9em;\">{{fileTipoSangViewName || ''}}</span>\r\n    </div>\r\n    <div>Beta HGC recente (pelo menos 30 dias antes da candidatura à vaga\r\n        (apenas para sexo feminino)\r\n        <input multiple type=\"file\" #fileHCG placeholder=\"Choose file\" (change)=\"apendFileHCG(fileHCG.files)\"\r\n            style=\"display:none;\">\r\n\r\n            <mat-icon type=\"button\" #tooltip=\"matTooltip\" matTooltip=\"anexar arquivo\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\" (click)=\"fileHCG.click()\" style=\"vertical-align: middle; \r\n        margin: 0px; margin: 0px;\">attachment</mat-icon>\r\n\r\n        <span style=\"margin-left: 5px;font-size: 0.9em;\">{{fileHCGViewName || ''}}</span>\r\n    </div> -->\r\n\r\n\r\n            <!-- <div (click)=\"verificar()\">verificar</div> -->\r\n            <!-- <button type=\"submit\" (click)=\"uploadFile()\" mat-raised-button disabled=\"false\"\r\n                style=\"float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n                Enviar\r\n            </button>\r\n            <button style=\"float:right;margin-bottom: 10px;\" mat-raised-button\r\n                [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button> -->\r\n        </mat-tab>\r\n\r\n\r\n\r\n    </mat-tab-group>\r\n\r\n    <div>\r\n    <button *ngIf=\"showFormCadastro\" (click)=\"confirmar()\" mat-raised-button disabled=\"false\"\r\n        style=\"bottom: 0; float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n        Confirmar transferência\r\n    </button>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<!--                          NEWWWWW                      -->","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from \"@angular/common/http\";\r\n\r\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\n// import { SecurityService } from './security.service';\r\n// import { Guid } from '../../../guid';\r\n\r\n// Implementing a Retry-Circuit breaker policy \r\n// is pending to do for the SPA app\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    // private _todos = new BehaviorSubject<GenericTask[]>([]);\r\n    // private dataStore: { todos: GenericTask[] } = { todos: [] };\r\n    // readonly todos = this._todos.asObservable();\r\n\r\n    //private dataStorage: { _generic}\r\n    constructor(private http: HttpClient) { }\r\n\r\n    // get todos() {\r\n    //     return this._todos.asObservable();\r\n    //   }\r\n\r\n    //   loadAll(url: string) {\r\n    //     this.http.get(url).subscribe(\r\n    //       data => {\r\n    //         this.dataStore.todos = data;\r\n    //         this._todos.next(Object.assign({}, this.dataStore).todos);\r\n    //       },\r\n    //       error => console.log('Could not load todos.')\r\n    //     );\r\n    //   }\r\n\r\n    // OK\r\n    get(url: string, params?: any): Observable<Response> {\r\n        //console.log(url)\r\n        let options = {};\r\n        this.setHeaders(options);\r\n\r\n        return this.http.get(url, options)\r\n            .pipe(tap((res: Response) => { }),\r\n                catchError(this.handleError));\r\n    }\r\n\r\n    post(url: string, data: any, params?: any): Observable<Response> {\r\n        return this.doPost(url, data, false, params);\r\n    }\r\n\r\n    delete(url: string, params?: any):Observable<boolean> {\r\n        return this.sendRequest<boolean>(\"DELETE\", url);\r\n        \r\n        // let options = {};\r\n        // this.setHeaders(options);\r\n\r\n        // console.log('data.service deleting');\r\n\r\n        // return this.http.delete(url, options)\r\n        //     .subscribe((res) => {\r\n        //         console.log('deleted');\r\n        //     });\r\n    }\r\n\r\n    put(url: string, data: any, params?:any): Observable<Response>{\r\n        return this.doPut(url, data, false, params);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // OLD\r\n\r\n    getData(url: string): Observable<Object[]> {\r\n        //console.log(url)\r\n        return this.sendRequest<Object[]>(\"GET\", url);\r\n    }\r\n    private sendRequest<T>(verb: string, url: string, body?: any)\r\n        : Observable<T> {\r\n\r\n        let myHeaders = new HttpHeaders();\r\n        myHeaders = myHeaders.set(\"Access-Key\", \"<secret>\");\r\n        myHeaders = myHeaders.set(\"Application-Names\", [\"exampleApp\", \"proAngular\"]);\r\n\r\n        return this.http.request<T>(verb, url, {\r\n            body: body,\r\n            headers: myHeaders\r\n        }).pipe(catchError((error: Response) =>\r\n            throwError(`Network Error: ${error.statusText} (${error.status})`)));\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    postWithId(url: string, data: any, params?: any): Observable<Response> {\r\n        return this.doPost(url, data, true, params);\r\n    }\r\n\r\n\r\n\r\n    putWithId(url: string, data: any, params?: any): Observable<Response> {\r\n        return this.doPut(url, data, true, params);\r\n    }\r\n\r\n    private doPost(url: string, data: any, needId: boolean, params?: any): Observable<Response> {\r\n        let options = {};\r\n        this.setHeaders(options, needId);\r\n\r\n        return this.http.post(url, data, options)\r\n            .pipe(\r\n                tap((res: Response) => {\r\n                    return res;\r\n                }),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n   \r\n\r\n    private handleError(error: any) {\r\n        if (error.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            console.error('Client side network error occurred:', error.error.message);\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            console.error('Backend - ' +\r\n                `status: ${error.status}, ` +\r\n                `statusText: ${error.statusText}, ` +\r\n                `message: ${error.error.message}`);\r\n        }\r\n\r\n        // return an observable with a user-facing error message\r\n        return throwError(error || 'server error');\r\n    }\r\n\r\n    private doPut(url: string, data: any, needId: boolean, params?: any): Observable<Response> {\r\n        //console.log(`do put ${url}`)\r\n        let options = {};\r\n        this.setHeaders(options, needId);\r\n\r\n        return this.http.put(url, data, options)\r\n            .pipe(\r\n                tap((res: Response) => {\r\n                    return res;\r\n                }),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    private setHeaders(options: any, needId?: boolean) {\r\n        // if (needId && this.securityService) {\r\n        //     options[\"headers\"] = new HttpHeaders()\r\n        //         .append('authorization', 'Bearer ' + this.securityService.GetToken())\r\n        //         .append('x-requestid', Guid.newGuid());\r\n        // }\r\n        // else if (this.securityService) {\r\n        //     options[\"headers\"] = new HttpHeaders()\r\n        //         .append('authorization', 'Bearer ' + this.securityService.GetToken());\r\n        // }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { BaseService } from 'src/app/_shared/services/base.service';\r\n\r\n\r\n@Injectable()\r\nexport class AdmService extends BaseService {\r\n\r\n    constructor(private http: HttpClient) { super(); }\r\n\r\n\r\n\r\n\r\n    getColaboradores(pageSize?: number, currentPage?: number, jsonParam?: any): Observable<any> {\r\n\r\n        var formJson = JSON.stringify(jsonParam)\r\n\r\n        let path = `/colaboradores/pesquisar/?itemsPerPage=` + pageSize + `&currentPage=${currentPage}&paramsJson=${formJson}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    envioAcesso(email): Observable<any> {\r\n\r\n        let path = `/usuario/envio-acesso-colaborador/${email}`\r\n\r\n        let response = this.http\r\n            .put(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    public GetTodasTurmasDaUnidade(): Observable<any> {\r\n\r\n        let path = `/turma`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    getTypePacotes(): Observable<any> {\r\n\r\n        let path = `/typepacote`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    getSystemRoles(): Observable<any> {\r\n\r\n        let path = `/usuario/roles`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    getMateriasByTypeId(typePacoteId: any): Observable<any> {\r\n        \r\n        let path = `/materia-template/filtro/${typePacoteId}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    saveProfessorMateria(profId: any, materiaId: any): Observable<any> {\r\n       \r\n        let path = `/professor/materia/${profId}/${materiaId}`\r\n\r\n        let response = this.http\r\n            .post(this.BaseUrl + path, {}, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    editDisponibilidade(dispo: any): Observable<any> {\r\n       \r\n        let path = `/professor/disponibilidade`\r\n\r\n        let response = this.http\r\n            .put(this.BaseUrl + path, dispo, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    editUsuario(usuario: any): Observable<any> {\r\n\r\n        let path = `/usuario`\r\n\r\n        let response = this.http\r\n            .put(this.BaseUrl + path, usuario, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    CepConsulta(CEP?: any): Observable<any> {\r\n\r\n        let url = `https://viacep.com.br/ws/${CEP}/json/`\r\n\r\n        let response = this.http\r\n            .get(url)\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n   \r\n    public GetMaterias(pageSize?: number, currentPage?: number): Observable<any> {\r\n\r\n        let path = `/materia-template/?itemsPerPage=` + pageSize + `&currentPage=${currentPage}&paramsJson={}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    public GetConfig(config?: any): Observable<any> {\r\n\r\n        let path = ''\r\n\r\n        if (config == 'CARGOS') path = `/parametro/value/cargo`\r\n\r\n        if (config == 'DOCUMENTOS') path = `/documentacao`\r\n\r\n        if (config == 'MATERIAS') path = `/materia-template`\r\n\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n   \r\n\r\n    public GetRelatorioProfessor(rangeIni: Date, rangeFinal: Date, professorId): Observable<any> {\r\n        var ini = rangeIni\r\n        ini.setHours(0, 0, 0, 0)\r\n        let path = `/professor/${rangeIni.toUTCString()}/${rangeFinal.toUTCString()}/${professorId}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    \r\n    GetBolsas(typePacoteId): Observable<any> {\r\n\r\n        let path = `/bolsa/${typePacoteId}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    GetBolsa(bolsaId): Observable<any> {\r\n\r\n        let path = `/bolsa/GetById/${bolsaId}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    GetBolsaSenha(senhaId): Observable<any> {\r\n\r\n        let path = `/bolsa/senha/${senhaId}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    public SaveBolsa(bolsa): Observable<any> {\r\n\r\n        let path = `/bolsa`\r\n\r\n        let response = this.http\r\n            .post(this.BaseUrl + path, bolsa, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    public EditBolsa(bolsa): Observable<any> {\r\n\r\n        let path = `/bolsa`\r\n\r\n        let response = this.http\r\n            .put(this.BaseUrl + path, bolsa, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n\r\n   \r\n    pesquisarPacote(typePacoteId: any, unidadeId: any): Observable<any> {\r\n\r\n        let path = `/pacote/${typePacoteId}/${unidadeId}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    GetCreateModuleViewModel(): Observable<any> {\r\n\r\n        let path = `/pacote/create`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    GetEditModuleViewModel(pacoteId): Observable<any> {\r\n\r\n        let path = `/pacote/edit/${pacoteId}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    \r\n    GetUsuarioAcessos(userId): Observable<any> {\r\n\r\n        let path = `/usuario/acessos/${userId}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    editAcessos(acessos): Observable<any> {\r\n\r\n        let path = `/usuario/acessos`\r\n\r\n        let response = this.http\r\n            .put(this.BaseUrl + path, acessos, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    getUsuarios(pageSize?: number, currentPage?: number, jsonParam?: any): Observable<any> {\r\n\r\n        var formJson = JSON.stringify(jsonParam)\r\n\r\n        let path = `/usuario/?itemsPerPage=` + pageSize + `&currentPage=${currentPage}&paramsJson=${formJson}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    savePacote(newPacote): Observable<any> {\r\n\r\n        let path = `/pacote`\r\n\r\n        let response = this.http\r\n            .post(this.BaseUrl + path, newPacote, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n    editPacote(editedPacote): Observable<any> {\r\n\r\n        let path = `/pacote`\r\n\r\n        let response = this.http\r\n            .put(this.BaseUrl + path, editedPacote, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n  \r\n\r\n    public GetUnidadeById(id): Observable<any> {\r\n\r\n        let path = `/unidade/${id}`\r\n\r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    public EditUnidade(unidade): Observable<any> {\r\n\r\n        let path = `/unidade`\r\n\r\n        let response = this.http\r\n            .put(this.BaseUrl + path, unidade, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n\r\n    public AddProfNaTurma(addProfCommand): Observable<any> {\r\n\r\n        let path = `/pedag/turma/professores`\r\n\r\n        let response = this.http\r\n            .post(this.BaseUrl + path, addProfCommand, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n\r\n        return response;\r\n    }\r\n\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { TurmaViewModel } from \"src/app/_shared/models/Turma.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { OpenPresencaComponentModal } from \"../service/modal.config\";\r\nimport { AgendamentoComponent } from \"./agendamento/agendamento.component\";\r\nimport { NotasComponent } from \"./notas/notas.component\";\r\nimport { PresencaComponent } from \"./presenca/presenca.component\";\r\n\r\n\r\n@Component({\r\n    selector: 'turmas-app',\r\n    templateUrl: './turmas.component.html',\r\n    animations: [HighlightTrigger]\r\n\r\n})\r\n\r\nexport class TurmasComponent implements OnInit {\r\n\r\n    private BaseUrl = environment.baseUrl;\r\n    showPresencaIcon = false\r\n    turmas: any[] = new Array<any>();// TurmaViewModel[] = new Array<TurmaViewModel>();\r\n    showTurmas = false\r\n    public showMessage = 'visible'\r\n    showSpinner = false\r\n    mensagem: string;\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n\r\n\r\n\r\n\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog\r\n    ) {\r\n\r\n    }\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.getTurmas();\r\n\r\n    }\r\n\r\n    agendarProvas() {\r\n\r\n    }\r\n\r\n\r\n\r\n    getTurmas() {\r\n\r\n        this.showTurmas = false\r\n        this.showMessage = 'visible'\r\n        this.showSpinner = true\r\n\r\n        this._http.get(`${this.BaseUrl}/pedag/turma`)\r\n            .subscribe(response => {\r\n                this.turmas = Object.assign([], response['turmas']);\r\n                console.log(this.turmas)\r\n            },\r\n                (error) => {\r\n                    // this.mensagem = \"Ocorreu um erro! Contate o Administrador!\"\r\n                    console.log(error)\r\n                    this.mensagem = \"Não há turmas cadastradas ou em andamento.\"\r\n                    this.showTurmas = false\r\n                    this.showMessage = 'hidden'\r\n                    this.showSpinner = false\r\n                },\r\n                () => {\r\n                    this.showTurmas = true\r\n                    this.showMessage = 'hidden'\r\n                    this.showSpinner = false\r\n                })\r\n    }\r\n\r\n    openNotas(turma): void {\r\n\r\n        const dialogRef = this._modal.open(NotasComponent, {\r\n            height: 'auto',\r\n            width: '1030px',\r\n            autoFocus: false,\r\n            maxHeight: '90vh',\r\n            maxWidth: '400vh',\r\n            data: { turma: turma },\r\n            hasBackdrop: true,\r\n            disableClose: true\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            // this.animal = result;\r\n        });\r\n    }\r\n\r\n    podeIniciarAula(podeIniciar: Boolean) {\r\n        //console.log('pode iniciar')\r\n        //return true\r\n        //return !turma\r\n        // if (this.tokenInfo.role == 'MasterAdm') {\r\n        //     return false\r\n        // }\r\n\r\n\r\n        return !podeIniciar\r\n    }\r\n\r\n    openAgendamento(turma): void {\r\n\r\n        const dialogRef = this._modal.open(AgendamentoComponent, {\r\n            height: 'auto',\r\n            width: '1130px',\r\n            autoFocus: false,\r\n            maxHeight: '110vh',\r\n            maxWidth: '450vh',\r\n            data: { turma: turma },\r\n            hasBackdrop: true,\r\n            disableClose: true\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            console.log('The dialog was closed');\r\n            // this.animal = result;\r\n        });\r\n    }\r\n\r\n    openPresenca(turma: TurmaViewModel): void {\r\n        const dialogRef = this._modal\r\n            .open(PresencaComponent, OpenPresencaComponentModal(turma));\r\n        dialogRef.afterClosed().subscribe(data => {\r\n        });\r\n    }\r\n\r\n    // openPresenca(turma: TurmaViewModel): void {\r\n\r\n    //     const dialogRef = this._modal.open(PresencaComponent, {\r\n    //         height: 'auto',\r\n    //         width: '1030px',\r\n    //         autoFocus: false,\r\n    //         // maxHeight: '90vh',\r\n    //         maxWidth: '400vh',\r\n    //         data: { turma: turma },\r\n    //         hasBackdrop: true,\r\n    //         disableClose: true\r\n    //     });\r\n\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n           \r\n    //     });\r\n    // }\r\n\r\n    iniciarAula(turma: TurmaViewModel) {\r\n\r\n        const dialogRef = this._modal\r\n            .open(ConfirmarIniciarAulaModal, {\r\n                height: 'auto',\r\n                width: '500px',\r\n                autoFocus: false,\r\n                //maxHeight: '90vh',\r\n                //maxWidth: '400vh',\r\n\r\n                data: { turma: turma },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            if (result.clicked == true) {\r\n\r\n                // console.log(turmaId)\r\n                // this.http.put(`${this.baseUrl}/turmas/turma/${turmaId}`, {\r\n                this.openPresenca(turma)\r\n\r\n            } else {\r\n                console.log('nao')\r\n            }\r\n\r\n        });\r\n\r\n\r\n\r\n        // this.showPresencaIcon = true\r\n        //  turma.aulaIniciada = true\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'confirmdialog',\r\n    template: `<div class=\"container\">\r\n    <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n        <div style=\"font-size: 1.2em;\">\r\n            Professor! Tem certeza que deseja inicar a aula?\r\n        </div>\r\n        <br>\r\n        <div style=\"text-align: justify; margin-top: 10px\">\r\n            A aula será iniciada e só poderá ser encerrada ao final da aula após o preenchimento da lista de presença e do \r\n            conteúdo programático.\r\n        </div>\r\n    </div>\r\n    <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\"></mat-progress-bar>\r\n\r\n    <div class=\"row\">\r\n        <button [disabled]=\"disabledButton\" color=\"primary\" style=\"width: 30px;\" (click)=\"iniciarAula()\" mat-button>SIM</button>\r\n        <button [disabled]=\"disabledButton\" style=\"width: 30px;\" [mat-dialog-close]=\"{clicked:'Cancel'}\" mat-button>NÃO</button>\r\n    </div>\r\n</div>`,\r\nanimations: [HighlightTrigger]\r\n})\r\nexport class ConfirmarIniciarAulaModal implements OnInit {\r\n\r\n\r\n    private BaseUrl = environment.baseUrl;\r\n    public initProgressBar = 'hidden'\r\n    public disabledButton = false\r\n    constructor(\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<ConfirmarIniciarAulaModal>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n    ngOnInit() {\r\n        console.log(this.data['turma'].calendarioId)\r\n\r\n    }\r\n\r\n\r\n    iniciarAula() {\r\n        // calendario/{calendarioId}\r\n        this.disabledButton = true\r\n        this.initProgressBar = 'visible'\r\n        this._http.put(`${this.BaseUrl}/pedag/turma/calendario/${this.data['turma'].calendarioId}`, {})\r\n            .subscribe(resp => {\r\n\r\n            }, (error) => {\r\n                console.log(error)\r\n                this.disabledButton = false\r\n                this.initProgressBar = 'hidden'\r\n                // this.dialogRef.close({ clicked: \"Sim\" })\r\n            },\r\n                () => {\r\n                    this.disabledButton = false\r\n                    this.initProgressBar = 'hidden'\r\n                    this.dialogRef.close({ clicked: true })\r\n                })\r\n\r\n\r\n\r\n    }\r\n}","<div class=\"container\" style=\"width: 95%;\">\r\n \r\n    <br>\r\n\r\n    <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"showMessage\"  @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n    <div *ngIf=\"showTurmas\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n            position: relative;\r\n            margin-top: 50px;\r\n            box-shadow: 0 0 1em rgb(172, 170, 170);\r\n            background-color: rgb(227, 240, 227);\">\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Diário de classe</h4>\r\n            <p class=\"card-category\">Turmas em andamento:</p>\r\n        </div>\r\n        <!-- <div @rowHighlight *ngIf=\"turmas.length > 0;\"> -->\r\n        <!-- </div> -->\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"z-index: 9; height: 430px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <!-- <tr>\r\n                            <th style=\"width: 2%; \r\n                                        text-align:left; \r\n                                        vertical-align: middle;\r\n                                        border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 40%;font-size:1.2em;\r\n                                    vertical-align: middle;\r\n                                    text-align:left;\r\n                                    border-top: 0px; font-weight: 400;\">\r\n                                <div>Diário de classe</div>\r\n                                <span style=\"font-size: 0.7em;\">Turmas em andamento</span>\r\n                            </th>\r\n\r\n                            <th style=\"width: 58%;font-size:1.2em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">\r\n                            </th>\r\n\r\n                        </tr> -->\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr @rowHighlight *ngFor=\"let turma of turmas; let i = index;\">\r\n                            <td style=\"text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">\r\n                                {{turma.descricao}} {{turma.identificador}}<br>\r\n                                <span *ngIf=\"!turma.podeIniciarAula;else emAndamento\" style=\"font-size: 0.9em;font-style: italic;\">&nbsp;&nbsp;&nbsp;&nbsp;próxima aula: {{ turma.descAula}} - \r\n                                    {{ turma.professor || 'sem professor alocado'}} - {{turma.proximaAula | date:'d/M/yyyy H:mm'}} às \r\n                                    {{turma.proximaAulaFinal | date:'H:mm'}}</span>\r\n\r\n                                    <ng-template #emAndamento>\r\n                                        <span style=\"font-size: 0.9em;font-style: italic;\">\r\n                                            &nbsp;&nbsp;&nbsp;&nbsp;Aula em andamento: {{ turma.descAula}} - \r\n                                            {{ turma.professor}} - {{turma.proximaAula | date:'d/M/yyyy H:mm'}} às \r\n                                            {{turma.proximaAulaFinal | date:'H:mm'}}</span>\r\n                                    </ng-template>\r\n                                    \r\n                            </td>\r\n\r\n                            <td style=\"width: 20%; text-align: center;vertical-align: middle;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"agendar provas\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openAgendamento(turma)\" disabled\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>pending_actions</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin-left: 10%;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"lançar notas\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openNotas(turma)\" disabled\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>assignment</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <!-- <i style=\"margin: 0px; margin-left: 15%;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"iniciar a aula\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"iniciarAula(turma)\" [disabled]=\"!turma.podeIniciar\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon [style.color]=\"!turma.podeIniciar ? 'gray': 'green'\"\r\n                                            style=\"font-size: 1.5em;font-weight: 200;\" class=\"material-icons-outlined\">\r\n                                            play_arrow</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n                                <!-- TEMP-->\r\n                                <i style=\"margin: 0px; margin-left: 10%;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"iniciar a aula\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"iniciarAula(turma)\" [disabled]=\"podeIniciarAula(turma.podeIniciarAula)\" \r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon [style.color]=\"turma.podeIniciarAula ? 'green': 'gray'\"\r\n                                            style=\"font-size: 1.5em;font-weight: 200;\" class=\"material-icons-outlined\">\r\n                                            play_arrow</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n                               \r\n\r\n                                <!-- <i @rowHighlight [style.visibility]=\"turma.aulaIniciada ?'visible':'hidden' \"\r\n                                    style=\"margin: 0px;margin-left: 15%;\" #tooltip=\"matTooltip\" matTooltip=\"lista de presença\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openPresenca(turma)\" @rowHighlight\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon @rowHighlight style=\"font-size: 1.5em;font-weight: 200;\"\r\n                                            class=\"material-icons-outlined\">description</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <!-- <mat-paginator style=\" \r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" [length]=\"length\" [pageSize]=\"5\" hidePageSize=\"true\" (page)=\"pageEvent = $event\"\r\n                (click)=\"changePage(pageEvent)\">\r\n            </mat-paginator> -->\r\n\r\n    </div>\r\n\r\n   \r\n\r\n    <!-- <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n            top: 46.5%; \r\n            position: absolute;\">\r\n        </mat-spinner> -->\r\n    <!-- </div> -->\r\n</div>","import { Component, EventEmitter, Inject, OnInit, Output } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n\r\n\r\n\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'leadexportmodal',\r\n    templateUrl: './lead-export.component.html',\r\n    styleUrls: ['./lead-export.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class LeadExportComponent implements OnInit {\r\n   \r\n    baseUrl = environment.baseUrl;   \r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n\r\n    public progress: number;\r\n    public message: string;\r\n    @Output() public onUploadFinished = new EventEmitter();\r\n    \r\n     constructor(\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<LeadExportComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {       \r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n\r\n    }\r\n\r\n    showForm = false\r\n\r\n    onSubmit(form: FormGroup) {\r\n\r\n        if (form.valid) {\r\n\r\n\r\n            this._http.post(`${this.baseUrl}/colaboradores`, form.value, {\r\n\r\n            }).subscribe(response => {\r\n\r\n            }, (err) => {\r\n                \r\n            },\r\n                () => {\r\n\r\n                    this.openSnackBar()\r\n\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                });\r\n        }\r\n    }\r\n\r\n    buscarEmail(event){\r\n\r\n    }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Lead cadastrada com sucesso.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n    uploadFile(files){\r\n\r\n    //     console.log(files)\r\n    //     if (files.length === 0) {\r\n\r\n    //         return;\r\n    //     }\r\n    //     this.decodedToken = this.jwtHelper.decodeToken(localStorage.getItem('jwt'));\r\n\r\n    //     console.log(this.decodedToken)\r\n    //     console.log(this.decodedToken['email'])\r\n    //     let fileToUpload = <File>files[0];\r\n    //     const formData = new FormData();\r\n    //     formData.append('file', fileToUpload, fileToUpload.name);\r\n\r\n    //     this.http.post(`${this.baseUrl}/comercial/?userEmail=${this.decodedToken['email']}`, formData, {\r\n\r\n    //         reportProgress: true, observe: 'events',\r\n\r\n    //     })\r\n    //         .subscribe(event => {\r\n    //             if (event.type === HttpEventType.UploadProgress)\r\n    //                 this.progress = Math.round(100 * event.loaded / event.total);\r\n    //             else if (event.type === HttpEventType.Response) {\r\n    //                 this.message = 'Upload success.';\r\n    //                 this.onUploadFinished.emit(event.body);\r\n    //             }\r\n    //         },\r\n    //             (error) => { console.log(error) },\r\n    //             () => {\r\n    //                 console.log('finally')\r\n    //                 this.dialogRef.close({ clicked: \"Ok\" });\r\n                   \r\n    //             });\r\n     }\r\n\r\n    exportExcel() {\r\n\r\n        var file = \"Modelo LEAD.xlsx\";\r\n       \r\n\r\n        this.download().subscribe(data => {\r\n           \r\n            switch (data.type) {\r\n                case HttpEventType.Response:\r\n                      const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n                    const a = document.createElement('a');\r\n                    a.setAttribute('style', 'display:none;');\r\n                    document.body.appendChild(a);\r\n                    a.download = file;\r\n                    a.href = URL.createObjectURL(downloadedFile);\r\n                    a.target = '_blank';\r\n                    a.click();\r\n                    document.body.removeChild(a);\r\n                    break;\r\n            }\r\n        },\r\n            (err) => {\r\n               \r\n            },\r\n            () => {\r\n               \r\n            }\r\n        );\r\n    }\r\n\r\n    public download(): Observable<HttpEvent<Blob>> {\r\n        return this._http.request(new HttpRequest(\r\n            'GET', `${this.baseUrl}/download`, null, {\r\n            reportProgress: true,\r\n            responseType: 'blob'\r\n        }));\r\n    }\r\n\r\n\r\n    onOkClick() {\r\n       \r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n\r\n\r\n}","<div style=\"font-size: 1.2em;\">Exportar Lead\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<div style=\"font-size: 0.9em;margin-top: 5px;\">(TODO? checar todos os dados para ver se ja n existe aluno com algum dos\r\n    dados</div>\r\n<hr>\r\n<div style=\"position: relative;\">\r\n\r\n\r\n\r\n    <!-- <div class=\"card-header\">\r\n        <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n            LEADS</h4>\r\n        <p class=\"card-category\"> </p>\r\n    </div> -->\r\n\r\n\r\n    <!-- <div class=\"card-body\"> -->\r\n\r\n\r\n    <!-- <div class=\"row\" style=\"margin-bottom:15px;\"> -->\r\n    <div class=\"\">\r\n        <input multiple type=\"file\" #file placeholder=\"Choose file\" (change)=\"uploadFile(file.files)\"\r\n            style=\"display:none;\">\r\n        <!-- <button style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\" (click)=\"file.click()\">Exportar\r\n            Lead</button> -->\r\n\r\n            <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button (click)=\"file.click()\" style=\"\" mat-icon-button>\r\n            <mat-icon>file_download</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n\r\n\r\n\r\n        <span style=\"font-size: 0.7em;\"><br>* formato aceito: excel (.xls)</span>\r\n    </div>\r\n    <div class=\"\">\r\n        <span class=\"upload\" *ngIf=\"progress > 0\">\r\n            {{progress}}%\r\n        </span>\r\n        <span class=\"upload\" *ngIf=\"message\">\r\n            {{message}}\r\n        </span>\r\n    </div>\r\n    <!-- </div> -->\r\n    <div class=\"row\">\r\n        <div class=\"\">\r\n            <button style=\"width: 140px;\" type=\"button\" class=\"btn btn-success\" (click)=\"exportExcel()\">modelo</button>\r\n        </div>\r\n    </div>\r\n\r\n    \r\n\r\n    <!-- </div> -->\r\n</div>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'prof-calendario-app',\r\n    templateUrl: './prof-calendario.component.html',\r\n    styleUrls: ['./prof-calendario.component.scss'],\r\n    animations: [HighlightTrigger]\r\n\r\n})\r\n\r\nexport class ProfCalendarioComponent implements OnInit {\r\n\r\n    private _baseUrl = environment.baseUrl\r\n    public showSpin = false\r\n    public initProgressBar = 'visible'\r\n    public ShowTableHeader = false\r\n    public infoNenhumDado = false\r\n    // public listaPresencaDto: ListaPresencaDto[] = new Array<ListaPresencaDto>();\r\n    // public infoDia: InfoDia = new InfoDia();\r\n    //public saveCommand: SavePresencaCommand = new SavePresencaCommand();\r\n    // public observacoes: string = \"\";\r\n    // public obsForm: FormGroup;\r\n    // public diaAulaString: any\r\n    public calendarios: any[] = new Array<any>()\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog,\r\n        public _dialogRef: MatDialogRef<ProfCalendarioComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        // this.obsForm = this._fb.group({\r\n        //     observacoes: ['', [Validators.required]]\r\n        // })\r\n    }\r\n\r\n    ngOnInit() {\r\n        console.log(this.data)\r\n        this._dialogRef.addPanelClass('profcalendar-class')\r\n        this.GetProfessorCalendario();\r\n    }\r\n\r\n    private GetProfessorCalendario() {\r\n\r\n        this._http.get(`${this._baseUrl}/professor/calendario-professor/${this.data['prof'].id}`)\r\n            .subscribe(resp => {\r\n\r\n                //console.log(resp)\r\n                this.calendarios = Object.assign([], resp['calendario'])\r\n                console.log(this.calendarios)\r\n\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                    this.showSpin = false\r\n                    this.initProgressBar = 'hidden'\r\n                    this.infoNenhumDado = true\r\n\r\n                },\r\n                () => {\r\n                    this.ShowTableHeader = true\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showSpin = true\r\n                    //this._dialogRef.addPanelClass('pedagcalendar-class')\r\n                })\r\n    }\r\n\r\n    concluirAula() {\r\n        // calendárioId\r\n    }\r\n\r\n    public GetNotaAula(caled): void {\r\n        // const dialogRef = this._modal\r\n        //     .open(ObservacoesTurmaModal, ObsTurmaModalConfig(caled));\r\n        // dialogRef.afterClosed().subscribe(data => {\r\n        // });\r\n    }\r\n\r\n    public EditAula(caled): void {\r\n        // const dialogRef = this._modal\r\n        //     .open(AulaEditarModal, AulaEditModalConfig(caled));\r\n        // dialogRef.afterClosed().subscribe(data => {\r\n        //     if (data['result'] == true) {\r\n        //         let index = this.calendarios.findIndex((obj => obj.id == data['aula'].id));\r\n        //         this.calendarios[index] = data['aula']\r\n        //         console.log(this.calendarios[index])\r\n\r\n        //     }\r\n        // });\r\n    }\r\n}\r\n\r\n","<div style=\"font-size: 1.2em;position: sticky;z-index: 9; padding-top: 20px;\r\nbackground-color: rgb(252, 253, 255);\r\ntop: 0;\">Calendario\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n<!-- \r\n    <hr>\r\n    <div style=\"font-size: 0.9em;margin-top: 10px;\">\r\n        <mat-form-field appearance=\"standard\" style=\"width: 55%;\">\r\n            <mat-label>Nome</mat-label>\r\n            <input [(ngModel)]=\"data['prof'].nome\" disabled\r\n            oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>     \r\n    </div> -->\r\n\r\n    <mat-progress-bar style=\"margin-top: 5px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n    <div *ngIf=\"infoNenhumDado\" style=\"font-size: 0.8em;font-style: italic;\" >Nenhum dado localizado</div>\r\n\r\n    <!-- <hr> -->\r\n    <!-- <div *ngIf=\"ShowTableHeader\" class=\"table-responsive table-calend-top\" style=\"position: relative;\">\r\n        <table style=\"margin-bottom: 0px; padding: 0px;\" class=\"table\">\r\n           \r\n            <thead>\r\n                <tr>\r\n                    <th style=\"width: 3%; font-size: 0.7em;\r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n\r\n                    <th style=\"width: 7%;font-size: 0.7em;\r\n                    vertical-align: middle; \r\n                    text-align:left;\r\n                     border-top: 0px; font-weight: 400;\">DIA</th>\r\n\r\n                    <th style=\"width: 13.5%;font-size: 0.7em;\r\n                    vertical-align: middle;\r\n                    text-align:center;\r\n                    border-top: 0px; font-weight: 400;\">HORÁRIO</th>\r\n\r\n                    <th style=\"width: 11%;font-size: 0.7em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">INICIADA/CONCLUÍDA</th>\r\n\r\n                    <th style=\"width: 8%;font-size: 0.7em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">UNIDADE<br>SALA</th>\r\n\r\n                    <th style=\"width: 18%;font-size: 0.7em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">MATÉRIA</th>\r\n\r\n                    <th style=\"width: 25%;font-size: 0.7em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">PROFESSOR</th>\r\n\r\n                    <th style=\"width: 12.5%;font-size: 0.7em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">OBS</th>\r\n\r\n\r\n                </tr>\r\n            </thead>\r\n           \r\n        </table>\r\n    </div> -->\r\n\r\n</div>\r\n\r\n<div *ngIf=\"showSpin\" class=\"table-responsive table-calend\" style=\"position: relative;min-height: 100px;\">\r\n    \r\n    <hr>\r\n\r\n    <div style=\"margin-top: 10px;\">\r\n        <mat-form-field appearance=\"standard\" style=\"width: 55%;font-size: 0.9em;\">\r\n            <mat-label>Nome</mat-label>\r\n            <input [(ngModel)]=\"data['prof'].nome\" disabled matInput>\r\n        </mat-form-field>   \r\n        \r\n        <mat-form-field appearance=\"standard\" style=\"width: 40%;margin-left: 2%;font-size: 0.9em;\">\r\n            <mat-label>Email</mat-label>\r\n            <input [(ngModel)]=\"data['prof'].email\" disabled matInput>\r\n        </mat-form-field>   \r\n    </div>\r\n  \r\n    <table *ngIf=\"calendarios.length > 0\" color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n      \r\n        <thead>\r\n            <tr>\r\n                <th style=\"width: 3%;\r\n                text-align:left; \r\n                vertical-align: middle;\r\n                border-top: 0px;\"></th>\r\n\r\n\r\n                <th style=\"width: 7%;\r\n                vertical-align: middle; \r\n                text-align:left;\r\n                 border-top: 0px; font-weight: 400;\">DIA</th>\r\n\r\n                <th style=\"width: 11.5%;\r\n                vertical-align: middle;\r\n                text-align:center;\r\n                border-top: 0px; font-weight: 400;\">HORÁRIO</th>\r\n\r\n                <th style=\"width: 10%;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">INICIADA<br>CONCLUÍDA</th>\r\n\r\n                <th style=\"width: 20%;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">UNIDADE<br>SALA</th>\r\n\r\n                <th style=\"width: 48.5%;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">MATÉRIA</th>\r\n\r\n                <!-- <th style=\"width: 36.5%;font-size: 1em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">PROFESSOR</th> -->\r\n\r\n                <!-- <th style=\"width: 12.5%;font-size: 1em;\r\ntext-align:center; \r\nvertical-align: middle;\r\nborder-top: 0px; font-weight: 400;\">OBS</th> -->\r\n\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            <tr *ngFor=\"let cale of calendarios;let i = index;\">\r\n\r\n                <td style=\"text-align:left;vertical-align: middle; \">\r\n                    {{ i + 1}}\r\n                </td>\r\n                <td style=\"text-align:left;vertical-align: middle;\">\r\n                    {{cale.diaaula | date:'dd/MM/yyyy'}}\r\n                </td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;\">\r\n                    {{cale.diadasemana}}<br>{{cale.horainicial}} às {{cale.horafinal}}\r\n                </td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                    <ng-container *datePastCheck=\"cale.diaaula;\">\r\n\r\n\r\n                        <ng-container *ngIf=\"cale.aulainiciada;else naoiniciada\">\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"aula iniciada pelo professor\" matTooltipPosition=\"above\"\r\n                                matTooltipHideDelay=\"100\">\r\n                                <mat-icon style=\"color: green;\">done</mat-icon>\r\n\r\n                            </i>\r\n                        </ng-container>\r\n                        <ng-template #naoiniciada>\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"aula não iniciado pelo professor\" matTooltipPosition=\"above\"\r\n                                matTooltipHideDelay=\"100\">\r\n                                <mat-icon style=\"color: red;\">close</mat-icon>\r\n                            </i>\r\n                        </ng-template>\r\n\r\n                       \r\n\r\n                        <ng-container *ngIf=\"cale.aulaconcluida;else naoconcluida\">\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"aula concluída pelo professor\" matTooltipPosition=\"above\"\r\n                                matTooltipHideDelay=\"100\">\r\n                                <mat-icon style=\"color: green;\">done</mat-icon>\r\n\r\n                            </i>\r\n                        </ng-container>\r\n                        <ng-template #naoconcluida>\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"aula não concluída pelo professor\" matTooltipPosition=\"above\"\r\n                                matTooltipHideDelay=\"100\">\r\n                                <mat-icon style=\"color: red;\">close</mat-icon>\r\n                            </i>\r\n                        </ng-template>\r\n\r\n\r\n                    </ng-container>\r\n\r\n                \r\n                </td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;\">\r\n                   {{ cale.unidadeDescricao }} / {{cale.titulo}}<br> {{cale.turma}}\r\n                </td>\r\n\r\n                <td style=\"text-align: center;vertical-align: middle;\">\r\n                    {{cale.materiaDescricao || 'livre'}}\r\n                </td>\r\n\r\n                <!-- <td style=\"text-align: center;vertical-align: middle;\">\r\n                    {{cale.professor || 'Nenhum professor alocado'}}\r\n                </td> -->\r\n\r\n                <!-- <td style=\"text-align: center;vertical-align: middle;width: 14%;\">\r\n\r\n                    \r\n                    <ng-container *ngIf=\"cale.podeVerRelatorioAula;\">\r\n                        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"nota da aula\"\r\n                            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                            <button [disabled]=\"showSpinner\" (click)=\"GetNotaAula(cale)\"\r\n                                style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon style=\"font-size: 1.3em;\">note_alt</mat-icon>\r\n                            </button>\r\n                        </i>\r\n                    </ng-container>\r\n                  \r\n                    <ng-container *ngIf=\"cale.podeVerRelatorioAula == false\">\r\n                        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"editar\"\r\n                            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                            <button (click)=\"EditAula(cale)\"  style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon style=\"font-size: 1.3em;\">edit</mat-icon>\r\n                            </button>\r\n                        </i>\r\n                        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"\"\r\n                            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                            <button disabled style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon style=\"font-size: 1.3em;\">note_alt</mat-icon>\r\n                            </button>\r\n                        </i>\r\n                        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"\"\r\n                            matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                            <button disabled style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                                <mat-icon style=\"font-size: 1.3em;\">note_alt</mat-icon>\r\n                            </button>\r\n                        </i>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngIf=\"cale.podeVerRelatorioAula == null\">\r\n                        aguarde a conslusão da aula de hoje...\r\n                    </ng-container>\r\n                </td> -->\r\n\r\n\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n   \r\n</div>\r\n\r\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit, Output } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { AdmService } from \"src/app/Adm/services/adm.services\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { PedagogicoService } from \"../../service/pedagogico.service\";\r\n\r\n@Component({\r\n    selector: \"estagioedit-app\",\r\n    templateUrl: './estagio-edit.component.html',\r\n    styleUrls: ['./estagio-edit.component.scss'],\r\n    animations: [HighlightTrigger]\r\n    //\r\n})\r\n\r\nexport class EstagioEditComponent implements OnInit {\r\n\r\n    //baseUrl = environment.baseUrl;\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n    //public cepReturn: CepReturn = new CepReturn();\r\n    public initProgressBar = 'visible'\r\n    public saveBar = 'hidden'\r\n    private originalEstagio: any\r\n    public estagioForm: FormGroup\r\n    //public estagio: any;\r\n    //public showForm = false;\r\n\r\n    constructor(\r\n        //private _snackBar: MatSnackBar,\r\n        //private CreateMatriculaModal: MatDialog,\r\n        private _pedagService: PedagogicoService,\r\n        private _helper: HelpersService,\r\n        private _admService: AdmService,\r\n        private _fb: FormBuilder,\r\n        //private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<EstagioEditComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any\r\n        //private CreateColaboradoresModal: MatDialog,\r\n        //private EditColaboradoresModal: MatDialog\r\n    ) {\r\n        this.estagioForm = _fb.group({\r\n            id:[''],\r\n            nome: [\"\", [Validators.required]],\r\n            dataInicio: [\"\", [Validators.required]],\r\n            vagas: [\"\", [Validators.required]],\r\n            cnpj: [\"\", [Validators.required, Validators.minLength(14)]],\r\n            cep: ['', [Validators.required, Validators.minLength(8)]],\r\n            logradouro: ['', [Validators.required, Validators.minLength(1)]],\r\n            numero: ['', [Validators.required]],\r\n            complemento: [''],\r\n            cidade: ['', [Validators.required, Validators.minLength(1)]],\r\n            uf: ['', [Validators.required, Validators.minLength(2)]],\r\n            bairro: ['', [Validators.required, Validators.minLength(1)]],\r\n            ativo: [true]\r\n        })\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        \r\n        this.GetEstagio();\r\n    }\r\n\r\n    GetEstagio() {\r\n\r\n        this._pedagService.GetEstagio(this.data['estagio'].id)\r\n            .subscribe(\r\n                sucesso => { this.GetEstagioSucesso(sucesso) },\r\n                falha => { this.GetEstagioFalha(falha) }\r\n            )\r\n    }\r\n\r\n    private GetEstagioSucesso(response){\r\n        \r\n        this.estagioForm.patchValue(response['estagio']);\r\n        this.originalEstagio = JSON.parse(JSON.stringify(this.estagioForm.value))\r\n        this.dialogRef.addPanelClass('myestagioedit-class')\r\n        this.initProgressBar = 'hidden'\r\n    }\r\n\r\n    private GetEstagioFalha(error){\r\n        this.initProgressBar = 'hidden'\r\n    }\r\n\r\n    consultaCEP(CEP: string) {\r\n\r\n        if (this.estagioForm.get('cep').valid) {\r\n\r\n            this._admService.CepConsulta(this.estagioForm.get('cep').value)\r\n                .subscribe(response => {\r\n\r\n                    this.estagioForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n                    this.estagioForm.get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n                    this.estagioForm.get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n                    this.estagioForm.get('uf').setValue(response[\"uf\"].toUpperCase());\r\n\r\n                }, err => {\r\n                    this._helper.openSnackBarError('Ocorreu um erro ao pesquisas o CEP. Procure o administrador do sistema.')\r\n                },\r\n                    () => {\r\n\r\n                       // this.styleVisibilityEndereco = 'visible'\r\n                    });\r\n        }\r\n    }\r\n\r\n    get desabilitar() {\r\n          \r\n        if (this.estagioForm.valid &&\r\n            JSON.stringify(this.originalEstagio) !=\r\n            JSON.stringify(this.estagioForm.value)) {\r\n\r\n            return this.saveBar != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n}\r\n\r\n    public Salvar(form: any) {\r\n        // console.log(this.estagioForm.value)\r\n         if (this.estagioForm.valid) {\r\n             this.saveBar = 'visible'\r\n             this._pedagService.EditEstagio(this.estagioForm.value)\r\n                 .subscribe(\r\n                     sucesso => { this.SalvarSucesso() },\r\n                     falha => { this.SalvarFalha(falha) }\r\n                 )\r\n         }\r\n     }\r\n \r\n     private SalvarSucesso() {\r\n         this._helper.openSnackBarSucesso('Estágio editado com sucesso')\r\n         this.dialogRef.close({ clicked: true });\r\n     }\r\n \r\n     private SalvarFalha(error) {\r\n         this.saveBar = 'hidden'\r\n         // if (err['status'] == 409) {\r\n         //     this.msgErros = err['error'].msg\r\n         //     this.showMensagem = 'visible'\r\n         //     this.disabledSaveButton = 'hidden'\r\n         // }else{\r\n         //     this._helper.openSnackBarErrorDefault()\r\n \r\n         //      this.dialogRef.close({ clicked: \"Ok\" });\r\n         // }\r\n     } \r\n}","<div style=\"font-size: 1.2em;\">Editar Estágio\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n\r\n<div *ngIf=\"initProgressBar != 'visible'\">\r\n\r\n    <hr>\r\n\r\n    <form novalidate [formGroup]=\"estagioForm\" (ngSubmit)=\"Salvar(estagioForm)\">\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 250px; \">\r\n            <mat-label>Nome Instituição</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" selected formControlName=\"nome\" matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 150px; margin-left: 5%; \">\r\n            <mat-label>CNPJ</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" selected\r\n                formControlName=\"cnpj\" minlength=\"14\" maxlength=\"18\" mask=\"00.000.000/0000-00\" matInput\r\n                placeholder=\"CNPJ\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n            <mat-label>Inicio</mat-label>\r\n            <input matInput [matDatepicker]=\"dp3\" formControlName=\"dataInicio\" disabled>\r\n            <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 25%; \">\r\n            <mat-label>Inicio</mat-label>\r\n            <input matInput formControlName=\"dataInicio\" placeholder=\"início\" \r\n            \r\n            [value]=\"valor\"\r\n                (focusout)=\"onFocusOutDateEvent($event)\"\r\n                onkeypress=\"String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n        </mat-form-field> -->\r\n\r\n        <!-- <mat-form-field (focusout)=\"onFocusOutDateEvent($event)\" appearance=\"standard\" style=\"width: 145px; \">\r\n            <mat-label>Previsão 1</mat-label>\r\n            <input mask=\"00/00/0000\" required name=\"prevInicio_1\" matInput [value]=\"previIniOne\"\r\n                formControlName=\"prevInicio_1\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n            <mat-hint>Previsão de início 1</mat-hint>\r\n        </mat-form-field>\r\n\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 150px;\">\r\n            <mat-label>Inicio</mat-label>\r\n            <date-input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                formControlName=\"dataInicio\" matInput required></date-input>\r\n            <mat-hint>Previsão de início</mat-hint>\r\n        </mat-form-field> -->\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 65px;margin-left: 5%;\">\r\n            <mat-label>nº vagas</mat-label>\r\n            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" formControlName=\"vagas\"\r\n                minlength=\"1\" maxlength=\"4\" required name=\"vagas\" matInput>\r\n            <!-- <mat-hint>nº vagas</mat-hint> -->\r\n        </mat-form-field>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 55px;margin-left: 15px;\">\r\n                \r\n                <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                    formControlName=\"trimestre\" minlength=\"1\" maxlength=\"4\" required name=\"vagas\" matInput>\r\n                <mat-hint>trimestre</mat-hint>\r\n            </mat-form-field> -->\r\n\r\n        <br>\r\n        <mat-form-field appearance=\"standard\" style=\"width: 100px;\">\r\n            <mat-label>CEP</mat-label>\r\n            <input mask=\"00.000-000\" onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                formControlName=\"cep\" minlength=\"8\" maxlength=\"10\" required matInput placeholder=\"apenas números\">\r\n        </mat-form-field>\r\n\r\n        <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button type=\"button\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                <mat-icon (click)=\"consultaCEP(estagioForm.get('cep').value)\">search</mat-icon>\r\n            </button>\r\n        </i>\r\n\r\n        <br>\r\n\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%;\">\r\n            <mat-label>Logradouro</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" selected formControlName=\"logradouro\"\r\n                matInput placeholder=\"ex: rua tal...\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 10%;margin-left: 5%;\">\r\n            <mat-label>Nº</mat-label>\r\n            <input formControlName=\"numero\" oninput=\"this.value = this.value.toUpperCase()\" selected \r\n                matInput placeholder=\"ex: rua tal...\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 45%; margin-left: 5%;\">\r\n            <mat-label>Complemento</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" selected formControlName=\"complemento\"\r\n                matInput placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n            <mat-label>Cidade</mat-label>\r\n            <input disabled selected [value]=\"estagioForm.get('cidade').value\" matInput placeholder=\"digite o bairro\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 5%; margin-left: 5%;\">\r\n            <mat-label>UF</mat-label>\r\n            <input disabled selected [value]=\"estagioForm.get('uf').value\" matInput placeholder=\"digite o bairro\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 35%; margin-left: 5%;\">\r\n            <mat-label>Bairro</mat-label>\r\n            <input oninput=\"this.value = this.value.toUpperCase()\" selected formControlName=\"bairro\" matInput\r\n                placeholder=\"digite o bairro\">\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-progress-bar [style.visibility]=\"saveBar\" @rowHighlight mode=\"query\">\r\n        </mat-progress-bar>\r\n\r\n        <div style=\"float: right;margin-top: 15px;\">\r\n            <button color=\"primary\" [disabled]=\"desabilitar\" type=\"submit\" mat-raised-button\r\n                style=\"position: relative; float:right;margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n        </div>\r\n\r\n    </form>\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Modalidade } from \"src/app/_shared/models/perfil.model\";\r\n\r\n@Component({\r\n    selector: 'mat-createmodal',\r\n    templateUrl: './mat-create.component.html',\r\n    styleUrls: ['./mat-create.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class MateriaTemplateComponent implements OnInit {\r\n\r\n\r\n    baseUrl = environment.baseUrl;\r\n\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public docForm: FormGroup\r\n    public typesPacotes: any[] = new Array<any>();\r\n    public progress = false\r\n    public modalidade = Modalidade\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<MateriaTemplateComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.docForm = _fb.group({\r\n            nome: ['', [Validators.required]],\r\n            descricao: [''],\r\n            typePacoteId: ['', [Validators.required]],\r\n            modalidade: ['', [Validators.required]],\r\n            cargaHoraria: ['', [Validators.required]],\r\n            ativo: [true]\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.getTypePacotes();\r\n    }\r\n\r\n    getTypePacotes() {\r\n\r\n        //if(this.pesquisarForm.valid){\r\n        this._http.get(`${this.baseUrl}/typepacote`)\r\n            .subscribe(resp => {\r\n                console.log(resp)\r\n\r\n                this.typesPacotes = Object.assign([], resp['typePacotes']);\r\n\r\n            }, (error) => { console.log(error) },\r\n                () => {\r\n                    //this.showTeste = true\r\n                })\r\n        // }\r\n    }\r\n\r\n    onSubmit(form: FormGroup) {\r\n\r\n        if (form.valid) {\r\n\r\n            this.progress = true\r\n            this._http.post(`${this.baseUrl}/materia-template`, this.docForm.value, {})\r\n                .subscribe(response => {\r\n\r\n                }, (err) => {\r\n                    console.log(err)\r\n                    this.progress = false\r\n                },\r\n                    () => {\r\n                        this.progress = false\r\n                        this.dialogRef.close({ clicked: \"Ok\" });\r\n                    });\r\n        }\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Criar matéria\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<!-- <div style=\"font-size: 0.8em;margin-top: 5px;\">* O colaborador será salvo na unidade de {{tokenInfo.Unidade}}</div> -->\r\n<hr>\r\n<div style=\"position: relative;\">\r\n\r\n    <form novalidate [formGroup]=\"docForm\" (ngSubmit)=\"onSubmit(docForm)\">\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%; \">\r\n            <mat-label>Nome</mat-label>\r\n            <input selected formControlName=\"nome\" matInput placeholder=\"Ex: RG\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 5%;\">\r\n            <mat-label>Type Pacote</mat-label>\r\n            <mat-select formControlName=\"typePacoteId\" placeholder=\"type pacote\">\r\n                <mat-option></mat-option>\r\n                <mat-option *ngFor=\"let pac of typesPacotes\" [value]=\"pac.id\">{{pac.nome}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 5%;\">\r\n            <mat-label>Descrição</mat-label>\r\n            <input selected formControlName=\"descricao\" matInput placeholder=\"\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 20%;\">\r\n            <mat-label>Modalidade</mat-label>\r\n            <mat-select formControlName=\"modalidade\" placeholder=\"modalidade\">\r\n                <mat-option></mat-option>\r\n                <mat-option *ngFor=\"let mol of modalidade\" [value]=\"mol.value\">{{mol.value}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 5%;\">\r\n            <mat-label>Carga horária</mat-label>\r\n            <input selected formControlName=\"cargaHoraria\"\r\n                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" matInput\r\n                placeholder=\"\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <ng-container>\r\n            <button type=\"submit\" mat-raised-button disabled=\"true\" color=\"primary\"\r\n                style=\"float:right;margin-bottom: 0px;margin-left: 10px;\" [disabled]=\"!docForm.valid || progress\">\r\n\r\n\r\n                <mat-spinner *ngIf=\"progress\" style=\"margin-left: 8px;margin-top: 5px; position: absolute;\"\r\n                    [diameter]=\"26\"></mat-spinner>Salvar\r\n            </button>\r\n        </ng-container>\r\n\r\n\r\n\r\n    </form>\r\n</div>","import { DEFAULT_CURRENCY_CODE, LOCALE_ID, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgxMaskModule, IConfig } from 'ngx-mask'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//import { CustomersComponent } from './customers/customers.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { JwtModule } from \"@auth0/angular-jwt\";\r\n\r\nimport { CommonModule, CurrencyPipe, DatePipe, registerLocaleData, UpperCasePipe } from '@angular/common';\r\n//import { HomeComponent } from './home.component';\r\nimport { SharedModule } from '../_shared/shared.module';\r\n\r\nimport { MaterialModule } from '../_shared/material/material.module';\r\nimport { ValidateFormsService } from '../_shared/models/aluno.model';\r\nimport { FinanceiroComponent } from './financeiro.component';\r\nimport { AlunoFinancComponent } from './alunos/alunofinanc.component';\r\nimport { BalancoComponent } from './balanco/balanco.component';\r\nimport { ConferenciaComponent } from './balanco/conferenca/conferencia.component';\r\nimport { InfoFinancComponent } from './alunos/infoFinanc/infofinanc.component';\r\nimport { FinCaixaComponent } from './caixa/fincaixa.component';\r\nimport { FornecedoresComponent } from './fornecedores/fornecedores.component';\r\nimport { VendaCaixaComponent } from './caixa/venda/vendacaixa.component';\r\nimport { FinRelatorioComponent } from './relatorio/fin-relatorio.component';\r\nimport { VendaPesquisaComponent } from './caixa/venda/venda-pesquisa.component.ts/venda-pesquisa.component';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { EditFinancComponent } from './alunos/infoFinanc/EditFinanc/edit-financ.component';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { CreateFornecedorComponent } from './fornecedores/createfornecedor/createfornecedor.component';\r\nimport { EditFornecedorComponent } from './fornecedores/editfornecedor/editfornecedor.component';\r\nimport { Servico } from '../Adm/testes/testeexterno';\r\nimport { UnidadeBalancoComponent } from './unidadebalanco/unidadebalanco.component';\r\nimport { FornecedorVendaComponent } from './fornecedores/cadastrovenda/fornecedorcadvenda.component';\r\nimport { FornecedorCompraComponent } from './fornecedores/cadastrocompra/fornecedorcadcompra.component';\r\nimport { ReparcelamentoComponent } from './alunos/Reparcelamento/reparcelamento.component';\r\nimport { ConfirmarParcelamento } from './alunos/Reparcelamento/Confirmar/reapconfirmar.component';\r\nimport { CaixaDiarioComponent } from './caixa/caixadiario/caixadiario.component';\r\nimport { VendaUnidadeComponent } from './caixa/vendaUnidade/vendaunidade.component';\r\nimport localePt from '@angular/common/locales/pt';\r\nimport { ReceberComponent } from './alunos/infoFinanc/Receber/receber.component';\r\nimport { FinanceiroService } from './models/financ.service';\r\n// import { CustomersComponent } from '../customers/customers.component';\r\nregisterLocaleData(localePt)\r\nexport function tokenGetter() {\r\n    return localStorage.getItem(\"jwt\");\r\n}\r\n\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n};\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FinanceiroComponent,\r\n        AlunoFinancComponent,\r\n        BalancoComponent,\r\n        ConferenciaComponent,\r\n        FinCaixaComponent,\r\n        InfoFinancComponent,\r\n        FornecedoresComponent,\r\n        CreateFornecedorComponent,\r\n        EditFornecedorComponent,\r\n        VendaCaixaComponent,\r\n        FinRelatorioComponent,\r\n        VendaPesquisaComponent,\r\n        EditFinancComponent,\r\n        UnidadeBalancoComponent,\r\n        FornecedorVendaComponent,\r\n        FornecedorCompraComponent,\r\n        ReparcelamentoComponent,\r\n        ConfirmarParcelamento,\r\n        CaixaDiarioComponent,\r\n        VendaUnidadeComponent,\r\n        ReceberComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        MaterialModule,\r\n        SharedModule,\r\n        NgxMaskModule.forRoot(maskConfig),\r\n        CurrencyMaskModule\r\n    ],\r\n    //     providers: [AuthGuard],\r\n    providers: [FinanceiroService, CurrencyPipe, UpperCasePipe, DatePipe,\r\n        { provide: DEFAULT_CURRENCY_CODE, useValue: 'BRL' },\r\n        // {provide: 'ValidateForms', useClass: ValidateFormsService},\r\n        // { provide: MAT_DATE_LOCALE, useValue: 'pt-BR' },\r\n        { provide: 'IServicoToken', useClass: Servico }\r\n    ],\r\n    //bootstrap: [AppComponent]\r\n    exports: [\r\n        FinanceiroComponent,\r\n        AlunoFinancComponent,\r\n        BalancoComponent,\r\n        FinCaixaComponent,\r\n        FornecedoresComponent,\r\n        UnidadeBalancoComponent\r\n        // MatriculaComponent,\r\n        // TurmasComponent,\r\n        // TransferenciaComponent,\r\n        // ConfigComponent\r\n    ],\r\n    entryComponents: [\r\n        ConferenciaComponent,\r\n        InfoFinancComponent,\r\n        CreateFornecedorComponent,\r\n        VendaCaixaComponent,\r\n        FinRelatorioComponent,\r\n        VendaPesquisaComponent,\r\n        EditFornecedorComponent,\r\n        EditFinancComponent,\r\n        FornecedorVendaComponent,\r\n        FornecedorCompraComponent,\r\n        ReparcelamentoComponent,\r\n        ConfirmarParcelamento,\r\n        CaixaDiarioComponent,\r\n        VendaUnidadeComponent,\r\n        ReceberComponent\r\n        // CreateMatriculaComponent,\r\n        // ConfirmModalComponent,\r\n        // NotasComponent,\r\n        // PresencaComponent,\r\n        // AgendamentoComponent,\r\n        // SetDataModal,\r\n        // TransferenciaExternaComponent,\r\n        // TransferenciaInternaComponent,\r\n        // AlunoMatriculaComponent,\r\n        // EstagioCadastroComponent,\r\n        // InfosComponent,\r\n        // ConfirmMatriculaComponent\r\n        // FormFieldCustomControlExample, \r\n        //MyTelInput,\r\n        //   DialogOverviewExampleDialog,\r\n        //   EditTemplateModel\r\n    ]\r\n\r\n})\r\nexport class FinanceiroModule { }\r\n\r\n","import {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Self,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  NgControl,\r\n  Validators\r\n} from '@angular/forms';\r\nimport {MAT_FORM_FIELD, MatFormField, MatFormFieldControl} from '@angular/material/form-field';\r\nimport {Subject} from 'rxjs';\r\nimport { MyDate } from './nyDate.model';\r\n\r\n\r\n\r\n/* \r\n\r\n@Component({\r\n  selector: 'form-field-custom-control-example',\r\n  templateUrl: 'form-field-custom-control-example.html',\r\n})\r\nexport class FormFieldCustomControlExample {\r\n  form: FormGroup = new FormGroup({\r\n    tel: new FormControl(new MyTel('', '', ''))\r\n  });\r\n}\r\n*/\r\n\r\n/** Custom `MatFormFieldControl` for telephone number input. */\r\n@Component({\r\n  selector: 'date-input',\r\n  templateUrl: 'date-input.html',\r\n  styleUrls: ['date-input.scss'],\r\n  providers: [{ provide: MatFormFieldControl, useExisting: MyDateInput }],\r\n  host: {\r\n    '[class.example-floating]': 'shouldLabelFloat',\r\n    '[id]': 'id',\r\n  }\r\n})\r\n\r\n\r\nexport class MyDateInput\r\n  implements ControlValueAccessor, MatFormFieldControl<MyDate>, OnDestroy {\r\n  static nextId = 0;\r\n  @ViewChild('dia') diaInput: HTMLInputElement;\r\n  @ViewChild('mes') mesInput: HTMLInputElement;\r\n  @ViewChild('ano') anoInput: HTMLInputElement;\r\n\r\n  parts: FormGroup;\r\n  stateChanges = new Subject<void>();\r\n  focused = false;\r\n  controlType = 'example-date-input';\r\n  id = `example-date-input-${MyDateInput.nextId++}`;\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  get empty() {\r\n   // console.log('get empty')\r\n    const {\r\n      value: { dia, mes, ano }\r\n    } = this.parts;\r\n\r\n    return !dia && !mes && !ano;\r\n  }\r\n\r\n  get shouldLabelFloat() {\r\n    return this.focused || !this.empty;\r\n  }\r\n\r\n  @Input('aria-describedby') userAriaDescribedBy: string;\r\n\r\n  @Input()\r\n  get placeholder(): string {\r\n    return this._placeholder;\r\n  }\r\n  set placeholder(value: string) {\r\n    //console.log(value)\r\n    //console.log(this._placeholder)\r\n    this._placeholder = value;\r\n    this.stateChanges.next();\r\n  }\r\n  private _placeholder: string;\r\n\r\n  @Input()\r\n  get required(): boolean {\r\n    return this._required;\r\n  }\r\n  set required(value: boolean) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n  private _required = false;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this._disabled ? this.parts.disable() : this.parts.enable();\r\n    this.stateChanges.next();\r\n  }\r\n  private _disabled = false;\r\n\r\n  @Input()\r\n  get value(): any | null {\r\n    //(this.parts)\r\n    if (this.parts.valid) {\r\n      const { value: { dia, mes, ano } } = this.parts;\r\n\r\n      let data = new Date(ano,mes -1,dia)\r\n     // console.log(data)\r\n      return data;//new MyDate(dia, mes, ano);\r\n    }\r\n    //console.log('return null')\r\n    return null;\r\n  }\r\n  set value(tel: any | null) {\r\n    const { dia, mes, ano } = tel || new MyDate('', '', '');\r\n    this.parts.setValue({ dia, mes, ano });\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  get errorState(): boolean {\r\n    return this.parts.invalid && this.parts.dirty;\r\n  }\r\n\r\n  constructor(\r\n    formBuilder: FormBuilder,\r\n    private _focusMonitor: FocusMonitor,\r\n    private _elementRef: ElementRef<HTMLElement>,\r\n    @Optional() @Inject(MAT_FORM_FIELD) public _formField: MatFormField,\r\n    @Optional() @Self() public ngControl: NgControl) {\r\n\r\n    this.parts = formBuilder.group({\r\n      dia: [\r\n        null,\r\n        [Validators.required, Validators.minLength(2), Validators.maxLength(2)]\r\n      ],\r\n      mes: [\r\n        null,\r\n        [Validators.required, Validators.minLength(2), Validators.maxLength(2)]\r\n      ],\r\n      ano: [\r\n        null,\r\n        [Validators.required, Validators.minLength(4), Validators.maxLength(4)]\r\n      ]\r\n    });\r\n\r\n    _focusMonitor.monitor(_elementRef, true).subscribe(origin => {\r\n      //console.log(this.focused)\r\n      //console.log(this.)\r\n      if (this.focused && !origin) {\r\n        this.onTouched();\r\n      }\r\n      this.focused = !!origin;\r\n      this.stateChanges.next();\r\n    });\r\n\r\n    if (this.ngControl != null) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  autoFocusNext(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n    //console.log(nextElement);// é o próximo input\r\n    if (!control.errors && nextElement) {\r\n      this._focusMonitor.focusVia(nextElement, 'program'); // envia para o próximo input\r\n    }\r\n  }\r\n\r\n  autoFocusPrev(control: AbstractControl, prevElement: HTMLInputElement): void {\r\n    //console.log(prevElement)\r\n    if (control.value.length < 1) {\r\n      this._focusMonitor.focusVia(prevElement, 'program');\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //console.log('on destroy')\r\n    this.stateChanges.complete();\r\n    this._focusMonitor.stopMonitoring(this._elementRef);\r\n  }\r\n\r\n  setDescribedByIds(ids: string[]) {\r\n    const controlElement = this._elementRef.nativeElement\r\n      .querySelector('.example-date-input-container')!;\r\n    controlElement.setAttribute('aria-describedby', ids.join(' '));\r\n  }\r\n\r\n  onContainerClick() {\r\n    //console.log(this._focusMonitor)\r\n    if (this.parts.controls.ano.valid) {\r\n      this._focusMonitor.focusVia(this.anoInput, 'program');\r\n    } else if (this.parts.controls.mes.valid) {\r\n      this._focusMonitor.focusVia(this.anoInput, 'program');\r\n    } else if (this.parts.controls.dia.valid) {\r\n      this._focusMonitor.focusVia(this.mesInput, 'program');\r\n    } else {\r\n      this._focusMonitor.focusVia(this.diaInput, 'program');\r\n    }\r\n  }\r\n\r\n  writeValue(date: MyDate | null): void {\r\n    this.value = date;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  _handleInput(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n    this.autoFocusNext(control, nextElement);\r\n    this.onChange(this.value);\r\n  }\r\n\r\n  static ngAcceptInputType_disabled: BooleanInput;\r\n  static ngAcceptInputType_required: BooleanInput;\r\n}\r\n\r\n\r\n/**  Copyright 2021 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","<div role=\"group\" class=\"example-date-input-container\"\r\n     [formGroup]=\"parts\"\r\n     [attr.aria-labelledby]=\"_formField?.getLabelId()\">\r\n  <input class=\"example-date-input-element\"\r\n         formControlName=\"dia\" size=\"2\"\r\n         maxLength=\"2\"\r\n         aria-label=\"dia code\"\r\n         (input)=\"_handleInput(parts.controls.dia, mes)\"\r\n         #dia>\r\n  <span class=\"example-date-input-spacer\">/</span>\r\n  <input class=\"example-date-input-element\"\r\n         formControlName=\"mes\"\r\n         maxLength=\"2\"\r\n         min=\"1\"\r\n         max=\"12\"\r\n         size=\"2\"\r\n         aria-label=\"mes code\"\r\n         (input)=\"_handleInput(parts.controls.mes, ano)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.mes, dia)\"\r\n         #mes>\r\n  <span class=\"example-date-input-spacer\">/</span>\r\n  <input class=\"example-date-input-element\"\r\n         formControlName=\"ano\"\r\n         maxLength=\"4\"\r\n         size=\"4\"\r\n         aria-label=\"ano number\"\r\n         (input)=\"_handleInput(parts.controls.ano)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.ano, mes)\"\r\n         #ano>\r\n</div>\r\n\r\n\r\n<!-- Copyright 2021 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { CreateEstagioModalConfig, EditEstagioModalConfig } from \"../service/modal.config\";\r\nimport { PedagogicoService } from \"../service/pedagogico.service\";\r\nimport { EstagioAlunosComponent } from \"./estagio-alunos/estagio-alunos.component\";\r\nimport { EstagioEditComponent } from \"./estagio-edit/estagio-edit.component\";\r\nimport { EstagioCadastroComponent } from \"./estagiocadastro/estagiocadastro.component\";\r\n\r\n@Component({\r\n    selector: \"estagio-app\",\r\n    templateUrl: './estagio.component.html',\r\n    styleUrls: ['./estagio.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class EstagioComponent implements OnInit {\r\n\r\n    public estagios: any[] = new Array<any>();\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n    public showMessageNoEstagior = false\r\n    public spinnerSearch = 'visible'\r\n    public mensagem: string = ''\r\n\r\n    constructor(\r\n        private _modal: MatDialog,\r\n        private _pedagService: PedagogicoService\r\n    ) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.GetEstagios();\r\n    }\r\n\r\n    public GetEstagios() {\r\n        this.showMessageNoEstagior = false\r\n        this._pedagService.GetEstagios()\r\n            .subscribe(\r\n                sucesso => { this.GetEstagiosSucesso(sucesso) },\r\n                erro => { this.GetEstagiosFalha(erro) },\r\n            )\r\n    }\r\n\r\n    private GetEstagiosSucesso(response) {\r\n\r\n        this.estagios = response['estagios']\r\n        this.spinnerSearch = 'hidden'\r\n    }\r\n\r\n    private GetEstagiosFalha(erro) {\r\n\r\n        if (erro['status'] == 404) {\r\n            this.mensagem = \"Não há estágios cadastrados\"\r\n        }\r\n        if (erro['status'] != 404) {\r\n            this.mensagem = \"Ocorreu um erro desconhecido, por favor, procure o administrador do sistema\"\r\n        }\r\n        this.spinnerSearch = 'hidden'\r\n        this.showMessageNoEstagior = true\r\n    }\r\n\r\n    \r\n\r\n    verificarMatriculados(estagio): void {\r\n        const dialogRef = this._modal\r\n            .open(EstagioAlunosComponent, {\r\n                height: 'auto',\r\n                width: '720px',\r\n\r\n                data: { estagio: estagio },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n\r\n            } else if (data.clicked === \"Cancel\") {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    cadastroEstagio(): void {\r\n        const dialogRef = this._modal\r\n            .open(EstagioCadastroComponent, CreateEstagioModalConfig());\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data.clicked == true) this.GetEstagios()\r\n            \r\n        });\r\n    }\r\n\r\n    editarEstagio(estagio:any): void {\r\n        const dialogRef = this._modal\r\n            .open(EstagioEditComponent, EditEstagioModalConfig(estagio));\r\n        dialogRef.afterClosed().subscribe(data => {\r\n            if (data.clicked == true) this.GetEstagios()\r\n            \r\n        });\r\n    }  \r\n}","<div class=\"container\">\r\n\r\n    <div>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"cadastrar estágio\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button style=\"\" (click)=\"cadastroEstagio()\" mat-icon-button>\r\n                <mat-icon>domain</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n\r\n    <br>\r\n\r\n    <div  @rowHighlight  class=\"card-header card-msg-response\" unselectable=\"on\"\r\n        *ngIf=\"showMessageNoEstagior\">{{mensagem}}</div>\r\n\r\n    <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"spinnerSearch\"  @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n\r\n    <div *ngIf=\"estagios.length > 0\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n    margin-top: 10px;\r\n    box-shadow: 0 0 1em rgb(172, 170, 170);\r\n    background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"text-align:left;margin-top: 10px; \r\n            vertical-align: middle;font-size:1.2em; font-weight: 400;\">\r\n                Estágios</h4>\r\n                Unidade {{tokenInfo.Unidade}}\r\n            <!-- <p class=\"card-category\"> </p> -->\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: auto;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                            text-align:left; \r\n                            vertical-align: middle;\r\n                            border-top: 0px;\"></th>\r\n\r\n\r\n                            <th style=\"width: 26%;font-size:1em;\r\n                            vertical-align: middle; \r\n                            text-align:left;\r\n                             border-top: 0px; font-weight: 400;\">ESTÁGIO</th>\r\n\r\n                            <th style=\"width: 12%;font-size:1em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">INÍCIO</th>\r\n\r\n                            <th style=\"width: 8%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">VAGAS</th>\r\n\r\n                            <th style=\"width: 12%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">INSCRITOS</th>\r\n\r\n                            <th style=\"width: 13%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\"></th>\r\n\r\n                            <th style=\"width: 27%;font-size:1em;\r\n                            text-align:center; \r\n                            vertical-align: middle;\r\n                            border-top: 0px; font-weight: 400;\">\r\n\r\n                            </th>\r\n                           \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let item of estagios; let i = index;\">\r\n                            <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                                {{item.nome}}</td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                                {{item.dataInicio | date:\"dd/MM/yyyy\"}}<br>\r\n                                <!-- <span @rowHighlight style=\"font-size: 0.8em;color: red;\">\r\n                                    {{item.previsao}}\r\n                                </span> -->\r\n                            </td>\r\n\r\n                            <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">{{item.vagas}}</td>\r\n                                \r\n                            <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                               \r\n                            </td>\r\n                            <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\"></td>\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"editar estágio\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"editarEstagio(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>build</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n\r\n                                 <i style=\"margin: 0px; margin: 100px;\" #tooltip=\"matTooltip\" matTooltip=\"inscritos\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"verificarMatriculados(item)\" disabled\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>description</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                          \r\n                                \r\n\r\n                               \r\n<!--\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"adiar a tumra para a próxima previsão\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"PodeAdiar(item)\"\r\n                                        (click)=\"adiar(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon style=\"font-size: 1.5em;\" class=\"material-icons-outlined\">watch_later\r\n                                        </mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"iniciar as aulas\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"item.statusDaTurma != 'Aguardando início' ? true : false\"\r\n                                        (click)=\"iniciarTurma(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon style=\"font-size: 1.5em;font-weight: 200;\"\r\n                                            class=\"material-icons-outlined\">play_arrow</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"detalhes/editar\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openEditCursoModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n                            </td>                            \r\n                        </tr>                        \r\n                    </tbody>\r\n                </table>\r\n            </div>            \r\n\r\n        </div>\r\n    </div>\r\n\r\n   \r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n//import { GenericTask } from 'src/app/shared/models/generictask.model';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n//import { AdmService } from '../../adm.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Colaborador, Professor } from \"src/app/_shared/models/colaborador.model\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { AddProfessorModalComponent } from \"../ModalAddProf/addprof.component\";\r\nimport { TurmaViewModel } from \"src/app/_shared/models/Turma.model\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { AddPMateriaModalComponent } from \"../ModalAddMateria/addmateria.component\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { ConfirmModalComponent } from \"src/app/_shared/components/ConfirmModal/confirm-modal.component\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\n\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'editcursomodal',\r\n    templateUrl: './editcurso.component.html',\r\n    styleUrls: ['./editcurso.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\n\r\nexport class EditCursoComponent implements OnInit {\r\n\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n    // pageEvent: PageEvent;\r\n    //editedColaborador: Colaborador = new Colaborador();\r\n    public initProgressBar = 'visible'\r\n    public showContent = false\r\n    turma: any;// TurmaViewModel = new TurmaViewModel()\r\n    turmaView: any;\r\n    view: Views = new Views();\r\n    alunos: Aluno[] = new Array<Aluno>();\r\n    professores: Professor[] = new Array<Professor>();\r\n    previsaoTermino = \"Previsão de início 1: 01/05/2021\"\r\n    BaseUrl = environment.baseUrl\r\n    ativo = true;\r\n    pageEvent: PageEvent;\r\n    length = 0;\r\n    pageSize = 5;\r\n    selectedPage = 1\r\n    mensagemSemProfessores = false\r\n    mostrarModalPrincipal = true\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _helper: HelpersService,\r\n        public dialog: MatDialog,\r\n        public dialogRef: MatDialogRef<EditCursoComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n    //@Output() newItemEvent = new EventEmitter<string>();\r\n\r\n\r\n    ngOnInit() {\r\n        this.ativo = true;\r\n      //  console.log(this.data['turma'])\r\n       // this.turma = this.data['turma']\r\n        // this.getAlunosDaTurma(this.data['turma'].id)\r\n        //this.getCursoById(this.data['turma'].id)\r\n        //this.getProfessores(this.data['turma'].id)\r\n\r\n        this.GetInformacoesDaTurma(this.data['turma'].id);\r\n    }\r\n\r\n    GetInformacoesDaTurma(turmaId) {\r\n\r\n        this._http.get(`${this.BaseUrl}/turma/info/${turmaId}`)\r\n            .subscribe(\r\n                (response) => {\r\n                    // console.log(response)\r\n                    // this.professores = new Array<Professor>();\r\n                    // Object.assign(this.professores, response)\r\n                    this.turma = response['turma']\r\n                   // console.log(this.turma)\r\n                    this.alunos = response['alunos']\r\n                    this.professores = response['professores']\r\n\r\n                },\r\n                (error) => {\r\n                   // console.log(error)\r\n                    //this.initProgressBar = 'hidden'\r\n                },\r\n                () => {\r\n                    this.disabledDeletProf = false\r\n                    this.mostrarModalPrincipal = false\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showContent = true\r\n                    this.dialogRef.addPanelClass('myeditturma-class')\r\n                    // console.log(this.professores)\r\n                    // this.length = this.professores.length\r\n                    // console.log(this.length)\r\n\r\n                    // if(this.length == 0){\r\n                    //     this.mensagemSemProfessores = true\r\n                    // }else{\r\n                    //     this.mensagemSemProfessores = false\r\n                    // }\r\n\r\n                    // console.log(this.length)\r\n                }\r\n            )\r\n    }\r\n\r\n    get professoresSlice(): Professor[] {\r\n        let pageIndex = (this.selectedPage - 1) * this.pageSize\r\n        //console.log(pageIndex)\r\n        return this.professores.slice(pageIndex, pageIndex + this.pageSize);\r\n    }\r\n\r\n    changePage(evento: any) {\r\n     //   console.log(evento[\"pageIndex\"])\r\n        this.selectedPage = evento[\"pageIndex\"] + 1//newPage;\r\n        //             console.log('ok get');\r\n        //             this.showSpinner = false\r\n        //             this.pageIndexNumber = (evento.pageIndex * this.pageSize)\r\n\r\n    }\r\n\r\n\r\n    vagas: string;\r\n    previ1: string;\r\n    previ2: string;\r\n    previ3: string;\r\n    previQuadro1linethrough: boolean\r\n    previQuadro1Color: boolean\r\n    previQuadro1Proximo: boolean\r\n\r\n    previQuadro2linethrough: boolean\r\n    previQuadro2Color: boolean\r\n    previQuadro2Proximo: boolean\r\n\r\n    previQuadro3linethrough: boolean\r\n    previQuadro3Color: boolean\r\n    previQuadro3Proximo: boolean\r\n\r\n    getProfessores(turmaId) {\r\n\r\n      //  console.log('get alunos turma')\r\n        //alunosturma\r\n        this._http.get(`${this.BaseUrl}/turmas/professoresturma/${turmaId}`)\r\n            .subscribe(\r\n                (response) => {\r\n                  //  console.log(response)\r\n                    this.professores = new Array<Professor>();\r\n                    Object.assign(this.professores, response)\r\n\r\n                },\r\n                (error) => {\r\n                  //  console.log(error)\r\n                },\r\n                () => {\r\n                   // console.log(this.professores)\r\n                    this.length = this.professores.length\r\n                   // console.log(this.length)\r\n\r\n                    if (this.length == 0) {\r\n                        this.mensagemSemProfessores = true\r\n                    } else {\r\n                        this.mensagemSemProfessores = false\r\n                    }\r\n\r\n                   // console.log(this.length)\r\n                }\r\n            )\r\n    }\r\n\r\n    // get vagasMatriculados() {\r\n\r\n    //     return `${this.data['turma'].vagas}/${this.data['turma'].totalAlunos}`\r\n    // }\r\n\r\n    get duracaomsg() {\r\n\r\n        return `Turma iniciada em ${new Date(this.data['turma'].previsaoAtual).toLocaleString('pt-BR', {\r\n            day: 'numeric', // numeric, 2-digit\r\n            year: 'numeric', // numeric, 2-digit\r\n            month: 'numeric'\r\n        })} com previsão de término em ${new Date(this.data['turma'].previsaoTerminoAtual).toLocaleString('pt-BR', {\r\n            day: 'numeric', // numeric, 2-digit\r\n            year: 'numeric', // numeric, 2-digit\r\n            month: 'numeric'\r\n        })}`\r\n    }\r\n\r\n    excluirProfessorDaTurma(profId) {\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    disabledDeletProf = false\r\n    confirmModal(prof?: any): void {\r\n        const dialogRef = this.dialog\r\n            .open(ConfirmModalComponent, {\r\n                height: 'auto',\r\n                width: '500px',\r\n\r\n                data: {\r\n                    msg: \"Confirmar exclusão do professor da turma?\",\r\n                    url: `${this.BaseUrl}/pedag/turma/professor/${prof.id}/${this.data['turma'].id}`\r\n                },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n          //  console.log(data)\r\n            if (data.clicked == true) {\r\n                this.disabledDeletProf = true\r\n                this._helper.openSnackBarSucesso('Professor excluído com sucesso')\r\n                //let profIndex = this.professores.findIndex(prof)\r\n                //this.professores.splice(profIndex, 1)\r\n                this.GetInformacoesDaTurma(this.data['turma'].id);\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    getCursoById(id) {\r\n       // console.log(id)\r\n        this._http.get(`${this.BaseUrl}/turmas/${id}`)\r\n            .subscribe(\r\n                (response) => {\r\n                   // console.log(response)\r\n                    this.turma = Object.assign({}, response as TurmaViewModel);\r\n                },\r\n                (error) => { },\r\n                () => {\r\n                    this.vagas = `${this.turma.vagas}/${this.turma.totalAlunos}`\r\n                    this.descricaoCompleta = `Turma ${this.turma.identificador} (${this.turma.descricao})`\r\n                    this.previ1 = `Previsão de início 1: ${new Date(this.turma.previsoes.previsionStartOne).toLocaleDateString()}`\r\n\r\n                    this.previ2 = `Previsão de início 2: ${new Date(this.turma.previsoes.previsionStartTwo).toLocaleDateString()}`\r\n\r\n                    this.previ3 = `Previsão de início 3: ${new Date(this.turma.previsoes.previsionStartThree).toLocaleDateString()}`\r\n\r\n                 //   console.log(this.previ1)\r\n\r\n                    if (this.turma.previsao == '1ª previsão') {\r\n                        this.previQuadro1linethrough = false\r\n                        this.previQuadro1Color = false\r\n                        this.previQuadro1Proximo = true\r\n\r\n                        this.previQuadro2linethrough = false\r\n                        this.previQuadro2Color = false\r\n                        this.previQuadro2Proximo = false\r\n\r\n                        this.previQuadro3linethrough = false\r\n                        this.previQuadro3Color = false\r\n                        this.previQuadro3Proximo = false\r\n\r\n                    } else if (this.turma.previsao == '2ª previsão') {\r\n                        this.previQuadro1linethrough = true\r\n                        this.previQuadro1Color = true\r\n                        this.previQuadro1Proximo = false\r\n\r\n                        this.previQuadro2linethrough = false\r\n                        this.previQuadro2Color = false\r\n                        this.previQuadro2Proximo = true\r\n\r\n                        this.previQuadro3linethrough = false\r\n                        this.previQuadro3Color = false\r\n                        this.previQuadro3Proximo = false\r\n\r\n                    } else if (this.turma.previsao == '3ª previsão') {\r\n                        this.previQuadro1linethrough = true\r\n                        this.previQuadro1Color = true\r\n                        this.previQuadro1Proximo = false\r\n\r\n                        this.previQuadro2linethrough = true\r\n                        this.previQuadro2Color = true\r\n                        this.previQuadro2Proximo = false\r\n\r\n                        this.previQuadro3linethrough = false\r\n                        this.previQuadro3Color = false\r\n                        this.previQuadro3Proximo = true\r\n                    }\r\n                }\r\n            )\r\n    }\r\n\r\n    descricaoCompleta: string = \"\"\r\n    getAlunosDaTurma(turmaId) {\r\n       // console.log('get alunos turma')\r\n        // alunosturma\r\n        this._http.get(`${this.BaseUrl}/turmas/alunosturma/?turmaId=${turmaId}`)\r\n            .subscribe(\r\n                (response) => {\r\n                  //  console.log(response)\r\n\r\n                    Object.assign(this.alunos, response)\r\n\r\n                },\r\n                (error) => { \r\n                    //console.log(error) \r\n                },\r\n                () => {\r\n                   // console.log(this.alunos)\r\n\r\n                }\r\n            )\r\n    }\r\n\r\n    openAddProfModal(): void {\r\n        const dialogRef = this.dialog\r\n            .open(AddProfessorModalComponent, {\r\n               // height: 'auto',\r\n                width: '1030px',\r\n                //autoFocus: false,\r\n                //maxHeight: '90vh',\r\n               // maxWidth: '400vh',\r\n\r\n                data: { turmaId: this.data['turma'].id },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            //console.log('The dialog was closed');\r\n           // console.log(result);\r\n            if (result[\"clicked\"] == true) {\r\n               // console.log(result[\"profsIds\"])\r\n                //this.saveProfs(result[\"profsIds\"])\r\n                this.GetInformacoesDaTurma(this.data['turma'].id);\r\n\r\n\r\n            }\r\n            // console.log(this.templateTasks);\r\n            //console.log(this.templateTasks);\r\n            //this.newtasks. = this.templateTasks\r\n            // this.templateTasks = result;\r\n        });\r\n    }\r\n\r\n    openAddMateriaModal(prof): void {\r\n        const dialogRef = this.dialog\r\n            .open(AddPMateriaModalComponent, {\r\n                //height: 'auto',\r\n                width: '1030px',\r\n                // autoFocus: false,\r\n                // maxHeight: '90vh',\r\n                // maxWidth: '400vh',\r\n\r\n                data: { turmaId: this.data['turma'].id, professor: prof },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe(result => {\r\n            //console.log('The dialog was closed');\r\n           // console.log(result);\r\n            if (result[\"clicked\"] == true) {\r\n               // console.log(result[\"profsIds\"])\r\n                this.GetInformacoesDaTurma(this.data['turma'].id);\r\n                //this.saveProfs(result[\"profsIds\"])\r\n\r\n\r\n            }\r\n            // console.log(this.templateTasks);\r\n            //console.log(this.templateTasks);\r\n            //this.newtasks. = this.templateTasks\r\n            // this.templateTasks = result;\r\n        });\r\n    }\r\n\r\n    saveProfs(profIds: number[]) {\r\n       // console.log(this.data['turma'].id)\r\n      //  console.log(profIds)\r\n        var saveProfs: SaveProfsCommand = new SaveProfsCommand();\r\n        saveProfs.turmaId = this.data['turma'].id\r\n        saveProfs.listProfsIds = profIds\r\n       // console.log(saveProfs)\r\n        this._http.post(`${this.BaseUrl}/pedag/turma/professores`, saveProfs, {\r\n\r\n        })\r\n            .subscribe(\r\n                (response) => {\r\n                   // console.log(response)\r\n\r\n                    //\r\n\r\n                },\r\n                (error) => {\r\n                    // console.log(error)\r\n                     },\r\n                () => {\r\n\r\n                    this.GetInformacoesDaTurma(this.data['turma'].id);\r\n                    //console.log(this.alunos)\r\n\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n    submitForm(form: NgForm) {\r\n        if (form.valid) {\r\n          //  console.log('form valid')\r\n            // this.model.saveProduct(this.product);\r\n            // //this.product = new Product();\r\n            // //form.reset();\r\n            // this.originalProduct = this.product;\r\n            // this.router.navigateByUrl(\"/\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport class SaveProfsCommand {\r\n    constructor(\r\n        public turmaId?: number,\r\n        public listProfsIds?: number[]\r\n    ) { }\r\n\r\n}\r\n\r\n\r\nexport class Views {\r\n    constructor(\r\n        public descricaoCompleta?: string\r\n    ) {\r\n\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Informações\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<div @rowHighlight *ngIf=\"showContent\">\r\n\r\n    <hr>\r\n    <div style=\"padding-bottom: 20px;\">\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 300px; font-size: 0.9em;\">\r\n            <mat-label>Turma</mat-label>\r\n            <input disabled matInput selected [value]=\"turma.descricao\">\r\n        </mat-form-field>\r\n\r\n\r\n\r\n        <ng-container *ngIf=\"turma.statusAndamento == 'Aguardando início';else iniciada\">\r\n            <!-- <mat-form-field appearance=\"standard\" style=\"width: 33%;\">\r\n                <mat-label [style.color]=\"previQuadro1Proximo ? 'red': ''\">Previsão 1 <span\r\n                        *ngIf=\"previQuadro1Proximo\">(Próxima)</span></mat-label>\r\n                <input  [style.text-decoration]=\"previQuadro1linethrough ? 'line-through' : ''\"\r\n                    [style.color]=\"previQuadro1Color ? 'red': ''\" disabled name=\"templateName\" matInput\r\n                    [(value)]=\"previ1\">\r\n            </mat-form-field> -->\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 190px;\">\r\n                <mat-label >Previsão 1\r\n                    <span *ngIf=\"turma.previsaoInfo == '1ª previsão'\">(atual)</span>\r\n                </mat-label>\r\n                <input disabled  matInput\r\n                    value=\"{{turma.previsoes.previsionStartOne | date: 'dd/MM/yyyy'}} até {{turma.previsoes.previsionEndingOne | date: 'dd/MM/yyyy'}}\">\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 190px;margin-left: 20px;\">\r\n                <mat-label >Previsão 2\r\n                    <span *ngIf=\"turma.previsaoInfo == '2ª previsão'\">(atual)</span>\r\n                </mat-label>\r\n                <input disabled matInput\r\n                    value=\"{{turma.previsoes.previsionStartTwo | date: 'dd/MM/yyyy'}} até {{turma.previsoes.previsionEndingTwo | date: 'dd/MM/yyyy'}}\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 190px;margin-left: 20px;\">\r\n                <mat-label >Previsão 3\r\n                    <span *ngIf=\"turma.previsaoInfo == '3ª previsão'\">(atual)</span>\r\n                </mat-label>\r\n                <input disabled matInput\r\n                    value=\"{{turma.previsoes.previsionStartThree | date: 'dd/MM/yyyy'}} até {{turma.previsoes.previsionEndingThree | date: 'dd/MM/yyyy'}}\">\r\n            </mat-form-field>\r\n        </ng-container>\r\n\r\n\r\n        <ng-template #iniciada>\r\n            <br>\r\n            <mat-form-field appearance=\"standard\" style=\"width: 60%;\">\r\n                <mat-label>Duração<span *ngIf=\"previQuadro1Proximo\">(Próxima)</span></mat-label>\r\n                <input disabled name=\"templateName\" matInput\r\n                    value=\"Turma iniciada em {{turma.previsaoAtual | date:'dd/MM/yyyy'}} com previsão de término em {{turma.previsaoTerminoAtual | date:'dd/MM/yyyy'}}\">\r\n            </mat-form-field>\r\n\r\n            <!-- <div style=\"margin-left: 10px;margin-bottom: 30px;\">Turma iniciada em {{turma.previsaoAtual | date:'d/M/yyy'}} com previsão de término em {{turma.previsaoTerminoAtual | date:'d/M/yyy'}}</div> -->\r\n\r\n        </ng-template>\r\n        <br>\r\n        <mat-form-field appearance=\"standard\" style=\"border-color: black; width: 16%\">\r\n            <mat-label>vagas/matriculados:</mat-label>\r\n            <input disabled name=\"templateName\" matInput value=\"{{turma.vagas}}/{{turma.totalAlunos}}\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 16%; margin-left: 10px;\">\r\n            <mat-label>Mínimo de alunos:</mat-label>\r\n            <input name=\"templateName\" matInput disabled required [(ngModel)]=\"turma.minimoAlunos\">\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-tab-group class=\"admturmaedit\">\r\n\r\n            <mat-tab label=\"Matriculados\">\r\n\r\n                <div class=\"table-responsive\">\r\n                    <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                        <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n                        <thead>\r\n                            <tr>\r\n                                <th style=\"width: 2%; \r\n                        text-align:left; \r\n                        vertical-align: middle;\r\n                        border-top: 0px;\"></th>\r\n\r\n\r\n                                <th style=\"width: 40%;font-size:0.9em;\r\n                        vertical-align: middle; \r\n                        text-align:left;\r\n                         border-top: 0px; font-weight: 400;\">NOME</th>\r\n\r\n                                <th style=\"width: 29%;font-size:0.9em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">E-MAIL</th>\r\n\r\n                                <th style=\"width: 29%;font-size:0.9em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">CPF</th>\r\n\r\n                                <!--<th style=\"width: 12%;font-size:1em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">Matriculados</th>\r\n        \r\n                        <th style=\"width: 13%;font-size:1em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">Status</th> -->\r\n\r\n                                <!-- <th style=\"width: 34%;font-size:1em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">\r\n        \r\n                        </th> -->\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            <tr *ngFor=\"let aluno of alunos; let i = index;\">\r\n                                <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">{{i + 1}}</td>\r\n\r\n                                <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                                    {{aluno.nome}}\r\n                                </td>\r\n\r\n                                <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                                    {{aluno.email || 'sem e-mail cadastrado'}}\r\n                                </td>\r\n\r\n                                <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">{{aluno.cpf}}\r\n                                </td>\r\n\r\n                                <!-- <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\"></td> -->\r\n                                <!-- <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">Não iniciada</td>\r\n                        <td style=\"text-align: center;vertical-align: middle;\"> -->\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"adiar a tumra para a próxima data\" matTooltipPosition=\"above\"\r\n                                matTooltipHideDelay=\"100\">\r\n                                <button \r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.5em;\" class=\"material-icons-outlined\">watch_later</mat-icon>\r\n                                </button>\r\n                            </i>\r\n        \r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"iniciar as aulas\" matTooltipPosition=\"above\"\r\n                                matTooltipHideDelay=\"100\">\r\n                                <button \r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.5em;\" class=\"material-icons-outlined\">play_arrow</mat-icon>\r\n                                </button>\r\n                            </i>-->\r\n\r\n                                <!-- update_disabled -->\r\n\r\n                                <!--<i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"detalhes/editar\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button (click)=\"openEditCursoModal(item)\"\r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>description</mat-icon>\r\n                                </button>\r\n                            </i> \r\n                        </td>  \r\n                        <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\"></td>     \r\n                        -->\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </mat-tab>\r\n            <mat-tab label=\"Professores\">\r\n\r\n\r\n                <div class=\"table-responsive\" style=\"height: 400px;position: relative;\">\r\n                    <div *ngIf=\"mensagemSemProfessores\" style=\"margin-top: 15px;\r\n            margin-left: 10px;\">Não há professores alocados à turma.\r\n                        <i style=\"margin: 0px; margin: 0px;\r\n            margin-bottom: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"adicionar professor\" matTooltipPosition=\"above\"\r\n                            matTooltipHideDelay=\"100\">\r\n                            <button (click)=\"openAddProfModal()\" style=\"margin: 0px;\" mat-icon-button>\r\n                                <mat-icon>person_add</mat-icon>\r\n                            </button>\r\n                        </i>\r\n                    </div>\r\n                    <table *ngIf=\"!mensagemSemProfessores\" color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n\r\n                        <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n                        <thead>\r\n                            <tr>\r\n                                <th style=\"width: 2%; \r\n                        text-align:left; \r\n                        vertical-align: middle;\r\n                        border-top: 0px;\"></th>\r\n\r\n                                <th style=\"width: 25%;font-size:0.9em;\r\n                        vertical-align: middle; \r\n                        text-align:left;\r\n                         border-top: 0px; font-weight: 400;\">NOME</th>\r\n\r\n                                <th style=\"width: 22%;font-size:0.9em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">E-MAIL</th>\r\n\r\n                                <th style=\"width: 10%;font-size:0.9em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\"></th>\r\n\r\n                                <th style=\"width: 30%;font-size:0.9em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">MATÉRIA</th>\r\n\r\n                                <!--<th style=\"width: 12%;font-size:1em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">Matriculados</th>\r\n        \r\n                        <th style=\"width: 13%;font-size:1em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">Status</th> -->\r\n\r\n                                <th style=\"width: 7%;font-size:1em;\r\n                        text-align:center; \r\n                        vertical-align: middle;\r\n                        border-top: 0px; font-weight: 400;\">\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"adicionar professor\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openAddProfModal()\" style=\"margin: 0px;\" mat-icon-button>\r\n                                            <mat-icon>person_add</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            <tr *ngFor=\"let profs of professores; let i = index;\">\r\n                                <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">{{i + 1}}</td>\r\n\r\n                                <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">{{profs.nome}}\r\n                                </td>\r\n\r\n                                <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                                    {{profs.email || '-'}}</td>\r\n\r\n                                <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"adicionar materia\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openAddMateriaModal(profs)\" style=\"margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>\r\n                                                assignment\r\n                                            </mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n                                </td>\r\n\r\n                                <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                                    <div *ngIf=\"profs.materias.length  > 0\">\r\n                                        <div *ngFor=\"let mat of profs.materias\">\r\n                                            {{mat.nome || '-'}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <!-- Anatomia e Fisiologia<br>Fundamentos de Enfermagem<br>\r\n                                Anatomia e Fisiologia<br>Fundamentos de Enfermagem<br>\r\n                                Anatomia e Fisiologia<br>Fundamentos de Enfermagem<br> -->\r\n\r\n                                </td>\r\n\r\n                                <!-- <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\"></td> -->\r\n                                <!-- <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">Não iniciada</td>\r\n                        <td style=\"text-align: center;vertical-align: middle;\"> -->\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"adiar a tumra para a próxima data\" matTooltipPosition=\"above\"\r\n                                matTooltipHideDelay=\"100\">\r\n                                <button \r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.5em;\" class=\"material-icons-outlined\">watch_later</mat-icon>\r\n                                </button>\r\n                            </i>\r\n        \r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"iniciar as aulas\" matTooltipPosition=\"above\"\r\n                                matTooltipHideDelay=\"100\">\r\n                                <button \r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon style=\"font-size: 1.5em;\" class=\"material-icons-outlined\">play_arrow</mat-icon>\r\n                                </button>\r\n                            </i>-->\r\n\r\n                                <!-- update_disabled -->\r\n                                <td style=\"vertical-align: middle;\">\r\n\r\n                                    <i style=\"float: right;margin-left: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"excluir\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"confirmModal(profs)\" [disabled]=\"disabledDeletProf\"\r\n                                            style=\"margin: 0px;\" mat-icon-button>\r\n                                            <mat-icon>delete_outline</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n                                </td>\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                    <ng-template #message>\r\n                        Não há professores alocados na turma.\r\n                    </ng-template>\r\n                    <!-- <paginator style=\"padding-bottom: 45px;\" \r\n            disabled [Count]=\"pageCount\" \r\n            [selectedPage]=\"selectedPage\" \r\n            (currentPage)=\"changePage($event)\"></paginator> -->\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <!-- <mat-paginator *ngIf=\"professores.length > 0\" [length]=\"length\" [pageSize]=\"pageSize\" hidePageSize=\"true\"\r\n                (page)=\"pageEvent = $event\" (click)=\"changePage(pageEvent)\">\r\n            </mat-paginator> -->\r\n            </mat-tab>\r\n            <!-- <mat-tab label=\"Third\">Content 3</mat-tab> -->\r\n        </mat-tab-group>\r\n        <!-- <div style=\"float:right;margin-bottom: 30px;\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" type=\"submit\" mat-raised-button disabled=\"false\">\r\n            Fechar\r\n        </button>\r\n    </div> -->\r\n        <!-- <button style=\"float:right;margin-bottom: 10px;\" mat-raised-button\r\n    [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button> -->\r\n    </div>\r\n</div>","import { Component, Inject, Input, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { MyTel } from \"src/app/_shared/customMasks/maskTelBr/mytel.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { Turma } from \"src/app/_shared/models/Turma.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\n\r\n\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'transfturmamodal',\r\n    templateUrl: './transfturma.component.html',\r\n    styleUrls: ['./transfturma.component.scss'],\r\n    animations: [HighlightTrigger] //@rowHighlight\r\n})\r\n\r\nexport class TransferenciaTurmaComponent implements OnInit {\r\n\r\n\r\n    baseUrl = environment.baseUrl;\r\n    //public cepReturn: CepReturn = new CepReturn();\r\n    public pesquisaForm: FormGroup;\r\n    public aluno: Aluno = new Aluno()\r\n    public turmas: Turma[] = new Array<Turma>();\r\n    private jwtHelper = new JwtHelperService();\r\n    tokenInfo: TokenInfos = new TokenInfos();\r\n    temDebito = false;\r\n    //cargos = Cargos;\r\n    mensagem = \"\";\r\n    showMensagem = false\r\n    showAluno = false\r\n    showSearch = true\r\n\r\n    constructor(\r\n        //private service: AdmService,\r\n        //private router: Router,\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<TransferenciaTurmaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.pesquisaForm = _fb.group({\r\n            cpf: ['', [Validators.required, Validators.minLength(11)]],\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n        // console.log(\"on init\")\r\n        //this.getTasks(1, this.pageSize);\r\n        //this.colaboradorForm.get('logradouro').disable()\r\n\r\n\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n    }\r\n\r\n    fechar() {\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n    resposta: any\r\n    HasMessage: any\r\n    nascimento: any\r\n    idTurmaAntiga: number\r\n    turma: any\r\n    consulta(form: FormGroup) {\r\n\r\n        console.log(this.pesquisaForm.get('cpf').value)\r\n\r\n        this.showMensagem = false\r\n\r\n        if (form.valid) {\r\n            let cpf = this.pesquisaForm.get('cpf').value\r\n            console.log(cpf)\r\n            this._http.get(`${this.baseUrl}/pedag/transf-turma/?cpf=${cpf}`)\r\n                .subscribe(response => {\r\n                    console.log(response['message'])\r\n\r\n                    this.resposta = response\r\n                    this.HasMessage = response['message']\r\n                    // if(response['message'] != undefined){\r\n\r\n                    // }\r\n                    // this.alunoResponse = Object.assign([], response)\r\n\r\n                }, err => { console.log(err) },\r\n                    () => {\r\n\r\n                        console.log(this.resposta)\r\n                        if (this.HasMessage != undefined) {\r\n\r\n                            this.showMensagem = true\r\n                            this.mensagem = this.resposta['message']\r\n                            console.log(this.mensagem)\r\n\r\n                        } else {\r\n                            this.aluno = Object.assign({}, this.resposta['aluno'])\r\n                            this.turmas = Object.assign([], this.resposta['turmas'])\r\n                            this.idTurmaAntiga = this.resposta['turmaAtualId']\r\n                            this.temDebito = this.resposta['debitos']\r\n                            this.turma = this.resposta['turma']\r\n                            this.nascimento = { dia: 10, mes: 5, ano: 2021 }\r\n                            this.showAluno = true\r\n                            this.showSearch = false\r\n                        }\r\n\r\n                    });\r\n        }\r\n    }\r\n\r\n    turmaTransId = 0\r\n    selectTurma(turmaId: number) {\r\n        this.turmaTransId = turmaId;\r\n        // this._http.post(`${this.baseUrl}/pedag/transfinterna/?alunoId=${this.aluno.id}&turmaId=${turmaId}`, {\r\n\r\n        // }).subscribe(resp => {\r\n\r\n        //     }\r\n\r\n        //     ,\r\n        //     (error) => { console.log(error) },\r\n        //     () => { })\r\n\r\n    }\r\n\r\n    salvar() {\r\n\r\n        if (this.turmaTransId > 0) {\r\n            this._http.post(`${this.baseUrl}/pedag/trans-turma/?alunoId=${this.aluno.id}&turmaId=${this.turmaTransId}&turmaIdAntiga=${this.idTurmaAntiga}`, {\r\n\r\n            }).subscribe(resp => {\r\n\r\n            },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    onSubmit(form: FormGroup) {\r\n        this.showMensagem = false\r\n        console.log(form)\r\n        console.log(form.value)\r\n        console.log(form.valid)\r\n        //var cel = `${form['celular'].value}`\r\n        //console.log(cel)\r\n        // this.dialogRef.close();\r\n        if (form.valid) {\r\n            console.log('form valid')\r\n            const novoColaborador = JSON.stringify(form.value);\r\n            //this.save(novoColaborador)\r\n            // let newTemplate = this.mapForm(tempForm)\r\n\r\n            this._http.post(`${this.baseUrl}/colaboradores`, novoColaborador, {\r\n                //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n                headers: new HttpHeaders({\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bear \"\r\n                })\r\n            }).subscribe(response => {\r\n\r\n                console.log(response)\r\n                // this.colaboradores = Object.assign([], response['data'])\r\n                // console.log(this.colaboradores)\r\n                // this.dialogRef.close();\r\n            }, (err) => {\r\n                console.log(err)\r\n                console.log(err['error'].mensagem)\r\n                this.mensagem = err['error'].mensagem\r\n                this.showMensagem = true\r\n            },\r\n                () => {\r\n                    //console.log(response)\r\n                    this.showMensagem = false\r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    // https://viacep.com.br/ws/01001000/json/\r\n\r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n}","<div class=\"container\">\r\n    <!-- Transferência Interna\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button (click)=\"fechar()\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i> -->\r\n\r\n    <div style=\"font-size: 1.2em;\">\r\n        Transferência de Turma - Unidade {{ tokenInfo.Unidade }}\r\n\r\n        <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"fechar()\" style=\"\" mat-icon-button>\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n    <hr>\r\n\r\n    <div *ngIf=\"showSearch\">\r\n        <div style=\"margin-top: 20px;font-size: 0.9em;font-style: italic;\">\r\n            Digite o CPF do aluno para colalizá-lo no sistema:\r\n        </div>\r\n        <form novalidate [formGroup]=\"pesquisaForm\" (ngSubmit)=\"consulta(pesquisaForm)\">\r\n            <mat-form-field appearance=\"standard\" style=\"width: 135px; \">\r\n                <mat-label>CPF</mat-label>\r\n                <input mask=\"000.000.000-00\"\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" minlength=\"11\"\r\n                    formControlName=\"cpf\" required name=\"cpf\" matInput placeholder=\"CPF\">\r\n            </mat-form-field>\r\n\r\n            <button type=\"submit\" style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n\r\n        </form>\r\n\r\n        <br>\r\n        <div @rowHighlight class=\"card-header \" style=\"background-color: rgb(227, 240, 227);margin-left: 0px;\r\n       width: 350px; font-size: 0.9em;box-shadow: 0 0 0.5em rgb(172, 170, 170);\" unselectable=\"on\"\r\n            *ngIf=\"showMensagem\">{{mensagem}}</div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n    <div *ngIf=\"showAluno\">\r\n\r\n\r\n        <div style=\"position: relative;\">\r\n\r\n            <div style=\"position: absolute;  display:flex;padding: 0px; margin-left: 88%; display: inline-block;\r\n            overflow: hidden;margin-top: 5px; width: 100px; height: 133px; border: 1px solid black; \">\r\n\r\n                <img src=\"\" style=\"display: block;\r\n            margin-left: auto;\r\n            margin-right: auto;width:50%\r\n            \">\r\n\r\n            </div>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                <mat-label>Nome completo</mat-label>\r\n                <input [(ngModel)]=\"aluno.nome\" disabled selected required name=\"nome\" matInput placeholder=\"Nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                <mat-label>CPF</mat-label>\r\n                <input [(ngModel)]=\"aluno.cpf\" disabled\r\n                mask=\"000.000.000-00\"\r\n                    selected name=\"cpf\" matInput placeholder=\"digite o CPF\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 12%; margin-left: 2%;\">\r\n                <mat-label>RG</mat-label>\r\n                <input [(ngModel)]=\"aluno.rg\" disabled\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" selected name=\"rg\"\r\n                    minlength=\"9\" maxlength=\"11\" matInput placeholder=\"digite o RG\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 17%; margin-left: 2%;\">\r\n                <mat-label>Nascimento</mat-label>\r\n                <date-input disabled [(ngModel)]=\"nascimento\" disabled name=\"nascimento\" matInput required></date-input>\r\n            </mat-form-field>\r\n\r\n\r\n            <br>\r\n\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 25%; \">\r\n                <mat-label>Nome Social</mat-label>\r\n                <input [(ngModel)]=\"aluno.nomeSocial\" disabled selected name=\"nome\" matInput placeholder=\"Nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%; \">\r\n                <mat-label>Naturalidade</mat-label>\r\n                <input [(ngModel)]=\"aluno.naturalidade\" disabled selected required name=\"naturalidade\" matInput\r\n                    placeholder=\"Nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                <mat-label>UF</mat-label>\r\n                <input [(ngModel)]=\"aluno.uf\" disabled\r\n                    onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\" minlength=\"2\"\r\n                    maxlength=\"2\" selected required name=\"naturalidadeUF\" matInput placeholder=\"UF\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field #tooltip=\"matTooltip\" [matTooltip]=\"aluno.email\" matTooltipPosition=\"above\"\r\n                matTooltipHideDelay=\"100\" appearance=\"standard\" style=\"width: auto; margin-left: 2%;\">\r\n                <mat-label>Email</mat-label>\r\n                <input [(ngModel)]=\"aluno.email\" disabled selected name=\"email\" matInput placeholder=\"Email\">\r\n            </mat-form-field>\r\n\r\n            <!-- <div style=\"font-style: italic;margin-top: 10px;\">Selecione o curso em que o Aluno está matriculado e para o qual deseja transferência:</div>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                <mat-label>Curso</mat-label>\r\n                <mat-select  selected name=\"cargo\" required>\r\n                    <mat-option value=\"\"></mat-option>\r\n                    <mat-option (click)=\"select()\" >Curso Técnico em Enfermagem</mat-option>\r\n                </mat-select>\r\n            </mat-form-field> -->\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 28%;\">\r\n                <mat-label>Curso</mat-label>\r\n                <input disabled [value]=\"turma.descricao\" selected required name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n                <mat-label>Turma atual</mat-label>\r\n                <input disabled [value]=\"turma.identificador\" selected required name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field>\r\n\r\n            <!-- <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n                <mat-label>Unidade atual</mat-label>\r\n                <input disabled value=\"Ilha do Governador\" selected required name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field> -->\r\n\r\n            <!-- <mat-form-field appearance=\"standard\" style=\"width: 14%; margin-left: 2%;\">\r\n                <mat-label>Semestre atual</mat-label>\r\n                <input disabled value=\"2º semestre\" selected required name=\"templateName\" matInput\r\n                    placeholder=\"digite o bairro\">\r\n            </mat-form-field> -->\r\n\r\n            <br>\r\n\r\n            <!-- <div style=\"font-style: italic;margin-bottom: 10px;\">Disciplinas faltantes:</div>\r\n\r\n            <div>Fundamentos de Enfermagem I\r\n                <i style=\"margin-left: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button style=\"color: green\" mat-icon-button>\r\n                        <mat-icon>done</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </div> -->\r\n\r\n            <div style=\"font-style: italic;margin-top: 10px; margin-bottom: 10px;\">\r\n                Turmas com vagas (unidade {{tokenInfo.Unidade}}):</div>\r\n\r\n            <ng-container *ngIf=\"turmas.length > 0; else semturmas\">\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                    <mat-label>Turma</mat-label>\r\n                    <mat-select selected name=\"cargo\" required>\r\n                        <mat-option value=\"\"></mat-option>\r\n                        <mat-option (click)=\"selectTurma(turma.id)\" *ngFor=\"let turma of turmas\" [value]=\"turma.id\">\r\n                            Turma {{turma.identificador}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </ng-container>\r\n            <ng-template #semturmas>\r\n                <span style=\"font-size: 0.8em; font-style: italic;\">\r\n                Não turmas disponíveis ou com vagas para transferência.\r\n                </span>\r\n            </ng-template>\r\n\r\n            <span *ngIf=\"temDebito\" style=\"font-size: 0.8em; font-style: italic;\">\r\n                O aluno possui débitos em aberto, favor procurar a sua unidade responsável e regularizar.\r\n                </span>\r\n            \r\n\r\n        </div>\r\n\r\n        <button type=\"submit\" color=\"primary\" (click)=\"salvar()\" mat-raised-button \r\n        [disabled]=\"turmas.length == 0\"\r\n            style=\"float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n            Salvar\r\n        </button>\r\n\r\n    </div>\r\n\r\n</div>","import {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Self,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  NgControl,\r\n  Validators\r\n} from '@angular/forms';\r\nimport {MAT_FORM_FIELD, MatFormField, MatFormFieldControl} from '@angular/material/form-field';\r\nimport {Subject} from 'rxjs';\r\nimport { MyTel } from './mytel.model';\r\n\r\n\r\n\r\n/* \r\n\r\n@Component({\r\n  selector: 'form-field-custom-control-example',\r\n  templateUrl: 'form-field-custom-control-example.html',\r\n})\r\nexport class FormFieldCustomControlExample {\r\n  form: FormGroup = new FormGroup({\r\n    tel: new FormControl(new MyTel('', '', ''))\r\n  });\r\n}\r\n*/\r\n\r\n/** Custom `MatFormFieldControl` for telephone number input. */\r\n@Component({\r\n  selector: 'example-tel-input',\r\n  templateUrl: 'example-tel-input-example.html',\r\n  styleUrls: ['example-tel-input-example.scss'],\r\n  providers: [{ provide: MatFormFieldControl, useExisting: MyTelInput }],\r\n  host: {\r\n    '[class.example-floating]': 'shouldLabelFloat',\r\n    '[id]': 'id',\r\n  }\r\n})\r\n\r\n\r\nexport class MyTelInput\r\n  implements ControlValueAccessor, MatFormFieldControl<MyTel>, OnDestroy {\r\n  static nextId = 0;\r\n  @ViewChild('area') areaInput: HTMLInputElement;\r\n  @ViewChild('exchange') exchangeInput: HTMLInputElement;\r\n  @ViewChild('subscriber') subscriberInput: HTMLInputElement;\r\n\r\n  parts: FormGroup;\r\n  stateChanges = new Subject<void>();\r\n  focused = false;\r\n  controlType = 'example-tel-input';\r\n  id = `example-tel-input-${MyTelInput.nextId++}`;\r\n  onChange = (_: any) => {};\r\n  onTouched = () => {};\r\n\r\n  get empty() {\r\n    const {\r\n      value: { area, exchange, subscriber }\r\n    } = this.parts;\r\n\r\n    return !area && !exchange && !subscriber;\r\n  }\r\n\r\n  get shouldLabelFloat() {\r\n    return this.focused || !this.empty;\r\n  }\r\n\r\n  @Input('aria-describedby') userAriaDescribedBy: string;\r\n\r\n  @Input()\r\n  get placeholder(): string {\r\n    return this._placeholder;\r\n  }\r\n  set placeholder(value: string) {\r\n    this._placeholder = value;\r\n    this.stateChanges.next();\r\n  }\r\n  private _placeholder: string;\r\n\r\n  @Input()\r\n  get required(): boolean {\r\n    return this._required;\r\n  }\r\n  set required(value: boolean) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n  private _required = false;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this._disabled ? this.parts.disable() : this.parts.enable();\r\n    this.stateChanges.next();\r\n  }\r\n  private _disabled = false;\r\n\r\n  @Input()\r\n  get value(): any | null {\r\n    if (this.parts.valid) {\r\n      const {\r\n        value: { area, exchange, subscriber }\r\n      } = this.parts;\r\n      return `(${area}) ${exchange}-${subscriber}` //new MyTel(area, exchange, subscriber);\r\n    }\r\n    return null;\r\n  }\r\n  set value(tel: any | null) {\r\n    const { area, exchange, subscriber } = tel || new MyTel('', '', '');\r\n    this.parts.setValue({ area, exchange, subscriber });\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  get errorState(): boolean {\r\n    return this.parts.invalid && this.parts.dirty;\r\n  }\r\n\r\n  constructor(\r\n    formBuilder: FormBuilder,\r\n    private _focusMonitor: FocusMonitor,\r\n    private _elementRef: ElementRef<HTMLElement>,\r\n    @Optional() @Inject(MAT_FORM_FIELD) public _formField: MatFormField,\r\n    @Optional() @Self() public ngControl: NgControl) {\r\n\r\n    this.parts = formBuilder.group({\r\n      area: [\r\n        null,\r\n        [Validators.required, Validators.minLength(2), Validators.maxLength(2)]\r\n      ],\r\n      exchange: [\r\n        null,\r\n        [Validators.required, Validators.minLength(5), Validators.maxLength(5)]\r\n      ],\r\n      subscriber: [\r\n        null,\r\n        [Validators.required, Validators.minLength(3), Validators.maxLength(4)]\r\n      ]\r\n    });\r\n\r\n    _focusMonitor.monitor(_elementRef, true).subscribe(origin => {\r\n      if (this.focused && !origin) {\r\n        this.onTouched();\r\n      }\r\n      this.focused = !!origin;\r\n      this.stateChanges.next();\r\n    });\r\n\r\n    if (this.ngControl != null) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  autoFocusNext(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n    if (!control.errors && nextElement) {\r\n      this._focusMonitor.focusVia(nextElement, 'program');\r\n    }\r\n  }\r\n\r\n  autoFocusPrev(control: AbstractControl, prevElement: HTMLInputElement): void {\r\n    if(control.value.length == null) return;\r\n    if (control.value.length < 1) {\r\n      this._focusMonitor.focusVia(prevElement, 'program');\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n    this._focusMonitor.stopMonitoring(this._elementRef);\r\n  }\r\n\r\n  setDescribedByIds(ids: string[]) {\r\n    const controlElement = this._elementRef.nativeElement\r\n      .querySelector('.example-tel-input-container')!;\r\n    controlElement.setAttribute('aria-describedby', ids.join(' '));\r\n  }\r\n\r\n  onContainerClick() {\r\n    if (this.parts.controls.subscriber.valid) {\r\n      this._focusMonitor.focusVia(this.subscriberInput, 'program');\r\n    } else if (this.parts.controls.exchange.valid) {\r\n      this._focusMonitor.focusVia(this.subscriberInput, 'program');\r\n    } else if (this.parts.controls.area.valid) {\r\n      this._focusMonitor.focusVia(this.exchangeInput, 'program');\r\n    } else {\r\n      this._focusMonitor.focusVia(this.areaInput, 'program');\r\n    }\r\n  }\r\n\r\n  writeValue(tel: MyTel | null): void {\r\n    this.value = tel;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  _handleInput(control: AbstractControl, nextElement?: HTMLInputElement): void {\r\n    this.autoFocusNext(control, nextElement);\r\n    this.onChange(this.value);\r\n  }\r\n\r\n  static ngAcceptInputType_disabled: BooleanInput;\r\n  static ngAcceptInputType_required: BooleanInput;\r\n}\r\n\r\n\r\n/**  Copyright 2021 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","<div role=\"group\" class=\"example-tel-input-container\"\r\n     [formGroup]=\"parts\"\r\n     [attr.aria-labelledby]=\"_formField?.getLabelId()\">\r\n     <span class=\"example-tel-input-spacer\">(</span>\r\n  <input style=\"width: 25px;\" class=\"example-tel-input-element\"\r\n         formControlName=\"area\" size=\"2\"\r\n         maxLength=\"2\"\r\n         aria-label=\"Area code\"\r\n         (input)=\"_handleInput(parts.controls.area, exchange)\"\r\n         #area>\r\n  <span class=\"example-tel-input-spacer\">)</span>\r\n  <input style=\"width: 50px;\" class=\"example-tel-input-element\"\r\n         formControlName=\"exchange\"\r\n         maxLength=\"5\"\r\n         size=\"5\"\r\n         aria-label=\"Exchange code\"\r\n         (input)=\"_handleInput(parts.controls.exchange, subscriber)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.exchange, area)\"\r\n         #exchange>\r\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\r\n  <input style=\"width: 40px;\"class=\"example-tel-input-element\"\r\n         formControlName=\"subscriber\"\r\n         maxLength=\"4\"\r\n         size=\"4\"\r\n         aria-label=\"Subscriber number\"\r\n         (input)=\"_handleInput(parts.controls.subscriber)\"\r\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.subscriber, exchange)\"\r\n         #subscriber>\r\n</div>\r\n\r\n\r\n<!-- Copyright 2021 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license -->","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Produto } from \"src/app/_shared/models/produto.model\";\r\n\r\n\r\n\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'produto-editmodal',\r\n    templateUrl: './produto-edit.component.html',\r\n    styleUrls: ['./produto-edit.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ProdutoEditComponent implements OnInit {\r\n\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n    // pageEvent: PageEvent;\r\n    baseUrl = environment.baseUrl;\r\n    //public cepReturn: CepReturn = new CepReturn();\r\n    public produtoForm: FormGroup;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    public produto: Produto = new Produto()\r\n    // public validadeEmailMsg = false\r\n    // public validadeCPFMsg = false\r\n    //cargos = Cargos;\r\n    //mensagem = \"\";\r\n    //showMensagem = false\r\n    //public bairro: string = null;\r\n    //@Input() disabled = true;\r\n    //unidades = Unidades;//: string[] = new Array(\"Campo Grande II\", \"Jacarepaguá\");\r\n    constructor(\r\n        //private service: AdmService,\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private http: HttpClient,\r\n        public dialogRef: MatDialogRef<ProdutoEditComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        // this.produtoForm = _fb.group({\r\n        //     // templateName: ['', [Validators.required, Validators.minLength(5)]],\r\n        //     // newCat: [,[Validators.required, Validators.minLength(3)]],\r\n        //     // newFunc: [, [Validators.required, Validators.minLength(3)]]\r\n        //     nome: ['', [Validators.required, Validators.minLength(5)]],\r\n        //     descricao: ['',[Validators.required]],\r\n        //     preco: ['', [Validators.required]],\r\n        //     quantidade: [, [Validators.required]],\r\n        //     nivelMinimo: [, [Validators.required]],\r\n        //     //unidade: ['', [Validators.required]],\r\n        //     observacoes: [''],\r\n            \r\n        // })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        //this.produto = Object.assign({}, this.data['produto'])\r\n       \r\n        // console.log(this.tokenInfo.Unidade);\r\n        // console.log(this.tokenInfo.Codigo);\r\n        // console.log(this.tokenInfo);\r\n        // this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n        // this.colaboradorForm.get('cpf').setErrors({ 'incorrect': true });\r\n        //this.colaboradorForm.get('unidade').setValue(this.tokenInfo.Codigo)\r\n        // console.log(\"on init\")\r\n        //this.getTasks(1, this.pageSize);\r\n        //this.colaboradorForm.get('logradouro').disable()\r\n        this.GetProduto(this.data['produto'].id);\r\n    }\r\n\r\n    GetProduto(produtoId){\r\n        this.http.get(`${this.baseUrl}/produto/${produtoId}`)\r\n        .subscribe(response => {\r\n                    console.log(response)\r\n\r\n                    this.produto  = Object.assign({}, response['produto'])\r\n        \r\n                }, err => { \r\n                    console.log(err)\r\n                },\r\n                    () => { });\r\n    }\r\n    //     ngOnChanges() {\r\n    //         logradouro\r\n    // cidade\r\n    // uf\r\n    // bairro\r\n\r\n    //     }\r\n\r\n    // save(form: any) {\r\n    //     //const novoColaborador = JSON.stringify(form.value);\r\n    //     console.log(form)\r\n\r\n    //     //this.redi([\"./adm/colaboradores\"]);\r\n    //     this.http.post(`${this.baseUrl}/colaboradores`, form, {\r\n    //         //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n    //         headers: new HttpHeaders({\r\n    //             \"Content-Type\": \"application/json\",\r\n    //             \"Authorization\": \"Bear \"\r\n    //         })\r\n    //     }).subscribe(response => {\r\n\r\n    //         console.log(response)\r\n\r\n\r\n    //         this.dialogRef.close();\r\n    //     }, err => { },\r\n    //         () => { });\r\n    // }\r\n\r\n    // onSubmit(form: FormGroup) {\r\n        \r\n    //     var produto = new Produto();\r\n    //     produto = form.value\r\n\r\n    //     console.log(produto)\r\n\r\n\r\n    //     if (form.valid) {\r\n           \r\n\r\n    //         this.http.post(`${this.baseUrl}/produto`, produto, {\r\n               \r\n    //         }).subscribe(response => {\r\n\r\n    //             console.log(response)\r\n                \r\n    //         }, (err) => {\r\n    //             console.log(err)\r\n               \r\n    //         },\r\n    //             () => {\r\n                   \r\n    //                 this.dialogRef.close({ clicked: \"Ok\" });\r\n    //             });\r\n    //     }\r\n    // }\r\n\r\n    openSnackBar() {\r\n        this._snackBar.open('Colaborador salvo com sucesso.', '', {\r\n            horizontalPosition: 'center',\r\n            verticalPosition: 'top',\r\n            panelClass: 'green-snackbar',\r\n            duration: 3 * 1000,\r\n        });\r\n    }\r\n\r\n    saveEdit(form: any){\r\n        console.log(form.value)\r\n\r\n        // var produto = new Produto();\r\n        // produto = form.value\r\n\r\n        //console.log(produto)\r\n\r\n\r\n        if (form.valid) {\r\n           \r\n\r\n            this.http.put(`${this.baseUrl}/produto`, this.produto, {\r\n               \r\n            }).subscribe(response => {\r\n\r\n                console.log(response)\r\n                \r\n            }, (err) => {\r\n                console.log(err)\r\n               \r\n            },\r\n                () => {\r\n                   \r\n                    this.dialogRef.close({ clicked: \"Ok\" });\r\n                });\r\n        }\r\n    }\r\n\r\n    // buscarEmail(event: any) {\r\n    //     if (this.colaboradorForm.get('email').valid) {\r\n    //         this.validadeEmailMsg = false\r\n    //         this.http.get(`${this.baseUrl}/adm/aluno/email/${event.target.value}`, {\r\n    //             headers: new HttpHeaders({\r\n    //                 \"Content-Type\": \"application/json\",\r\n    //                 \"Authorization\": \"Bear \"\r\n    //             })\r\n    //         }).subscribe(response => {\r\n\r\n    //         }, (err) => {\r\n    //             if (err['status'] == 409) {\r\n    //                 this.validadeEmailMsg = true\r\n    //                 this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n    //             }\r\n    //         },\r\n    //             () => {\r\n    //                 this.colaboradorForm.get('email').setErrors(null);\r\n    //             });\r\n\r\n    //         //this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n\r\n    //     }\r\n    // }\r\n\r\n    // buscarCPF(event: any) {\r\n    //     // console.log(event.target.value)\r\n    //     console.log(this.colaboradorForm.get('cpf').value)\r\n    //     console.log(this.colaboradorForm.get('cpf').valid)\r\n    //     console.log(this.colaboradorForm.get('cpf').value.length)\r\n    //     if (this.colaboradorForm.get('cpf').valid) {\r\n    //         this.validadeCPFMsg = false\r\n    //         let cpf = this.colaboradorForm.get('cpf').value\r\n    //         //this.http.get(`${this.baseUrl}/adm/aluno/cpf/${event.target.value}`, {\r\n    //         this.http.get(`${this.baseUrl}/adm/aluno/cpf/${cpf}`, {\r\n    //             headers: new HttpHeaders({\r\n    //                 \"Content-Type\": \"application/json\",\r\n    //                 \"Authorization\": \"Bear \"\r\n    //             })\r\n    //         }).subscribe(response => {\r\n\r\n    //         }, (err) => {\r\n    //             if (err['status'] == 409) {\r\n    //                 this.validadeCPFMsg = true\r\n    //                 this.colaboradorForm.get('cpf').setErrors({ 'incorrect': true });\r\n    //             }\r\n    //         },\r\n    //             () => {\r\n    //                 this.colaboradorForm.get('cpf').setErrors(null);\r\n    //             });\r\n\r\n    //         //this.colaboradorForm.get('email').setErrors({ 'incorrect': true });\r\n\r\n    //     }\r\n    // }\r\n    // https://viacep.com.br/ws/01001000/json/\r\n    // consultaCEP(CEP: string) {\r\n    //     console.log(CEP);\r\n\r\n    //     this.http.get(`https://viacep.com.br/ws/${CEP}/json/`, {\r\n\r\n    //     }\r\n    //     )\r\n    //         .subscribe(response => {\r\n\r\n    //             console.log(response)\r\n    //             // this.cepReturn = new CepReturn(\r\n    //             //     response[\"logradouro\"],\r\n    //             //     response[\"bairro\"],\r\n    //             //     response[\"localidade\"],\r\n    //             //     response[\"uf\"]);\r\n    //             //console.log(this.cepReturn)\r\n    //             this.colaboradorForm.get('logradouro').setValue(response[\"logradouro\"]);\r\n    //             this.colaboradorForm.get('bairro').setValue(response[\"bairro\"]);\r\n    //             this.colaboradorForm.get('cidade').setValue(response[\"localidade\"]);\r\n    //             this.colaboradorForm.get('uf').setValue(response[\"uf\"]);\r\n    //             //this.bairro = this.cepReturn.bairro\r\n    //             // const token = (<any>response).accessToken;\r\n    //             // console.log(response)\r\n    //             // localStorage.setItem(\"jwt\", token);\r\n    //             // this.invalidLogin = false;\r\n    //             // this.router.navigate([\"/main\"]);\r\n    //         }, err => { console.log(err) },\r\n    //             () => { console.log('finaly') });\r\n    // }\r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n    // login(form: NgForm) {\r\n    //     const credentials = JSON.stringify(form.value);\r\n    //     console.log(credentials)\r\n    //     this.http.post(\"https://localhost:44370/api/identity/login\", credentials, {\r\n    //     //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n    //         headers: new HttpHeaders({\r\n    //             \"Content-Type\": \"application/json\"\r\n    //         })\r\n    //     }).subscribe(response => {\r\n    //         const token = (<any>response).accessToken;\r\n    //         console.log(response)\r\n    //         localStorage.setItem(\"jwt\", token);\r\n    //         this.invalidLogin = false;\r\n    //         this.router.navigate([\"/main\"]);\r\n    //     }, err => {\r\n    //         this.invalidLogin = true;\r\n    //     });\r\n    // }\r\n    // getTasks(actualPage: number, pageSize: number) {\r\n    //     this.service.getTasks(actualPage, pageSize)\r\n    //         .subscribe(\r\n    //             tasks => {\r\n    //                 console.log(tasks)\r\n    //                 this.genericTasks =  Object.assign([],tasks[\"data\"]);\r\n    //                 this.length = tasks[\"totalItemsInDatabase\"];\r\n\r\n    //             },\r\n    //             (err) => {\r\n    //                 console.log(\"err erro\")\r\n\r\n\r\n    //             },\r\n    //             () => { console.log('ok get') },\r\n    //         )\r\n\r\n    // }\r\n\r\n    // addNewItem(value: string) {\r\n    //     console.log(value)\r\n    //     this.newItemEvent.emit(value);\r\n    // }\r\n\r\n    // adicionar(taskAded: GenericTask) {\r\n    //     console.log(taskAded)\r\n    //     let templateTask:TemplateTasks = new TemplateTasks()\r\n    //     templateTask.genericTaskId = taskAded.id\r\n    //     templateTask.name = taskAded.name\r\n    //     templateTask.hour = taskAded.hour\r\n    //     templateTask.minute = taskAded.minute\r\n    //     console.log(templateTask)\r\n\r\n    //     this.data.templateTasks.push(templateTask)\r\n\r\n    //     console.log(this.data.templateTasks)\r\n    //     console.log('adicionar task')\r\n    // }\r\n\r\n\r\n    // //mat-dialog-container\r\n    // onNoClick(): void {\r\n    //     this.dialogRef.close();\r\n    // }\r\n    // pageIndexNumber: number = 0;\r\n    // clicar(evento: any) {\r\n    //     console.log(evento)\r\n\r\n    //     this.pageIndexNumber = (evento.pageIndex * this.pageSize)\r\n    //     this.getTasks(evento.pageIndex + 1, this.pageSize);\r\n    // }\r\n}","<div style=\"font-size: 1.2em;\">Editar Produto\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<!-- <div style=\"font-size: 0.8em;margin-top: 5px;\">* O colaborador será salvo na unidade de {{tokenInfo.Unidade}}</div> -->\r\n<hr>\r\n\r\n<form novalidate #form=\"ngForm\" (ngSubmit)=\"saveEdit(form)\">\r\n\r\n    <!-- <div class=\"card-body\"> -->\r\n    <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Nome</mat-label>\r\n        <input selected [(ngModel)]=\"produto.nome\" required name=\"nome\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 5%; \">\r\n        <mat-label>Código</mat-label>\r\n        <input selected disabled [value]=\"produto.codigoProduto\" name=\"codigo\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n    \r\n    <br>\r\n    \r\n    <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n        <mat-label>Descrição</mat-label>\r\n        <input selected required [(ngModel)]=\"produto.descricao\" name=\"descricao\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n\r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 100px;margin-left: 10px;\">\r\n        <mat-label>Unidade</mat-label>\r\n        <mat-select  selected name=\"cargoId\" required>\r\n            <mat-option value=\"\"></mat-option>\r\n            <mat-option value=\"\">CGI</mat-option>\r\n            <mat-option value=\"\">SJM</mat-option>\r\n        </mat-select>\r\n    </mat-form-field> -->\r\n\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 20%; \">\r\n        <mat-label>Preço Venda</mat-label>\r\n        <input currencyMask [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" \r\n        [(ngModel)]=\"produto.preco\" \r\n        onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" \r\n        selected required name=\"preco\" matInput placeholder=\"Nome\">\r\n        <span matPrefix>R$&nbsp;</span>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 5% \">\r\n        <mat-label>Preço de custo</mat-label>\r\n        <input currencyMask [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" \r\n        [(ngModel)]=\"produto.precoCusto\"  type=\"text\"\r\n        selected required name=\"precoCusto\" matInput placeholder=\"Nome\">\r\n        <span matPrefix>R$&nbsp;</span>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 5%\">\r\n        <mat-label>Quantidade</mat-label>\r\n        <input [(ngModel)]=\"produto.quantidade\" type=\"number\"  onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" \r\n        selected required name=\"quantidade\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n    \r\n\r\n    <mat-form-field appearance=\"standard\" style=\"width: 20%;margin-left: 5%\">\r\n        <mat-label>Nível mínimo</mat-label>\r\n        <input [(ngModel)]=\"produto.nivelMinimo\" type=\"number\" onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" \r\n        selected required name=\"nivelMinimo\" matInput placeholder=\"Nome\">\r\n    </mat-form-field>\r\n    \r\n    <!-- <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 2%;\">\r\n        <mat-label>Cargo/Função</mat-label>\r\n        <mat-select formControlName=\"cargo\" selected name=\"cargo\" required>\r\n            <mat-option value=\"\"></mat-option>\r\n            <mat-option >unidade</mat-option>\r\n        </mat-select>\r\n    </mat-form-field> -->\r\n\r\n    <!-- descrição\r\n    preço\r\n    quantidade \r\n    nível mínimo\r\n    medida -->\r\n\r\n    <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n        <mat-label>Observações</mat-label>\r\n        <textarea [(ngModel)]=\"produto.observacoes\" maxlength=\"200\" name=\"observacoes\" matInput></textarea>\r\n    </mat-form-field>\r\n    \r\n    <!-- <div *ngIf=\"showMensagem\" class=\"alert alert-danger\" role=\"alert\"\r\n        style=\"text-align: center; vertical-align: middle; position:relative; height: 45px; float:left;margin-bottom: 20px;\">\r\n        {{mensagem}}\r\n    </div> -->\r\n\r\n    <button color=\"primary\" type=\"submit\" mat-raised-button disabled=\"false\" style=\"float:right;margin-bottom: 0px;margin-left: 10px;\"\r\n        [disabled]=\"!form.valid\" >\r\n        Salvar\r\n    </button>\r\n\r\n    <!-- <button style=\"float:right;margin-bottom: 10px;\" mat-raised-button\r\n        [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button> -->\r\n\r\n    <!-- <div mat-dialog-actions>\r\n        <button mat-raised-button (click)=\"onOkClick()\">Ok</button>\r\n        <button mat-raised-button [mat-dialog-close]=\"{clicked:'Cancel'}\">Cancel</button>\r\n    </div> -->\r\n\r\n\r\n</form>\r\n<!-- \r\nNome\r\ndescrição\r\npreço\r\nquantidade \r\nnível mínimo\r\nmedida\r\nObeservações -->","import { DEFAULT_CURRENCY_CODE, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//import { CustomersComponent } from './customers/customers.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CommonModule, CurrencyPipe, DatePipe } from '@angular/common';\r\n//import { HomeComponent } from './home.component';\r\nimport { SharedModule } from '../_shared/shared.module';\r\n\r\nimport { MaterialModule } from '../_shared/material/material.module';\r\n\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\n\r\n\r\nimport { IConfig, NgxMaskModule } from 'ngx-mask';\r\nimport { NewMatriculaComponent } from './newmatricula.component';\r\nimport { Servico } from '../Adm/testes/testeexterno';\r\nimport { NovaMatriculaComponent } from './NovaMatricula/novamatricula.component';\r\nimport { CreateNovaMatriculaComponent } from './NovaMatricula/CreateMatricula/createnovamatricula.component';\r\nimport { ConfirmNovaMatriculaComponent } from './NovaMatricula/CreateMatricula/Confirm/confirmnova.component';\r\nimport { NewMatriculaService } from './services/newmatricula.service';\r\nimport { RelatorioMatriculaComponent } from './NovaMatricula/Relatoriomatricula/relatoriomatricula.component';\r\n\r\n\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n  };\r\n  \r\nexport function tokenGetter() {\r\n    return localStorage.getItem(\"jwt\");\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        NewMatriculaComponent,\r\n        NovaMatriculaComponent,\r\n        CreateNovaMatriculaComponent,\r\n        ConfirmNovaMatriculaComponent,\r\n        RelatorioMatriculaComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        SharedModule,\r\n        MaterialModule,\r\n        AngularEditorModule,\r\n        NgxMaskModule.forRoot(maskConfig),\r\n    ],\r\n    //providers: [AuthGuard],\r\n    providers: [NewMatriculaService, CurrencyPipe, DatePipe, { provide: DEFAULT_CURRENCY_CODE, useValue: 'BRL' },\r\n    {provide: 'IServicoToken', useClass: Servico}\r\n    ],\r\n    exports: [\r\n        NewMatriculaComponent,\r\n        NovaMatriculaComponent\r\n    ],\r\n    entryComponents: [\r\n        CreateNovaMatriculaComponent,\r\n        ConfirmNovaMatriculaComponent,\r\n        RelatorioMatriculaComponent\r\n    ]\r\n})\r\nexport class NewMatriculaModule { }\r\n\r\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { Debito } from \"src/app/_shared/models/InfoFinanceiras.model\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { ConferenciaComponent } from \"./conferenca/conferencia.component\";\r\n\r\n\r\n@Component({\r\n    selector: \"balanco-app\",\r\n    templateUrl: './balanco.component.html',\r\n    styleUrls: ['./balanco.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class BalancoComponent implements OnInit {\r\n\r\n\r\n    //colaboradores: Colaborador[] = new Array<Colaborador>();\r\n    baseUrl = environment.baseUrl;\r\n    // length: number = 0\r\n    // pageSize: number = 5;\r\n    // pageEvent: PageEvent;\r\n    // pageIndexNumber: number = 0;\r\n    // actualPage = 1\r\n    // paginationInfo: IPager;\r\n\r\n    // formSubmitted: boolean = false;\r\n    // showTable: boolean = false;\r\n    // showSpinner = false\r\n    // showSpinnerFirst = false\r\n\r\n    // showMessage: boolean = false;\r\n    // cargos = Cargos;\r\n    // unidades = Unidades\r\n    showMessageNoColaborador = false\r\n    mensagem: string = \"\";\r\n\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    private jwtHelper = new JwtHelperService();\r\n    public debitos: Debito[] = new Array<Debito>()\r\n    //pagination\r\n    range = new FormGroup({\r\n        start: new FormControl(),\r\n        end: new FormControl()\r\n    });\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog\r\n        //private EditColaboradoresModal: MatDialog\r\n    ) { }\r\n    ngOnInit() {\r\n        //console.log('init colaboradores 123')\r\n        //const token = localStorage.getItem('jwt')\r\n        // this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        // console.log(token);\r\n        // console.log(this.tokenInfo.Unidade);\r\n        // console.log(this.tokenInfo.Codigo);\r\n        // console.log(this.tokenInfo);\r\n        //this.getColaboradores(1, this.pageSize);\r\n    }\r\n\r\n    totalVendas: number\r\n    pesquisarData() {\r\n\r\n        console.log(this.range.value[\"end\"])\r\n\r\n        console.log(this.range.value[\"end\"])\r\n\r\n        this._http.get(`${this.baseUrl}/financeiro/cursos-buscar/?start=${new Date(this.range.value[\"start\"]).toLocaleString()}&end=${new Date(this.range.value[\"end\"]).toLocaleString()}`)\r\n            .subscribe(resp => {\r\n                console.log(resp)\r\n\r\n                this.totalVendas =resp['total']\r\n\r\n                this.debitos = Object.assign([], resp['vendas'])\r\n            },\r\n                (error) => { console.log(error) },\r\n                () => { \r\n\r\n                    if(this.debitos.length > 0){\r\n\r\n                    }else{\r\n                        this.showMessageNoColaborador = true\r\n                    }\r\n\r\n                })\r\n    }\r\n    // pageIndex = 0\r\n    // get page() {\r\n    //     return console.log('page')\r\n    // }\r\n\r\n\r\n    // getColaboradores(actualPage: number, pageSize: number) {\r\n\r\n    //     var itemsPerPage = pageSize;\r\n    //     var currentPage = actualPage;\r\n\r\n    //     this.http.get(`${this.baseUrl}/colaboradores/?itemsPerPage=` + itemsPerPage + `&currentPage=` + currentPage, {\r\n    //         //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n    //         // headers: new HttpHeaders({\r\n    //         //     \"Content-Type\": \"application/json\",\r\n    //         //     \"Authorization\": \"Bear \"\r\n    //         // })\r\n    //     }).subscribe(response => {\r\n\r\n    //         console.log(response)\r\n    //         this.colaboradores = Object.assign([], response['data'])\r\n    //         this.length = response['totalItemsInDatabase']\r\n    //         console.log(this.length)\r\n    //         console.log(this.colaboradores)\r\n    //         // this.dialogRef.close();\r\n    //     }, err => { console.log(err) },\r\n    //         () => { });\r\n\r\n    // }\r\n\r\n\r\n    // params: Parametros = new Parametros()\r\n\r\n    pesquisar(nome: string, cargo: string, unidade: string) {\r\n\r\n        this.openConferencia();\r\n        // console.log(nome + \" \" + cargo + \" \" + unidade)\r\n        // if (nome == \"\" || nome == undefined) nome = \"\"\r\n        // if (cargo == \"\" || cargo == undefined) cargo = \"\"\r\n        // if (unidade == \"\" || unidade == undefined) unidade = \"\"\r\n\r\n        // if ((nome == \"\" || nome == undefined) &&\r\n        //     (cargo == \"\" || cargo == undefined) &&\r\n        //     (unidade == \"\" || unidade == undefined)) {\r\n        //     console.log(\"retorno\")\r\n        //     return;\r\n        // }\r\n        // this.showMessageNoColaborador = false\r\n        // this.mensagem = \"\"\r\n\r\n        // let query = { nome: nome, cargo: cargo, unidade: unidade }\r\n        // this.params.nome = nome\r\n        // this.params.email = cargo\r\n        // this.params.cpf = unidade\r\n        // //console.log(params)\r\n        // //var itemsPerPage = 5;\r\n        // //this.actualPage\r\n        // //var currentPage = 1;\r\n        // this.showSpinnerFirst = true\r\n        // this.colaboradores = new Array<Colaborador>();\r\n        // let paramsJson = JSON.stringify(this.params)\r\n        // console.log(query)\r\n\r\n        // this.http.post(`${this.baseUrl}/colaboradores/pesquisar/?itemsPerPage=` + this.pageSize + `&currentPage=1`, paramsJson, {\r\n        //     headers: new HttpHeaders({\r\n        //         \"Content-Type\": \"application/json\",\r\n        //         \"Authorization\": `Bearer ${localStorage.getItem('jwt')}`\r\n        //     })\r\n        // }).subscribe(\r\n        //     (response) => {\r\n        //         console.log(response)\r\n        //         this.colaboradores = Object.assign([], response['data']);\r\n        //         //  this.length = tasks['data'].length;\r\n        //         this.length = response['totalItemsInDatabase']\r\n        //         if (this.length == 0) {\r\n        //             this.showMessageNoColaborador = true\r\n        //             this.mensagem = \"Registro não localizado.\"\r\n        //         }\r\n        //         else if (this.colaboradores.length == 0) {\r\n        //             console.log(\"lengt zero\")\r\n        //             this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n        //             this.showMessageNoColaborador = true\r\n        //         }\r\n        //         // this.applyFiler()\r\n        //     },\r\n        //     (err) => {\r\n        //         this.showSpinnerFirst = false\r\n        //         console.log(err)\r\n        //         //this.openSnackBar(err)\r\n\r\n        //     },\r\n        //     () => {\r\n        //         this.showSpinnerFirst = false\r\n        //         console.log('ok get');\r\n        //         //this.pageIndexNumber = (evento.pageIndex * this.pageSize)\r\n        //     },\r\n        // )\r\n\r\n    }\r\n\r\n    // changePage(evento: any) {\r\n    //     console.log(evento)\r\n    //     console.log(this.actualPage)\r\n    //     //if(this.actualPage)\r\n    //     this.showSpinner = true\r\n    //     let paramsJson = JSON.stringify(this.params)\r\n    //     // this.getTasks(evento.pageIndex + 1, this.pageSize);\r\n    //     this.http.post(`${this.baseUrl}/colaboradores/pesquisar/?itemsPerPage=` + this.pageSize + `&currentPage=${evento.pageIndex + 1}`, paramsJson, {\r\n    //         headers: new HttpHeaders({\r\n    //             \"Content-Type\": \"application/json\",\r\n    //             \"Authorization\": \"Bearer \"\r\n    //         })\r\n    //     })\r\n    //         .subscribe(\r\n    //             (response) => {\r\n    //                 // console.log('generictasks get')\r\n    //                 this.colaboradores = response['data'];\r\n    //                 //  this.length = tasks['data'].length;\r\n    //                 this.length = response['totalItemsInDatabase']\r\n    //                 // this.applyFiler()\r\n    //             },\r\n    //             (err) => {\r\n    //                 console.log(err)\r\n    //                 this.showSpinner = false\r\n    //                 //this.openSnackBar(err)\r\n\r\n    //             },\r\n    //             () => {\r\n    //                 console.log('ok get');\r\n    //                 this.showSpinner = false\r\n    //                 this.pageIndexNumber = (evento.pageIndex * this.pageSize)\r\n    //             },\r\n    //         )\r\n    // }\r\n\r\n    // paginationChange(pageEvt: PageEvent) {\r\n    //     console.log(pageEvt)\r\n\r\n    // }\r\n\r\n    openConferencia(): void {\r\n        const dialogRef = this._modal\r\n            .open(ConferenciaComponent, {\r\n                height: 'auto',\r\n                width: '1030px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                maxWidth: '400vh',\r\n\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                // Reset form here\r\n                console.log('afte close ok')\r\n                //this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n    openEditUserModal(item: Colaborador): void {\r\n        // const dialogRef = this._modal\r\n        //     .open(EditColaboradoresComponent, {\r\n        //         height: '580px',\r\n        //         width: '800px',\r\n\r\n        //         data: { colaborador: item },\r\n        //         hasBackdrop: true,\r\n        //         disableClose: true\r\n        //     });\r\n\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n\r\n        // });\r\n    }\r\n\r\n    deleteColaborador(id: number) {\r\n\r\n        //     this._http.delete(`${this.baseUrl}/colaboradores/${id}`, {\r\n        //         //this.http.post(\"http://api.invictustemp.com.thor.hostazul.com.br/api/identity/login\", credentials, {\r\n\r\n        //         headers: new HttpHeaders({\r\n        //             \"Content-Type\": \"application/json\",\r\n        //             \"Authorization\": \"Bear \"\r\n        //         })\r\n        //     }).subscribe(response => {\r\n\r\n        //         console.log(response)\r\n\r\n        //     }, err => { \r\n        //         console.log(err) \r\n        //     },\r\n        //         () => { });\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface IPager {\r\n    itemsPerPage?: number;\r\n    totalItemsInDatabase?: number;\r\n    currentPage?: number;\r\n    totalPages?: number;\r\n    items?: number;\r\n}\r\n\r\nexport class Parametros {\r\n    constructor(\r\n        public nome?: string,\r\n        public email?: string,\r\n        public cpf?: string) { }\r\n}","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <!-- <div>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"criar colaborador\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"infoPagamento()\" mat-icon-button>\r\n                <mat-icon>attach_money</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div> -->\r\n\r\n    <br>\r\n\r\n    <!--TODO? aqui mostrar todos os valores, sejam oriundos de turmas/cursos ou nao!-->\r\n    <form class=\"form-inline siteForm\" style=\"margin-top: 5px;display: inline-block\">\r\n\r\n        <span style=\"margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n            Selecione o período para pesquisar pelas vendas efetuadas:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center divSiteForm\" style=\"padding: 0px;\" >\r\n           \r\n            <!-- <mat-form-field appearance=\"standard\" style=\"width: 110px; transform: scale(0.85);\">\r\n                <mat-label>Nº Lanç.</mat-label>\r\n                <input #nome selected name=\"templateName\" matInput placeholder=\"digite o número\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"width: 110px; margin-left: 2px;transform: scale(0.85);\">\r\n                <mat-label>Nº Doc.</mat-label>\r\n                <input #email selected name=\"templateName\" matInput placeholder=\"digite o número\">\r\n            </mat-form-field> -->\r\n\r\n            <mat-form-field style=\"transform: scale(0.85);margin-top: 10px;margin-left: -4%;\" \r\n            appearance=\"fill\" >\r\n                <mat-label>Selecione o período</mat-label>\r\n                <mat-date-range-input disabled [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n                    <input matStartDate formControlName=\"start\" placeholder=\"início\">\r\n                    <input matEndDate formControlName=\"end\" placeholder=\"fim\">\r\n                </mat-date-range-input>\r\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                <mat-date-range-picker #picker ></mat-date-range-picker>\r\n\r\n                <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\r\n                <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\r\n            </mat-form-field>\r\n\r\n            <span style=\"margin-left: 2px;margin-bottom: 30px;\">\r\n                <i style=\"margin-left: 2px;margin-bottom: 10px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button (click)=\"pesquisarData()\" disabled type=\"submit\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n            <!-- <mat-form-field class=\"siteForm-select\" style=\"width: 110px; margin-left: 2px;transform: scale(0.85);\">\r\n                <mat-label>Data</mat-label>\r\n                <input #cpf selected name=\"templateName\" matInput placeholder=\"escolha a data\">\r\n            </mat-form-field>\r\n            até\r\n            <mat-form-field class=\"siteForm-select\" style=\"width: 110px; margin-left: 2px;transform: scale(0.85);\">\r\n                <mat-label>Data</mat-label>\r\n                <input #cpf selected name=\"templateName\" matInput placeholder=\"escolha a data\">\r\n            </mat-form-field> -->\r\n\r\n            <!-- <span>\r\n                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button style=\"\" (click)=\"pesquisar(nome.value, email.value,cpf.value)\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span> -->\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n\r\n    <div class=\"card-header \" style=\"background-color: rgb(227, 240, 227);margin-left: 10px;\r\n   width: 350px; font-size: 0.9em;box-shadow: 0 0 0.5em rgb(172, 170, 170);\" unselectable=\"on\"\r\n    *ngIf=\"showMessageNoColaborador\">{{mensagem}}</div>\r\n\r\n    <!-- <mat-spinner @rowHighlight *ngIf=\"showSpinnerFirst\" [diameter]=\"100\" style=\"margin-left: 36.5%;\r\n        top: 46.5%; \r\n        position: absolute;\">\r\n    </mat-spinner> -->\r\n\r\n    <div @rowHighlight *ngIf=\"debitos.length > 0\" class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n            position: relative;\r\n            margin-top: 50px;\r\n            box-shadow: 0 0 1em rgb(172, 170, 170);\r\n            background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Cursos</h4>\r\n            <p class=\"card-category\"> Entradas no período oriundo de cursos: </p>\r\n            <span>Total no período: {{totalVendas  | currency:'BRL':true:'1.2-2' }}  </span>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%;font-size: 0.8em; \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 35%;font-size:0.8em;\r\n                                    vertical-align: middle;\r\n                                    text-align:left;\r\n                    border-top: 0px; font-weight: 400;\">Origem</th>\r\n\r\n                            <th style=\"width: 15%;font-size:0.8em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">Data<br>pagamento</th>\r\n\r\n                            <th style=\"width: 15%;font-size:0.8em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Valor</th>\r\n\r\n                            <th style=\"width: 11%;font-size:0.8em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Meio<br>pagamento</th>\r\n\r\n                            <th style=\"width: 1%;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 21%;\r\n                    border-top: 0px;\">\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of debitos;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{i + 1}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">\r\n                                {{item.descricao }}\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                {{item.dataPagamento | date:'d/M/y'}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                            {{item.valorPago | currency:'BRL':true:'1.2-2'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                                {{ item.meioPagamento }}\r\n                                <!-- <div *ngIf=\"item.ativo == true;else inativo\">\r\n\r\n                                    <mat-icon style=\"margin: 0px; margin: 0px;\r\n                                        background-color: rgb(227, 240, 227);;color: green;\" style=\"color: green;\">\r\n                                        done_outline</mat-icon>\r\n                                    \r\n\r\n                                </div>\r\n                                <ng-template #inativo>\r\n\r\n                                    <mat-icon style=\"background-color: rgb(227, 240, 227);\r\n                                            margin: 0px; margin: 0px;color: red; \">close</mat-icon>\r\n\r\n\r\n                                </ng-template> -->\r\n\r\n                            </td>\r\n\r\n                            <td style=\"position: relative;\">\r\n\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"openEditUserModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n                            </td>\r\n                            <td style=\"position: relative;\">\r\n\r\n                                <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"deletar\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"deleteColaborador(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>delete_outline</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <mat-paginator *ngIf=\"length > 5\" style=\"\r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" [length]=\"length\" [pageSize]=\"5\" hidePageSize=\"true\" (page)=\"pageEvent = $event\"\r\n                (click)=\"changePage(pageEvent)\">\r\n            </mat-paginator>\r\n\r\n        </div>\r\n\r\n        <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n            top: 46.5%; \r\n            position: absolute;\">\r\n        </mat-spinner>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n//import { GenericTask } from 'src/app/shared/models/generictask.model';\r\nimport { Output, EventEmitter } from '@angular/core';\r\n//import { AdmService } from '../../adm.service';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { Perfil, Perfis } from \"src/app/_shared/models/perfil.model\";\r\nimport { Form, FormBuilder, FormGroup, NgForm } from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { AdmService } from \"../../services/adm.services\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'editusermodal',\r\n    templateUrl: './edituser.component.html',\r\n    styleUrls: ['./edituser.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class EditUserComponent implements OnInit {\r\n\r\n    // pageSize: number = 5;\r\n    // genericTasks: GenericTask[] = new Array<GenericTask>();\r\n    // length: number;\r\n    // pageEvent: PageEvent;\r\n    // private baseUrl = environment.baseUrl\r\n    public roles: string[] = new Array<string>();\r\n    public usuarioForm: FormGroup\r\n    public showContent = false\r\n    public usuario: any;// = new any();// Colaborador = new Colaborador();\r\n    public initProgressBar = 'visible'\r\n    //ativo = true;\r\n    //selected: any\r\n    //perfilAtivo: boolean = true\r\n    //isChecked = true;\r\n    // showForm = false\r\n    constructor(\r\n        // private fb: FormBuilder,\r\n        // private http: HttpClient,\r\n        private _helper: HelpersService,\r\n        private _service: AdmService,\r\n        public dialogRef: MatDialogRef<EditUserComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        // this.usuarioForm = fb.group({\r\n\r\n        // })\r\n    }\r\n\r\n    //@Output() newItemEvent = new EventEmitter<string>();\r\n\r\n\r\n    ngOnInit() {\r\n        //  this.ativo = true;\r\n\r\n        this.usuario = Object.assign({}, this.data['colaborador'])\r\n        //this.getTasks(1, this.pageSize);\r\n        //this.selected = this.usuario.perfil\r\n        //this.perfilAtivo = this.usuario.perfilAtivo\r\n\r\n        //this.isChecked = this.usuario.perfilAtivo\r\n\r\n        this.getSystemRoles()\r\n    }\r\n\r\n    getSystemRoles() {\r\n\r\n        this._service.getSystemRoles()\r\n            .subscribe(\r\n                sucesso => { this.getSystemRolesSuccess(sucesso) },\r\n                falha => { this.getSystemRolesError(falha) }\r\n            )\r\n    }\r\n\r\n    getSystemRolesSuccess(resposta) {\r\n        this.roles = resposta['roles']\r\n        this.initProgressBar = 'hidden'\r\n        this.showContent = true\r\n\r\n    }\r\n\r\n    getSystemRolesError(error) {\r\n        this.initProgressBar = 'hidden'\r\n        this._helper.openSnackBarErrorDefault();\r\n    }\r\n\r\n\r\n    submitForm(form: NgForm) {\r\n        console.log(form.value)\r\n        this.usuario.perfilAtivo = form.value['perfilAtivo']\r\n        this.usuario.perfil = form.value['perfil']\r\n        console.log(this.usuario)\r\n\r\n        this._service.editUsuario(this.usuario)\r\n            .subscribe(\r\n                sucesso => { this.submitFormSucesso() },\r\n                falha => { this.submitFormErro(falha) }\r\n            )\r\n    }\r\n\r\n    submitFormSucesso() {\r\n        this._helper.openSnackBarSucesso('Acesso editado com sucesso.')\r\n        this.dialogRef.close({ clicked: true })\r\n    }\r\n\r\n    submitFormErro(error) {\r\n        this._helper.openSnackBarErrorDefault();\r\n    }\r\n\r\n}","<div style=\"font-size: 1.2em;\">Editar usuário\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<div *ngIf=\"showContent\" @rowHighlight>\r\n    <hr>\r\n\r\n    <form novalidate #form=\"ngForm\" (ngSubmit)=\"submitForm(form)\" >\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 45%; \">\r\n            <mat-label>Nome</mat-label>\r\n            <input disabled [(ngModel)]=\"usuario.nome\" selected name=\"nome\" matInput placeholder=\"Nome\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 45%;margin-left: 10%;\">\r\n            <mat-label>Email</mat-label>\r\n            <input disabled [(ngModel)]=\"usuario.email\" value=\"alvaro@gmail.com.br\" name=\"templateName\" matInput\r\n                placeholder=\"Email\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 45%;\">\r\n            <mat-label>Perfil</mat-label>\r\n            <mat-select matNativeControl [(ngModel)]=\"usuario.roleName\" name=\"roleName\">\r\n                <mat-option *ngFor=\"let item of roles\" [value]=\"item\">\r\n                    {{item}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-slide-toggle *ngIf=\"usuario != null\" style=\"width: 30%; margin-left: 10%;\" class=\"autoPagination-slide\"\r\n            #tooltip=\"matTooltip\" [(ngModel)]=\"usuario.ativo\" name=\"perfilAtivo\" [required]=\"false\"\r\n            matTooltip=\"ativo/inativo\" matTooltipPosition=\"above\" matTooltipHideDelay=\"250\" color=\"primary\">\r\n        </mat-slide-toggle>\r\n\r\n        <br>\r\n\r\n        <button color=\"primary\" mat-raised-button disabled=\"false\"\r\n            style=\"float:right;margin-bottom: 10px; margin-left: 10px;\">\r\n            Salvar</button>\r\n\r\n    </form>\r\n\r\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { PageEvent } from \"@angular/material/paginator\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Parametros } from \"src/app/Adm/colaboradores/colaboradores.component\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n@Component({\r\n    selector: \"pedag-alunos-app\",\r\n    templateUrl: './pedag-alunos.component.html',\r\n    styleUrls: ['./pedag-alunos.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class PedagAlunosComponent implements OnInit {\r\n\r\n\r\n    // colaboradores: Colaborador[] = new Array<Colaborador>();\r\n    baseUrl = environment.baseUrl;\r\n    // length: number;\r\n    // pageSize: number = 5;\r\n    // pageEvent: PageEvent;\r\n    // pageIndexNumber: number = 0;\r\n    // formSubmitted: boolean = false;\r\n    // showTable: boolean = false;\r\n    // paginationInfo: IPager;\r\n    // showMessage: boolean = false;\r\n    \r\n    listAlunos: Aluno[] = new Array<Aluno>();\r\n\r\n    constructor(\r\n        private _snackBar: MatSnackBar,\r\n        private CreateMatriculaModal: MatDialog,\r\n        private http: HttpClient,\r\n        //private CreateColaboradoresModal: MatDialog,\r\n        //private EditColaboradoresModal: MatDialog\r\n    ) { }\r\n    ngOnInit() {\r\n        console.log('init matricula')\r\n        //this.getColaboradores(1, this.pageSize);\r\n    }\r\n    // pageIndex = 0\r\n    \r\n\r\n    getColaboradores(actualPage: number, pageSize: number) {\r\n\r\n    }\r\n\r\n    clicar(evento: any) {\r\n\r\n    }\r\n\r\n    paginationChange(pageEvt: PageEvent) {\r\n        console.log(pageEvt)\r\n\r\n    }\r\n\r\n\r\n    params: Parametros = new Parametros()\r\n    pesquisar(nome: string, email: string, cpf: string) {\r\n\r\n        console.log(nome + \" \" + email + \" \" + cpf)\r\n        if (nome == \"\" || nome == undefined) nome = \"\"\r\n        if (email == \"\" || email == undefined) email = \"\"\r\n        if (cpf == \"\" || cpf == undefined) cpf = \"\"\r\n\r\n        if ((nome == \"\" || nome == undefined) &&\r\n            (email == \"\" || email == undefined) &&\r\n            (cpf == \"\" || cpf == undefined)) {\r\n            console.log(\"retorno\")\r\n            return;\r\n        }\r\n\r\n        this.http.get(`${this.baseUrl}/matricula/alunos/?query={\"nome\":\"${nome}\",\"email\":\"${email}\",\"cpf\":\"${cpf}\"}`)\r\n            .subscribe(\r\n                (response) => {\r\n                    console.log(response)\r\n                    this.listAlunos = Object.assign([], response)\r\n                   \r\n                },\r\n                (err) => {\r\n                    //this.showSpinnerFirst = false\r\n                    console.log(err)\r\n                    //this.openSnackBar(err)\r\n\r\n                },\r\n                () => {\r\n                    //this.showSpinnerFirst = false\r\n                    console.log('ok get');\r\n                    //this.pageIndexNumber = (evento.pageIndex * this.pageSize)\r\n                },\r\n            )\r\n\r\n    }\r\n\r\n    consulta(nome: string) {\r\n\r\n        if (nome == \"\") {\r\n            // TODO: sendo form alert: selecionar ao menos um\r\n            return;\r\n        }\r\n\r\n        this.http.get(`${this.baseUrl}/matricula/alunos/?email=&cpf=&nome=${nome}`)\r\n            .subscribe(response => {\r\n\r\n                console.log(response)\r\n                this.listAlunos = Object.assign([], response)\r\n\r\n            }, err => { console.log(err) },\r\n                () => {\r\n                   \r\n                });\r\n    }\r\n\r\n    openMatriculaModal(){\r\n    //     const dialogRef = this.CreateMatriculaModal\r\n    //     .open(AlunoMatriculaComponent, {\r\n    //         height: 'auto',\r\n    //         width: '1000px',\r\n    //         autoFocus: false,\r\n    //         maxHeight: '90vh',\r\n\r\n    //         data: { alunoId: aluno.id },\r\n    //         hasBackdrop: true,\r\n    //         disableClose: true\r\n    //     });\r\n   \r\n    // dialogRef.afterClosed().subscribe((data) => {\r\n    //     if (data.clicked === \"OK\") {\r\n    //         this.openSnackBar()\r\n    //         console.log('afte close ok')\r\n    //     } else if (data.clicked === \"Cancel\") {\r\n    //         // Do nothing. Cancel any events that navigate away from the\r\n    //         // component.\r\n    //     }\r\n    // });\r\n\r\n    }\r\n\r\n    matricular(aluno){\r\n\r\n    }\r\n\r\n    openInfoModal(aluno){\r\n        //     const dialogRef = this.CreateMatriculaModal\r\n        //     .open(AlunoMatriculaComponent, {\r\n        //         height: 'auto',\r\n        //         width: '1000px',\r\n        //         autoFocus: false,\r\n        //         maxHeight: '90vh',\r\n    \r\n        //         data: { alunoId: aluno.id },\r\n        //         hasBackdrop: true,\r\n        //         disableClose: true\r\n        //     });\r\n       \r\n        // dialogRef.afterClosed().subscribe((data) => {\r\n        //     if (data.clicked === \"OK\") {\r\n        //         this.openSnackBar()\r\n        //         console.log('afte close ok')\r\n        //     } else if (data.clicked === \"Cancel\") {\r\n        //         // Do nothing. Cancel any events that navigate away from the\r\n        //         // component.\r\n        //     }\r\n        // });\r\n    \r\n        }\r\n    \r\n\r\n    \r\n    \r\n\r\n}\r\n\r\n\r\nexport interface IPager {\r\n    itemsPerPage?: number;\r\n    totalItemsInDatabase?: number;\r\n    currentPage?: number;\r\n    totalPages?: number;\r\n    items?: number;\r\n}\r\n\r\nfunction InfoComponent(InfoComponent: any, arg1: { height: string; width: string; autoFocus: false; maxHeight: string; data: { Hello: string; }; hasBackdrop: true; disableClose: true; }) {\r\n    throw new Error(\"Function not implemented.\");\r\n}\r\n","<div class=\"container\" style=\"width: 95%;padding-top: 20px;\">\r\n\r\n    <div>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"cadastrar/matricular\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button style=\"\" (click)=\"openMatriculaModal()\" mat-icon-button>\r\n                <mat-icon>person_add_alt</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n    <!-- <button type=\"submit\" class=\"bg-success\" (click)=\"openMatriculaModal()\" mat-raised-button disabled=\"false\"\r\n        style=\"margin-top: 20px;\">\r\n        cadastrar/matricular aluno\r\n    </button> -->\r\n    <br>\r\n    <form class=\"form-inline siteForm\" style=\"margin-top: 5px;display: inline-block\">\r\n        <span style=\"margin-left: 10px;font-size: 0.9em;font-style: italic;\">Digite ao menos um dos campos para\r\n            pesquisar pelo aluno:</span>\r\n        <div class=\"form-row align-items-center divSiteForm\">\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"transform: scale(0.85);\">\r\n                <mat-label>Nome</mat-label>\r\n                <input #nome selected name=\"templateName\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"margin-left: 2px;transform: scale(0.85);\">\r\n                <mat-label>E-mail</mat-label>\r\n                <input #email selected name=\"templateName\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"margin-left: 2px;transform: scale(0.85);\">\r\n                <mat-label>CPF</mat-label>\r\n                <input #cpf selected name=\"templateName\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button style=\"\"  (click)=\"pesquisar(nome.value, email.value,cpf.value)\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n\r\n\r\n    <div *ngIf=\"listAlunos.length > 0\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n        margin-top: 10px;\r\n        box-shadow: 0 0 1em rgb(172, 170, 170);\r\n        background-color: rgb(227, 240, 227);\">\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Alunos</h4>\r\n            <p class=\"card-category\">Alunos localizados no cadastro (Unidade todo?)</p>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n                <table @rowHighlight color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                text-align:left; \r\n                vertical-align: middle;\r\n                border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 40%;font-size:1.2em;\r\n                                vertical-align: middle;\r\n                                text-align:left;\r\n                border-top: 0px; font-weight: 400;\">Nome</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1.2em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">CPF</th>\r\n\r\n                            <!-- <th style=\"width: 20%;font-size:1.2em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">Unidade</th> -->\r\n\r\n                            <th style=\"width: 38%;font-size:1.2em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\"></th>\r\n\r\n                            <!-- <th style=\"width: 6%;\r\n                border-top: 0px;\"></th> -->\r\n\r\n                            <!-- <th style=\"width: 6%;\r\n                border-top: 0px;\">\r\n                            \r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"criar usuário\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button \r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>plus_one</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                        </th> -->\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let item of listAlunos;let i = index;\">\r\n                            <td style=\"text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.cpf}}</td>\r\n\r\n                            <!-- <td style=\"text-align: center;vertical-align: middle;\">todo: matriculado?</td> -->\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"informações cadastrais\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openInfoModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>search</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"pedagógico\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openInfoModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>school</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"matricular aluno em uma turma\" matTooltipPosition=\"above\"\r\n                                    matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"matricular(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>read_more</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n                                <!-- <i *ngIf=\"item.perfilAtivo == true;else undone\" style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"ativo\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button\r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;color: green;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>done_outline</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                            <ng-template #undone>\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"ativo\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button\r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;color: red;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>close</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                            </ng-template> -->\r\n\r\n                            </td>\r\n\r\n                            <!-- <td style=\"position: relative;\">\r\n\r\n                          \r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button (click)=\"openEditUserModal(item)\"\r\n                                    style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>settings</mat-icon>\r\n                                </button>\r\n                            </i>\r\n\r\n\r\n                        </td>\r\n                        <td style=\"position: relative;\">\r\n\r\n\r\n                            <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"deletar\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button (click)=\"deleteColaborador(item.id)\" style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>delete_outline</mat-icon>\r\n                                </button>\r\n                            </i>\r\n\r\n\r\n                        </td> -->\r\n                        </tr>\r\n\r\n\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n\r\n\r\n\r\n\r\n            </div>\r\n            <!-- <mat-paginator style=\" \r\n            background-color: rgb(227, 240, 227);\r\n            bottom: 0px;\r\n            right: 0px;\" \r\n            *ngIf=\"colaboradores.length > 0\" \r\n            [length]=\"length\" \r\n            [pageSize]=\"pageSize\" \r\n            hidePageSize=\"true\"\r\n            (page)=\"pageEvent = $event\" \r\n            (click)=\"clicar(pageEvent)\"\r\n            >\r\n          </mat-paginator> -->\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- <div class=\"container\" style=\"width: 95%;\">\r\n    <button type=\"submit\" class=\"bg-success\" (click)=\"openMatriculaModal()\" mat-raised-button disabled=\"false\"\r\n        style=\"margin-top: 20px;\">\r\n        cadastrar/matricular aluno\r\n    </button>\r\n\r\n    <form class=\"form-inline siteForm\" style=\"margin-top: 20px;\">\r\n\r\n        <div class=\"form-row align-items-center divSiteForm\">\r\n            <span style=\"font-size: 1.2em;\">Pesquise o aluno</span>\r\n            <br>\r\n            <hr>\r\n\r\n            <mat-form-field appearance=\"standard\" style=\"transform: scale(0.85);\">\r\n                <mat-label>Nome</mat-label>\r\n                <input #nome selected name=\"templateName\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n\r\n            <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                matTooltipHideDelay=\"100\">\r\n                <button (click)=\"consulta(nome.value)\" style=\"\" mat-icon-button>\r\n                    <mat-icon>search</mat-icon>\r\n                </button>\r\n            </i>\r\n          \r\n\r\n        </div>\r\n\r\n    </form> -->\r\n\r\n\r\n\r\n<!-- <form class=\"form-inline siteForm\" #form=\"ngForm\" (ngSubmit)=\"submitForm(param1, param2)\">\r\n\r\n    <div class=\"form-row align-items-center divSiteForm\">\r\n\r\n        <mat-form-field class=\"siteForm-select\">\r\n            <mat-label>Localidade</mat-label>\r\n            <mat-select #param1 name=\"site\"  ngModel required>\r\n                <mat-option></mat-option>\r\n                <mat-option  *ngFor=\"let site of sites\" [value]=\"site\">\r\n                    {{site.descricaoCompleta}}\r\n                </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"sitecontrol.hasError('required')\">Escolha a localidade</mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"siteForm-selectRange\">\r\n            <mat-label>Range de horas</mat-label>\r\n            <mat-select #param2 name=\"range\" [(ngModel)]=\"defaultRange\" required>\r\n                <mat-option  [value]=\"item.value\" *ngFor=\"let item of range\">{{item.viewValue }}</mat-option>\r\n            </mat-select>\r\n            <mat-error>Range de horas</mat-error>\r\n        </mat-form-field>\r\n\r\n        <div class=\"siteForm-search\">\r\n            <button mat-icon-button color=\"accent\">\r\n                <mat-icon color=\"primary\">search</mat-icon>\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</form> -->\r\n\r\n\r\n\r\n<!-- <div class=\"row justify-content-center\">\r\n        <div class=\"col\"> -->","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\n\r\n\r\n@Component({\r\n    selector: 'add-anotacaomodal',\r\n    templateUrl: './add-anotacao.component.html',\r\n    styleUrls: ['./add-anotacao.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class AddAnotacaoComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    public comentario: string\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<AddAnotacaoComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n\r\n    saveComent(comentForm: any) {\r\n\r\n        if (comentForm.valid) {\r\n\r\n            this.dialogRef.close({ clicked: \"OK\", comentario: this.comentario });\r\n\r\n        }\r\n    }\r\n\r\n}","<div style=\"font-size: 1em;\">Adicionar Comentário\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<hr>\r\n<div style=\"\">\r\n\r\n    <form @rowHighlight novalidate #comentForm=\"ngForm\" (ngSubmit)=\"saveComent(comentForm)\">\r\n\r\n\r\n        <div>\r\n            <mat-form-field style=\"width: 100%\" appearance=\"outline\">\r\n                <mat-label>Anotações</mat-label>\r\n                <textarea maxlength=\"400\" style=\"height: 100px;\" [(ngModel)]=\"comentario\" required name=\"comentario\"\r\n                    matInput></textarea>\r\n            </mat-form-field>\r\n\r\n         \r\n        </div>\r\n\r\n        <div style=\"margin-top: 20px; bottom: 0px;right:0px; float: right;\">\r\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"!comentForm.valid\">\r\n                Salvar\r\n            </button>\r\n        </div>\r\n\r\n    </form>\r\n\r\n\r\n</div>","import { Component, Inject, Input, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'confirmmodal',\r\n    templateUrl: './confirm.component.html'\r\n   //; styleUrls: ['./confirm.component.scss']\r\n})\r\n\r\nexport class ConfirmModalComponent implements OnInit {\r\n\r\n      constructor(\r\n        //private service: AdmService,\r\n        private CreateMatriculaModal: MatDialog,\r\n        private router: Router,\r\n        \r\n        public dialogRef: MatDialogRef<ConfirmModalComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n       \r\n    }\r\n\r\n  \r\n\r\n    ngOnInit() {\r\n        // console.log(\"on init\")\r\n        //this.getTasks(1, this.pageSize);\r\n        //this.colaboradorForm.get('logradouro').disable()\r\n        \r\n    }\r\n\r\n\r\n    \r\n\r\n    onOkClick() {\r\n        //console.log(\"I do nothing\");\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n}","<div class=\"container\">\r\n\r\n  <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n      <!-- <mat-card class=\"example-card\">\r\n      <mat-card-header> -->\r\n      <!-- <div mat-card-avatar class=\"example-header-image\"></div> -->\r\n      <div style=\"font-size: 1.2em;\">Cadastro realizado com sucesso!</div>\r\n      <!-- <mat-card-subtitle>Dog Breed</mat-card-subtitle> -->\r\n\r\n      <div >\r\n          Deseja matricular o aluno em alguma turma?\r\n      </div>\r\n\r\n  </div>\r\n  <div class=\"row\">\r\n      <button style=\"width: 30px;\" [mat-dialog-close]=\"{clicked:'Sim'}\" mat-button>SIM</button>\r\n      <button style=\"width: 30px;\" [mat-dialog-close]=\"{clicked:'Cancel'}\" mat-button>NÃO</button>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdmComponent } from './Adm/adm.component';\nimport { ProdutosComponent } from './Adm/produtos/produtos.component';\nimport { ProfessoresComponent } from './Adm/professores/professores.component';\nimport { UnidadesComponent } from './Adm/unidades/unidades.component';\nimport { PedagogicoComponent } from './Pedagogico/pedagogico.component';\nimport { UsuarioComponent } from './Adm/usuarios/usuario.component';\nimport { ColaboradoresComponent } from './Adm/colaboradores/colaboradores.component';\nimport { ComercialComponent } from './Comercial/comercial.component';\nimport { UserComponent } from './_Auth/user/user.component';\nimport { LoginComponent } from './_Auth/user/login/login.component';\nimport { AuthGuard } from './_Auth/auth.guard';\nimport { MatriculaComponent } from './Pedagogico/Matricula/matricula.component';\nimport { TestesComponent } from './Adm/testes/teste.component';\nimport { TurmasComponent } from './Pedagogico/turmapedag/turmas.component';\nimport { TransferenciaComponent } from './Pedagogico/Transferencia/transferencia.component';\nimport { TestandoComponent } from './Adm/testando/testando.component';\nimport { AdmTurmasComponent } from './Adm/turmas/admturmas.component';\nimport { AlunoComponent } from './Aluno/aluno.component';\nimport { AlunoEstagioComponent } from './Aluno/alunoestagios/alunoest.component';\nimport { ConfiguracoesComponent } from './Adm/configuracoes/configuracoes.component';\nimport { FinanceiroComponent } from './Financeiro/financeiro.component';\nimport { AlunoFinancComponent } from './Financeiro/alunos/alunofinanc.component';\nimport { BalancoComponent } from './Financeiro/balanco/balanco.component';\nimport { NewMatriculaComponent } from './NewMatricula/newmatricula.component';\nimport { FinCaixaComponent } from './Financeiro/caixa/fincaixa.component';\nimport { FornecedoresComponent } from './Financeiro/fornecedores/fornecedores.component';\nimport { FinRelatorioComponent } from './Financeiro/relatorio/fin-relatorio.component';\nimport { PedagAlunosComponent } from './Pedagogico/pedag-alunos/pedag-alunos.component';\nimport { ModuloComponent } from './Adm/modulos/modulo.component';\nimport { UnidadeBalancoComponent } from './Financeiro/unidadebalanco/unidadebalanco.component';\nimport { PlanoPgmComponent } from './Adm/planos/planopgm.component';\nimport { ContratoComponent } from './Adm/contratos/contrato.component';\nimport { PedagRelatorioComponent } from './Pedagogico/relatorios/pedagrelatorio.component';\nimport { AlunoDocsComponent } from './Aluno/alunodocs/alunodocs.component';\nimport { TurmasPedagInfoComponent } from './Pedagogico/turmasInfos/turmasinfopedag.component';\nimport { ReposicoesComponent } from './Pedagogico/reposicoes/reposicoes.component';\nimport { NovaMatriculaComponent } from './NewMatricula/NovaMatricula/novamatricula.component';\nimport { AnaliseDocsComponent } from './Pedagogico/analise-docs/analisedocs.component';\nimport { GeralComponent } from './Geral/geral.component';\nimport { EstagiosDocsComponent } from './Pedagogico/estagiosdocs/estagiosdocs.component';\nimport { EstagioComponent } from './Pedagogico/estagios/estagio.component';\nimport { PDFTesteComponent } from './Adm/PdfTeste/pdfteste.component';\nimport { HomeComponent } from './_shared/home/home.component';\nimport { BolsasComponent } from './Adm/bolsascursos/bolsas.component';\n\nimport { LeadsComponent } from './Comercial/Leads/leads.component';\nimport { AlunoAcessoComponent } from './Pedagogico/AlunosAcesso/aluno-acesso.component';\n\nexport const routes: Routes = [\n  {\n    path: 'user', component: UserComponent,\n    children: [\n      { path: 'login', component: LoginComponent }\n    ]\n  },\n  {\n    path: 'adm', component: AdmComponent, canActivate: [AuthGuard],\n    children: [\n      { path: 'usuarios', component: UsuarioComponent, canActivate: [AuthGuard] },\n      { path: 'unidades', component: UnidadesComponent, canActivate: [AuthGuard] },\n      { path: 'professores', component: ProfessoresComponent, canActivate: [AuthGuard] },\n      { path: 'produtos', component: ProdutosComponent, canActivate: [AuthGuard] },\n      { path: 'admcursos', component: AdmTurmasComponent, canActivate: [AuthGuard] },      \n      { path: 'colaboradores', component: ColaboradoresComponent, canActivate: [AuthGuard] },\n      { path: 'teste', component: TestesComponent, canActivate: [AuthGuard] },\n      { path: 'testando', component: TestandoComponent, canActivate: [AuthGuard] },\n      { path: 'config', component: ConfiguracoesComponent, canActivate: [AuthGuard] },\n      { path: 'modulo', component:ModuloComponent, canActivate: [AuthGuard] },\n      { path: 'contrato', component:ContratoComponent, canActivate: [AuthGuard] },\n      { path: 'bolsas', component:BolsasComponent, canActivate: [AuthGuard] },\n      { path: 'planopgm', component:PlanoPgmComponent, canActivate: [AuthGuard] },\n      { path: 'pdf', component:PDFTesteComponent, canActivate: [AuthGuard] }\n    ]\n  },\n  {\n    path: 'newmat', component: NewMatriculaComponent, canActivate: [AuthGuard],\n    children: [\n      { path: 'novamatricula', component: NovaMatriculaComponent, canActivate: [AuthGuard] }\n    ]\n  },  \n  {\n    path: 'pedag', component: PedagogicoComponent, canActivate: [AuthGuard],\n    children: [\n      { path: 'matricula', component: MatriculaComponent, canActivate: [AuthGuard] },\n      { path: 'pedagalunos', component: PedagAlunosComponent, canActivate: [AuthGuard] },\n      { path: 'transf', component: TransferenciaComponent, canActivate: [AuthGuard] },\n      { path: 'turmas', component: TurmasComponent, canActivate: [AuthGuard] },\n      { path: 'pedagrel', component: PedagRelatorioComponent, canActivate: [AuthGuard] },\n      { path: 'config', component: EstagioComponent, canActivate: [AuthGuard] },\n      { path: 'turmasinfo', component:  TurmasPedagInfoComponent, canActivate: [AuthGuard] },\n      { path: 'reposicoes', component:  ReposicoesComponent, canActivate: [AuthGuard] },\n      { path: 'analisedocs', component:  AnaliseDocsComponent, canActivate: [AuthGuard] },\n      { path: 'estagiosdoc', component:  EstagiosDocsComponent, canActivate: [AuthGuard] },\n      { path: 'alunoacesso', component:  AlunoAcessoComponent, canActivate: [AuthGuard] }\n    ]\n  },\n  {\n    path: 'aluno', component: AlunoComponent, canActivate: [AuthGuard],\n    children: [\n      { path: 'estagio', component: AlunoEstagioComponent, canActivate: [AuthGuard] },\n      { path: 'alunodocs', component: AlunoDocsComponent, canActivate: [AuthGuard] }\n    ]\n  },\n  {\n    path: 'financeiro', component: FinanceiroComponent, canActivate: [AuthGuard],\n    children: [\n      { path: 'alunofin', component: AlunoFinancComponent, canActivate: [AuthGuard] },\n      { path: 'balanco', component: BalancoComponent, canActivate: [AuthGuard] },\n      { path: 'unidadebalanco', component: UnidadeBalancoComponent, canActivate: [AuthGuard] },\n      { path: 'fincaixa', component: FinCaixaComponent, canActivate: [AuthGuard] },\n      { path: 'fornecedor', component: FornecedoresComponent, canActivate: [AuthGuard] },\n      { path: 'relatorio', component: FinRelatorioComponent, canActivate: [AuthGuard] }\n    ]\n  },\n  {\n    path: 'geral', component: GeralComponent, canActivate: [AuthGuard],\n    children: [\n    ]\n  },\n  \n  {\n    path: 'home', component: HomeComponent, canActivate: [AuthGuard],\n    children: [\n    ]\n  },\n  {\n    path: 'comercial', component: ComercialComponent, canActivate: [AuthGuard],\n    children: [\n    //  { path: 'addlead', component: AddLeadComponent, canActivate: [AuthGuard] },\n      { path: 'leads', component: LeadsComponent, canActivate: [AuthGuard] }\n    ]\n  },\n  { path: '', redirectTo: 'adm', pathMatch: 'full' },\n  { path: '**', redirectTo: 'adm', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: false })],\n  exports: [RouterModule]\n})\n\n\n\nexport class AppRoutingModule { }\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { Produto } from \"src/app/_shared/models/produto.model\";\r\n\r\n@Component({\r\n    selector: 'vendapesquisamodal',\r\n    templateUrl: './venda-pesquisa.component.html',\r\n    styleUrls: ['./venda-pesquisa.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class VendaPesquisaComponent implements OnInit {\r\n\r\n   \r\n    private baseUrl = environment.baseUrl;\r\n    public produtos: Produto[] = new Array<Produto>();\r\n    constructor(\r\n        private http: HttpClient,\r\n        public dialogRef: MatDialogRef<VendaPesquisaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        \r\n    }\r\n\r\n    ngOnInit() {\r\n        \r\n        this.produtos = Object.assign([], this.data[\"produtos\"])\r\n        console.log(this.produtos)\r\n    }   \r\n   \r\n\r\n    onSubmit(form: FormGroup) {\r\n        \r\n    }\r\n\r\n    fechar() {\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n    addProductToList(produto: Produto){\r\n        this.dialogRef.close({ clicked: \"Ok-ADD\", \r\n        produto: produto});\r\n    }\r\n\r\n    \r\n}","<div style=\"font-size: 1.2em;\">Caixa\r\n\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button (click)=\"fechar()\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<hr>\r\n\r\n<div class=\"table-responsive\" style=\"position: relative;\">\r\n\r\n\r\n    <table style=\"margin-bottom: 0px;\" class=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th style=\"text-align: left;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Nome</th>\r\n\r\n                <th style=\"text-align: left;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Descrição</th>\r\n\r\n                <th style=\"text-align: center;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Preço</th>\r\n                <th style=\"width: 10%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">Observações</th>\r\n                <th style=\"width: 10%;font-size:0.8em;font-weight: 400;\r\n                 border-top: 0px;\"></th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            <tr *ngFor=\"let prod of produtos\">\r\n                <td style=\"text-align: left;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">{{prod.nome}}</td>\r\n\r\n                <td style=\"text-align: left;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">{{prod.descricao}}</td>\r\n\r\n                <td style=\"text-align: center;width: 30%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">{{prod.preco | currency:'BRL':true:'1.2-2'}}</td>\r\n\r\n                <td style=\"width: 10%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">{{prod.observacoes}}</td>\r\n\r\n                <td style=\"width: 10%;font-size:0.8em;font-weight: 400;\r\n                border-top: 0px;\">\r\n                    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"adicionar\"\r\n                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <button (click)=\"addProductToList(prod)\" style=\"\" mat-icon-button>\r\n                            <mat-icon>add</mat-icon>\r\n                        </button>\r\n                    </i>\r\n                </td>\r\n            </tr>\r\n\r\n        </tbody>\r\n\r\n\r\n\r\n    </table>\r\n\r\n\r\n</div>\r\n\r\n<!-- \r\n\r\n<mat-form-field style=\"width: 21%; margin-bottom: 10px; \r\n    transform: scale(0.85);\" appearance=\"outline\">\r\n    <mat-label>Código do Produto</mat-label>\r\n    <input [value]=\"\" matInput>\r\n</mat-form-field>\r\n\r\n<mat-form-field style=\"width: 21%; margin-bottom: 10px; \r\n    transform: scale(0.85);\" appearance=\"outline\">\r\n    <mat-label>Nome</mat-label>\r\n    <input [value]=\"\" matInput>\r\n</mat-form-field>\r\n\r\n<mat-form-field style=\"width: 21%; margin-bottom: 10px; \r\n    transform: scale(0.85);\" appearance=\"outline\">\r\n    <mat-label>Descricao</mat-label>\r\n    <input [value]=\"\" matInput>\r\n</mat-form-field>\r\n\r\n<mat-form-field style=\"width: 21%; margin-bottom: 10px; \r\n    transform: scale(0.85);\" appearance=\"outline\">\r\n    <mat-label>Preco</mat-label>\r\n    <input [value]=\"\" matInput>\r\n</mat-form-field>\r\n\r\n<mat-form-field style=\"width: 21%; margin-bottom: 10px; \r\n    transform: scale(0.85);\" appearance=\"outline\">\r\n    <mat-label>Observacoes</mat-label>\r\n    <input [value]=\"\" matInput>\r\n</mat-form-field> -->\r\n\r\n<!-- <hr> -->","export function OpenRelatorioMatriculaComponentModal() {\r\n    return {\r\n        height:'280px',\r\n        width: '1200px',\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Matrícula\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<hr>\r\n<span style=\"margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n    Selecione o tipo do curso:</span>\r\n\r\n<br>\r\n\r\n<mat-form-field appearance=\"standard\" style=\"width: 200px;margin-left: 10px;\">\r\n    <mat-label>Tipo do pacote</mat-label>\r\n    <mat-select [disabled]=\"typePacotes.length == 0\" selected required>\r\n        <mat-option></mat-option>\r\n        <mat-option (click)=\"pesquisarTurmas(type.id)\" *ngFor=\"let type of typePacotes\" [value]=\"type.id\">\r\n            {{type.nome}}\r\n        </mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n\r\n<mat-form-field *ngIf=\"showTurmasEncontradas\" appearance=\"standard\" style=\"width: 320px;margin-left: 10px;\">\r\n    <mat-label>Turmas Encontradas nesta unidade:</mat-label>\r\n    <mat-select selected required>\r\n        <mat-option></mat-option>\r\n        <mat-option (click)=\"buscar(turma.id)\" *ngFor=\"let turma of turmas\" [value]=\"turma.id\">\r\n            {{turma.descricao}} - {{turma.identificador}}\r\n        </mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n\r\n<div *ngIf=\"msgNoCursos\" style=\"color: red; font-size: 0.8em;\">{{mensagemNoType}}</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"hidden\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<div @rowHighlight *ngIf=\"showContent\">\r\n\r\n    <mat-tab-group class=\"alunomatricula\">\r\n\r\n        <mat-tab label=\"Aluno\">\r\n\r\n            <br>\r\n\r\n            <form style=\"\" novalidate [formGroup]=\"planoPgmAluno\">\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 140px; \">\r\n                    <mat-label>Data cadastro</mat-label>\r\n                    <input value=\"{{data['aluno'].dataCadastro | date:'dd/MM/yyyy'}}\" disabled required matInput>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 350px;margin-left: 10px;\">\r\n                    <mat-label>Responsável cadastro</mat-label>\r\n                    <input disabled value=\"{{tokenInfo.Nome}}\" required matInput>\r\n                </mat-form-field>\r\n\r\n                <br>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 350px; \">\r\n                    <mat-label>Nome completo</mat-label>\r\n                    <input [value]=\"data['aluno'].nome\" disabled required matInput>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 130px;margin-left: 10px;\">\r\n                    <mat-label>Nascimento</mat-label>\r\n                    <input disabled value=\"{{data['aluno'].nascimento  | date:'dd/MM/yyyy' }}\" required matInput>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 100px;margin-left: 10px;\">\r\n                    <mat-label>Idade</mat-label>\r\n                    <input disabled value=\"{{data['aluno'].nascimento | idade}} anos\" required matInput>\r\n                </mat-form-field>\r\n\r\n                <br>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 120px;\">\r\n                    <mat-label>CPF</mat-label>\r\n                    <input disabled [value]=\"data['aluno'].cpf\" disabled matInput>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field appearance=\"standard\" style=\"width: 120px;margin-left: 10px;\">\r\n                    <mat-label>RG</mat-label>\r\n                    <input matInput [value]=\"data['aluno'].rg\" disabled>\r\n                </mat-form-field>\r\n\r\n                <span novalidate style=\"width: 250px;margin-left: 20px;\">\r\n\r\n                    <ng-container *ngIf=\"!planoPgmAluno.get('menorIdade').value\">\r\n\r\n                        <span style=\"font-style: italic; font-size: 0.9em;\">\r\n                            Tem responsável financeiro:\r\n                            <mat-checkbox formControlName=\"temRespFin\" (change)=\"modelChanged($event)\"\r\n                                class=\"example-margin\">\r\n                            </mat-checkbox>\r\n                        </span>\r\n                    </ng-container>\r\n                </span>\r\n\r\n            </form>\r\n\r\n            <br>\r\n\r\n            <form novalidate [formGroup]=\"planoPgmAluno\">\r\n\r\n                <ng-container formGroupName=\"plano\">\r\n\r\n                    <!-- <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n                        <mat-label>Forma de conhecimento</mat-label>\r\n                        <mat-select formControlName=\"ciencia\" selected>\r\n                            <mat-option (click)=\"chanceCiencia(cie.value)\" [value]=\"cie.value\"\r\n                                *ngFor=\"let cie of cienciaCurso\">{{cie.value}}</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field *ngIf=\"showAlunosIndicacao\" appearance=\"standard\"\r\n                        style=\"width: 280px;margin-left: 10px;\">\r\n                        <mat-label>Aluno</mat-label>\r\n                        <mat-select formControlName=\"cienciaAlunoId\" selected>\r\n                            <mat-option [value]=\"aluno.id\" *ngFor=\"let aluno of alunosIndicacao\">\r\n                                {{aluno.nome}}\r\n                            </mat-option>\r\n                        </mat-select> \r\n                    </mat-form-field>-->\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n                        <mat-label>Forma de conhecimento</mat-label>\r\n                        <mat-select formControlName=\"ciencia\" selected>\r\n                            <mat-option [value]=\"cie.value\" (click)=\"chanceCiencia(cie.value)\"\r\n                                *ngFor=\"let cie of cienciaCurso\">{{cie.value}}</mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field *ngIf=\"planoPgmAluno.controls['plano'].get('ciencia').value == 'Indicação Aluno'\"\r\n                        appearance=\"standard\" style=\"width: 330px;margin-left: 10px;\">\r\n                        <mat-label>Aluno</mat-label>\r\n                        <mat-select [disabled]=\"alunosIndicacao == 0\" formControlName=\"cienciaAlunoId\" selected>\r\n                            <mat-option [value]=\"aluno.id\" *ngFor=\"let aluno of alunosIndicacao\">\r\n                                {{aluno.nome}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n\r\n                </ng-container>\r\n\r\n            </form>\r\n\r\n        </mat-tab>\r\n\r\n\r\n\r\n\r\n        <mat-tab *ngIf=\"planoPgmAluno.get('menorIdade').value\" label=\"Responsável menor\">\r\n\r\n            <form novalidate [formGroup]=\"planoPgmAluno\">\r\n\r\n                <ng-container formGroupName=\"respMenor\">\r\n\r\n                    <br>\r\n\r\n                    <span style=\"font-style: italic;font-size: 0.9em;\">\r\n                        Possui responsável financeiro: <mat-checkbox (change)=\"modelChanged($event)\"\r\n                            class=\"example-margin\">\r\n                        </mat-checkbox>\r\n                    </span>\r\n\r\n                    <br>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                        <mat-label>Nome completo</mat-label>\r\n                        <input formControlName=\"nome\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                            placeholder=\"Nome\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                        <mat-label>CPF</mat-label>\r\n                        <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                            mask=\"000.000.000-00\" formControlName=\"cpf\" minlength=\"11\" maxlength=\"14\" matInput\r\n                            placeholder=\"digite o CPF\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                        <mat-label>RG</mat-label>\r\n                        <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                            formControlName=\"rg\" matInput placeholder=\"digite o RG\">\r\n                    </mat-form-field>\r\n\r\n                    <!-- <mat-form-field appearance=\"standard\" style=\"width: 150px; margin-left: 2%;\">\r\n                        <mat-label>Nascimento</mat-label>\r\n                        <date-input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                            formControlName=\"nascimento\" matInput></date-input>\r\n                    </mat-form-field> -->\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 145px;margin-left: 2%;\">\r\n                        <mat-label>Nascimento</mat-label>\r\n                        <input matInput [matDatepicker]=\"dp1\" formControlName=\"nascimento\" >\r\n                        <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #dp1 disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field>\r\n\r\n                    <br>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 20%;\">\r\n                        <mat-label>Grau de parentesco</mat-label>\r\n                        <input formControlName=\"parentesco\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                            placeholder=\"Grau de parentesco\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n                        <mat-label>Naturalidade</mat-label>\r\n                        <input formControlName=\"naturalidade\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                            placeholder=\"Nome\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                        <mat-label>UF</mat-label>\r\n                        <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\"\r\n                            oninput=\"this.value = this.value.toUpperCase()\" minlength=\"2\" maxlength=\"2\"\r\n                            formControlName=\"naturalidadeUF\" matInput placeholder=\"UF\">\r\n                    </mat-form-field>\r\n\r\n                    <br>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input formControlName=\"email\" oninput=\"this.value = this.value.toLowerCase()\" matInput\r\n                            placeholder=\"Email\">\r\n                    </mat-form-field>\r\n\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 14%;\">\r\n                        <mat-label>Celular</mat-label>\r\n                        <input formControlName=\"telCelular\" mask=\"(00) 00000-0000\" matInput\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        <mat-hint @rowHighlight>\r\n                            informe um telefone\r\n                        </mat-hint>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 2%;\">\r\n                        <mat-label>WhatsApp</mat-label>\r\n                        <input formControlName=\"telWhatsapp\" mask=\"(00) 00000-0000\" matInput\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 2%;\">\r\n                        <mat-label>Residencial</mat-label>\r\n                        <input formControlName=\"telResidencial\" mask=\"(00) 0000-0000\" matInput\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </mat-form-field>\r\n\r\n                    <br>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 90px;\">\r\n                        <mat-label>CEP</mat-label>\r\n                        <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                            mask=\"00.000-000\" formControlName=\"cep\" minlength=\"8\" maxlength=\"10\" matInput\r\n                            placeholder=\"apenas números\">\r\n                    </mat-form-field>\r\n\r\n                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\"\r\n                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <button type=\"button\"\r\n                            (click)=\"consultaCEPRespMenor(planoPgmAluno.controls['respMenor'].get('cep').value)\"\r\n                            style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                            <mat-icon>search</mat-icon>\r\n                        </button>\r\n                    </i>\r\n\r\n\r\n                    <span [style.visibility]=\"enderecoMenor\" @rowHighlight mode=\"query\">\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 5%;\">\r\n                            <mat-label>Logradouro</mat-label>\r\n                            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"logradouro\" matInput\r\n                                placeholder=\"ex: rua tal...\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 15%;margin-left: 2%;\">\r\n                            <mat-label>Número</mat-label>\r\n                            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"numero\" matInput\r\n                                placeholder=\"123\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 2%;\">\r\n                            <mat-label>Complemento</mat-label>\r\n                            <input formControlName=\"complemento\" matInput\r\n                                oninput=\"this.value = this.value.toUpperCase()\"\r\n                                placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n                        </mat-form-field>\r\n\r\n                        <br>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                            <mat-label>Cidade</mat-label>\r\n                            <input disabled [value]=\"planoPgmAluno.controls['respMenor'].get('cidade').value\" matInput\r\n                                placeholder=\"digite o bairro\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 2%;\">\r\n                            <mat-label>UF</mat-label>\r\n                            <input disabled [value]=\"planoPgmAluno.controls['respMenor'].get('uf').value\" matInput\r\n                                placeholder=\"digite o bairro\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 2%;\">\r\n                            <mat-label>Bairro</mat-label>\r\n                            <input oninput=\"this.value = this.value.toUpperCase()\" formControlName=\"bairro\" matInput\r\n                                placeholder=\"digite o bairro\">\r\n                        </mat-form-field>\r\n                    </span>\r\n                    <br>\r\n                </ng-container>\r\n            </form>\r\n\r\n        </mat-tab>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <mat-tab *ngIf=\"planoPgmAluno.get('temRespFin').value\" label=\"Responsável financeiro\">\r\n            <!-- <mat-tab *ngIf=\"temRespFinm.get('temRespFin').value\" label=\"Responsável financeiro\"> -->\r\n\r\n            <form novalidate [formGroup]=\"planoPgmAluno\">\r\n\r\n                <ng-container formGroupName=\"respFin\">\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 35%; \">\r\n                        <mat-label>Nome completo</mat-label>\r\n                        <input formControlName=\"nome\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                            placeholder=\"Nome\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                        <mat-label>CPF</mat-label>\r\n                        <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                            mask=\"000.000.000-00\" formControlName=\"cpf\" minlength=\"11\" maxlength=\"14\" matInput\r\n                            placeholder=\"digite o CPF\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                        <mat-label>RG</mat-label>\r\n                        <input formControlName=\"rg\"\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\" matInput\r\n                            placeholder=\"digite o RG\">\r\n                    </mat-form-field>\r\n\r\n                    <!-- <mat-form-field appearance=\"standard\" style=\"width: 150px; margin-left: 5%;\">\r\n                        <mat-label>Nascimento</mat-label>\r\n                        <date-input formControlName=\"nascimento\" matInput></date-input>\r\n                    </mat-form-field> -->\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 145px;margin-left: 2%;\">\r\n                        <mat-label>Nascimento</mat-label>\r\n                        <input matInput [matDatepicker]=\"dp2\" formControlName=\"nascimento\" >\r\n                        <mat-datepicker-toggle matSuffix [for]=\"dp2\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #dp2 disabled=\"false\"></mat-datepicker>\r\n                    </mat-form-field>\r\n\r\n\r\n                    <br>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 20%;\">\r\n                        <mat-label>Grau de parentesco</mat-label>\r\n                        <input formControlName=\"parentesco\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                            placeholder=\"Grau de parentesco\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 20%; margin-left: 2%;\">\r\n                        <mat-label>Naturalidade</mat-label>\r\n                        <input formControlName=\"naturalidade\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                            placeholder=\"Nome\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 4%; margin-left: 2%;\">\r\n                        <mat-label>UF</mat-label>\r\n                        <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^A-Za-z]/g) === null\"\r\n                            oninput=\"this.value = this.value.toUpperCase()\" minlength=\"2\" maxlength=\"2\"\r\n                            formControlName=\"naturalidadeUF\" matInput placeholder=\"UF\">\r\n                    </mat-form-field>\r\n\r\n                    <br>\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 25%;\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input formControlName=\"email\" oninput=\"this.value = this.value.toLowerCase()\" matInput\r\n                            placeholder=\"Email\">\r\n                    </mat-form-field>\r\n\r\n\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 14%;\">\r\n                        <mat-label>Celular</mat-label>\r\n                        <input formControlName=\"telCelular\" mask=\"(00) 00000-0000\" matInput\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                        <mat-hint @rowHighlight>\r\n                            informe um telefone\r\n                        </mat-hint>\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 2%;\">\r\n                        <mat-label>WhatsApp</mat-label>\r\n                        <input formControlName=\"telWhatsapp\" mask=\"(00) 00000-0000\" matInput\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 17%;margin-left: 2%;\">\r\n                        <mat-label>Residencial</mat-label>\r\n                        <input formControlName=\"telResidencial\" mask=\"(00) 0000-0000\" matInput\r\n                            onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\">\r\n                    </mat-form-field>\r\n\r\n\r\n                    <br>\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 90px\">\r\n                        <mat-label>CEP</mat-label>\r\n                        <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                            mask=\"00.000-000\" formControlName=\"cep\" minlength=\"8\" maxlength=\"10\" required matInput\r\n                            placeholder=\"apenas números\">\r\n                    </mat-form-field>\r\n\r\n                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar CEP\"\r\n                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                        <button type=\"button\"\r\n                            (click)=\"consultaCEPFin(planoPgmAluno.controls['respFin'].get('cep').value)\"\r\n                            style=\"margin: 0px; margin: 0px;\" mat-icon-button>\r\n                            <mat-icon>search</mat-icon>\r\n                        </button>\r\n                    </i>\r\n\r\n                    <span [style.visibility]=\"enderecoFin\" @rowHighlight mode=\"query\">\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 25%;margin-left: 5%;\">\r\n                            <mat-label>Logradouro</mat-label>\r\n                            <input [value]=\"planoPgmAluno.controls['respFin'].get('logradouro').value\" matInput\r\n                                placeholder=\"ex: rua tal...\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 15%; margin-left: 2%;\">\r\n                            <mat-label>Número</mat-label>\r\n                            <input formControlName=\"numero\" oninput=\"this.value = this.value.toUpperCase()\" matInput\r\n                                placeholder=\"ex: rua tal...\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 2%;\">\r\n                            <mat-label>Complemento</mat-label>\r\n                            <input formControlName=\"complemento\" oninput=\"this.value = this.value.toUpperCase()\"\r\n                                matInput placeholder=\"ex: nº 123... sala 10... apto 123...\">\r\n                        </mat-form-field>\r\n                        <br>\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%;\">\r\n                            <mat-label>Cidade</mat-label>\r\n                            <input disabled [value]=\"planoPgmAluno.controls['respFin'].get('cidade').value\" matInput\r\n                                placeholder=\"digite o bairro\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 10%; margin-left: 2%;\">\r\n                            <mat-label>UF</mat-label>\r\n                            <input disabled [value]=\"planoPgmAluno.controls['respFin'].get('uf').value\" matInput\r\n                                placeholder=\"digite o bairro\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"standard\" style=\"width: 30%; margin-left: 2%;\">\r\n                            <mat-label>Bairro</mat-label>\r\n                            <input formControlName=\"bairro\" matInput placeholder=\"digite o bairro\">\r\n                        </mat-form-field>\r\n                    </span>\r\n                    <br>\r\n                </ng-container>\r\n            </form>\r\n\r\n        </mat-tab>\r\n\r\n\r\n        <mat-tab label=\"plano pagamento\">\r\n\r\n            <form novalidate [formGroup]=\"planoPgmAluno\">\r\n\r\n                <br>\r\n\r\n                <ng-container formGroupName=\"plano\">\r\n\r\n\r\n                    <mat-form-field appearance=\"standard\" style=\"width: 200px;\">\r\n                        <mat-label>Plano pagamento</mat-label>\r\n                        <mat-select [disabled]=\"spinnerBuscarPlano == 'visible' ? true:false\" selected required>\r\n                            <mat-option (click)=\"buscaPlanoPgm(plan.id)\" *ngFor=\"let plan of planosPgm\"\r\n                                [value]=\"plan.id\">\r\n                                {{plan.descricao}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n\r\n                    <mat-spinner [style.visibility]=\"spinnerBuscarPlano\" matSuffix [diameter]=\"22\"\r\n                        style=\"vertical-align: middle; display: inline-flex; margin-left: 5px;\"></mat-spinner>\r\n\r\n                    <ng-container *ngIf=\"showPlano\">\r\n\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 130px; margin-left: 15px;\">\r\n                            <mat-label>parcelas</mat-label>\r\n                            <mat-select formControlName=\"parcelas\" selected required>\r\n                                <mat-option (click)=\"CalcularParcelas()\" *ngFor=\"let parc of qntParcelas\"\r\n                                    [value]=\"parc\">{{ parc }}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n\r\n\r\n                        <!-- <mat-form-field appearance=\"outline\" style=\"width: 70px; margin-left: 15px;\">\r\n                            <mat-label>parcelas</mat-label>\r\n                            <input onkeypress=\"return String.fromCharCode(event.charCode).match(/[^0-9]/g) === null\"\r\n                                min=\"1\" formControlName=\"parcelas\" selected matInput>\r\n                        </mat-form-field> -->\r\n\r\n\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 175px;margin-left: 5px;\">\r\n                            <mat-label>Vencimentos a partir de</mat-label>\r\n                            <input  matInput [matDatepicker]=\"dp3\" \r\n                                formControlName=\"diaDefault\">\r\n                            <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n                            <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n                        </mat-form-field>\r\n\r\n                        <div style=\"float: right;\">\r\n\r\n                            <mat-form-field appearance=\"outline\" style=\"width: 120px; margin-left: 5px;\">\r\n                                <mat-label>Bolsa/Desconto?</mat-label>\r\n                                <input formControlName=\"codigoDesconto\" placeholder=\"código\" onblur=\"\"\r\n                                    selected matInput>\r\n                            </mat-form-field>\r\n\r\n                            <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"buscar\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button [disabled]=\"searchBolsaIcon\" style=\"\" type=\"button\" (click)=\"BuscarBolsa()\"\r\n                                    mat-icon-button>\r\n                                    <mat-icon>search</mat-icon>\r\n                                </button>\r\n                            </i>\r\n\r\n\r\n                            <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"retirar bolsa/desconto\"\r\n                                matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                <button type=\"button\" (click)=\"RemoverBolsa()\" mat-icon-button>\r\n                                    <mat-icon>highlight_off</mat-icon>\r\n                                </button>\r\n                            </i>\r\n                        </div>\r\n\r\n                        <br>\r\n\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 130px;\">\r\n                            <mat-label>Valor <span *ngIf=\"temBolsa\">(desconto {{percentualDesconto}}%)</span>\r\n                            </mat-label>\r\n                            <input currencyMask\r\n                                [value]=\"planoPgmAluno.controls['plano'].get('valor').value | currency:'BRL':'R$ '\"\r\n                                disabled matInput>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 130px; margin-left: 45px;\">\r\n                            <mat-label>Valor da parcela</mat-label>\r\n                            <input [value]=\"valorParcela | currency:'BRL':'R$ '\" disabled matInput>\r\n\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field appearance=\"outline\" style=\"width: 140px; margin-left: 45px;\">\r\n                            <mat-label>Bônus pontualidade</mat-label>\r\n                            <input formControlName=\"bonusPontualidade\" currencyMask\r\n                                [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" matInput placeholder=\"00,00\">\r\n                            <span matPrefix>R$&nbsp;</span>\r\n                        </mat-form-field>\r\n\r\n                        <br>\r\n\r\n                        <span style=\"font-style: italic; font-size: 0.9em;\">\r\n                            Confirmar matrícula apenas após o pagamento da primeira parcela?: <mat-checkbox disabled\r\n                                [value]=\"planoPgmAluno.controls['plano'].get('confirmacaoPagmMat').value\"\r\n                                class=\"example-margin\">\r\n                            </mat-checkbox>\r\n                        </span>\r\n                        <br>\r\n\r\n                        <div class=\"table-responsive\" style=\"margin-top: 15px;\">\r\n                            <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n\r\n                                <thead>\r\n                                    <tr>\r\n\r\n                                        <th style=\"width: 40%;font-size:0.9em;\r\n                                vertical-align: middle; \r\n                                text-align:left;\r\n                                 border-top: 0px; font-weight: 400;\">PARCELA</th>\r\n\r\n                                        <th style=\"width: 29%;font-size:0.9em;\r\n                                vertical-align: middle;\r\n                                text-align:center;\r\n                                border-top: 0px; font-weight: 400;\">VENCIMENTO</th>\r\n\r\n                                        <th style=\"width: 29%;font-size:0.9em;\r\n                                text-align:center; \r\n                                vertical-align: middle;\r\n                                border-top: 0px; font-weight: 400;\">VALOR</th>\r\n\r\n\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <ng-container formArrayName=\"infoParcelas\">\r\n                                        <tr *ngFor=\"let parc of parcelasFormArray.controls\">\r\n                                            <ng-container [formGroup]=\"parc\">\r\n                                                <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                                                    {{ parc.value.parcelaNo }}/{{ parcelasFormArray.controls.length }}\r\n                                                    <!-- {{ todasparcelas.controls.length }} MENSALIDADE -->\r\n                                                </td>\r\n\r\n                                                <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">\r\n                                                    <!-- {{ parc.vencimento | date:'dd/MM/yyyy'}} -->\r\n                                                    <!-- <div style=\"\">\r\n                                                        <input style=\"margin-right: auto;\r\n                                                    margin-left: auto;font-size:0.9em;width: 60px;\"\r\n                                                            formControlName=\"vencimento\" >\r\n                                                    </div> -->\r\n\r\n                                                    <mat-form-field class=\"datearray\" appearance=\"outline\"\r\n                                                        style=\"width: 140px;\">\r\n                                                        <!-- <mat-label>Vencimentos a partir de</mat-label> -->\r\n                                                        <input matInput [matDatepicker]=\"dp3\"\r\n                                                            formControlName=\"vencimento\" >\r\n                                                        <mat-datepicker-toggle matSuffix [for]=\"dp3\">\r\n                                                        </mat-datepicker-toggle>\r\n                                                        <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n                                                    </mat-form-field>\r\n\r\n\r\n                                                </td>\r\n\r\n                                                <td style=\"font-size:0.9em;text-align: center;vertical-align: middle;\">\r\n                                                    <!-- {{ parc.valor | currency:'BRL':'R$ '}} -->\r\n                                                    <!-- <input currencyMask [value]=\"parc.valor\"> -->\r\n                                                    <!-- <div style=\"\">\r\n                                                        <input style=\"margin-right: auto;\r\n                                                    margin-left: auto;font-size:0.9em;width: 60px;\"\r\n                                                            formControlName=\"valor\" currencyMask\r\n                                                            [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\"\r\n                                                             >\r\n                                                    </div> -->\r\n\r\n                                                    <mat-form-field class=\"datearray\" appearance=\"outline\"\r\n                                                        style=\"width: 100px;\">\r\n                                                        <!-- <mat-label>Bônus pontualidade</mat-label> -->\r\n                                                        <input formControlName=\"valor\" currencyMask\r\n                                                            [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\"\r\n                                                            matInput placeholder=\"00,00\">\r\n                                                        <span matPrefix>R$&nbsp;</span>\r\n                                                    </mat-form-field>\r\n                                                </td>\r\n                                            </ng-container>\r\n                                        </tr>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                    </ng-container>\r\n                    <br>\r\n                </ng-container>\r\n            </form>\r\n\r\n        </mat-tab>\r\n\r\n    </mat-tab-group>\r\n\r\n    <mat-progress-bar [style.visibility]=\"disabldSaveButton\" style=\"margin:0px\" mode=\"query\"></mat-progress-bar>\r\n\r\n    <span>\r\n        <form novalidate style=\"float: right;\">\r\n\r\n            <div style=\"bottom: 0; float:right;\">\r\n                <button type=\"button\" (click)=\"salvarMat()\" [disabled]=\"disabledButton\" mat-raised-button\r\n                    color=\"primary\" style=\"bottom: 0; float:right;margin-bottom: 0px;margin-left: 10px;\">\r\n                    Matricular\r\n                </button>\r\n            </div>\r\n\r\n        </form>\r\n    </span>\r\n\r\n</div>","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from \"@angular/common/http\";\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Turma, TurmaViewModel } from \"src/app/_shared/models/Turma.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { ConfirmMatriculaComponent } from \"../confirmmatricula/confirmamat.component\";\r\nimport { Observable } from \"rxjs\";\r\nimport { DiaVencimento, Parcelas } from \"src/app/_shared/models/utils.model\";\r\nimport { CienciaCurso, submitMatriculaForm } from \"../CreateModal/creatematricula.component\";\r\nimport { SpinnerParams } from \"src/app/_shared/models/spinner.model\";\r\nimport { PedagogicoService } from \"../../service/pedagogico.service\";\r\nimport { ConfirmMatriculaModalConfig } from \"../../service/modal.config\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\nexport const MeioPagamento = [\r\n    { type: 'boleto', value: 'Boleto' },\r\n    { type: 'debito', value: 'Cartão - Débito' },\r\n    { type: 'credito', value: 'Cartão - Crédito' },\r\n    { type: 'pix', value: 'Pix' },\r\n    { type: 'dinheiro', value: 'dinheiro' },\r\n]\r\n\r\n@Component({\r\n    selector: 'matriculamodal',\r\n    templateUrl: './alunomatricula.component.html',\r\n    styleUrls: ['./alunomatricula.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class AlunoMatriculaComponent implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n    public qntParcelas = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\r\n        21, 22, 23, 24, 25]\r\n    cursosDisponiveis: TurmaViewModel[] = new Array<TurmaViewModel>();\r\n    turmasParaMatricular: TurmaViewModel[] = new Array<TurmaViewModel>();\r\n    turmaSelecionada: TurmaViewModel = new TurmaViewModel();\r\n    previAtual: string\r\n    previTerminoAtual: string\r\n    cienciaCurso = CienciaCurso\r\n    showTurmas: boolean = false\r\n    showAlunosIndicacao = false\r\n    public msgNoCursos = false\r\n    //showTurmaSearch: boolean = true\r\n    showTurmaForm: boolean = false\r\n    message: string = ''\r\n    meioPagamento = MeioPagamento\r\n    diaVencimento = DiaVencimento\r\n    parcelas = Parcelas\r\n    private bolsa: any\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n\r\n    public matriculaTurmaForm: FormGroup;\r\n    public respMenor: FormGroup;\r\n    public respFinForm: FormGroup;\r\n    public temRespFinm: FormGroup;\r\n    public planoPgmAluno: FormGroup\r\n    public showSearchAlunoIndicacao = false\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _helper: HelpersService,\r\n        private http: HttpClient,\r\n        private _pedagService: PedagogicoService,\r\n        public _modal: MatDialog,\r\n        public dialogRef: MatDialogRef<AlunoMatriculaComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n        this.planoPgmAluno = _fb.group({\r\n\r\n            alunoId: ['', [Validators.required]],\r\n\r\n            turmaId: ['', [Validators.required]],\r\n\r\n            temRespFin: [false],\r\n\r\n            menorIdade: [false],\r\n\r\n            plano: _fb.group({\r\n                valor: [0.00, [Validators.required]],\r\n                taxaMatricula: [0.00, [Validators.required]],\r\n                confirmacaoPagmMat: [false, [Validators.required]],\r\n                bonusPontualidade: [0.00, [Validators.required]],\r\n                parcelas: [22, [Validators.required]],\r\n                planoId: ['', [Validators.required]],\r\n                diaDefault: [''],\r\n                codigoDesconto: [''],\r\n                bolsaId: [''],\r\n                ciencia: ['', [Validators.required]],\r\n                cienciaAlunoId: [''],\r\n                infoParcelas: _fb.array([])\r\n            }),\r\n\r\n            respMenor: _fb.group({\r\n                nome: [''],\r\n                tipo: ['Responsável menor'],\r\n                cpf: [''],\r\n                rg: [''],\r\n                nascimento: [''],\r\n                parentesco: [''],\r\n                naturalidade: [''],\r\n                naturalidadeUF: [''],\r\n                email: [''],\r\n                telCelular: [''],\r\n                telWhatsapp: [''],\r\n                telResidencial: [''],\r\n                cep: [''],\r\n                logradouro: [''],\r\n                numero: [''],\r\n                complemento: [''],\r\n                cidade: [''],\r\n                uf: [''],\r\n                bairro: ['']\r\n            }),\r\n\r\n            respFin: _fb.group({               \r\n                nome: [''],\r\n                tipo: ['Responsável financeiro'],\r\n                cpf: [''],\r\n                rg: [''],\r\n                nascimento: [''],\r\n                parentesco: [''],\r\n                naturalidade: [''],\r\n                naturalidadeUF: [''],\r\n                email: [''],\r\n                telCelular: [''],\r\n                telWhatsapp: [''],\r\n                telResidencial: [''],\r\n                cep: [''],\r\n                logradouro: [''],\r\n                numero: [''],\r\n                complemento: [''],\r\n                cidade: [''],\r\n                uf: [''],\r\n                bairro: ['']\r\n            })\r\n        })\r\n\r\n        this.planoPgmAluno.controls['plano'].valueChanges.subscribe(\r\n            (form: any) => {\r\n                if (this.planoPgmAluno.controls['plano'].get('ciencia').value == 'Indicação Aluno') {\r\n                    this.planoPgmAluno.controls['plano'].get('cienciaAlunoId').setValidators([Validators.required])\r\n                    this.planoPgmAluno.controls['plano'].get('cienciaAlunoId').updateValueAndValidity({ emitEvent: false })\r\n                } else {\r\n                    this.planoPgmAluno.controls['plano'].get('cienciaAlunoId').clearValidators()\r\n                    this.planoPgmAluno.controls['plano'].get('cienciaAlunoId').updateValueAndValidity({ emitEvent: false })\r\n                }\r\n            }\r\n        );\r\n\r\n        this.planoPgmAluno.controls['plano'].get('diaDefault').valueChanges.subscribe(\r\n            (form: any) => {              \r\n                this.CalcularParcelas()\r\n            }\r\n        );\r\n\r\n        this.planoPgmAluno.controls['respFin'].valueChanges.subscribe(\r\n            (form: any) => {\r\n                \r\n                if(this.planoPgmAluno.get('temRespFin').value == false){\r\n                    this.planoPgmAluno.controls['respFin'].get('telCelular').clearValidators()\r\n                    this.planoPgmAluno.controls['respFin'].get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    this.planoPgmAluno.controls['respFin'].get('telWhatsapp').clearValidators()\r\n                    this.planoPgmAluno.controls['respFin'].get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    this.planoPgmAluno.controls['respFin'].get('telResidencial').clearValidators()\r\n                    this.planoPgmAluno.controls['respFin'].get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    return;\r\n                }\r\n\r\n                if (this.planoPgmAluno.controls['respFin'].get('telCelular').value == '' &&\r\n                    this.planoPgmAluno.controls['respFin'].get('telWhatsapp').value == '' &&\r\n                    this.planoPgmAluno.controls['respFin'].get('telResidencial').value == '') {\r\n                  \r\n                    this.planoPgmAluno.controls['respFin'].get('telCelular').setValidators([Validators.required, Validators.minLength(11)])\r\n                    this.planoPgmAluno.controls['respFin'].get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n                    this.planoPgmAluno.controls['respFin'].get('telWhatsapp').setValidators([Validators.required, Validators.minLength(11)])\r\n                    this.planoPgmAluno.controls['respFin'].get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n                    this.planoPgmAluno.controls['respFin'].get('telResidencial').setValidators([Validators.required, Validators.minLength(10)])\r\n                    this.planoPgmAluno.controls['respFin'].get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n\r\n                } else if (this.planoPgmAluno.controls['respFin'].get('telCelular').value.length < 11 ||\r\n                    this.planoPgmAluno.controls['respFin'].get('telWhatsapp').value.length < 11 ||\r\n                    this.planoPgmAluno.controls['respFin'].get('telResidencial').value.length < 10) {\r\n                   \r\n                    if (this.planoPgmAluno.controls['respFin'].get('telCelular').value.length < 11 && this.planoPgmAluno.controls['respFin'].get('telCelular').value.length > 0) {\r\n                        this.planoPgmAluno.controls['respFin'].get('telCelular').setValidators([Validators.required, Validators.minLength(11)])\r\n                        this.planoPgmAluno.controls['respFin'].get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n                    } else {\r\n                        this.planoPgmAluno.controls['respFin'].get('telCelular').clearValidators()\r\n                        this.planoPgmAluno.controls['respFin'].get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n                    }\r\n                    if (this.planoPgmAluno.controls['respFin'].get('telWhatsapp').value.length < 11 && this.planoPgmAluno.controls['respFin'].get('telWhatsapp').value.length > 0) {\r\n                        this.planoPgmAluno.controls['respFin'].get('telWhatsapp').setValidators([Validators.required, Validators.minLength(11)])\r\n                        this.planoPgmAluno.controls['respFin'].get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n                    } else {\r\n                        this.planoPgmAluno.controls['respFin'].get('telWhatsapp').clearValidators()\r\n                        this.planoPgmAluno.controls['respFin'].get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n                    }\r\n                    if (this.planoPgmAluno.controls['respFin'].get('telResidencial').value.length < 10 && this.planoPgmAluno.controls['respFin'].get('telResidencial').value.length > 0) {\r\n                        this.planoPgmAluno.controls['respFin'].get('telResidencial').setValidators([Validators.required, Validators.minLength(10)])\r\n                        this.planoPgmAluno.controls['respFin'].get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n                    } else {\r\n                        this.planoPgmAluno.controls['respFin'].get('telResidencial').clearValidators()\r\n                        this.planoPgmAluno.controls['respFin'].get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n                    }\r\n                } else {\r\n                    this.planoPgmAluno.controls['respFin'].get('telCelular').clearValidators()\r\n                    this.planoPgmAluno.controls['respFin'].get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    this.planoPgmAluno.controls['respFin'].get('telWhatsapp').clearValidators()\r\n                    this.planoPgmAluno.controls['respFin'].get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    this.planoPgmAluno.controls['respFin'].get('telResidencial').clearValidators()\r\n                    this.planoPgmAluno.controls['respFin'].get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n                }\r\n                \r\n            }\r\n        );\r\n\r\n\r\n        this.planoPgmAluno.controls['respMenor'].valueChanges.subscribe(\r\n            (form: any) => {\r\n                \r\n                if(this.planoPgmAluno.get('temRespFin').value == false){\r\n                    this.planoPgmAluno.controls['respMenor'].get('telCelular').clearValidators()\r\n                    this.planoPgmAluno.controls['respMenor'].get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').clearValidators()\r\n                    this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    this.planoPgmAluno.controls['respMenor'].get('telResidencial').clearValidators()\r\n                    this.planoPgmAluno.controls['respMenor'].get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    return;\r\n                }\r\n\r\n                if (this.planoPgmAluno.controls['respMenor'].get('telCelular').value == '' &&\r\n                    this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').value == '' &&\r\n                    this.planoPgmAluno.controls['respMenor'].get('telResidencial').value == '') {\r\n                  \r\n                    this.planoPgmAluno.controls['respMenor'].get('telCelular').setValidators([Validators.required, Validators.minLength(11)])\r\n                    this.planoPgmAluno.controls['respMenor'].get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n                    this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').setValidators([Validators.required, Validators.minLength(11)])\r\n                    this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n                    this.planoPgmAluno.controls['respMenor'].get('telResidencial').setValidators([Validators.required, Validators.minLength(10)])\r\n                    this.planoPgmAluno.controls['respMenor'].get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n\r\n                } else if (this.planoPgmAluno.controls['respMenor'].get('telCelular').value.length < 11 ||\r\n                    this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').value.length < 11 ||\r\n                    this.planoPgmAluno.controls['respMenor'].get('telResidencial').value.length < 10) {\r\n                   \r\n                    if (this.planoPgmAluno.controls['respMenor'].get('telCelular').value.length < 11 && this.planoPgmAluno.controls['respMenor'].get('telCelular').value.length > 0) {\r\n                        this.planoPgmAluno.controls['respMenor'].get('telCelular').setValidators([Validators.required, Validators.minLength(11)])\r\n                        this.planoPgmAluno.controls['respMenor'].get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n                    } else {\r\n                        this.planoPgmAluno.controls['respMenor'].get('telCelular').clearValidators()\r\n                        this.planoPgmAluno.controls['respMenor'].get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n                    }\r\n                    if (this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').value.length < 11 && this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').value.length > 0) {\r\n                        this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').setValidators([Validators.required, Validators.minLength(11)])\r\n                        this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n                    } else {\r\n                        this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').clearValidators()\r\n                        this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n                    }\r\n                    if (this.planoPgmAluno.controls['respMenor'].get('telResidencial').value.length < 10 && this.planoPgmAluno.controls['respMenor'].get('telResidencial').value.length > 0) {\r\n                        this.planoPgmAluno.controls['respMenor'].get('telResidencial').setValidators([Validators.required, Validators.minLength(10)])\r\n                        this.planoPgmAluno.controls['respMenor'].get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n                    } else {\r\n                        this.planoPgmAluno.controls['respMenor'].get('telResidencial').clearValidators()\r\n                        this.planoPgmAluno.controls['respMenor'].get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n                    }\r\n                } else {\r\n                    this.planoPgmAluno.controls['respMenor'].get('telCelular').clearValidators()\r\n                    this.planoPgmAluno.controls['respMenor'].get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').clearValidators()\r\n                    this.planoPgmAluno.controls['respMenor'].get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n\r\n                    this.planoPgmAluno.controls['respMenor'].get('telResidencial').clearValidators()\r\n                    this.planoPgmAluno.controls['respMenor'].get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    async ngOnInit() {\r\n        // await this.angelMowersPromise\r\n        //     .then(() => this.myPaymentPromise.then(res => console.log(res)))\r\n        //     .catch(error => console.log(error))\r\n\r\n        //await this.meuAsync();\r\n        //var numero = await this.delay(4000, 1)\r\n        //console.log(numero)\r\n        this.SetInitialValues()\r\n        this.GetDefaultDay()\r\n        this.ConsultarCursos()\r\n    }\r\n\r\n    private SetInitialValues() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        this.hidden = 'visible'\r\n        this.planoPgmAluno.get('alunoId').setValue(this.data['aluno'].id)\r\n    }\r\n\r\n    public ConsultarCursos() {\r\n\r\n        this.http.get(`${this.baseUrl}/pedag/matricula/${this.data['aluno'].id}`)\r\n            .subscribe(response => {\r\n                this.typePacotes = Object.assign([], response)['types']\r\n\r\n            }, err => {\r\n                this._helper.openSnackBarErrorDefault()\r\n            },\r\n                () => {\r\n                    //this.GetDefaultDay()\r\n                    this.mostrarModalPrincipal = false\r\n                    this.showSelectedTypes = true\r\n                    this.hidden = 'hidden'\r\n                });\r\n    }\r\n\r\n    private GetDefaultDay() {\r\n\r\n        let dateNow = new Date();\r\n        let initialDate = new Date()\r\n        initialDate.setDate(10)\r\n\r\n        if (dateNow.getDate() > 10) {\r\n            initialDate.setMonth(initialDate.getMonth() + 1)\r\n        } else {\r\n\r\n        }\r\n        this.planoPgmAluno.controls['plano'].get('diaDefault').setValue(initialDate)\r\n\r\n    }\r\n\r\n    // delay(milliseconds: number, count: number): Promise<any> {\r\n      \r\n    //     for (let index = 0; index < 10000; index++) {\r\n    //         console.log(index)\r\n\r\n    //     }\r\n    //     return new Promise<number>(resolve => {\r\n    //         resolve(5)\r\n    //     });\r\n    // }\r\n\r\n    // myAsync = async (): Promise<Record<string, number | string>> => {\r\n    //     await this.angelMowersPromise\r\n    //     const response = await this.myPaymentPromise\r\n    //     return response\r\n    // }\r\n\r\n    // angelMowersPromise = new Promise<string>((resolve, reject) => {\r\n    //     // a resolved promise after certain hours\r\n    //     setTimeout(() => {\r\n    //         resolve('We finished mowing the lawn')\r\n    //     }, 1000) // resolves after 100,000ms\r\n    //     reject(\"We couldn't mow the lawn\")\r\n    // })\r\n\r\n    // myPaymentPromise = new Promise<Record<string, number | string>>((resolve, reject) => {\r\n    //     // a resolved promise with  an object of 1000 Euro payment\r\n    //     // and a thank you message\r\n    //     setTimeout(() => {\r\n    //         resolve({\r\n    //             amount: 5000,\r\n    //             note: 'Thank You',\r\n    //         })\r\n    //     }, 100000)\r\n    //     // reject with 0 Euro and an unstatisfatory note\r\n    //     reject({\r\n    //         amount: 0,\r\n    //         note: 'Sorry Lawn was not properly Mowed',\r\n    //     })\r\n    // })\r\n\r\n    pesquisarTurmas(typeId) {\r\n\r\n        this.msgNoCursos = false\r\n        this.hidden = 'visible'\r\n        this.showTurmasEncontradas = false\r\n        this.http.get(`${this.baseUrl}/turma/${typeId}`)\r\n            .subscribe(response => {\r\n                this.turmas = Object.assign([], response['turmas'])\r\n\r\n            }, err => {\r\n                this.hidden = 'hidden'\r\n                if (err['error'].status == 404) {\r\n                    this.mensagemNoType = \"Não há cursos disponíveis para este aluno.\";\r\n                    this.msgNoCursos = true\r\n                }\r\n                this.showMessageNoTypes = true\r\n            },\r\n                () => {\r\n                    this.hidden = 'hidden'\r\n                    this.showTurmasEncontradas = true\r\n\r\n                });\r\n    }\r\n\r\n    buscar(turmaId) {\r\n        this.hidden = 'visible'\r\n        this.http.get(`${this.baseUrl}/turma/get/${turmaId}/${this.data['aluno'].id}`)\r\n            .subscribe(response => {\r\n\r\n                this.turma = Object.assign({}, response['turma'])\r\n                this.planosPgm = Object.assign([], response['planos'])\r\n                this.planoPgmAluno.get('turmaId').setValue(this.turma.id)\r\n                //console.log(response['menor'])\r\n                this.planoPgmAluno.get('menorIdade').setValue(response['menor'])\r\n\r\n                if (!response['menor']) {\r\n\r\n                    Object.keys(this.planoPgmAluno.get('respMenor').value).forEach((controlName) => {\r\n                        // console.log(controlName)\r\n                        this.planoPgmAluno.controls['respMenor'].get(controlName).setValidators(null)\r\n                        this.planoPgmAluno.controls['respMenor'].get(controlName).updateValueAndValidity()\r\n                    });\r\n                }\r\n\r\n            }, err => {\r\n                this.hidden = 'hidden'\r\n                this.mensagemNoTrumas = err['error'].message\r\n                this.showMessageNoTurmas = true\r\n            },\r\n                () => {\r\n                    this.hidden = 'hidden'\r\n\r\n                    this.dialogRef.addPanelClass('myalunomat-class')\r\n                    this.showContent = true\r\n                });\r\n\r\n    }\r\n\r\n\r\n    alunosIndicacao: any[] = new Array<any>()\r\n    TrazerAlunos() {\r\n\r\n        this._pedagService.GetAlunosIndicacao()\r\n            .subscribe(\r\n                sucesso => {\r\n                    this.alunosIndicacao = sucesso['alunos']\r\n                    this.showAlunosIndicacao = true\r\n\r\n                },\r\n                falha => { }\r\n            )\r\n    }\r\n\r\n    chanceCiencia(ciencia) {\r\n\r\n        if (this.planoPgmAluno.controls['plano'].get('ciencia').value == 'Indicação Aluno') {\r\n            this.TrazerAlunos()\r\n        } else {\r\n            this.planoPgmAluno.controls['plano'].get('cienciaAlunoId').setValue('')\r\n            //this.showAlunosIndicacao = false\r\n        }\r\n    }\r\n\r\n    modelChanged(newObj) {\r\n        //console.log(newObj)\r\n        this.planoPgmAluno.get('temRespFin').setValue(newObj.checked);\r\n\r\n\r\n\r\n        if (this.planoPgmAluno.get('temRespFin').value == true) {\r\n            //console.log('tem resp fin')\r\n            this.planoPgmAluno.controls['respFin'].get('nome').setValidators([Validators.required, Validators.minLength(2)])\r\n            this.planoPgmAluno.controls['respFin'].get('nome').updateValueAndValidity({ emitEvent: false })\r\n\r\n            // this.planoPgmAluno.controls['respFin'].get('tipo').setValidators([Validators.required])\r\n            // this.planoPgmAluno.controls['respFin'].get('tipo').updateValueAndValidity({ emitEvent: false })\r\n\r\n            this.planoPgmAluno.controls['respFin'].get('cpf').setValidators([Validators.required, Validators.minLength(11)])\r\n            this.planoPgmAluno.controls['respFin'].get('cpf').updateValueAndValidity({ emitEvent: false })\r\n\r\n            this.planoPgmAluno.controls['respFin'].get('rg').setValidators([Validators.required])\r\n            this.planoPgmAluno.controls['respFin'].get('rg').updateValueAndValidity({ emitEvent: false })\r\n\r\n            this.planoPgmAluno.controls['respFin'].get('nascimento').setValidators([Validators.required])\r\n            this.planoPgmAluno.controls['respFin'].get('nascimento').updateValueAndValidity({ emitEvent: false })\r\n\r\n            this.planoPgmAluno.controls['respFin'].get('parentesco').setValidators([Validators.required])\r\n            this.planoPgmAluno.controls['respFin'].get('parentesco').updateValueAndValidity({ emitEvent: false })\r\n\r\n            this.planoPgmAluno.controls['respFin'].get('naturalidade').setValidators([Validators.required])\r\n            this.planoPgmAluno.controls['respFin'].get('naturalidade').updateValueAndValidity({ emitEvent: false })\r\n\r\n            this.planoPgmAluno.controls['respFin'].get('naturalidadeUF').setValidators([Validators.required])\r\n            this.planoPgmAluno.controls['respFin'].get('naturalidadeUF').updateValueAndValidity({ emitEvent: false })\r\n\r\n            this.planoPgmAluno.controls['respFin'].get('email').setValidators([Validators.required, Validators.minLength(5)])\r\n            this.planoPgmAluno.controls['respFin'].get('email').updateValueAndValidity({ emitEvent: false })\r\n\r\n            // this.planoPgmAluno.controls['respFin'].get('telCelular').setValidators([Validators.required])\r\n            // this.planoPgmAluno.controls['respFin'].get('telCelular').updateValueAndValidity({ emitEvent: false })\r\n\r\n            // this.planoPgmAluno.controls['respFin'].get('telWhatsapp').setValidators([Validators.required])\r\n            // this.planoPgmAluno.controls['respFin'].get('telWhatsapp').updateValueAndValidity({ emitEvent: false })\r\n\r\n            // this.planoPgmAluno.controls['respFin'].get('telResidencial').setValidators([Validators.required])\r\n            // this.planoPgmAluno.controls['respFin'].get('telResidencial').updateValueAndValidity({ emitEvent: false })\r\n\r\n            this.planoPgmAluno.controls['respFin'].get('cep').setValidators([Validators.required, Validators.minLength(8)])\r\n            this.planoPgmAluno.controls['respFin'].get('cep').updateValueAndValidity({ emitEvent: false })\r\n\r\n            this.planoPgmAluno.controls['respFin'].get('logradouro').setValidators([Validators.required])\r\n            this.planoPgmAluno.controls['respFin'].get('logradouro').updateValueAndValidity({ emitEvent: false })\r\n\r\n            this.planoPgmAluno.controls['respFin'].get('numero').setValidators([Validators.required])\r\n            this.planoPgmAluno.controls['respFin'].get('numero').updateValueAndValidity({ emitEvent: false })\r\n\r\n            // this.planoPgmAluno.controls['respFin'].get('complemento').setValidators([Validators.required])\r\n            // this.planoPgmAluno.controls['respFin'].get('complemento').updateValueAndValidity({ emitEvent: false })\r\n\r\n            this.planoPgmAluno.controls['respFin'].get('cidade').setValidators([Validators.required])\r\n            this.planoPgmAluno.controls['respFin'].get('cidade').updateValueAndValidity({ emitEvent: false })\r\n\r\n            this.planoPgmAluno.controls['respFin'].get('uf').setValidators([Validators.required])\r\n            this.planoPgmAluno.controls['respFin'].get('uf').updateValueAndValidity({ emitEvent: false })\r\n\r\n            this.planoPgmAluno.controls['respFin'].get('bairro').setValidators([Validators.required])\r\n            this.planoPgmAluno.controls['respFin'].get('bairro').updateValueAndValidity({ emitEvent: false })\r\n\r\n\r\n        } else {\r\n            //console.log('nao tem resp fin')\r\n            Object.keys(this.planoPgmAluno.get('respFin').value).forEach((controlName) => {\r\n                // console.log(controlName)\r\n                this.planoPgmAluno.controls['respFin'].get(controlName).setValidators(null)\r\n                this.planoPgmAluno.controls['respFin'].get(controlName).updateValueAndValidity()\r\n            });\r\n\r\n        }\r\n\r\n        //this.SetRespFinForm(newObj.checked)\r\n        //this.temRespFinm.get('temRespFin').setValue(newObj.checked);\r\n    }\r\n\r\n\r\n\r\n    getCursos(actualPage: number, pageSize: number) {\r\n\r\n        var itemsPerPage = 5;\r\n        var currentPage = 1;\r\n\r\n        this.http.get(`${this.baseUrl}/turmas/cursosUnidade`, {\r\n\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bear \"\r\n            })\r\n        }).subscribe(response => {\r\n\r\n\r\n            //   console.log(response)\r\n            Object.assign(this.cursosDisponiveis, response)\r\n            //console.log(this.cursosDisponiveis)\r\n        }, err => {\r\n            //console.log(err) \r\n        },\r\n            () => {\r\n\r\n                //  console.log('metodo getCursos')\r\n                if (this.cursosDisponiveis.length == 0) {\r\n                    //  this.showSelectCursoSearch = false\r\n                    this.message = 'Não turmas com vagas ou disponíveis.'\r\n                } else if (this.cursosDisponiveis.length > 0) {\r\n\r\n                }\r\n\r\n            });\r\n\r\n    }\r\n\r\n    setCienciaCurso(ciencia) {\r\n        //  console.log(this.planoPgmAluno.get('ciencia').value)\r\n    }\r\n\r\n    // // consultarCursos(item: any){\r\n    mensagemNoTrumas = \"\";\r\n    showMessageNoTurmas = false;\r\n    typePacotes: any[] = new Array<any>()\r\n    showSelectedTypes = false\r\n    showMessageNoTypes = false\r\n    mensagemNoType = \"\"\r\n    mostrarModalPrincipal = true\r\n\r\n    searchBolsaIcon = false\r\n    BuscarBolsa() {\r\n        //console.log(this.planoPgmAluno.controls['plano'].get('codigoDesconto').value)\r\n        if(this.planoPgmAluno.controls['plano'].get('codigoDesconto').value != ''){\r\n        this.searchBolsaIcon = true\r\n        if (this.planoPgmAluno.controls['plano'].get('codigoDesconto').value != null && this.planoPgmAluno.controls['plano'].get('codigoDesconto').value != '') {\r\n\r\n            this._pedagService.GetBolsa(this.planoPgmAluno.controls['plano'].get('codigoDesconto').value)\r\n                .subscribe(\r\n                    sucesso => { this.BuscaBolsaSucesso(sucesso) },\r\n                    falha => { this.BuscaBolsaErro(falha) }\r\n                )\r\n        }\r\n    }\r\n    }\r\n    percentualDesconto = 0\r\n    BuscaBolsaSucesso(resp) {\r\n        this.searchBolsaIcon = false\r\n        this.planoPgmAluno.controls['plano'].get('valor').setValue(this.valorPlanoOriginal)\r\n        this.bolsa = resp['bolsa']\r\n        this.percentualDesconto = this.bolsa.percentualDesconto\r\n        let valorTotal = this.planoPgmAluno.controls['plano'].get('valor').value\r\n\r\n        let per = (valorTotal / 100) * this.bolsa.percentualDesconto\r\n\r\n        let valorComDesconto = valorTotal - per\r\n\r\n        //console.log(valorComDesconto)\r\n\r\n        this.planoPgmAluno.controls['plano'].get('valor').setValue(valorComDesconto)\r\n        this.planoPgmAluno.controls['plano'].get('bolsaId').setValue(this.bolsa.id)\r\n        this._helper.openSnackBarSucesso(\"Bolsa aplicada.\")\r\n        this.temBolsa = true\r\n\r\n    }\r\n\r\n    BuscaBolsaErro(error) {\r\n        this.searchBolsaIcon = false\r\n        this._helper.openSnackBarError(\"Senha inválida.\")\r\n\r\n    }\r\n\r\n    get valorParcela() {\r\n\r\n        var preco = parseFloat('1000')\r\n        // var precoFloat = preco.toFixed(2)\r\n        //console.log(precoFloat)\r\n        let precofinal = preco.toFixed(2)\r\n\r\n        let parcelas = this.planoPgmAluno.controls['plano'].get('parcelas').value\r\n\r\n        let valorTotal = this.planoPgmAluno.controls['plano'].get('valor').value\r\n\r\n        let valorParcela = parseFloat(valorTotal) / parseFloat(parcelas)\r\n\r\n        let parcela = valorParcela.toFixed(2)\r\n\r\n        return parcela\r\n    }\r\n\r\n    RemoverBolsa() {\r\n        this.planoPgmAluno.controls['plano'].get('bolsaId').setValue('')\r\n        this.planoPgmAluno.controls['plano'].get('codigoDesconto').setValue('')\r\n        this.planoPgmAluno.controls['plano'].get('valor').setValue(this.valorPlanoOriginal)\r\n        this.bolsa = {}\r\n        this.temBolsa = false\r\n    }\r\n\r\n    turmas: any[] = new Array<any>()\r\n    showTurmasEncontradas = false\r\n    hidden = 'hidden'\r\n\r\n\r\n    turma: any\r\n    showMatriculaContainer = false\r\n    planos: any[]\r\n    //menorIdade = false\r\n    showContent = false\r\n\r\n\r\n    voltar() {\r\n        this.showSelectedTypes = true\r\n        this.showMatriculaContainer = false\r\n        this.respFinForm.reset()\r\n        this.respFinForm.reset()\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    enderecoFin = 'hidden'\r\n    consultaCEPFin(cep) {\r\n        // console.log(CEP);\r\n\r\n        if (this.planoPgmAluno.controls['respFin'].get('cep').valid) {\r\n            this.http.get(`https://viacep.com.br/ws/${cep}/json/`, {})\r\n                .subscribe(response => {\r\n                    //   console.log(response[\"logradouro\"])\r\n\r\n                    this.planoPgmAluno.controls['respFin'].get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n                    this.planoPgmAluno.controls['respFin'].get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n                    this.planoPgmAluno.controls['respFin'].get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n                    this.planoPgmAluno.controls['respFin'].get('uf').setValue(response[\"uf\"].toUpperCase());\r\n                    this.enderecoFin = 'visible'\r\n                }, err => {\r\n                    this._helper.openSnackBarError(\"Ocorreu um erro ao consultar o CPF.\")\r\n                    //  console.log(err)\r\n                },\r\n                    () => {\r\n                        // console.log('finaly')\r\n                        //this.showDivEndereco = true\r\n                    });\r\n        }\r\n    }\r\n\r\n    get respFinvalid() {\r\n        // console.log(this.respFinForm.valid)\r\n        return true\r\n    }\r\n\r\n    public enderecoMenor = 'hidden'\r\n    consultaCEPRespMenor(cep) {\r\n        // console.log(CEP);\r\n\r\n        if (this.planoPgmAluno.controls['respMenor'].get('cep').valid) {\r\n            this.http.get(`https://viacep.com.br/ws/${cep}/json/`, {})\r\n                .subscribe(response => {\r\n\r\n                    this.planoPgmAluno.controls['respMenor'].get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n                    this.planoPgmAluno.controls['respMenor'].get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n                    this.planoPgmAluno.controls['respMenor'].get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n                    this.planoPgmAluno.controls['respMenor'].get('uf').setValue(response[\"uf\"].toUpperCase());\r\n                    this.enderecoMenor = 'visible'\r\n                }, err => {\r\n                    this._helper.openSnackBarError('Ocorreu um erro ao consultar o CEP.')\r\n                    //console.log(err)\r\n                },\r\n                    () => {\r\n                        // console.log('finaly')\r\n                        //this.showDivEndereco = true\r\n                    });\r\n        }\r\n    }\r\n\r\n    get respmenorvalid() {\r\n        // console.log(this.respMenor.valid)\r\n        return true\r\n    }\r\n\r\n    planosPgm: any[] = new Array<any>();\r\n    verPlano = false\r\n    showPlano = false\r\n    //todasparcelas: any[] = new Array<any>();\r\n\r\n\r\n\r\n    get parcelasFormArray() {\r\n        return this.planoPgmAluno.controls[\"plano\"].get('infoParcelas') as FormArray;\r\n    }\r\n\r\n    todasparcelas = new Array<any>()\r\n\r\n    clearFormArray = (formArray: FormArray) => {\r\n        while (formArray.length !== 0) {\r\n            formArray.removeAt(0)\r\n        }\r\n    }\r\n\r\n    CalcularParcelas() {\r\n        //console.log(this.planoPgmAluno.controls['plano'])\r\n        if (this.planoPgmAluno.controls['plano'].get('planoId').value == '') return;\r\n        this.todasparcelas = new Array<any>()\r\n        let qntParcelas = this.planoPgmAluno.controls['plano'].get('parcelas').value\r\n        //  let index = 0\r\n        // console.log(this.parcelasFormArray.value.length)\r\n        this.clearFormArray(this.parcelasFormArray)\r\n        // this.parcelasFormArray.value.splice(0, this.parcelasFormArray.value.length);\r\n        // clearFormArray = (formArray: FormArray) => {\r\n        //     while (formArray.length !== 0) {\r\n        //       formArray.removeAt(0)\r\n        //     }\r\n        //   }\r\n\r\n\r\n        for (let index = 0; index < qntParcelas; index++) {\r\n\r\n            // this.todasparcelas.push({\r\n            //     parcelaNo: index + 1,\r\n            //     vencimento: this.setData(index),\r\n            //     valor: this.valorParcela\r\n            // })\r\n\r\n            const matForm = this._fb.group({\r\n\r\n                parcelaNo: [index + 1],\r\n                vencimento: [this.setData(index)],\r\n                valor: [this.valorParcela]\r\n            });\r\n\r\n            // this.\r\n            //this.parcelasFormArray.reset()\r\n\r\n            this.parcelasFormArray.push(matForm);// get materias()\r\n\r\n\r\n        }\r\n\r\n        // console.log(this.parcelasFormArray.value)\r\n    }\r\n\r\n\r\n    // get todasparcelas() {\r\n\r\n    //     //\r\n    //     let parcelas = new Array<any>()\r\n    //     let qntParcelas = this.planoPgmAluno.controls['plano'].get('parcelas').value\r\n    //     for (let index = 0; index < qntParcelas; index++) {\r\n\r\n    //         parcelas.push({\r\n    //             parcelaNo: index + 1,\r\n    //             vencimento: this.setData(index),\r\n    //             valor: this.valorParcela\r\n    //         })\r\n\r\n\r\n\r\n    //         // const matForm = this._fb.group({\r\n\r\n    //         //     parcelaNo: index + 1,\r\n    //         //     vencimento:  this.setData(index),\r\n    //         //     valor: this.valorParcela\r\n    //         // });\r\n\r\n    //         // this.parcelasFormArray.push(matForm);// get materias()\r\n\r\n\r\n    //     }\r\n\r\n\r\n    //     return parcelas\r\n\r\n    // }\r\n\r\n    setData(number) {\r\n\r\n        // let dateNow = new Date();\r\n        // let initialDate = new Date()\r\n        // initialDate.setDate(10)\r\n\r\n        // if (dateNow.getDate() > 10) {\r\n        //     initialDate.setMonth(initialDate.getMonth() + 1)\r\n        // } else {\r\n\r\n        // }\r\n\r\n        // console.log(initialDate)\r\n        // this.planoPgmAluno.get('diaDefault').setValue(initialDate)\r\n        let data = new Date(this.planoPgmAluno.controls['plano'].get('diaDefault').value)\r\n        data.setMonth(data.getMonth() + number)\r\n        data.setHours(0)\r\n        data.setMinutes(0)\r\n        data.setSeconds(0)\r\n        return data\r\n\r\n    }\r\n\r\n    public valorPlanoOriginal\r\n    public temBolsa = false\r\n\r\n    public spinnerBuscarPlano = 'hidden'\r\n    buscaPlanoPgm(planoId) {\r\n        this.verPlano = false\r\n        //console.log(planoId)\r\n\r\n        this.spinnerBuscarPlano = 'visible'\r\n        this.http.get(`${this.baseUrl}/plano-pagamento/${planoId}`)\r\n            .subscribe(response => {\r\n\r\n                this.planoSelecionado = Object.assign([], response)['plano']\r\n\r\n            }, err => {\r\n                // console.log(err)\r\n                this.spinnerBuscarPlano = 'hidden'\r\n                //this.mensagemNoTrumas = err['error'].message\r\n                //this.showMessageNoTurmas = true\r\n            },\r\n                () => {\r\n                    this.verPlano = true\r\n                    this.spinnerBuscarPlano = 'hidden'\r\n                    //console.log(this.planoSelecion ado)   \r\n                    // console.log(this.planoSelecionado)\r\n                    this.valorPlanoOriginal = this.planoSelecionado.valor\r\n                    this.planoPgmAluno.controls['plano'].get('valor').setValue(this.planoSelecionado.valor)\r\n                    this.planoPgmAluno.controls['plano'].get('taxaMatricula').setValue(this.planoSelecionado.taxaMatricula)\r\n                    this.planoPgmAluno.controls['plano'].get('bonusPontualidade').setValue(this.planoSelecionado.bonusPontualidade)\r\n                    //  this.planoPgmAluno.get('parcelas').setValue(this.planoSelecionado.parcelas)\r\n                    this.planoPgmAluno.controls['plano'].get('planoId').setValue(this.planoSelecionado.id)\r\n                    this.planoPgmAluno.controls['plano'].get('planoId').setValue(planoId)\r\n                    this.CalcularParcelas()\r\n                    this.showPlano = true\r\n                    /*\r\n                                        valor\r\n                    taxaMatricula\r\n                    bonusPontualidade\r\n                    parcelas\r\n                    planoId\r\n                    */\r\n\r\n                });\r\n    }\r\n\r\n    visPrevia() {\r\n\r\n    }\r\n\r\n    get verValidPln() {\r\n        // console.log(this.planoPgmAluno.valid)\r\n        return true\r\n    }\r\n\r\n    submeter() {\r\n        // console.log(this.respMenor.value)\r\n    }\r\n\r\n    // onFocusEvent(event){\r\n\r\n    //     console.log(this.planoPgmAluno.get('parcelas').value)\r\n\r\n    //     let parcelas = this.planoPgmAluno.get('parcelas').value\r\n\r\n    //     let valorTotal = this.planoPgmAl uno.get('parcelas').value\r\n    // }\r\n\r\n\r\n    planoSelecionado: any\r\n    // get verPlano() {\r\n    //     console.log(this.planoSelecionado)\r\n\r\n    //     if (this.planoSelecionado == undefined) {\r\n    //         return false\r\n    //     } else {\r\n    //         return true\r\n    //     }\r\n\r\n    // }\r\n\r\n    disabldSaveButton = 'hidden'\r\n    get disabledButton() {\r\n        if (this.planoPgmAluno.valid) {\r\n            return this.disabldSaveButton != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    salvarMat() {\r\n\r\n        // this.planoPgmAluno.get('infoParcelas').setValue(this.todasparcelas)      \r\n        // if (!this.planoPgmAluno.valid) return\r\n        // if (this.menorIdade) {\r\n        //     if (!this.respMenor.valid) return\r\n        // }\r\n\r\n        // if (this.temRespFinm.get('temRespFin').value) {\r\n        //     if (!this.respFinForm.valid) return\r\n        // }\r\n        // this.disabldSaveButton = true\r\n\r\n        // let form = {\r\n        //     plano: this.planoPgmAluno.value,\r\n        //     // menorIdade: this.menorIdade,\r\n        //     respMenor: this.respMenor.value,\r\n        //     temRespFin: this.temRespFinm.get('temRespFin').value,\r\n        //     respFin: this.respFinForm.value,\r\n        // }\r\n\r\n\r\n\r\n\r\n        //this.formDisabled = !this.formDisabled;\r\n        // const state = 'disable'\r\n\r\n        // Object.keys(this.planoPgmAluno.get('respMenor').value).forEach((controlName) => {\r\n        //    // console.log(controlName)\r\n        //     this.planoPgmAluno.controls['respMenor'].get(controlName).setValidators(null)\r\n        //     this.planoPgmAluno.controls['respMenor'].get(controlName).updateValueAndValidity()\r\n        //     //this.planoPgmAluno.controls[controlName][state](); // disables/enables each form control based on 'this.formDisabled'\r\n        // });\r\n\r\n\r\n        //this.planoPgmAluno.get('respMenor').setValidators(null)\r\n        //this.planoPgmAluno.controls['respMenor'].get('nome').clearValidators()\r\n        //this.planoPgmAluno.controls['respMenor'].get('nome').updateValueAndValidity()\r\n        //console.log(this.planoPgmAluno.controls['respMenor'].get('nome').value)\r\n        //console.log(this.planoPgmAluno.controls['respMenor'].get('nome').valid)\r\n        // console.log(this.planoPgmAluno)\r\n        // console.log(this.planoPgmAluno.valid)\r\n        // console.log(this.planoPgmAluno.get('respMenor').valid)\r\n        this.disabldSaveButton = 'visible'\r\n        this.http.post(`${this.baseUrl}/pedag/matricula/${this.turma.id}/${this.data['aluno'].id}`, this.planoPgmAluno.value, {})\r\n            .subscribe(response => {\r\n\r\n                this.OpenModalSucesso(response['matriculaId'])\r\n            }, err => {\r\n                this._helper.openSnackBarErrorDefault()\r\n                this.disabldSaveButton = 'hidden'\r\n            },\r\n                () => {\r\n                    // msg aluno matriculado com sucesso! Deseja imprimir a ficha de matrícula \r\n                    // e o contrato ?\r\n                });\r\n\r\n    }\r\n\r\n    OpenModalSucesso(matriculaId?): void {\r\n        const dialogRef = this._modal\r\n            .open(ConfirmMatriculaComponent, ConfirmMatriculaModalConfig(matriculaId));\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            this.dialogRef.close();\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    get shoNParcelar() {\r\n        var value = this.matriculaTurmaForm.get('meioPagamento').value\r\n        // console.log(this.matriculaTurmaForm.get('meioPagamento').value)\r\n        // console.log(this.matriculaTurmaForm.get('parcelas').value)\r\n        // console.log(this.matriculaTurmaForm.get('parcelas').valid)\r\n        // console.log(this.parcelas[0])\r\n        if (value == \"cartaoDébito\" ||\r\n            value == \"pix\" ||\r\n            value == \"dinheiro\" ||\r\n            //value == \"boleto\" ||\r\n            value == null) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n\r\n\r\n    }\r\n\r\n    ValidateFormasPagamento() {\r\n        if (this.matriculaTurmaForm.get('meioPagamento').valid) {\r\n\r\n            var meioPag = this.matriculaTurmaForm.get('meioPagamento').value\r\n            if (meioPag == \"cartaoCredito\" || meioPag == \"boleto\") {\r\n\r\n                if (this.matriculaTurmaForm.get('parcelas').valid &&\r\n                    this.matriculaTurmaForm.get('diaVencimento').valid) {\r\n\r\n                    return true\r\n\r\n                } else {\r\n                    return false\r\n                }\r\n            } else {\r\n                return true\r\n            }\r\n\r\n        } else {\r\n            return false\r\n        }\r\n\r\n    }\r\n\r\n    searchAluno(value) {\r\n\r\n        if (value == \"Indicação Aluno\") {\r\n            // TOdo search aluno\r\n        }\r\n    }\r\n\r\n    submitMatricula(form: FormGroup) {\r\n        // console.log(form)\r\n        // console.log('sen matrícula')\r\n\r\n        var ciencia = this.matriculaTurmaForm.get('cienciaCurso').value\r\n\r\n        // console.log(this.matriculaTurmaForm.get('primeiraParcPaga').valid)\r\n\r\n        if (!this.ValidateFormasPagamento()) {\r\n            return\r\n        }\r\n\r\n        this.matriculaTurmaForm.get('primeiraParcPaga').valid\r\n        //  console.log(this.matriculaTurmaForm.get('cienciaCurso').valid)\r\n\r\n\r\n        if (!this.matriculaTurmaForm.get('cienciaCurso').valid) return\r\n\r\n\r\n        var submitForm = new submitMatriculaForm()\r\n\r\n        // TODO CONTRATOID\r\n        submitForm.idAluno = this.data['alunoId']\r\n        submitForm.idTurma = this.turmaSelecionada.id\r\n        submitForm.ciencia = this.matriculaTurmaForm.get('cienciaCurso').value\r\n        submitForm.meioPagamento = this.matriculaTurmaForm.get('meioPagamento').value\r\n        submitForm.parcelas = this.matriculaTurmaForm.get('parcelas').value\r\n        submitForm.primeiraParceJaPaga = this.matriculaTurmaForm.get('primeiraParcPaga').value\r\n        submitForm.diaVencimento = this.matriculaTurmaForm.get('diaVencimento').value\r\n        //console.log(submitForm)\r\n        //console.log(this.matriculaTurmaForm.get('diaVencimento').value)\r\n\r\n\r\n        //this.http.post(`${this.baseUrl}/turmas/turma/?idAluno=${this.data['alunoId']}&idTurma=${this.turmaSelecionada.id}&ciencia=${ciencia}`, {\r\n        this.http.post(`${this.baseUrl}/turmas/turma`, submitForm, {\r\n        }).subscribe(\r\n            () => { },\r\n            (error) => { },\r\n            () => {\r\n\r\n                this.confirmMatriculaModal()\r\n                //this.dialogRef.close({ clicked: \"OK\" });\r\n            }\r\n        )\r\n        // }\r\n    }\r\n\r\n\r\n    confirmMatriculaModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(ConfirmMatriculaComponent, {\r\n                height: 'auto',\r\n                width: '400px',\r\n\r\n                data: { Hello: \"Hello World\" },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n        //     console.log('The dialog was closed');\r\n        //     // this.animal = result;\r\n        // });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            //console.log(data)\r\n            if (data.clicked === \"Sim\") {\r\n                //this.getCursos(0, 0);\r\n                // console.log('clicou no sim')\r\n                this.downloadContrato()\r\n                //this.indexTab = 2\r\n\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // console.log('clicou no cancel')\r\n                this.dialogRef.close({ clicked: \"cancel\" });\r\n            }\r\n        });\r\n    }\r\n\r\n    downloadContrato() {\r\n        var file = \"Contrato.pdf\";// this.createFileName(\"EXCEL\");\r\n        // this.showSpinner = true;\r\n        // this.testehabilitar = false\r\n        // console.log('download contrato')\r\n        this.download().subscribe(data => {\r\n            //console.log(data)\r\n            switch (data.type) {\r\n                case HttpEventType.Response:\r\n                    // this.showSpinner = false;\r\n                    //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n                    const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n                    const a = document.createElement('a');\r\n                    a.setAttribute('style', 'display:none;');\r\n                    document.body.appendChild(a);\r\n                    a.download = file;\r\n                    a.href = URL.createObjectURL(downloadedFile);\r\n                    a.target = '_blank';\r\n                    a.click();\r\n                    document.body.removeChild(a);\r\n                    break;\r\n            }\r\n        },\r\n            (err) => {\r\n                //this.showSpinner = false;\r\n                //this.testehabilitar = true;\r\n            },\r\n            () => {\r\n\r\n                this.dialogRef.close({ clicked: \"OK\" });\r\n                //this.showSpinner = false;\r\n                // this.testehabilitar = true;\r\n            }\r\n        );\r\n    }\r\n\r\n    download(): Observable<HttpEvent<Blob>> {\r\n        return this.http.request(new HttpRequest(\r\n            'GET', `${this.baseUrl}/document/pdf`, null, {\r\n            reportProgress: true,\r\n            responseType: 'blob'\r\n        }));\r\n    }\r\n\r\n    selecionarTurma(turma: Turma) {\r\n\r\n        //console.log(turma)\r\n        Object.assign(this.turmaSelecionada, turma)\r\n        //console.log(this.turmaSelecionada)\r\n        // this.hideCursoSearchAndMessage = false\r\n        //this.showSelectCursoSearch = false\r\n        //this.showTableCursosAndamento = false\r\n        //this.showFormFinal = true\r\n        this.previAtual = `${new Date(this.turmaSelecionada.previsaoAtual).toLocaleDateString()}`\r\n        this.previTerminoAtual = `${new Date(this.turmaSelecionada.previsaoTerminoAtual).toLocaleDateString()}`\r\n        this.showTurmas = false\r\n        this.showTurmaForm = true\r\n    }\r\n\r\n\r\n\r\n    fechar() {\r\n        this.dialogRef.close({ clicked: \"Ok\" });\r\n    }\r\n\r\n}","export function ConfirmAcaoModalConfig() {\r\n    return {\r\n        height: 'auto',\r\n        width: '500px'\r\n    }\r\n}","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { Debito, InfoFinanceiras } from \"src/app/_shared/models/InfoFinanceiras.model\";\r\n\r\n\r\n@Component({\r\n    selector: 'reapconfirmarmodal',\r\n    templateUrl: './reapconfirmar.component.html',\r\n    //styleUrls: ['./infos.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class ConfirmarParcelamento implements OnInit {\r\n\r\n    baseUrl = environment.baseUrl;\r\n   public reparcelaCommand: ReparcelaCommand = new ReparcelaCommand();\r\n   showTable = false\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _modal: MatDialog,\r\n        // private _service: PedagService,\r\n        public dialogRef: MatDialogRef<ConfirmarParcelamento>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.reparcelaCommand.valorEntrada = this.data['valorEntrada']\r\n        this.reparcelaCommand.debitosIds = this.data['debitosIds']\r\n        let valorDasParcelas = (this.data['totalFinal'] - this.data['valorEntrada']) / this.data['parcelas']\r\n        //console.log(this.data)\r\n\r\n        this.reparcelaCommand.parcelas = new Array<Parcelas>();\r\n        for (let index = 0; index < this.data['parcelas']; index++) {\r\n            var dataVencimento = new Date(this.data['vencimento'])    \r\n            this.reparcelaCommand.parcelas.push(new Parcelas(\r\n                new Date(\r\n                    dataVencimento.getFullYear(),\r\n                    dataVencimento.getMonth() + (index + 1),\r\n                    dataVencimento.getDay()),valorDasParcelas))\r\n\r\n            \r\n        }\r\n\r\n       // console.log(this.reparcelaCommand)\r\n        this.showTable = true\r\n     \r\n    }\r\n\r\n    confirmarParc(){\r\n\r\n        this._http.post(`${this.baseUrl}/financeiro/reparcelar`, this.reparcelaCommand , {})\r\n        .subscribe(resp => { \r\n\r\n        },(error) => { \r\n           // console.log(error)\r\n        },\r\n        () => { \r\n            this.dialogRef.close({ clicked: \"OK\"})\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class ReparcelaCommand{\r\n    constructor(\r\n        public valorEntrada?: number,\r\n        public debitosIds?: number[],\r\n        public parcelas?: Parcelas[]\r\n    ){\r\n\r\n    }\r\n}\r\n\r\nexport class Parcelas{\r\n    constructor(\r\n        public vencimento?: Date,\r\n        public valor?: number\r\n    ){\r\n        \r\n    }\r\n}\r\n\r\n","<div style=\"font-size: 1.2em;\">Confirmar?\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n<hr>\r\n\r\n<div class=\"table-responsive\" *ngIf=\"showTable\" style=\"position: relative;\">\r\n    <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n        <!--<table class=\"table-hover\" mat-table [dataSource]=\"genericTasks\">-->\r\n        <thead style=\"z-index: 9;\r\n        top: 0;\r\n        position: sticky;\r\n        background-color: aliceblue;\">\r\n            <tr>\r\n                <!-- <th style=\"width: 2%; \r\n            text-align:left; \r\n            vertical-align: middle;\r\n            border-top: 0px;\"></th> -->\r\n\r\n\r\n                <th style=\"width: 50%;font-size:0.8em;\r\n            vertical-align: middle; \r\n            text-align:left;\r\n             border-top: 0px; font-weight: 400;\">Histórico</th>\r\n\r\n                <th style=\"width: 25%;font-size:0.8em;\r\n            vertical-align: middle;\r\n            text-align:center;\r\n            border-top: 0px; font-weight: 400;\">Vencimento</th>\r\n\r\n                <th style=\"width: 25%;font-size:0.8em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">Valor</th>\r\n\r\n                <!-- <th style=\"width: 12%;font-size:0.8em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">Val. Título</th>\r\n\r\n                <th style=\"width: 13%;font-size:0.8em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">Data Pagto.</th>\r\n\r\n                <th style=\"width: 12%;font-size:0.8em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">Val. Pago</th>\r\n\r\n                <th style=\"width: 21%;font-size:0.8em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\"></th> -->\r\n                <!--<th style=\"width: 12%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">Matriculados</th>\r\n\r\n            <th style=\"width: 13%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">Status</th> -->\r\n\r\n                <!-- <th style=\"width: 34%;font-size:1em;\r\n            text-align:center; \r\n            vertical-align: middle;\r\n            border-top: 0px; font-weight: 400;\">\r\n\r\n            </th> -->\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n            <tr *ngIf=\"data['parcelas'] != 0\">\r\n                <td style=\"font-size:0.8em;font-weight: 400;text-align:center;vertical-align: middle;\">\r\n                    Entrada Parcelamento\r\n                </td>\r\n\r\n                <td style=\"font-size:0.8em;font-weight: 400;text-align:left;vertical-align: middle;\">\r\n                    {{ data['vencimento']| date:'M/y' }}\r\n                </td>\r\n\r\n                <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                    {{ reparcelaCommand.valorEntrada | currency:'BRL':true:'1.2-2' }}\r\n                </td>\r\n\r\n                <!-- <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                \r\n                </td> -->\r\n\r\n\r\n            </tr>\r\n\r\n            <tr *ngFor=\"let reparcelas of reparcelaCommand.parcelas;let i = index;\">\r\n                <td style=\"font-size:0.8em;font-weight: 400;text-align:center;vertical-align: middle;\">\r\n                  Reparcelamento {{i+1}}/{{data['parcelas']}}\r\n                </td>\r\n\r\n                <td style=\"font-size:0.8em;font-weight: 400;text-align:left;vertical-align: middle;\">\r\n                {{ reparcelas.vencimento | date:'M/y'}}\r\n                </td>\r\n\r\n                <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                    {{ reparcelas.valor | currency:'BRL':true:'1.2-2' }}\r\n                </td>\r\n\r\n                <!-- <td style=\"font-size:0.8em;font-weight: 400;text-align: center;vertical-align: middle;\">\r\n                \r\n                </td> -->\r\n\r\n\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n    <br>\r\n    <button type=\"submit\" mat-raised-button \r\n    disabled=\"false\" style=\"float:right;margin-bottom: 0px;margin-left: 10px;\"\r\n    (click)=\"confirmarParc()\">\r\n    Confirmar\r\n</button>\r\n<br>\r\n\r\n</div>\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { SpinnerParams } from \"src/app/_shared/models/spinner.model\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\n@Component({\r\n    selector: 'add-dispomodal',\r\n    templateUrl: './add-dispo.component.html',\r\n    styleUrls: ['./add-dispo.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class AddDispoComponent implements OnInit {\r\n\r\n    // SpinnerParam: SpinnerParams = {\r\n    //     diameter: 30,\r\n    //     marginleft: 10,\r\n    //     margintop: 0\r\n    // }\r\n    baseUrl = environment.baseUrl;\r\n    // mostrarModalPrincipal = true\r\n    public unidades: any[] = new Array<any>()\r\n    // public typePacotes: any[] = new Array<any>()\r\n    // public profMaterias: any[] = new Array<any>()\r\n    // public materias: any[] = new Array<any>()\r\n    // private jwtHelper = new JwtHelperService();\r\n    // public tokenInfo: TokenInfos = new TokenInfos();\r\n    public disponibilidadeForm: FormGroup\r\n    // public materiaForm: FormGroup\r\n    // public unidadeForm: FormGroup\r\n\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _http: HttpClient,\r\n        private _helper: HelpersService,\r\n        public dialogRef: MatDialogRef<AddDispoComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.disponibilidadeForm = _fb.group({\r\n            unidadeId: ['', [Validators.required]],\r\n            pessoaId: [''],\r\n            domingo: [false, [Validators.required]],\r\n            segunda: [false, [Validators.required]],\r\n            terca: [false, [Validators.required]],\r\n            quarta: [false, [Validators.required]],\r\n            quinta: [false, [Validators.required]],\r\n            sexta: [false, [Validators.required]],\r\n            sabado: [false, [Validators.required]]\r\n        })\r\n\r\n        this.disponibilidadeForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n\r\n                if (this.disponibilidadeForm.get('domingo').value == false &&\r\n                    this.disponibilidadeForm.get('segunda').value == false &&\r\n                    this.disponibilidadeForm.get('terca').value == false &&\r\n                    this.disponibilidadeForm.get('quarta').value == false &&\r\n                    this.disponibilidadeForm.get('quinta').value == false &&\r\n                    this.disponibilidadeForm.get('sexta').value == false &&\r\n                    this.disponibilidadeForm.get('sabado').value == false) { //.setErrors({ required: true });\r\n\r\n                    this.disponibilidadeForm.get('domingo').setErrors({ required: true });\r\n                    this.disponibilidadeForm.get('segunda').setErrors({ required: true });\r\n                    this.disponibilidadeForm.get('terca').setErrors({ required: true });\r\n                    this.disponibilidadeForm.get('quarta').setErrors({ required: true });\r\n                    this.disponibilidadeForm.get('quinta').setErrors({ required: true });\r\n                    this.disponibilidadeForm.get('sexta').setErrors({ required: true });\r\n                    this.disponibilidadeForm.get('sabado').setErrors({ required: true });\r\n\r\n                } else { //.setErrors(null);\r\n                    this.disponibilidadeForm.get('domingo').setErrors(null);\r\n                    this.disponibilidadeForm.get('segunda').setErrors(null);\r\n                    this.disponibilidadeForm.get('terca').setErrors(null);\r\n                    this.disponibilidadeForm.get('quarta').setErrors(null);\r\n                    this.disponibilidadeForm.get('quinta').setErrors(null);\r\n                    this.disponibilidadeForm.get('sexta').setErrors(null);\r\n                    this.disponibilidadeForm.get('sabado').setErrors(null);\r\n                }\r\n            }\r\n        );\r\n\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.unidades = this.data['unidades']\r\n        this.disponibilidadeForm.get('pessoaId').setValue(this.data['profId'])\r\n        // console.log(this.unidades)\r\n        // const token = localStorage.getItem('jwt')\r\n        // this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n        //this.dialogRef.removePanelClass('my-class')\r\n        //this.dialogRef.addPanelClass('my-class')\r\n        // this.GetInfos()\r\n    }\r\n\r\n    // verDispo(){\r\n    //     console.log(this.disponibilidadeForm.value)\r\n    // }\r\n\r\n    disabledSaveButton = false\r\n    get disabledButton() {\r\n        if (this.disponibilidadeForm.valid) {\r\n            return this.disabledSaveButton\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    onSubmit() {\r\n\r\n        if (this.disponibilidadeForm.valid) {\r\n            this.disabledSaveButton = true\r\n\r\n            this._http.post(`${this.baseUrl}/professor/disponibilidade`, this.disponibilidadeForm.value, {})\r\n                .subscribe(resp => {\r\n\r\n                },\r\n                    (error) => { },\r\n                    () => {\r\n                        this._helper.openSnackBarSucesso('Disponibilidade salva com sucesso')\r\n                        this.dialogRef.close({ clicked: \"Ok\" });\r\n                    })\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // showAddIcon = false\r\n    // clearFilter(typeId) {\r\n\r\n    //     if (typeId == '') {\r\n    //         this.materias = new Array<any>()\r\n    //         this.showAddIcon = false\r\n    //         this.materiaForm.get('materiaId').setValue('')\r\n    //         return;\r\n    //     }\r\n    //     this.materias = new Array<any>()\r\n    //     console.log(typeId)\r\n    //     this.materiaForm.get('materiaId').setValue('')\r\n    //     this._http.get(`${this.baseUrl}/materia-template/filtro/${typeId}`)\r\n    //         .subscribe(resp => {\r\n    //             this.materias = resp['materias']\r\n\r\n    //         },\r\n    //             (error) => { },\r\n    //             () => {\r\n\r\n\r\n    //                 // console.log(this.unidades)\r\n    //                 // this.mostrarModalPrincipal = false\r\n    //                 // this.dialogRef.addPanelClass('my-class')\r\n    //             })\r\n\r\n\r\n    // }\r\n\r\n    // addMateria(mat) {\r\n    //     if (mat == '') {\r\n    //         //this.materias = new Array<any>()\r\n    //         this.showAddIcon = false\r\n    //         return;\r\n    //     }\r\n    //     this.showAddIcon = true\r\n\r\n\r\n    // }\r\n\r\n    // adicionar() {\r\n\r\n    //     var mat = this.profMaterias.find(element => element.pacoteMateriaId == this.materiaForm.get('materiaId').value)\r\n    //     console.log(mat)\r\n\r\n    //     if (mat == undefined) {\r\n    //         this._http.post(`${this.baseUrl}/professor/materia/${this.data['prof'].id}/${this.materiaForm.get('materiaId').value}`, {})\r\n    //             .subscribe(resp => {\r\n\r\n    //             },\r\n    //                 (error) => { },\r\n    //                 () => {\r\n    //                     this.GetProfessorMaterias();\r\n    //                 })\r\n    //     }\r\n    // }\r\n\r\n    // adicionarUnidade() {\r\n    //     console.log()\r\n    // }\r\n\r\n    // GetInfos() {\r\n\r\n    //     this._http.get(`${this.baseUrl}/professor/materias/${this.data['prof'].id}`)\r\n    //         .subscribe(resp => {\r\n    //             this.unidades = resp['unidades']\r\n    //             this.typePacotes = resp['typePacotes']\r\n    //             this.profMaterias = resp['profMaterias']\r\n    //         },\r\n    //             (error) => { },\r\n    //             () => {\r\n    //                 console.log(this.profMaterias)\r\n    //                 this.mostrarModalPrincipal = false\r\n    //                 this.dialogRef.addPanelClass('my-class')\r\n    //             })\r\n\r\n    // }\r\n\r\n    // removeMateria(profMateriaId) {\r\n\r\n    //     this._http.delete(`${this.baseUrl}/professor/materia/${profMateriaId}`, {})\r\n    //         .subscribe(resp => {\r\n    //             //  this.unidades = resp['unidades']\r\n    //             // this.typePacotes = resp['typePacotes']\r\n    //         },\r\n    //             (error) => { },\r\n    //             () => {\r\n    //                 this.GetProfessorMaterias();\r\n    //                 //console.log(this.unidades)\r\n    //                 //  this.mostrarModalPrincipal = false\r\n    //                 // this.dialogRef.addPanelClass('my-class')\r\n    //             })\r\n\r\n    // }\r\n\r\n    // GetProfessorMaterias() {\r\n    //     this._http.get(`${this.baseUrl}/professor/materias-professor/${this.data['prof'].id}`)\r\n    //         .subscribe(resp => {\r\n    //             //  this.unidades = resp['unidades']\r\n    //             // this.typePacotes = resp['typePacotes']\r\n    //             this.profMaterias = resp['profMaterias']\r\n    //         },\r\n    //             (error) => { },\r\n    //             () => {\r\n    //                 //  console.log(this.unidades)\r\n    //                 //  this.mostrarModalPrincipal = false\r\n    //                 //  this.dialogRef.addPanelClass('my-class')\r\n    //             })\r\n    // }\r\n\r\n}","<div style=\"font-size: 1.2em;\">Disponibilidade\r\n    <i  style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\"\r\n        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<!-- <mat-progress-bar style=\"margin-top: 20px;\" *ngIf=\"mostrarModalPrincipal;else mostraPrincipal\" @rowHighlight\r\n    style=\"margin:0px\" mode=\"query\"></mat-progress-bar>\r\n<ng-template #mostraPrincipal>\r\n\r\n    <div @rowHighlight style=\"font-size: 0.9em;margin-top: 5px;\">* Materias habilitadas para o professor lecionar</div>\r\n    <div @rowHighlight style=\"font-size: 0.9em;margin-top: 5px;color:red\">OBS: Desabilitações apenas ocorrerão para\r\n        futuras marcações\r\n    </div> -->\r\n<hr>\r\n<div @rowHighlight>\r\n\r\n    <span>Selecione a unidade:</span>\r\n    <form [formGroup]=\"disponibilidadeForm\" (ngSubmit)=\"onSubmit()\">\r\n        <mat-form-field appearance=\"standard\" style=\"width: 250px;;\">\r\n            <mat-label>Unidade</mat-label>\r\n            <mat-select formControlName=\"unidadeId\" selected required>\r\n                <mat-option></mat-option>\r\n                <mat-option *ngFor=\"let uni of unidades\" [value]=\"uni.id\">\r\n                    {{uni.descricao}} - {{uni.sigla}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <!-- <i #tooltip=\"matTooltip\" matTooltip=\"adicionar\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button  style=\"\" mat-icon-button>\r\n                <mat-icon>add</mat-icon>\r\n            </button>\r\n        </i> -->\r\n        <br>\r\n        <div style=\"font-size: 0.9;font-style: italic;\">selecione ao menos um dia da semana:</div>\r\n        <mat-checkbox formControlName=\"domingo\" class=\"example-margin\">Domingo</mat-checkbox><br>\r\n        <mat-checkbox formControlName=\"segunda\" class=\"example-margin\">Segunda-feira</mat-checkbox><br>\r\n        <mat-checkbox formControlName=\"terca\" class=\"example-margin\">Terça-feira</mat-checkbox><br>\r\n        <mat-checkbox formControlName=\"quarta\" class=\"example-margin\">Quarta-feira</mat-checkbox><br>\r\n        <mat-checkbox formControlName=\"quinta\" class=\"example-margin\">Quinta-feira</mat-checkbox><br>\r\n        <mat-checkbox formControlName=\"sexta\" class=\"example-margin\">Sexta-feira</mat-checkbox><br>\r\n        <mat-checkbox formControlName=\"sabado\" class=\"example-margin\">Sábado</mat-checkbox><br>\r\n        <br>\r\n        <mat-progress-bar *ngIf=\"disabledSaveButton\" @rowHighlight  style=\"margin:0px\"  mode=\"query\"></mat-progress-bar>\r\n        <div style=\"float: right;margin-top: 15px;\">\r\n            \r\n            <button type=\"submit\" mat-raised-button color=\"primary\" [disabled]=\"disabledButton\" style=\"width: 100px; position: relative; float:right;margin-bottom: 10px;\r\n                margin-left: 10px;\">\r\n                Salvar\r\n            </button>\r\n\r\n          \r\n        </div>\r\n    </form>\r\n<!-- <button type=\"button\" (click)=\"verDispo()\">ver dispo</button> -->\r\n\r\n</div>","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { DetalheAcessoModalConfig } from \"../service/modal.config\";\r\nimport { PedagogicoService } from \"../service/pedagogico.service\";\r\nimport { DetalheComponent } from \"./Detalhes/detalhe.component\";\r\n\r\n@Component({\r\n    selector: \"aluno-acesso-app\",\r\n    templateUrl: './aluno-acesso.component.html',\r\n    styleUrls: ['./aluno-acesso.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class AlunoAcessoComponent implements OnInit {\r\n    public alunos: any[] = new Array<any>();\r\n    // testeDonne: string = 'done'\r\n    // private baseUrl = environment.baseUrl;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    pageSize: number = 5;\r\n    length: number = 0\r\n    pageIndexNumber: number = 0;\r\n\r\n    public showMessageNoAluno = false\r\n    public mensagem = ''\r\n\r\n    public spinnerSearch = 'hidden'\r\n\r\n    currentPage = 1\r\n    // usuarios: any[] = new Array<any>();\r\n    // private jwtHelper = new JwtHelperService();\r\n    // tokenInfo: TokenInfos = new TokenInfos();\r\n    public pesquisarForm: FormGroup\r\n\r\n    constructor(\r\n        private _fb: FormBuilder,\r\n        private _pedagService: PedagogicoService,\r\n        private _modal: MatDialog\r\n        // private _admService: AdmService,\r\n        // private _modal: MatDialog\r\n    ) {\r\n\r\n        this.pesquisarForm = _fb.group({\r\n            nome: ['', [Validators.required]],\r\n            email: ['', [Validators.required]],\r\n            cpf: ['', [Validators.required]],\r\n            ativo: [false]\r\n        });\r\n\r\n        this.pesquisarForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n\r\n                if (this.pesquisarForm.get('nome').value == '' &&\r\n                    this.pesquisarForm.get('email').value == '' &&\r\n                    this.pesquisarForm.get('cpf').value == '') {\r\n\r\n                    this.pesquisarForm.controls['nome'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['email'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['cpf'].setErrors({ required: true });\r\n                } else {\r\n                    this.pesquisarForm.controls['nome'].setErrors(null);\r\n\r\n                    this.pesquisarForm.controls['email'].setErrors(null)\r\n\r\n                    this.pesquisarForm.controls['cpf'].setErrors(null);\r\n                }\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n\r\n\r\n        //const token = localStorage.getItem('jwt')\r\n        // this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n    }\r\n\r\n    Desbloquear(aluno): void {\r\n        const dialogRef = this._modal\r\n            .open(DetalheComponent, DetalheAcessoModalConfig(aluno));\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n\r\n        });\r\n    }\r\n\r\n    submitPesquisa(event?: any) {\r\n\r\n        // this.showMessageNoColaborador = false\r\n        this.showMessageNoAluno = false\r\n        if (this.pesquisarForm.valid) {\r\n            //     this.spinnerSearch = true\r\n\r\n            if (event != undefined) {\r\n                this.currentPage = event.pageIndex + 1\r\n            } else {\r\n                this.currentPage = 1\r\n            }\r\n            this.spinnerSearch = 'visible'\r\n\r\n            this._pedagService.getAlunosAcesso(this.pageSize, this.currentPage, this.pesquisarForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.processarSucesso(sucesso, event) },\r\n                    falha => { this.processarFalha(falha) }\r\n                );\r\n        }\r\n    }\r\n\r\n    processarSucesso(response: any, event?: any) {\r\n\r\n        this.alunos = Object.assign([], response['data']);\r\n\r\n        this.length = response['totalItemsInDatabase']\r\n\r\n        this.spinnerSearch = 'hidden'\r\n\r\n        if (event != undefined) {\r\n            this.pageIndexNumber = (event.pageIndex * this.pageSize)\r\n        } else {\r\n            this.pageIndexNumber = 0\r\n\r\n            if (this.paginator != undefined)\r\n                this.paginator.firstPage();\r\n        }\r\n    }\r\n\r\n    processarFalha(fail: any) {\r\n\r\n        this.spinnerSearch = 'hidden'\r\n\r\n        if (fail['status'] == 404) {\r\n            this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n            this.showMessageNoAluno = true\r\n            this.alunos = new Array<any>();\r\n        }\r\n        if (fail['status'] != 404) {\r\n            this.mensagem = \"Ocorreu um erro desconhecido, por favor, procure o administrador do sistema\"\r\n            this.showMessageNoAluno = true\r\n            this.alunos = new Array<any>();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // get disabledEdit() {\r\n\r\n    //     return false\r\n    // }\r\n\r\n\r\n    // openCreateUserModal(): void {\r\n    //     const dialogRef = this._modal\r\n    //         .open(CreateUserComponent, {\r\n    //             height: 'auto',\r\n    //             width: '700px',\r\n\r\n    //             data: { Hello: \"Hello World\" },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n\r\n\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n\r\n    //     });\r\n    // }\r\n\r\n    // openEditUserModal(item: Colaborador): void {\r\n    //     const dialogRef = this._modal\r\n    //         .open(EditUserComponent, {\r\n    //             height: '300px',\r\n    //             width: '600px',\r\n\r\n    //             data: { colaborador: item },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n\r\n\r\n    //     dialogRef.afterClosed().subscribe(result => {\r\n\r\n    //     });\r\n    // }\r\n\r\n    // openAcessoModal(usuario) {\r\n    //     const dialogRef = this._modal\r\n    //         .open(EditAcessoComponent, EditAcessoModal(usuario));\r\n    //     dialogRef.afterClosed().subscribe((data) => {\r\n\r\n    //     });\r\n    // }\r\n\r\n    // showMessageNoColaborador = false\r\n    // mensagem: string = \"\";\r\n    // params: Parametros = new Parametros()\r\n    // showSpinnerFirst = false\r\n\r\n    // onSubmit(event?: any) {\r\n\r\n    //     this.showMessageNoColaborador = false\r\n\r\n    //     if (this.pesquisarForm.valid) {\r\n\r\n    //         if (event != undefined) {\r\n\r\n    //         } else {\r\n\r\n    //         }\r\n\r\n    //         this._admService.getUsuarios(this.pageSize, this.currentPage, this.pesquisarForm.value)\r\n    //             .subscribe(\r\n    //                 sucesso => { this.processarSucesso(sucesso, event) },\r\n    //                 falha => { this.processarFalha(falha) }\r\n    //             );\r\n    //     }\r\n\r\n    // }\r\n\r\n\r\n    // processarSucesso(response: any, event?: any) {\r\n\r\n    //     this.usuarios = Object.assign([], response['data']);\r\n\r\n    //     this.length = response['totalItemsInDatabase']\r\n\r\n\r\n    //     if (event != undefined) {\r\n    //         this.pageIndexNumber = (event.pageIndex * this.pageSize)\r\n    //     } else {\r\n    //         this.pageIndexNumber = 0\r\n\r\n\r\n    //     }\r\n\r\n    // }\r\n\r\n    // processarFalha(fail: any) {\r\n\r\n    //     if (fail['status'] == 404) {\r\n    //         this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n    //         this.showMessageNoColaborador = true\r\n    //         this.usuarios = new Array<any>();\r\n    //     }\r\n    //     if (fail['status'] != 404) {\r\n    //         this.mensagem = \"Ocorreu um erro desconhecido, por favor, procure o administrador do sistema\"\r\n    //         this.showMessageNoColaborador = true\r\n    //         this.usuarios = new Array<any>();\r\n    //     }\r\n\r\n\r\n    // }\r\n\r\n\r\n}","<div class=\"container\" style=\"width: 95%;padding-top: 20px;\">\r\n\r\n    <!-- <div>\r\n        <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pré-cadastro\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button style=\"\" (click)=\"openMatriculaModal()\" mat-icon-button>\r\n                <mat-icon>person_add_alt</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div> -->\r\n\r\n    <br>\r\n\r\n    <form [formGroup]=\"pesquisarForm\" (ngSubmit)=\"submitPesquisa()\" class=\"form-inline siteForm\">\r\n\r\n        <span>Digite ao menos um dos\r\n            campos para\r\n            pesquisar pelo aluno:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center\">\r\n\r\n            <mat-form-field appearance=\"standard\">\r\n                <mat-label>Nome</mat-label>\r\n                <input formControlName=\"nome\" selected matInput placeholder=\"digite o nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-label>E-mail</mat-label>\r\n                <input formControlName=\"email\" selected matInput placeholder=\"digite o E-mail\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field>\r\n                <mat-label>CPF</mat-label>\r\n                <input mask=\"000.000.000-00\" formControlName=\"cpf\" selected matInput placeholder=\"digite o CPF\">\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button type=\"submit\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                incluir inativos:\r\n            </span>\r\n\r\n            <mat-checkbox formControlName=\"ativo\" color=\"primary\"></mat-checkbox>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n    <div class=\"card-header card-msg-response\" unselectable=\"on\" onselectstart=\"return false;\"\r\n        *ngIf=\"showMessageNoAluno\">{{mensagem}}</div>\r\n\r\n    <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"spinnerSearch\" @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n\r\n\r\n <div *ngIf=\"alunos.length > 0\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n        margin-top: 10px;\r\n        box-shadow: 0 0 1em rgb(172, 170, 170);\r\n        background-color: rgb(227, 240, 227);\">\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Alunos</h4>\r\n            <p class=\"card-category\">Matrículas localizadas</p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive table-aluno\">\r\n                <table @rowHighlight color=\"primary\" class=\"table\">\r\n\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n\r\n                            <th>NOME</th>\r\n\r\n                            <th>Nº MAT.</th>\r\n\r\n                            <th>CPF</th>\r\n\r\n                            <th>UNIDADE</th>\r\n\r\n                            <th>ACESSO</th>\r\n\r\n                            <th></th>\r\n\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let item of alunos;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                            <td style=\"text-align:center;vertical-align: middle;\">{{item.numeroMatricula || 'não matriculado'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.cpf}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.sigla}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.acessoSistema ? 'sim' : 'não'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n\r\n                                <ng-container *ngIf=\"item.numeroMatricula != null;else semMat\">\r\n\r\n                                   <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"detalhes\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"Desbloquear(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>settings</mat-icon>\r\n                                        </button>\r\n\r\n                                    </i>\r\n <!-- \r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"informações\"\r\n                                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openInfoModal(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>info</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"matricular aluno em um curso\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"matricular(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>read_more</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"boletim escolar\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openBoletimodal(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>school</mat-icon>\r\n                                        </button>\r\n                                    </i> -->\r\n\r\n                                </ng-container>\r\n\r\n                                <ng-template #semMat>\r\n                                    <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"informações cadastrais\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"viewInfoCadastrais(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>search</mat-icon>\r\n                                        </button>\r\n\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"matricular aluno em um curso\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"matricular(item)\" [disabled]=\"!item.ativo\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>read_more</mat-icon>\r\n                                        </button>\r\n                                    </i> -->\r\n                                </ng-template>\r\n\r\n\r\n\r\n                            </td>\r\n\r\n\r\n                        </tr>\r\n\r\n\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n            </div>\r\n\r\n            <mat-paginator *ngIf=\"length > 5\" style=\"\r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" [length]=\"length\" [pageSize]=\"pageSize\" hidePageSize=\"true\"\r\n                (page)=\"pageEvent = submitPesquisa($event)\">\r\n            </mat-paginator>\r\n\r\n\r\n        </div>\r\n    </div> \r\n</div>","import { DEFAULT_CURRENCY_CODE, NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgxMaskModule, IConfig } from 'ngx-mask'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule, CurrencyPipe } from '@angular/common';\r\nimport { SharedModule } from '../_shared/shared.module';\r\nimport { MaterialModule } from '../_shared/material/material.module';\r\nimport { PedagogicoComponent } from './pedagogico.component';\r\nimport { MatriculaComponent } from './Matricula/matricula.component';\r\nimport { CreateMatriculaComponent } from './Matricula/CreateModal/creatematricula.component';\r\nimport { ConfirmModalComponent } from './Matricula/confirmDialog/confirm.component';\r\nimport { ValidateFormsService } from '../_shared/models/aluno.model';\r\nimport { ConfirmarIniciarAulaModal, TurmasComponent } from './turmapedag/turmas.component';\r\nimport { TransferenciaComponent } from './Transferencia/transferencia.component';\r\nimport { NotasComponent } from './turmapedag/notas/notas.component';\r\nimport { ConcluirAulaModal, PresencaComponent } from './turmapedag/presenca/presenca.component';\r\nimport { AgendamentoComponent, SetDataModal } from './turmapedag/agendamento/agendamento.component';\r\nimport { TransferenciaExternaComponent } from './Transferencia/TransExterna/transfexterna.component';\r\nimport { TransferenciaInternaComponent } from './Transferencia/TransfInterna/transfinterna.component';\r\nimport { AlunoMatriculaComponent } from './Matricula/matricula/alunomatricula.component';\r\nimport { EstagioCadastroComponent } from './estagios/estagiocadastro/estagiocadastro.component';\r\nimport { InfosComponent } from './Matricula/informacoes/infos.component';\r\nimport { DataService } from '../_services/data.service';\r\nimport { PedagService } from './service/pedag.service';\r\nimport { ConfirmMatriculaComponent } from './Matricula/confirmmatricula/confirmamat.component';\r\nimport { PedagRelatorioComponent } from './relatorios/pedagrelatorio.component';\r\nimport { PedagAlunosComponent } from './pedag-alunos/pedag-alunos.component';\r\nimport { MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { TurmasPedagInfoComponent } from './turmasInfos/turmasinfopedag.component';\r\nimport { ReposicoesComponent } from './reposicoes/reposicoes.component';\r\nimport { CalendarioTurmaComponent } from './turmasInfos/CalendarioDaTurma/calendarioturma.component';\r\nimport { TransferenciaTurmaComponent } from './Transferencia/TransTurma/transfturma.component';\r\nimport { InfoFinancPedagComponent } from './Matricula/infoFinancas/infofinanc.component';\r\nimport { AnaliseDocsComponent } from './analise-docs/analisedocs.component';\r\nimport { AnaliseDocModalComponent } from './analise-docs/analiseDocsModal/analise-docmodal.component';\r\nimport { TurmasInfoAlunosPedagComponent } from './turmasInfos/AlunosTurma/turmasinfoalunos.component';\r\nimport { TurmasInfoNotasComponent } from './turmasInfos/TurmasInfoNotas/turmasinfonotas.component';\r\nimport { BoletimAlunoComponent } from './Matricula/BoletimAluno/boletimaluno.component';\r\nimport { EstagiosDocsComponent } from './estagiosdocs/estagiosdocs.component';\r\nimport { EstagioComponent } from './estagios/estagio.component';\r\nimport { EstagioEditComponent } from './estagios/estagio-edit/estagio-edit.component';\r\nimport { EstagioAlunosComponent } from './estagios/estagio-alunos/estagio-alunos.component';\r\nimport { InfoCadastraisComponent } from './Matricula/InfoCad/info-cadastrais.component';\r\nimport { AddAnotacaoComponent } from './Matricula/informacoes/Anotacao/add-anotacao.component';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport localeFr from '@angular/common/locales/fr';\r\nimport { PedagogicoService } from './service/pedagogico.service';\r\nimport { AlunoAcessoComponent } from './AlunosAcesso/aluno-acesso.component';\r\nimport { DetalheComponent } from './AlunosAcesso/Detalhes/detalhe.component';\r\nimport { ObservacoesTurmaModal } from './turmasInfos/CalendarioDaTurma/AulaDetalhe/obsturmamodal.component';\r\nimport { AulaEditarModal } from './turmasInfos/CalendarioDaTurma/AulaEditar/aulaeditar.component';\r\nimport { CertificadoComponent } from './Matricula/informacoes/Certificado/certificado.component';\r\nimport { CalendPresencaComponent } from './turmasInfos/CalendarioDaTurma/CalendPresenca/cal-presenca.component';\r\nimport { CalendPresencaEditComponent } from './turmasInfos/CalendarioDaTurma/CalendPresencaEdit/cal-presencaedit.component';\r\nimport { ObservacoesTurmaEditModal } from './turmasInfos/CalendarioDaTurma/AulaDetalheEdit/obsturmamodal-edit.component';\r\n\r\n\r\n\r\nregisterLocaleData(localeFr, 'fr');\r\n\r\nexport const MY_DATE_FORMATS = {\r\n    parse: {\r\n      dateInput: 'DD-MM-YYYY',\r\n    },\r\n    display: {\r\n      dateInput: 'MMM DD, YYYY',\r\n      monthYearLabel: 'MMMM YYYY',\r\n      dateA11yLabel: 'LL',\r\n      monthYearA11yLabel: 'MMMM YYYY'\r\n    },\r\n}; \r\n\r\nexport function tokenGetter() {\r\n    return localStorage.getItem(\"jwt\");\r\n}\r\n\r\nconst maskConfig: Partial<IConfig> = {\r\n    validation: false,\r\n  };\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PedagogicoComponent,\r\n        MatriculaComponent,\r\n        CreateMatriculaComponent,\r\n        ConfirmModalComponent,\r\n        TurmasComponent,\r\n        TransferenciaComponent,\r\n        NotasComponent,\r\n        PresencaComponent,\r\n        AgendamentoComponent,\r\n        TransferenciaExternaComponent,\r\n        TransferenciaInternaComponent,\r\n        AlunoMatriculaComponent,\r\n        ConfirmMatriculaComponent,\r\n        EstagioComponent,\r\n        SetDataModal,\r\n        EstagioCadastroComponent,\r\n        InfosComponent,\r\n        PedagRelatorioComponent,\r\n        PedagAlunosComponent,\r\n        ConfirmarIniciarAulaModal,\r\n        ConcluirAulaModal,\r\n        TurmasPedagInfoComponent,\r\n        ReposicoesComponent,\r\n        CalendarioTurmaComponent,\r\n        ObservacoesTurmaModal,\r\n        TransferenciaTurmaComponent,\r\n        InfoFinancPedagComponent,\r\n        AnaliseDocsComponent,\r\n        AnaliseDocModalComponent,\r\n        TurmasInfoAlunosPedagComponent,\r\n        TurmasInfoNotasComponent,\r\n        BoletimAlunoComponent,\r\n        EstagiosDocsComponent,\r\n        EstagioAlunosComponent,\r\n        EstagioEditComponent,\r\n        InfoCadastraisComponent,\r\n        AddAnotacaoComponent,\r\n        AlunoAcessoComponent,\r\n        DetalheComponent,\r\n        AulaEditarModal,\r\n        CertificadoComponent,\r\n        CalendPresencaComponent,\r\n        CalendPresencaEditComponent,\r\n        ObservacoesTurmaEditModal\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        MaterialModule,\r\n        SharedModule,\r\n        NgxMaskModule.forRoot(maskConfig),\r\n        CurrencyMaskModule\r\n    ],\r\n    providers: [PedagogicoService, CurrencyPipe, DataService, { provide: DEFAULT_CURRENCY_CODE, useValue: 'BRL' },\r\n    { provide: MAT_DATE_LOCALE, useValue: { useUtc: false }  },\r\n    PedagService, {provide: 'ValidateForms', useClass: ValidateFormsService},\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_DATE_FORMATS }],\r\n    exports: [\r\n        PedagogicoComponent,\r\n        MatriculaComponent,\r\n        TurmasComponent,\r\n        TransferenciaComponent,\r\n        EstagioComponent,\r\n        PedagRelatorioComponent,\r\n        TurmasPedagInfoComponent,\r\n        ReposicoesComponent,\r\n        AnaliseDocsComponent,\r\n        AlunoAcessoComponent\r\n    ],\r\n    entryComponents: [\r\n        CreateMatriculaComponent,\r\n        ConfirmModalComponent,\r\n        NotasComponent,\r\n        PresencaComponent,\r\n        AgendamentoComponent,\r\n        SetDataModal,\r\n        TransferenciaExternaComponent,\r\n        TransferenciaInternaComponent,\r\n        AlunoMatriculaComponent,\r\n        EstagioCadastroComponent,\r\n        InfosComponent,\r\n        ConfirmMatriculaComponent,\r\n        ConfirmarIniciarAulaModal,\r\n        PedagAlunosComponent,\r\n        ConcluirAulaModal,\r\n        CalendarioTurmaComponent,\r\n        ObservacoesTurmaModal,\r\n        TransferenciaTurmaComponent,\r\n        InfoFinancPedagComponent,\r\n        AnaliseDocModalComponent,\r\n        TurmasInfoAlunosPedagComponent,\r\n        TurmasInfoNotasComponent,\r\n        BoletimAlunoComponent,\r\n        EstagiosDocsComponent,\r\n        EstagioAlunosComponent,\r\n        EstagioEditComponent,\r\n        InfoCadastraisComponent,\r\n        AddAnotacaoComponent,\r\n        DetalheComponent,\r\n        AulaEditarModal,\r\n        CertificadoComponent,\r\n        CalendPresencaComponent,\r\n        CalendPresencaEditComponent,\r\n        ObservacoesTurmaEditModal\r\n    ]\r\n    \r\n})\r\nexport class PedagogicoModule { }\r\n\r\n","import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { HelpersService } from \"src/app/_shared/components/helpers/helpers.component\";\r\n\r\n\r\n\r\n//import { TemplateTasks } from 'src/app/shared/models/templateTasks.model';\r\n\r\n@Component({\r\n    selector: 'editplanomodal',\r\n    templateUrl: './editplano.component.html',\r\n    styleUrls: ['./editplano.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class PlanoPgmEditComponent implements OnInit {\r\n\r\n\r\n    baseUrl = environment.baseUrl;\r\n    public initProgressBar = 'visible'\r\n    public saveSpinner = 'hidden'\r\n    public showContent = false\r\n    public disabledContrato = false\r\n    public typePacotes: any[] = new Array<any>()\r\n    public contratos: any[] = new Array<any>()\r\n    public moduloForm: FormGroup;\r\n    private jwtHelper = new JwtHelperService();\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n   // public plano: any;\r\n    private originalPlano:any;\r\n    public disabledSpinner = false\r\n\r\n    constructor(\r\n        //private service: AdmService,\r\n        private _snackBar: MatSnackBar,\r\n        private router: Router,\r\n        private _fb: FormBuilder,\r\n        private _helper: HelpersService,\r\n        private _http: HttpClient,\r\n        public dialogRef: MatDialogRef<PlanoPgmEditComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n            this.moduloForm = _fb.group({\r\n                id:[''],\r\n                typePacoteId: ['', [Validators.required]],\r\n                descricao: ['', [Validators.required]],\r\n                valor: ['', [Validators.required]],\r\n                taxaMatricula: [0.00],\r\n                materialGratuito: ['', [Validators.required]],\r\n                valorMaterial: [0.00],\r\n                bonusPontualidade: [0.00],\r\n                contratoId: ['', [Validators.required]],\r\n                ativo: [true]\r\n    \r\n            })\r\n    }\r\n\r\n    ngOnInit() {\r\n        const token = localStorage.getItem('jwt')\r\n        this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n       // this.plano = this.data['plano']\r\n       // console.log(this.plano)\r\n        this.GetPlano()\r\n    }\r\n\r\n    private GetPlano() {\r\n\r\n        this._http.get(`${this.baseUrl}/plano-pagamento/${this.data['plano'].id}`)\r\n            .subscribe(resp => {\r\n               // this.plano = resp['plano']\r\n                this.moduloForm.patchValue(resp['plano'])\r\n                this.originalPlano = JSON.parse(JSON.stringify(this.moduloForm.value))\r\n                this.typePacotes = resp['typePacotes']\r\n                this.contratos = resp['contratos']\r\n              //  console.log(this.plano)\r\n            },\r\n                (error) => { console.log(error) },\r\n                () => {\r\n                    this.initProgressBar = 'hidden'\r\n                    this.showContent = true\r\n                   // console.log(this.typePacotes)\r\n                 })\r\n    }\r\n\r\n    getContratos(typePacoteId) {\r\n      //  this.moduloForm.get('contratoId').setValue('')\r\n      this.contratos = new Array<any>()\r\n      this.moduloForm.get('contratoId').setValue('')\r\n      this.disabledContrato = true\r\n        this.contratos = new Array<any>();\r\n        this._http.get(`${this.baseUrl}/contrato/type-pacote/${typePacoteId}`)\r\n            .subscribe(resp => {\r\n                this.disabledContrato = false\r\n                this.contratos = resp['contratos']\r\n            },\r\n                (error) => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n\r\n                })\r\n\r\n    }\r\n\r\n    get disabledSaveButton(){\r\n\r\n        if (this.moduloForm.valid &&\r\n            JSON.stringify(this.originalPlano) !=\r\n            JSON.stringify(this.moduloForm.value)) {\r\n\r\n            return this.saveSpinner != 'hidden'\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n\r\n    isDisabled = true\r\n    onSubmit(form: any) {\r\n       // console.log(this.plano)\r\n      //  console.log(form.valid)\r\n        if (this.moduloForm.valid) {\r\n            this.saveSpinner = 'visible'\r\n            this.isDisabled = true\r\n            this.disabledSpinner = true\r\n            this._http.put(`${this.baseUrl}/plano-pagamento`, this.moduloForm.value, {})\r\n                .subscribe(response => {\r\n                }, (err) => { console.log(err) },\r\n                    () => {\r\n                        \r\n                        this.disabledSpinner = false\r\n                        this._helper.openSnackBarSucesso('Plano editado com sucesso.')\r\n                        this.dialogRef.close({ clicked: \"OK\" });\r\n                    });\r\n        }\r\n    }\r\n}","<div style=\"font-size: 1.2em;\">Editar Plano de Pagamento\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n</div>\r\n\r\n<mat-progress-bar [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<div @rowHighlight *ngIf=\"initProgressBar == 'hidden'\">\r\n\r\n    <hr>\r\n\r\n     <form novalidate [formGroup]=\"moduloForm\" (ngSubmit)=\"onSubmit(moduloForm)\">\r\n\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 65%;\">\r\n            <mat-label>Tipo/Pacote</mat-label>\r\n            <mat-select formControlName=\"typePacoteId\">\r\n                <mat-option (click)=\"getContratos(type.id)\" [value]=\"type.id\" *ngFor=\"let type of typePacotes\">\r\n                    {{type.nome}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-slide-toggle style=\"width: 8%;margin-left: 27%; \" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n            matTooltip=\"ativo/inativo\" matTooltipPosition=\"above\" formControlName=\"ativo\"\r\n            matTooltipHideDelay=\"250\" color=\"primary\">\r\n        </mat-slide-toggle>\r\n        <!-- <mat-slide-toggle style=\"width: 20%; margin-left: 5%;\" class=\"autoPagination-slide\" #tooltip=\"matTooltip\"\r\n        [(ngModel)]=\"plano.descricao\" name=\"Descricao\" required matTooltip=\"ativo/inativo\"\r\n            matTooltipPosition=\"above\" matTooltipHideDelay=\"250\" color=\"primary\">\r\n        </mat-slide-toggle> -->\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 75%;\">\r\n            <mat-label>Descrição</mat-label>\r\n            <input selected formControlName=\"descricao\" matInput placeholder=\"Descrição\">\r\n        </mat-form-field>\r\n\r\n\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%; \">\r\n            <mat-label>Valor</mat-label>\r\n            <input selected formControlName=\"valor\" currencyMask\r\n                [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" placeholder=\"00,00\" matInput>\r\n            <span matPrefix>R$&nbsp;</span>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 5% \">\r\n            <mat-label>Taxa Matrícua</mat-label>\r\n            <input formControlName=\"taxaMatricula\" currencyMask\r\n                [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" type=\"text\" selected matInput\r\n                placeholder=\"R$ 00,00\">\r\n            <span matPrefix>R$&nbsp;</span>\r\n        </mat-form-field>\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 5%; \">\r\n            <mat-label>Bonus Pontualidade</mat-label>\r\n            <input currencyMask [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\"\r\n            formControlName=\"bonusPontualidade\" type=\"text\" selected matInput\r\n                placeholder=\"R$ 00,00\">\r\n            <span matPrefix>R$&nbsp;</span>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 40%\">\r\n            <mat-label>Material Gratuito</mat-label>\r\n            <mat-select formControlName=\"materialGratuito\" placeholder=\"\">\r\n                <mat-option [value]=\"true\">Sim</mat-option>\r\n                <mat-option [value]=\"false\">Não</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 30%;margin-left: 5%; \">\r\n            <mat-label>Valor Material</mat-label>\r\n            <input selected formControlName=\"valorMaterial\" currencyMask\r\n                [options]=\"{ prefix: '', thousands: '.', decimal: ',' }\" placeholder=\"R$ 00,00\" matInput>\r\n            <span matPrefix>R$&nbsp;</span>\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 55%;\">\r\n            <mat-label>Contrato</mat-label>\r\n            <mat-select [disabled]=\"disabledContrato\" formControlName=\"contratoId\" \r\n                placeholder=\"temRecuperacao\">\r\n                <mat-option [value]=\"cont.id\" *ngFor=\"let cont of contratos\">{{cont.titulo}}</mat-option>\r\n            </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-progress-bar [style.visibility]=\"saveSpinner\" mode=\"query\"></mat-progress-bar>\r\n\r\n\r\n\r\n        <button color=\"primary\" type=\"submit\" [disabled]=\"disabledSaveButton\" \r\n        mat-raised-button style=\"float:right;margin-bottom: 10px;\">\r\n            Salvar\r\n        </button>\r\n\r\n\r\n\r\n    </form>\r\n\r\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Colaborador } from \"src/app/_shared/models/colaborador.model\";\r\nimport { Cargos, Unidades } from \"src/app/_shared/models/perfil.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Fornecedor } from \"../FinanceiroModels/fornecedor.model\";\r\nimport { FinanceiroService } from \"../models/financ.service\";\r\nimport { CreateFornecedorModal, EditFornecedorModal } from \"../models/financ-modal.config\";\r\nimport { FornecedorCompraComponent } from \"./cadastrocompra/fornecedorcadcompra.component\";\r\nimport { FornecedorVendaComponent } from \"./cadastrovenda/fornecedorcadvenda.component\";\r\nimport { CreateFornecedorComponent } from \"./createfornecedor/createfornecedor.component\";\r\nimport { EditFornecedorComponent } from \"./editfornecedor/editfornecedor.component\";\r\n\r\n@Component({\r\n    selector: \"fornecedores-app\",\r\n    templateUrl: './fornecedores.component.html',\r\n    styleUrls: ['./fornecedores.component.scss'],\r\n    animations: [HighlightTrigger]\r\n})\r\n\r\nexport class FornecedoresComponent implements OnInit {\r\n\r\n    //baseUrl = environment.baseUrl;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator\r\n    public  length: number = 0\r\n    public pageSize: number = 5;\r\n    // pageEvent: PageEvent;\r\n    public pageIndexNumber: number = 0;\r\n    private currentPage = 1\r\n    \r\n\r\n    // formSubmitted: boolean = false;\r\n    // showTable: boolean = false;\r\n    public spinnerSearch = 'hidden'\r\n    //showSpinner = false\r\n    public fornecedores: any[] = new Array<any>();\r\n    // showSpinnerFirst = false\r\n\r\n    // showMessage: boolean = false;\r\n    // cargos = Cargos;\r\n    // unidades = Unidades\r\n    public showMessageNoData = false\r\n    public mensagem: string = \"\";\r\n    //public fornecedores: any;\r\n    public pesquisarForm: FormGroup\r\n    public tokenInfo: TokenInfos = new TokenInfos();\r\n    private jwtHelper = new JwtHelperService();\r\n\r\n    //pagination\r\n\r\n\r\n    constructor(\r\n       // private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _finService: FinanceiroService,\r\n        private _modal: MatDialog\r\n        //private EditColaboradoresModal: MatDialog\r\n    ) { \r\n        this.pesquisarForm = _fb.group({\r\n            nome: ['', [Validators.required]],\r\n            email: ['', [Validators.required]],\r\n            cpf: ['', [Validators.required]],\r\n            ativo: [false]\r\n        });\r\n\r\n        this.pesquisarForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n\r\n                if (this.pesquisarForm.get('nome').value == '' &&\r\n                    this.pesquisarForm.get('email').value == '' &&\r\n                    this.pesquisarForm.get('cpf').value == '') {\r\n\r\n                    this.pesquisarForm.controls['nome'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['email'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['cpf'].setErrors({ required: true });\r\n                } else {\r\n                    this.pesquisarForm.controls['nome'].setErrors(null);\r\n\r\n                    this.pesquisarForm.controls['email'].setErrors(null)\r\n\r\n                    this.pesquisarForm.controls['cpf'].setErrors(null);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n\r\n\r\n    public Pesquisar(event?: any) {\r\n\r\n        this.showMessageNoData = false\r\n\r\n        if (this.pesquisarForm.valid) {\r\n            this.spinnerSearch = 'visible'\r\n\r\n            if (event != undefined) {\r\n                this.currentPage = event.pageIndex + 1\r\n            } else {\r\n                this.currentPage = 1\r\n            }\r\n\r\n            this._finService.GetFornecedores(this.pageSize, this.currentPage, this.pesquisarForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.processarSucesso(sucesso, event) },\r\n                    falha => { this.processarFalha(falha) }\r\n                );\r\n        }\r\n\r\n    }\r\n\r\n    processarSucesso(response: any, event?: any) {\r\n       // console.log(response)\r\n       // console.log()\r\n        this.fornecedores = Object.assign([], response['data']);\r\n\r\n        this.length = response['totalItemsInDatabase']\r\n\r\n        this.spinnerSearch = 'hidden'\r\n        if (event != undefined) {\r\n            this.pageIndexNumber = (event.pageIndex * this.pageSize)\r\n        } else {\r\n            this.pageIndexNumber = 0\r\n            //console.log(this.paginator)\r\n            if (this.paginator != undefined) {\r\n                this.paginator.firstPage();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    processarFalha(fail: any) {\r\n\r\n        if (fail['status'] == 404) {\r\n            this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n            this.showMessageNoData = true\r\n            this.fornecedores = new Array<any>();\r\n        }\r\n        if (fail['status'] != 404) {\r\n            this.mensagem = \"Ocorreu um erro desconhecido, por favor, procure o administrador do sistema\"\r\n            this.showMessageNoData = true\r\n            this.fornecedores = new Array<any>();\r\n        }\r\n\r\n        this.spinnerSearch = 'hidden'\r\n    }\r\n\r\n\r\n    openCreateFornecedorModal(): void {\r\n        const dialogRef = this._modal\r\n            .open(CreateFornecedorComponent, CreateFornecedorModal());\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n\r\n        });\r\n    }\r\n\r\n    OpenEditFornecedorModal(fornecedor): void {\r\n        const dialogRef = this._modal\r\n            .open(EditFornecedorComponent, EditFornecedorModal(fornecedor.id));\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n\r\n        });\r\n    }\r\n    \r\n    // openCreateFornecedorModal(): void {\r\n    //     const dialogRef = this._modal\r\n    //         .open(CreateFornecedorComponent, {\r\n    //             height: 'auto',\r\n    //             width: '1030px',\r\n    //             autoFocus: false,\r\n    //             maxHeight: '90vh',\r\n    //             maxWidth: '400vh',\r\n\r\n    //             data: { Hello: \"Hello World\" },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n\r\n\r\n    //     dialogRef.afterClosed().subscribe((data) => {\r\n    //         if (data.clicked === \"Ok\") {\r\n    //             // Reset form here\r\n    //             console.log('afte close ok')\r\n    //             //this.getColaboradores(1, this.pageSize);\r\n    //         } else if (data.clicked === \"Cancel\") {\r\n    //             // Do nothing. Cancel any events that navigate away from the\r\n    //             // component.\r\n    //         }\r\n    //     });\r\n    // }\r\n    chooseSearch = \"\"\r\n    // openEditUserModal(fornecedor: Fornecedor): void {\r\n    //     const dialogRef = this._modal\r\n    //         .open(EditFornecedorComponent, {\r\n    //             height: 'auto',\r\n    //             width: '1030px',\r\n    //             autoFocus: false,\r\n    //             maxHeight: '90vh',\r\n    //             maxWidth: '400vh',\r\n\r\n    //             data: { fornecedor: fornecedor },\r\n    //             hasBackdrop: true,\r\n    //             disableClose: true\r\n    //         });\r\n\r\n\r\n    //     dialogRef.afterClosed().subscribe((data) => {\r\n    //         if (data.clicked === \"Ok\") {\r\n    //             // Reset form here\r\n    //             console.log('afte close ok')\r\n    //             console.log(this.chooseSearch)\r\n    //             //this.getColaboradores(1, this.pageSize);\r\n    //         } else if (data.clicked === \"Cancel\") {\r\n    //             // Do nothing. Cancel any events that navigate away from the\r\n    //             // component.\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    openFornecedorVenda(fornecedor: Fornecedor): void {\r\n        const dialogRef = this._modal\r\n            .open(FornecedorVendaComponent, {\r\n                height: 'auto',\r\n                width: '600px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                maxWidth: '400vh',\r\n\r\n                data: { fornecedor: fornecedor },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                // Reset form here\r\n               // console.log('afte close ok')\r\n             //   console.log(this.chooseSearch)\r\n                //this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n\r\n    openFornecedorCompra(fornecedor: Fornecedor): void {\r\n        const dialogRef = this._modal\r\n            .open(FornecedorCompraComponent, {\r\n                height: 'auto',\r\n                width: '600px',\r\n                autoFocus: false,\r\n                maxHeight: '90vh',\r\n                maxWidth: '400vh',\r\n\r\n                data: { fornecedor: fornecedor },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"Ok\") {\r\n                // Reset form here\r\n                //console.log('afte close ok')\r\n               // console.log(this.chooseSearch)\r\n                //this.getColaboradores(1, this.pageSize);\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n    deleteColaborador() { }\r\n\r\n}\r\n","<div class=\"container\" style=\"width: 95%; padding-top: 20px;\">\r\n\r\n    <div>\r\n        <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"cadastrar fornecedor\" matTooltipPosition=\"above\"\r\n            matTooltipHideDelay=\"100\">\r\n            <button (click)=\"openCreateFornecedorModal()\" mat-icon-button>\r\n                <mat-icon>person_add_alt</mat-icon>\r\n            </button>\r\n        </i>\r\n    </div>\r\n\r\n    <br>\r\n\r\n\r\n    <form class=\"form-inline siteForm\" [formGroup]=\"pesquisarForm\" (ngSubmit)=\"Pesquisar()\"\r\n        style=\"margin-top: 5px;display: inline-block\">\r\n\r\n        <span style=\"font-size: 0.9em;font-style: italic;\">Digite ao menos um dos campos para\r\n            pesquisar pelo fornecedor:\r\n        </span>\r\n\r\n        <div class=\"form-row align-items-center\">\r\n\r\n            <mat-form-field appearance=\"standard\">\r\n                <mat-label>Nome/Razão social</mat-label>\r\n                <input selected formControlName=\"nome\" matInput placeholder=\"digite o nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\">\r\n                <mat-label>E-mail</mat-label>\r\n                <input selected formControlName=\"email\" matInput placeholder=\"digite o E-mail\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\">\r\n                <mat-label>CPF/CNPJ</mat-label>\r\n                <input selected formControlName=\"cpf\" matInput placeholder=\"digite o CPF\">\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                    <button type=\"submit\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n    <div class=\"card-header card-msg-response\" unselectable=\"on\" *ngIf=\"showMessageNoData\">{{mensagem}}</div>\r\n\r\n\r\n    <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"spinnerSearch\" @rowHighlight style=\"margin:0px\"\r\n        mode=\"query\">\r\n    </mat-progress-bar>\r\n\r\n    <div *ngIf=\"fornecedores.length > 0\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n            position: relative;\r\n            margin-top: 50px;\r\n            box-shadow: 0 0 1em rgb(172, 170, 170);\r\n            background-color: rgb(227, 240, 227);\">\r\n\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Fornecedores</h4>\r\n            <p class=\"card-category\">Fornecedores localizados no sistema: </p>\r\n        </div>\r\n\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 430px;position: relative;\">\r\n\r\n                <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 22%;font-size:1em;\r\n                                    vertical-align: middle;\r\n                                    text-align:left;\r\n                    border-top: 0px;\">NOME</th>\r\n\r\n                            <th style=\"width: 20%;font-size:1em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px;\">CPF/CNJP</th>\r\n\r\n                            <!-- <th style=\"width: 20%;font-size:1.2em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Perfil</th> -->\r\n\r\n                            <th style=\"width: 10%;font-size:1em;\r\n                    text-align:center; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\">ATIVO</th>\r\n\r\n                            <!-- <th style=\"width: 6%;\r\n                    border-top: 0px;\"></th> -->\r\n\r\n                            <th style=\"width: 26%;text-align:center; \r\n                            vertical-align: middle;\r\n                    border-top: 0px;\">\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr @rowHighlight *ngFor=\"let forn of fornecedores; let i = index;\">\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{i +1}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{forn.razaoSocial}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{forn.cnpj_cpf}}</td>\r\n\r\n                            <!-- <td style=\"text-align: center;vertical-align: middle;\">{{forn.email}}</td> -->\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                <div *ngIf=\"forn.ativo;else inativo\">\r\n\r\n                                    <mat-icon style=\"margin: 0px; margin: 0px;\r\n                                        background-color: rgb(227, 240, 227);;color: green;\" style=\"color: green;\">\r\n                                        done</mat-icon>\r\n\r\n\r\n                                </div>\r\n                                <ng-template #inativo>\r\n\r\n                                    <mat-icon style=\"background-color: rgb(227, 240, 227);\r\n                                            margin: 0px; margin: 0px;color: red; \">close</mat-icon>\r\n\r\n\r\n                                </ng-template>\r\n\r\n                            </td>\r\n\r\n                            <td >\r\n\r\n                                <i style=\"margin-right: 5%;margin-left: 5%\" #tooltip=\"matTooltip\" matTooltip=\"editar\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"OpenEditFornecedorModal(forn)\" style=\"background-color: rgb(227, 240, 227);\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon >edit</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n                                <i style=\"margin-right: 5%\" #tooltip=\"matTooltip\" matTooltip=\"cadastrar compra\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openFornecedorCompra(forn)\" disabled\r\n                                        style=\"background-color: rgb(227, 240, 227)\" mat-icon-button>\r\n                                        <mat-icon>paid</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n\r\n                                <!-- </td>\r\n                            <td style=\"position: relative;\"> -->\r\n\r\n                                <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"cadastrar venda\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button (click)=\"openFornecedorVenda(forn)\" disabled\r\n                                        style=\"background-color: rgb(227, 240, 227)\" mat-icon-button>\r\n                                        <mat-icon>shopping_cart</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                                <!-- <i style=\"\" #tooltip=\"matTooltip\" matTooltip=\"cadastrar venda\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button disabled (click)=\"openFornecedorVenda(forn)\"\r\n                                        style=\"background-color: rgb(227, 240, 227)\" mat-icon-button>\r\n                                        <mat-icon>shopping_cart</mat-icon>\r\n                                    </button>\r\n                                </i> -->\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <!-- <tr *ngFor=\"let item of fornecedores;let i = index;\" @rowHighlight>\r\n                            <td style=\"text-align:center;vertical-align: middle;\">\r\n                                {{(i + 1)+(pageIndexNumber)}}\r\n                            </td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.email}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.perfil || 'Sem perfil'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                                <div *ngIf=\"item.ativo == true;else inativo\">\r\n\r\n                                    <mat-icon style=\"margin: 0px; margin: 0px;\r\n                                        background-color: rgb(227, 240, 227);;color: green;\" style=\"color: green;\">\r\n                                        done_outline</mat-icon>\r\n                                    \r\n\r\n                                </div>\r\n                                <ng-template #inativo>\r\n\r\n                                    <mat-icon style=\"background-color: rgb(227, 240, 227);\r\n                                            margin: 0px; margin: 0px;color: red; \">close</mat-icon>\r\n\r\n\r\n                                </ng-template>\r\n\r\n                            </td>\r\n\r\n                            <td style=\"position: relative;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                    matTooltip=\"Visualizar/Editar\" matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"openEditUserModal(item)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>settings</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                            </td>\r\n                            <td style=\"position: relative;\">\r\n\r\n                                <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"deletar\"\r\n                                    matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                    <button [disabled]=\"showSpinner\" (click)=\"deleteColaborador(item.id)\"\r\n                                        style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                        mat-icon-button>\r\n                                        <mat-icon>delete_outline</mat-icon>\r\n                                    </button>\r\n                                </i>\r\n\r\n                            </td>\r\n                        </tr> -->\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n            <!-- <mat-paginator *ngIf=\"length > 5\" style=\"\r\n                background-color: rgb(227, 240, 227);\r\n                bottom: 0px;\r\n                right: 0px;\" [length]=\"length\" [pageSize]=\"5\" hidePageSize=\"true\" (page)=\"pageEvent = $event\"\r\n                (click)=\"changePage(pageEvent)\">\r\n            </mat-paginator> -->\r\n\r\n        </div>\r\n\r\n        <!-- <mat-spinner @rowHighlight *ngIf=\"showSpinner\" [diameter]=\"100\" style=\"margin-left: 46.5%;\r\n            top: 46.5%; \r\n            position: absolute;\">\r\n        </mat-spinner> -->\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { BaseService } from 'src/app/_shared/services/base.service';\r\n\r\n\r\n@Injectable()\r\nexport class FinanceiroService extends BaseService {\r\n    \r\n    constructor(private http: HttpClient) { super(); }\r\n\r\n    // registrarUsuario(usuario: Usuario) : Observable<Usuario> {\r\n    //     let response = this.http\r\n    //         .post(this.UrlServiceV1 + 'nova-conta', usuario, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n            \r\n    //         return response;\r\n    // }\r\n\r\n    // Fornecedores\r\n\r\n    public GetFornecedores(pageSize?: number, currentPage?: number, jsonParam?: any) : Observable<any> {       \r\n        \r\n        var formJson = JSON.stringify(jsonParam)\r\n\r\n        let path = `/fornecedores/?itemsPerPage=` + pageSize + `&currentPage=${currentPage}&paramsJson=${formJson}`\r\n        \r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    public GetFornecedorById(id) : Observable<any> {   \r\n\r\n        let path = `/fornecedores/${id}`\r\n        \r\n        let response = this.http\r\n            .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n\r\n    public SaveFornecedor(form) : Observable<any> {       \r\n        \r\n        let path = `/fornecedores`\r\n        \r\n        let response = this.http\r\n            .post(this.BaseUrl + path, form, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    public EditFornecedor(form) : Observable<any> {       \r\n        \r\n        let path = `/fornecedores`\r\n        \r\n        let response = this.http\r\n            .put(this.BaseUrl + path, form, this.ObterHeaderJson())\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    // CEP\r\n\r\n    public CepConsulta(CEP?: any) : Observable<any> {       \r\n        \r\n        let url = `https://viacep.com.br/ws/${CEP}/json/`\r\n        \r\n        let response = this.http\r\n            .get(url)\r\n            .pipe(\r\n                map(this.extractData),\r\n                catchError(this.serviceError));\r\n            \r\n            return response;\r\n    }\r\n\r\n    // getTypePacotes() : Observable<any> {  \r\n\r\n    //     let path = `/typepacote`\r\n        \r\n    //     let response = this.http\r\n    //         .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n            \r\n    //         return response;\r\n    // }\r\n\r\n    // getSystemRoles() : Observable<any> {  \r\n\r\n    //     let path = `/usuario/roles`\r\n        \r\n    //     let response = this.http\r\n    //         .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n            \r\n    //         return response;\r\n    // }\r\n\r\n    // getMateriasByTypeId(typePacoteId: any) : Observable<any>{\r\n    //     // /materia-template/filtro/${typeId}\r\n    //     let path = `/materia-template/filtro/${typePacoteId}`\r\n        \r\n    //     let response = this.http\r\n    //         .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n            \r\n    //         return response;\r\n    // }\r\n\r\n    // saveProfessorMateria(profId: any,materiaId: any ) : Observable<any>{\r\n    //     // /materia-template/filtro/${typeId}\r\n    //     let path = `/professor/materia/${profId}/${materiaId}`\r\n        \r\n    //     let response = this.http\r\n    //         .post(this.BaseUrl + path, {}, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n            \r\n    //         return response;\r\n    // }\r\n\r\n    // editDisponibilidade(dispo: any) : Observable<any>{\r\n    //     // /materia-template/filtro/${typeId}\r\n    //     let path = `/professor/disponibilidade`\r\n        \r\n    //     let response = this.http\r\n    //         .put(this.BaseUrl + path, dispo, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n            \r\n    //         return response;\r\n    // }\r\n\r\n    // editUsuario(usuario: any) : Observable<any>{\r\n\r\n    //     let path = `/usuario`\r\n        \r\n    //     let response = this.http\r\n    //         .put(this.BaseUrl + path, usuario, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n            \r\n    //         return response;\r\n    // }\r\n\r\n    // CepConsulta(CEP?: any) : Observable<any> {       \r\n        \r\n    //     let url = `https://viacep.com.br/ws/${CEP}/json/`\r\n        \r\n    //     let response = this.http\r\n    //         .get(url)\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n            \r\n    //         return response;\r\n    // }\r\n\r\n    // // MODULOS\r\n\r\n    // pesquisarPacote(typePacoteId:any, unidadeId:any): Observable<any>{\r\n\r\n    //     let path = `/pacote/${typePacoteId}/${unidadeId}`\r\n        \r\n    //     let response = this.http\r\n    //         .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n            \r\n    //         return response;\r\n\r\n    // }\r\n\r\n    // GetCreateModuleViewModel(): Observable<any>{\r\n\r\n    //     let path = `/pacote/create`\r\n        \r\n    //     let response = this.http\r\n    //         .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n            \r\n    //         return response;\r\n\r\n    // }\r\n\r\n    // GetEditModuleViewModel(pacoteId): Observable<any>{\r\n\r\n    //     let path = `/pacote/edit/${pacoteId}`\r\n        \r\n    //     let response = this.http\r\n    //         .get(this.BaseUrl + path, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n            \r\n    //         return response;\r\n\r\n    // }\r\n\r\n    // savePacote(newPacote): Observable<any>{\r\n\r\n    //     let path = `/pacote`\r\n        \r\n    //     let response = this.http\r\n    //         .post(this.BaseUrl + path, newPacote, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n            \r\n    //         return response;\r\n    // }\r\n\r\n    // editPacote(editedPacote): Observable<any>{\r\n\r\n    //     let path = `/pacote`\r\n        \r\n    //     let response = this.http\r\n    //         .put(this.BaseUrl + path, editedPacote, this.ObterHeaderJson())\r\n    //         .pipe(\r\n    //             map(this.extractData),\r\n    //             catchError(this.serviceError));\r\n            \r\n    //         return response;\r\n    // }\r\n\r\n\r\n    // console.log(CEP);\r\n    // if (CEP.length == 10) {\r\n\r\n\r\n    //     //var mystring = \"crt/r2002_2\";\r\n    //     CEP = CEP.replace('-', '');\r\n    //     CEP = CEP.replace('.', '');\r\n    //     console.log(CEP);\r\n    //     this.http.get(`https://viacep.com.br/ws/${CEP}/json/`, {})\r\n    //         .subscribe(response => {\r\n\r\n    //             //  console.log(response)\r\n    //             // this.cepReturn = new CepReturn(\r\n    //             //     response[\"logradouro\"],\r\n    //             //     response[\"bairro\"],\r\n    //             //     response[\"localidade\"],\r\n    //             //     response[\"uf\"]);\r\n    //             //console.log(this.cepReturn)\r\n    //             this.colaboradorForm.get('logradouro').setValue(response[\"logradouro\"].toUpperCase());\r\n    //             this.colaboradorForm.get('bairro').setValue(response[\"bairro\"].toUpperCase());\r\n    //             this.colaboradorForm.get('cidade').setValue(response[\"localidade\"].toUpperCase());\r\n    //             this.colaboradorForm.get('uf').setValue(response[\"uf\"].toUpperCase());\r\n    //             //this.bairro = this.cepReturn.bairro\r\n    //             // const token = (<any>response).accessToken;\r\n    //             // console.log(response)\r\n    //             // localStorage.setItem(\"jwt\", token);\r\n    //             // this.invalidLogin = false;\r\n    //             // this.router.navigate([\"/main\"]);\r\n    //         }, err => { console.log(err) },\r\n    //             () => {\r\n    //                 //  console.log('finaly')\r\n    //                 this.showEndereco = true\r\n      \r\n\r\n\r\n}","import { HttpClient, HttpEvent, HttpEventType, HttpHeaders, HttpRequest } from \"@angular/common/http\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { MatPaginator, PageEvent } from \"@angular/material/paginator\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Parametros } from \"src/app/Adm/colaboradores/colaboradores.component\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { Aluno } from \"src/app/_shared/models/aluno.model\";\r\nimport { CepReturn } from \"src/app/_shared/models/cepreturn.model\";\r\nimport { AlunoDocument, AlunoDto } from \"src/app/_shared/models/document.model\";\r\nimport { TokenInfos } from \"src/app/_shared/models/token.model\";\r\n\r\nimport { environment } from \"src/environments/environment\";\r\nimport { InfoCadastraisComponent } from \"../Matricula/InfoCad/info-cadastrais.component\";\r\nimport { PedagogicoService } from \"../service/pedagogico.service\";\r\n\r\n@Component({\r\n    selector: \"estagiosdocs-app\",\r\n    templateUrl: './estagiosdocs.component.html',\r\n    styleUrls: ['./estagiosdocs.component.scss'],\r\n    animations: [HighlightTrigger]\r\n\r\n})\r\n\r\nexport class EstagiosDocsComponent implements OnInit {\r\n\r\n\r\n\r\n    //private baseUrl = environment.baseUrl;\r\n\r\n    //public cepReturn: CepReturn = new CepReturn();\r\n    //public docsViewModel: AlunoDto[] = new Array<AlunoDto>();\r\n    //estagioForm: FormGroup\r\n    //analise: any\r\n    pageSize: number = 5;\r\n    pageEvent: PageEvent;\r\n    pageIndexNumber: number = 0;\r\n    currentPage = 1\r\n    length: number = 0\r\n\r\n    public showMessageNoAluno = false\r\n    public listAlunos: any[] = new Array<any>()\r\n    public spinnerSearch = 'hidden'\r\n    public pesquisarForm: FormGroup\r\n    public mensagem = ''\r\n    // public estagios: any[] = new Array<any>();\r\n    // private jwtHelper = new JwtHelperService();\r\n    // tokenInfo: TokenInfos = new TokenInfos();\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n    constructor(\r\n        // private _snackBar: MatSnackBar,\r\n        //private _modal: MatDialog,\r\n        // private _http: HttpClient,\r\n        private _modal: MatDialog,\r\n        private _pedagService: PedagogicoService,\r\n        private _fb: FormBuilder\r\n        //private CreateColaboradoresModal: MatDialog,\r\n        //private EditColaboradoresModal: MatDialog\r\n    ) {\r\n        this.pesquisarForm = _fb.group({\r\n            nome: ['', [Validators.required]],\r\n            email: ['', [Validators.required]],\r\n            cpf: ['', [Validators.required]],\r\n            ativo: [false],\r\n            todasUnidades: [false],\r\n        });\r\n\r\n        this.pesquisarForm.valueChanges.subscribe(\r\n            (form: any) => {\r\n                // console.log('form changed to:', form);\r\n                if (this.pesquisarForm.get('nome').value == '' &&\r\n                    this.pesquisarForm.get('email').value == '' &&\r\n                    this.pesquisarForm.get('cpf').value == '') {\r\n                    //  console.log('false valid')\r\n\r\n                    this.pesquisarForm.controls['nome'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['email'].setErrors({ required: true });\r\n                    this.pesquisarForm.controls['cpf'].setErrors({ required: true });\r\n                    // this.pesquisarForm.setErrors({required: true});\r\n                } else {\r\n                    //   console.log('true valid')\r\n                    this.pesquisarForm.controls['nome'].setErrors(null);\r\n\r\n                    this.pesquisarForm.controls['email'].setErrors(null)\r\n\r\n                    this.pesquisarForm.controls['cpf'].setErrors(null);\r\n\r\n                    //this.pesquisarForm.setErrors({required: false});\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n        );\r\n        // this.pesquisarForm = _fb.group({\r\n        //     nome: ['', [Validators.required]],\r\n        //     email: ['', [Validators.required]],\r\n        //     cpf: ['', [Validators.required]],\r\n        //     ativo: [false]\r\n        // });\r\n\r\n    }\r\n    ngOnInit() {\r\n\r\n\r\n        //const token = localStorage.getItem('jwt')\r\n        // this.tokenInfo = this.jwtHelper.decodeToken(token)\r\n\r\n        // console.log('init matricula')\r\n        // this.getInfoEstagios();\r\n    }\r\n\r\n    public Pesquisar(event?: any) {\r\n\r\n\r\n        this.showMessageNoAluno = false\r\n\r\n        if (this.pesquisarForm.valid) {\r\n            this.spinnerSearch = 'visible'\r\n\r\n            if (event != undefined) {\r\n                this.currentPage = event.pageIndex + 1\r\n            } else {\r\n                this.currentPage = 1\r\n            }\r\n\r\n\r\n            this._pedagService.GetAlunosEstagio(this.pageSize, this.currentPage, this.pesquisarForm.value)\r\n                .subscribe(\r\n                    sucesso => { this.ProcessarSucesso(sucesso, event) },\r\n                    falha => { this.ProcessarFalha(falha) }\r\n                );\r\n        }\r\n    }\r\n\r\n    private ProcessarSucesso(response: any, event?: any) {\r\n\r\n        this.listAlunos = Object.assign([], response['data']);\r\n\r\n        this.length = response['totalItemsInDatabase']\r\n\r\n        this.spinnerSearch = 'hidden'\r\n        if (event != undefined) {\r\n            this.pageIndexNumber = (event.pageIndex * this.pageSize)\r\n        } else {\r\n            this.pageIndexNumber = 0\r\n\r\n            if (this.paginator != undefined) {\r\n                this.paginator.firstPage();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private ProcessarFalha(fail: any) {\r\n\r\n        if (fail['status'] == 404) {\r\n            this.mensagem = \"Sua pesquisa não encontrou nenhum registro correspondente\"\r\n            this.showMessageNoAluno = true\r\n            this.listAlunos = new Array<any>();\r\n        }\r\n        if (fail['status'] != 404) {\r\n            this.mensagem = \"Ocorreu um erro desconhecido, por favor, procure o administrador do sistema\"\r\n            this.showMessageNoAluno = true\r\n            this.listAlunos = new Array<any>();\r\n        }\r\n\r\n        this.spinnerSearch = 'hidden'\r\n    }\r\n\r\n    public viewInfoCadastrais(aluno): void {\r\n        const dialogRef = this._modal\r\n            .open(InfoCadastraisComponent, {\r\n                height: 'auto',\r\n                width: '1000px',\r\n                autoFocus: false,\r\n                maxHeight: '400vhvh',\r\n\r\n                data: { aluno: aluno },\r\n                hasBackdrop: true,\r\n                disableClose: true\r\n            });\r\n\r\n        dialogRef.afterClosed().subscribe((data) => {\r\n            if (data.clicked === \"OK\") {\r\n                this.Pesquisar();\r\n                console.log(JSON.stringify(this.pesquisarForm.value))\r\n            } else if (data.clicked === \"Cancel\") {\r\n                // Do nothing. Cancel any events that navigate away from the\r\n                // component.\r\n            }\r\n        });\r\n    }\r\n    \r\n    public matricular(aluno) {\r\n\r\n    }\r\n\r\n\r\n    // exportar(doc: AlunoDocument) {\r\n    //     //..console.log(doc:Document)\r\n    //     var file = doc.nome;// \"Modelo LEAD.xlsx\";// this.createFileName(\"EXCEL\");\r\n    //     // this.showSpinner = true;\r\n    //     // this.testehabilitar = false\r\n\r\n    //     this.download(doc.alunoId, doc.docId).subscribe(data => {\r\n    //         //console.log(data)\r\n    //         switch (data.type) {\r\n    //             case HttpEventType.Response:\r\n    //                 // this.showSpinner = false;\r\n    //                 //this.downloadStatus.emit( {status: ProgressStatusEnum.COMPLETE});\r\n    //                 const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n    //                 const a = document.createElement('a');\r\n    //                 a.setAttribute('style', 'display:none;');\r\n    //                 document.body.appendChild(a);\r\n    //                 a.download = file;\r\n    //                 a.href = URL.createObjectURL(downloadedFile);\r\n    //                 a.target = '_blank';\r\n    //                 a.click();\r\n    //                 document.body.removeChild(a);\r\n    //                 break;\r\n    //         }\r\n    //     },\r\n    //         (err) => {\r\n    //             //this.showSpinner = false;\r\n    //             //this.testehabilitar = true;\r\n    //         },\r\n    //         () => {\r\n    //             //this.showSpinner = false;\r\n    //             // this.testehabilitar = true;\r\n    //         }\r\n    //     );\r\n    // }\r\n\r\n    // public download(alunoid: number, docId: number): Observable<HttpEvent<Blob>> {\r\n    //     return this._http.request(new HttpRequest(\r\n    //         'GET', `${this.baseUrl}/estagios/file/?alunoid=${alunoid}&docid=${docId}`, null, {\r\n    //         reportProgress: true,\r\n    //         responseType: 'blob'\r\n    //     }));\r\n    // }\r\n\r\n    // aprovar(aluno: AlunoDto, doc: AlunoDocument) {\r\n    //     //var index1 = this.docsViewModel.findIndex(d => d.id == doc.docId)\r\n    //     // var index1 = this.docsViewModel.findIndex(a => a.id == aluno.id)\r\n    //     // var index2 = this.docsViewModel[index1].documentos.findIndex(a => a.docId == doc.docId)\r\n    //     // console.log(index1)\r\n    //     // console.log(index2)\r\n\r\n    //     // this.docsViewModel[index1].documentos[index2].analisado = true\r\n    //     // this.docsViewModel[index1].documentos[index2].validado = true\r\n    //     var param = { alunoId: aluno.id, docId: doc.docId, validado: true }\r\n\r\n    //     this._http.put(`${this.baseUrl}/estagios`, param, {\r\n\r\n    //     }).subscribe(resp => { },\r\n    //         (error) => { console.log(error) },\r\n    //         () => {\r\n\r\n    //             var index1 = this.docsViewModel.findIndex(a => a.id == aluno.id)\r\n    //             var index2 = this.docsViewModel[index1].documentos.findIndex(a => a.docId == doc.docId)\r\n    //             this.docsViewModel[index1].documentos[index2].analisado = true\r\n    //             this.docsViewModel[index1].documentos[index2].validado = true\r\n\r\n\r\n    //         })\r\n\r\n    //     //this.analise = true\r\n    // }\r\n\r\n    // reprovar(aluno: AlunoDto, doc: AlunoDocument) {\r\n\r\n\r\n    //     var param = { alunoId: aluno.id, docId: doc.docId, validado: false }\r\n    //     this._http.put(`${this.baseUrl}/estagios`, param, {\r\n\r\n    //     }).subscribe(resp => { },\r\n    //         (error) => { console.log(error) },\r\n    //         () => {\r\n\r\n    //             var index1 = this.docsViewModel.findIndex(a => a.id == aluno.id)\r\n    //             var index2 = this.docsViewModel[index1].documentos.findIndex(a => a.docId == doc.docId)\r\n    //             this.docsViewModel[index1].documentos[index2].analisado = true\r\n    //             this.docsViewModel[index1].documentos[index2].validado = false\r\n\r\n    //         })\r\n    // }\r\n\r\n    // getInfoEstagios() {\r\n\r\n    //     this._http.get(`${this.baseUrl}/estagios/documentos`)\r\n    //         .subscribe(result => {\r\n\r\n    //             console.log(result)\r\n    //             Object.assign(this.docsViewModel, result['documentos'])\r\n    //            // Object.assign(this.estagios, result['estagios'])\r\n\r\n    //             console.log(this.docsViewModel)\r\n    //         },\r\n    //             (error) => { console.log(error) },\r\n    //             () => { })\r\n    // }\r\n    //EstagioCadastroComponent     cadastroEstagio\r\n    // cadastroEstagio(): void {\r\n    // const dialogRef = this._cadastroEstagioModal\r\n    //     .open(EstagioCadastroComponent, {\r\n    //         height: 'auto',\r\n    //         width: '600px',\r\n\r\n    //         data: { Hello: \"Hello World\" },\r\n    //         hasBackdrop: true,\r\n    //         disableClose: true\r\n    //     });\r\n\r\n\r\n    // dialogRef.afterClosed().subscribe((data) => {\r\n    //     if (data.clicked === \"Ok\") {\r\n    //         // Reset form here\r\n    //         console.log('afte close ok')\r\n    //         //this.getColaboradores(1, this.pageSize);\r\n    //     } else if (data.clicked === \"Cancel\") {\r\n    //         // Do nothing. Cancel any events that navigate away from the\r\n    //         // component.\r\n    //     }\r\n    // });\r\n    // }\r\n\r\n}\r\n\r\n","<!--\r\n<div class=\"container\">\r\n    <br>\r\n    <div @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n                position: relative;\r\n                margin-top: 20px;\r\n                box-shadow: 0 0 1em rgb(172, 170, 170);\r\n                background-color: rgb(227, 240, 227);\">\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Estágio/Documentações (Curso Técnico em Enfermagem)</h4>\r\n            <p class=\"card-category\">Documentações pendente de análise: </p>\r\n        </div>\r\n        <div class=\"card-body\">\r\n\r\n\r\n\r\n            <div *ngFor=\"let aluno of docsViewModel\" style=\"margin-bottom: 10px;\">\r\n\r\n                <div style=\"font-size: 1.2em;margin-bottom: 10px;\">\r\n                    <mat-icon style=\"vertical-align: middle; \r\n                    margin: 0px; margin: 0px;\">portrait</mat-icon>\r\n                    {{aluno.nome}}, CPF {{aluno.cpf}}, TODO: Turma x\r\n                </div>\r\n\r\n                <div *ngFor=\"let doc of aluno.documentos\">\r\n\r\n\r\n                    <span style=\"font-size: 1.2em;\">\r\n                        <mat-icon (click)=\"exportar(doc)\" type=\"button\" style=\"vertical-align: middle; \r\n                        margin: 0px; margin-bottom: 5px;\">save_alt</mat-icon>\r\n                        {{doc.nome}} ({{doc.descricao}})\r\n                    </span>\r\n\r\n\r\n                    <span *ngIf=\"doc.analisado;else analisar\">\r\n\r\n                        <mat-icon [style.color]=\"doc.validado? 'green':'red'\" style=\"vertical-align: middle; \r\n                        margin: 0px;color: green; margin-bottom: 5px;\">\r\n                            {{doc.validado? 'done' : 'close'}}\r\n                        </mat-icon>\r\n\r\n\r\n                    </span>\r\n\r\n                    <ng-template #analisar>\r\n                        <button style=\"\" class=\"analisar\" mat-button [matMenuTriggerFor]=\"menu\">\r\n                            analisar\r\n                        </button>\r\n                        <mat-menu #menu=\"matMenu\">\r\n                            <button (click)=\"aprovar(aluno,doc)\" mat-menu-item>\r\n                                <mat-icon style=\"vertical-align: middle; \r\n                        margin: 0px;color: green; margin-bottom: 5px;\">\r\n                                    done\r\n                                </mat-icon>\r\n                                aprovar\r\n                            </button>\r\n                            <button (click)=\"reprovar(aluno,doc)\" mat-menu-item>\r\n                                <mat-icon style=\"vertical-align: middle; \r\n                        margin: 0px;color: red; margin-bottom: 5px;\">\r\n                                    close\r\n                                </mat-icon>\r\n                                reprovar\r\n                            </button>\r\n                        </mat-menu>\r\n                    </ng-template>\r\n                    <br>\r\n                </div>\r\n                <hr>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n-->\r\n\r\n\r\n<div class=\"container\" style=\"width: 95%;padding-top: 20px; \">  \r\n\r\n\r\n    \r\n    <br>\r\n\r\n    <form [formGroup]=\"pesquisarForm\" (ngSubmit)=\"Pesquisar()\" class=\"form-inline siteForm\"\r\n        style=\"margin-top: 5px;display: inline-block\">\r\n        <span style=\"font-size: 0.9em;font-style: italic;\">Digite ao menos um dos campos para\r\n            pesquisar pelo aluno:</span>\r\n        <div class=\"form-row align-items-center divSiteForm\">\r\n\r\n            <mat-form-field appearance=\"standard\">\r\n                <mat-label>Nome</mat-label>\r\n                <input selected formControlName=\"nome\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"margin-left: 10px;\">\r\n                <mat-label>E-mail</mat-label>\r\n                <input selected formControlName=\"email\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"siteForm-select\" style=\"margin-left: 10px;\">\r\n                <mat-label>CPF</mat-label>\r\n                <input selected mask=\"000.000.000-00\" formControlName=\"cpf\" matInput placeholder=\"digite um nome\">\r\n            </mat-form-field>\r\n\r\n            <span>\r\n                <i style=\"margin-left: 5px;\" #tooltip=\"matTooltip\" matTooltip=\"pesquisar\" matTooltipPosition=\"above\"\r\n                    matTooltipHideDelay=\"100\">\r\n                    <button type=\"submit\" mat-icon-button>\r\n                        <mat-icon>search</mat-icon>\r\n                    </button>\r\n                </i>\r\n            </span>\r\n            <!-- <br>\r\n            <span style=\"font-size: 0.9em;font-style: italic;\">\r\n                incluir inativos:\r\n            </span>\r\n            <mat-checkbox formControlName=\"ativo\" color=\"primary\"></mat-checkbox>\r\n            <span style=\"margin-left: 10px;font-size: 0.9em;font-style: italic;\">\r\n                todas unidades:\r\n            </span>\r\n            <mat-checkbox formControlName=\"todasUnidades\" color=\"primary\"></mat-checkbox> -->\r\n\r\n        </div>\r\n\r\n    </form>\r\n\r\n    <div class=\"card-header card-msg-response\" unselectable=\"on\"\r\n     *ngIf=\"showMessageNoAluno\">{{mensagem}}</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"spinnerSearch\" @rowHighlight style=\"margin:0px\" mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n\r\n    <div *ngIf=\"listAlunos.length > 0\" @rowHighlight class=\"card card-plain mat-elevation-z8\" style=\"width: 100%;\r\n        margin-top: 10px;\r\n        box-shadow: 0 0 1em rgb(172, 170, 170);\r\n        background-color: rgb(227, 240, 227);\">\r\n        <div class=\"card-header\">\r\n            <h4 class=\"card-title\" style=\"font-size:1.5em; font-weight: 400;\">\r\n                Alunos</h4>\r\n            <p class=\"card-category\">{{length}} alunos localizados.</p>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"table-responsive\" style=\"height: 380px;position: relative;\">\r\n                <table @rowHighlight color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n                   \r\n                    <thead>\r\n                        <tr>\r\n                            <th style=\"width: 2%; \r\n                text-align:left; \r\n                vertical-align: middle;\r\n                border-top: 0px;\"></th>\r\n\r\n                            <th style=\"width: 26%;font-size:1em;\r\n                                vertical-align: middle;\r\n                                text-align:left;\r\n                border-top: 0px; font-weight: 400;\">NOME</th>\r\n\r\n                            <th style=\"width: 10%;font-size:1em;\r\n                            vertical-align: middle;\r\n                            text-align:center;\r\n                            border-top: 0px; font-weight: 400;\">SITUAÇÃO</th>\r\n\r\n                            <th style=\"width: 15%;font-size:1em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">CPF</th>\r\n\r\n\r\n\r\n                            <th style=\"width: 11%;font-size:1em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\">UNIDADE</th>\r\n\r\n                            <th style=\"width: 5%;font-size:1em;\r\n                        vertical-align: middle;\r\n                        text-align:center;\r\n                        border-top: 0px; font-weight: 400;\">ATIVO</th>\r\n\r\n                            <th style=\"width: 31%;font-size:1em;\r\n                text-align:center; \r\n                vertical-align: middle;\r\n                border-top: 0px; font-weight: 400;\"></th>\r\n\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let item of listAlunos;let i = index;\">\r\n                            <td style=\"text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                            <td style=\"text-align:left;vertical-align: middle;\">{{item.nome}}</td>\r\n\r\n                            <td style=\"text-align:center;vertical-align: middle;\">{{item.numeroMatricula || 'sem estágio'}}</td>\r\n                           \r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.cpf}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.sigla}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">{{item.ativo ? 'sim' : 'não'}}</td>\r\n\r\n                            <td style=\"text-align: center;vertical-align: middle;\">\r\n                            \r\n\r\n                                <ng-container *ngIf=\"item.numeroMatricula != null;else semMat\">\r\n\r\n                                    <!-- <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"informações financeiras\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openInfoFinancModal(item)\" \r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>request_quote</mat-icon>\r\n                                        </button>\r\n\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\" matTooltip=\"informações\"\r\n                                        matTooltipPosition=\"above\" matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openInfoModal(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>info</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"matricular aluno em um curso\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"matricular(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>read_more</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"boletim escolar\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"openBoletimodal(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>school</mat-icon>\r\n                                        </button>\r\n                                    </i> -->\r\n\r\n                                </ng-container>\r\n\r\n                                <ng-template #semMat>\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"informações cadastrais\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"viewInfoCadastrais(item)\"\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>search</mat-icon>\r\n                                        </button>\r\n\r\n                                    </i>\r\n\r\n                                    <i style=\"margin: 0px; margin: 0px;\" #tooltip=\"matTooltip\"\r\n                                        matTooltip=\"liberar matrícula para estágio\" matTooltipPosition=\"above\"\r\n                                        matTooltipHideDelay=\"100\">\r\n                                        <button (click)=\"matricular(item)\" disabled\r\n                                            style=\"background-color: rgb(227, 240, 227);margin: 0px; margin: 0px;\"\r\n                                            mat-icon-button>\r\n                                            <mat-icon>read_more</mat-icon>\r\n                                        </button>\r\n                                    </i>\r\n                                </ng-template>\r\n\r\n\r\n\r\n                            </td>\r\n                        </tr>\r\n\r\n\r\n\r\n                    </tbody>\r\n\r\n                </table>\r\n\r\n\r\n\r\n\r\n            </div>\r\n            <mat-paginator *ngIf=\"length > 5\"\r\n            style=\" \r\n            background-color: rgb(227, 240, 227);\r\n            bottom: 0px;\r\n            right: 0px;\" \r\n            \r\n            [length]=\"length\" \r\n            [pageSize]=\"pageSize\" hidePageSize=\"true\"\r\n            (page)=\"pageEvent = Pesquisar($event)\" \r\n            \r\n            >\r\n          </mat-paginator>\r\n\r\n        </div>\r\n    </div>\r\n</div>","\r\nexport class InfoFinanceiras {\r\n    constructor(\r\n        public id?: number,\r\n        public alunoId?: number,\r\n        public turmaId?: number,\r\n        public parcelas?: number,\r\n        public entrada?: ValorEntrada,\r\n        public debitos?: Debito[]\r\n\r\n    ) {\r\n\r\n    }\r\n}\r\n\r\nexport class ValorEntrada{\r\n    constructor(\r\n        public descricao?: string,\r\n        public valor?:number,\r\n        public vencimento?:Date,\r\n        public dataPagamento?:Date,\r\n        \r\n\r\n    ){\r\n\r\n    }\r\n}\r\n\r\nexport class Debito{\r\n    constructor(\r\n        public id?: number,\r\n        public competencia?: Date,\r\n        public status?:string,\r\n        public valorTitulo?: number,\r\n        public valorPago?: number,\r\n        public dataVencimento?: Date,\r\n        public dataPagamento?: Date,\r\n        public descricao?:string,\r\n        public boletoId?: number\r\n    ){\r\n\r\n    }\r\n}\r\n    \r\n  ","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","// Alunos\r\nexport function InfoFinancModalConfig(aluno?:any){\r\n    return {\r\n        width: '1150px',\r\n        data: { aluno: aluno },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function ReceberComponentModal(debito?:any, aluno?:any){\r\n    return { \r\n        height:'545px',\r\n        width: '600px',\r\n        data: { debito: debito, aluno: aluno },        \r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function CreateFornecedorModal(){\r\n    return {\r\n        height: '590px',\r\n        width: '680px',\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}\r\n\r\nexport function EditFornecedorModal(fornecedor){\r\n    return {\r\n        width: '680px',\r\n        data: { fornecedor: fornecedor },\r\n        hasBackdrop: true,\r\n        disableClose: true\r\n    }\r\n}","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { ListaPresencaDto } from \"src/app/Pedagogico/Pedag-Models/infodia.model\";\r\nimport { HighlightTrigger } from \"src/app/_shared/animation/item.animation\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'cal-presenca-app',\r\n    templateUrl: './cal-presencaedit.component.html',\r\n    styleUrls: ['./cal-presencaedit.component.scss'],\r\n    animations: [HighlightTrigger]\r\n\r\n})\r\n\r\nexport class CalendPresencaEditComponent implements OnInit {\r\n\r\n    private _baseUrl = environment.baseUrl\r\n    public initProgressBar = 'visible'\r\n    public saveProgressBar = 'hidden'\r\n    public showContent = false\r\n    public listaPresencaDto: any[] = new Array<any>()// ListaPresencaDto[] = new Array<ListaPresencaDto>();\r\n    public infoDia: any// InfoDia = new InfoDia();\r\n    public saveCommand: any//SavePresencaCommand = new SavePresencaCommand();\r\n    public presenca: any\r\n    public observacoes: string = \"\";\r\n    public obsForm: FormGroup;\r\n    public diaAulaString: any\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _fb: FormBuilder,\r\n        private _modal: MatDialog,\r\n        public _dialogRef: MatDialogRef<CalendPresencaEditComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.obsForm = this._fb.group({\r\n            observacoes: ['']\r\n        })\r\n    }\r\n\r\n    ngOnInit() {\r\n       // console.log(this.data['calendario'])\r\n\r\n        this.getPresencaViewModel(this.data['calendario'].id);\r\n    }\r\n\r\n    getPresencaViewModel(calendarioId: number) {\r\n\r\n        this._http.get(`${this._baseUrl}/pedag/turma/presenca-diario/${calendarioId}`)\r\n            .subscribe(resp => {\r\n\r\n               // console.log(resp)\r\n                \r\n                this.infoDia = Object.assign({}, resp['presencas'].aulaViewModel)\r\n                //console.log(this.infoDia)\r\n                this.listaPresencaDto = Object.assign([], resp['presencas'].listaPresenca)\r\n                //this.infoDia.diaAula = new Date(this.infoDia.diaAula).toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })\r\n               // this.diaAulaString = new Date(this.infoDia.diaAula).toLocaleDateString('pt-BR', { year: 'numeric', month: '2-digit', day: '2-digit' })\r\n               // this.listaPresencaDto = Object.assign([], resp['lista'])\r\n                this.initProgressBar = 'hidden'\r\n\r\n            },\r\n                (error) => { \r\n                    \r\n                    this.initProgressBar = 'hidden' },\r\n                () => {\r\n                    this._dialogRef.addPanelClass('presencaedit-diario-class')\r\n                    this.showContent = true\r\n                 })\r\n    }\r\n\r\n    concluirAula() {\r\n        // calendárioId\r\n    }\r\n\r\n    concluiraula(form: any): void {\r\n        // console.log(this.listaPresencaDto)\r\n        // const dialogRef = this._modal\r\n        //     .open(ConcluirAulaModal, {\r\n        //         height: 'auto',\r\n        //         width: '500px',\r\n        //         autoFocus: false,\r\n        //         //maxHeight: '90vh',\r\n        //         //maxWidth: '400vh',\r\n\r\n        //         data: { form: form },\r\n        //         hasBackdrop: true,\r\n        //         disableClose: true\r\n        //     });\r\n        // dialogRef.afterClosed().subscribe(result => {\r\n        //     if (result.clicked == true) {\r\n        //         console.log(form.value)\r\n        //        this.salvar(form);\r\n\r\n        //     } else {\r\n        //         //console.log('nao')\r\n        //     }\r\n\r\n        // });\r\n    }\r\n\r\n    get disabledSave() {\r\n\r\n        var disabledButton = true\r\n        var temNull = this.listaPresencaDto.filter((lista) => {\r\n            return lista.isPresentToString == null || lista.isPresentToString == \"\";\r\n        })\r\n\r\n      //  console.log(temNull);\r\n\r\n        if (temNull.length == 0) {\r\n            disabledButton = false\r\n        } else {\r\n            disabledButton = true\r\n        }\r\n\r\n        if(!disabledButton && this.obsForm.valid){\r\n            return  false\r\n        }else{\r\n            return  true\r\n        }\r\n\r\n       \r\n\r\n    }\r\n\r\n\r\n    salvar(form: any) {\r\n\r\n        if (form.valid) {\r\n            // console.log(this.listaPresencaDto)\r\n            // this.saveCommand.listaPresencaDto = this.listaPresencaDto\r\n            // this.saveCommand.calendarId = this.infoDia.id\r\n            // this.saveCommand.observacoes = this.obsForm.get('observacoes').value\r\n            this.infoDia.observacoes = this.obsForm.get('observacoes').value\r\n            let presencaView = { infoDia: this.infoDia, listaPresencaDto: this.listaPresencaDto }\r\n            \r\n           \r\n            this._http.post(`${this._baseUrl}/pedag/turma/presenca-diario/${this.data['calendario'].id}`, { aulaViewModel: this.infoDia, listaPresenca: this.listaPresencaDto }, {})\r\n                .subscribe(resp => {\r\n\r\n                 \r\n\r\n                },\r\n                    (error) => { \r\n                       // console.log(error) \r\n                    },\r\n                    () => {\r\n                        this._dialogRef.close({ clicked: \"OK\" })\r\n                    })\r\n        }\r\n    }\r\n\r\n    presente = true\r\n\r\n}\r\n\r\n\r\n// @Component({\r\n//     selector: 'confirmdialog',\r\n//     template: `<div class=\"container\">\r\n//     <div class=\"row\" style=\"margin-bottom: 10px;\">\r\n//         <div style=\"font-size: 1.2em;\">Tem certeza que deseja concluir a aula?</div>\r\n//         <div>\r\n//             Após a conclusão, não será possível retornar a tela de presenças novamente.\r\n//         </div>\r\n//     </div>\r\n//     <div class=\"row\">\r\n//         <button style=\"width: 30px;\" [mat-dialog-close]=\"{clicked:true}\" mat-button>SIM</button>\r\n//         <button style=\"width: 30px;\" [mat-dialog-close]=\"{clicked:false}\" mat-button>NÃO</button>\r\n//     </div>\r\n// </div>`,\r\n// })\r\n// export class ConcluirAulaModal {\r\n\r\n//     constructor(\r\n//         public dialogRef: MatDialogRef<ConcluirAulaModal>,\r\n//         @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n// }\r\n\r\n// export class SavePresencaCommand {\r\n//     constructor(\r\n//         public listaPresencaDto?: ListaPresencaDto[],\r\n//         public calendarId?: number,\r\n//         public observacoes?: string\r\n//     ) {\r\n\r\n//     }\r\n// }","<div style=\"font-size: 1.2em;\">Lista de presença (Editar)\r\n    <i style=\"margin-left: 5px;float: right;\" #tooltip=\"matTooltip\" matTooltip=\"fechar\" matTooltipPosition=\"above\"\r\n        matTooltipHideDelay=\"100\">\r\n        <button [mat-dialog-close]=\"{clicked:'Cancel'}\" style=\"\" mat-icon-button>\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </i>\r\n\r\n</div>\r\n\r\n<mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"initProgressBar\" @rowHighlight mode=\"query\">\r\n</mat-progress-bar>\r\n\r\n<hr>\r\n<div *ngIf=\"showContent\" @rowHighlight>\r\n\r\n\r\n    <div style=\"position: relative;\">\r\n\r\n        <!-- <mat-form-field appearance=\"standard\" style=\"width: 700px; \">\r\n            <mat-label>Turma</mat-label>\r\n            <input selected style=\"color:rgb(59, 57, 57)\" disabled\r\n                value=\"{{this.data['turma'].descricao}} - Turma {{this.data['turma'].identificador}}\" required matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <br>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px; \">\r\n            <mat-label>Professor</mat-label>\r\n            <input selected style=\"color:rgb(59, 57, 57)\" disabled [value]=\"infoDia.nome\" required matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field appearance=\"standard\" style=\"width: 350px; \">\r\n            <mat-label>Aula</mat-label>\r\n            <input selected style=\"color:rgb(59, 57, 57)\" disabled [value]=\"infoDia.materiaDescricao\" required matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field appearance=\"standard\" style=\"width: 200px;margin-left: 10px ; \">\r\n            <mat-label>Dia</mat-label>\r\n            <input selected style=\"color:rgb(59, 57, 57)\" disabled \r\n            value=\"{{infoDia.diaAula | date:'dd/MM/yyyy'}} {{infoDia.horaInicial}} às {{infoDia.horaFinal}}\" required matInput\r\n                placeholder=\"Nome\">\r\n        </mat-form-field>\r\n        <br> \r\n\r\n\r\n        <div style=\"color: red;font-size: 0.9;\">* Professor, não se esqueça de antes de concluir a aula, preencher o\r\n            conteúdo programático e a lista de presença:</div>\r\n            -->\r\n\r\n        <div class=\"table-responsive\" style=\"position: relative;\">\r\n            <table color=\"primary\" style=\"margin-bottom: 0px;\" class=\"table\">\r\n\r\n                <thead>\r\n                    <tr>\r\n                        <th style=\"width: 2%; \r\n                    text-align:left; \r\n                    vertical-align: middle;\r\n                    border-top: 0px;\"></th>\r\n\r\n                        <th style=\"width: 70%;font-size:1em;\r\n                    vertical-align: middle; \r\n                    text-align:left;\r\n                     border-top: 0px; font-weight: 400;\"></th>\r\n\r\n                        <th style=\"width: 28%;font-size:1em;\r\n                    text-align:right;\r\n                    vertical-align: middle;\r\n                    border-top: 0px; font-weight: 400;\">Presente?(F/P)</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    <tr *ngFor=\"let aluno of listaPresencaDto;let i = index;\">\r\n                        <td style=\"font-size:0.9em;text-align:center;vertical-align: middle;\">{{i+1}}</td>\r\n\r\n                        <td style=\"font-size:0.9em;text-align:left;vertical-align: middle;\">\r\n                            {{aluno.nome}}\r\n                        </td>\r\n\r\n                        <td style=\"float: right; position: relative;\">\r\n\r\n                            <input type=\"text\" style=\"margin-right: auto;\r\n                            margin-left: auto;font-size:0.9em;width: 40px;\" class=\"form-control\"\r\n                                [(ngModel)]=\"aluno.isPresentToString\" oninput=\"this.value = this.value.toUpperCase()\"\r\n                                onkeypress=\"return String.fromCharCode(event.charCode).match(/[^FPfp]/g) === null\"\r\n                                maxlength=\"1\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\">\r\n                        </td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </table>\r\n            <br>\r\n            <mat-progress-bar style=\"margin-top: 20px;\" [style.visibility]=\"saveProgressBar\" @rowHighlight mode=\"query\">\r\n            </mat-progress-bar>\r\n            <form [formGroup]=\"obsForm\" (ngSubmit)=\"salvar(obsForm)\">\r\n\r\n                <!-- <mat-form-field style=\"width: 100%;\" appearance=\"outline\">\r\n                    <mat-label>conteúdo programático...</mat-label>\r\n                    <textarea formControlName=\"observacoes\" matInput></textarea>\r\n                </mat-form-field> -->\r\n\r\n                <button type=\"submit\" color=\"primary\" mat-raised-button disabled=\"false\" \r\n                    style=\"float:right;margin-bottom: 10px;margin-left: 10px;\">\r\n                    Salvar\r\n                </button>\r\n            </form>\r\n\r\n        </div>\r\n\r\n\r\n        <br>\r\n    </div>\r\n</div>"]}